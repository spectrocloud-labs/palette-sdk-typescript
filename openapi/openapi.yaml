# Copyright (c) Spectro Cloud
# SPDX-License-Identifier: Apache-2.0

openapi: 3.0.1
info:
  title: Palette APIs - 4.6
  version: v1
servers:
- url: /
paths:
  /v1/apiKeys:
    get:
      operationId: v1ApiKeysList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ApiKeys"
          description: Retrieves a list of API keys
      summary: Retrieves a list of API keys
      tags:
      - apiKeys
    post:
      operationId: v1ApiKeysCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ApiKeyEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ApiKeyCreateResponse"
          description: APIKey Created successfully
      summary: Create an API key
      tags:
      - apiKeys
      x-codegen-request-body-name: body
  /v1/apiKeys/{uid}:
    delete:
      operationId: v1ApiKeysUidDelete
      parameters:
      - description: Specify API key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified API key
      tags:
      - apiKeys
    get:
      operationId: v1ApiKeysUidGet
      parameters:
      - description: Specify API key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ApiKey"
          description: (empty)
      summary: Returns the specified API key
      tags:
      - apiKeys
    patch:
      operationId: v1ApiKeysUidActiveState
      parameters:
      - description: Specify API key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ApiKeyActiveState"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Activate or de-active the specified API key
      tags:
      - apiKeys
      x-codegen-request-body-name: body
    put:
      operationId: v1ApiKeysUidUpdate
      parameters:
      - description: Specify API key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ApiKeyUpdate"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the specified API key
      tags:
      - apiKeys
      x-codegen-request-body-name: body
  /v1/apiKeys/{uid}/state:
    put:
      operationId: v1ApiKeysUidState
      parameters:
      - description: Specify API key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ApiKeyActiveState"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Revoke or re-activate the API key access
      tags:
      - apiKeys
      x-codegen-request-body-name: body
  /v1/appDeployments:
    post:
      operationId: v1AppDeploymentsVirtualClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppDeploymentVirtualClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a application deployment in the virtual cluster
      tags:
      - appDeployments
      x-codegen-request-body-name: body
  /v1/appDeployments/clusterGroup:
    post:
      operationId: v1AppDeploymentsClusterGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppDeploymentClusterGroupEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a application deployment in one of virtual clusters in the
        cluster group
      tags:
      - appDeployments
      x-codegen-request-body-name: body
  /v1/appDeployments/{uid}:
    delete:
      operationId: v1AppDeploymentsUidDelete
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified application deployment
      tags:
      - appDeployments
    get:
      operationId: v1AppDeploymentsUidGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppDeployment"
          description: OK
      summary: Returns the specified application deployment
      tags:
      - appDeployments
  /v1/appDeployments/{uid}/profile:
    get:
      operationId: v1AppDeploymentsUidProfileGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppDeploymentProfileSpec"
          description: OK
      summary: Returns profile of the specified application deployment
      tags:
      - appDeployments
    put:
      operationId: v1AppDeploymentsUidProfileUpdate
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppDeploymentProfileEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application deployment profile
      tags:
      - appDeployments
      x-codegen-request-body-name: body
  /v1/appDeployments/{uid}/profile/apply:
    patch:
      operationId: v1AppDeploymentsUidProfileApply
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment notification uid
        in: query
        name: notify
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Apply the application deployment profile updates
      tags:
      - appDeployments
  /v1/appDeployments/{uid}/profile/tiers/{tierUid}:
    get:
      operationId: v1AppDeploymentsProfileTiersUidGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppTier"
          description: OK
      summary: Returns the specified application deployment profile tier information
      tags:
      - appDeployments
    put:
      operationId: v1AppDeploymentsProfileTiersUidUpdate
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppTierUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application deployment profile tier information
      tags:
      - appDeployments
      x-codegen-request-body-name: body
  /v1/appDeployments/{uid}/profile/tiers/{tierUid}/manifests:
    get:
      operationId: v1AppDeploymentsProfileTiersUidManifestsGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppTierManifests"
          description: OK
      summary: Retrieves a list of manifests of the specified application deployment
        profile tier
      tags:
      - appDeployments
  /v1/appDeployments/{uid}/profile/tiers/{tierUid}/manifests/{manifestUid}:
    get:
      operationId: v1AppDeploymentsProfileTiersManifestsUidGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      - description: Application deployment tier manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Manifest"
          description: OK
      summary: Returns the specified application deployment tier manifest information
      tags:
      - appDeployments
    put:
      operationId: v1AppDeploymentsProfileTiersManifestsUidUpdate
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application deployment tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      - description: Application deployment tier manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestRefUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application deployment tier manifest information
      tags:
      - appDeployments
      x-codegen-request-body-name: body
  /v1/appDeployments/{uid}/profile/versions:
    get:
      operationId: v1AppDeploymentsUidProfileVersionsGet
      parameters:
      - description: Application deployment uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppDeploymentProfileVersions"
          description: OK
      summary: Retrieves a list of profile versions of the specified application deployment
      tags:
      - appDeployments
  /v1/appProfiles:
    post:
      operationId: v1AppProfilesCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfileEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a application profile
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/macros:
    get:
      operationId: v1AppProfilesMacrosList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Macros"
          description: OK
      summary: Retrieves a list of application profile macros
      tags:
      - appProfiles
  /v1/appProfiles/{uid}:
    delete:
      operationId: v1AppProfilesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified application profile
      tags:
      - appProfiles
    get:
      operationId: v1AppProfilesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppProfile"
          description: OK
      summary: Returns the specified application profile
      tags:
      - appProfiles
    put:
      operationId: v1AppProfilesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfileEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application profile
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/clone:
    post:
      operationId: v1AppProfilesUidClone
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfileCloneEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Clones the specified application profile
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/clone/validate:
    post:
      operationId: v1AppProfilesUidCloneValidate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfileCloneMetaInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the specified application profile clone
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/metadata:
    patch:
      operationId: v1AppProfilesUidMetadataUpdate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfileMetaEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application profile metadata
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/tiers:
    get:
      operationId: v1AppProfilesUidTiersGet
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppProfileTiers"
          description: OK
      summary: Retrieves a list of tiers of the specified application profile
      tags:
      - appProfiles
    patch:
      operationId: v1AppProfilesUidTiersPatch
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppTierPatchEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Updates app tier of the specified application profile
      tags:
      - appProfiles
      x-codegen-request-body-name: body
    post:
      operationId: v1AppProfilesUidTiersCreate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppTierEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds tier to the specified application profile
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/tiers/{tierUid}:
    delete:
      operationId: v1AppProfilesUidTiersUidDelete
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified application profile tier
      tags:
      - appProfiles
    get:
      operationId: v1AppProfilesUidTiersUidGet
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppTier"
          description: OK
      summary: Returns the specified application profile tier information
      tags:
      - appProfiles
    put:
      operationId: v1AppProfilesUidTiersUidUpdate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppTierUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application profile tier
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/tiers/{tierUid}/manifests:
    get:
      operationId: v1AppProfilesUidTiersUidManifestsGet
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppTierManifests"
          description: OK
      summary: Retrieves a list of manifests of the specified application profile
        tier
      tags:
      - appProfiles
    post:
      operationId: v1AppProfilesUidTiersUidManifestsCreate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestInputEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds manifest to the specified application profile tier
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/tiers/{tierUid}/manifests/{manifestUid}:
    delete:
      operationId: v1AppProfilesUidTiersUidManifestsUidDelete
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      - description: Application profile tier manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified application profile tier manifest
      tags:
      - appProfiles
    get:
      operationId: v1AppProfilesUidTiersUidManifestsUidGet
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      - description: Application profile tier manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Manifest"
          description: OK
      summary: Returns the specified application profile tier manifest information
      tags:
      - appProfiles
    put:
      operationId: v1AppProfilesUidTiersUidManifestsUidUpdate
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      - description: Application profile tier manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestRefUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified application profile tier manifest information
      tags:
      - appProfiles
      x-codegen-request-body-name: body
  /v1/appProfiles/{uid}/tiers/{tierUid}/resolvedValues:
    get:
      operationId: v1AppProfilesUidTiersUidResolvedValuesGet
      parameters:
      - description: Application profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Application profile tier uid
        in: path
        name: tierUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppTierResolvedValues"
          description: OK
      summary: Returns the specified application profile tier resolved values
      tags:
      - appProfiles
  /v1/audits:
    get:
      operationId: v1AuditsList
      parameters:
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: startTime
        schema:
          format: date-time
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: endTime
        schema:
          format: date-time
          type: string
      - description: "Specify the user uid, to retrieve the specific user audit logs"
        in: query
        name: userUid
        schema:
          type: string
      - description: "Specify the project uid, to retrieve the specific project audit\
          \ logs"
        in: query
        name: projectUid
        schema:
          type: string
      - description: "Specify the tenant uid, to retrieve the specific tenant audit\
          \ logs"
        in: query
        name: tenantUid
        schema:
          type: string
      - description: "Specify the resource name, to retrieve the specific resource\
          \ audit logs"
        in: query
        name: resourceKind
        schema:
          type: string
      - description: "Specify the resource uid, to retrieve the specific resource\
          \ audit logs"
        in: query
        name: resourceUid
        schema:
          type: string
      - in: query
        name: actionType
        schema:
          enum:
          - create
          - update
          - delete
          - publish
          - deploy
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Audits"
          description: (empty)
      summary: Retrieves the list of audit logs
      tags:
      - audits
  /v1/audits/{uid}:
    get:
      operationId: v1AuditsUidGet
      parameters:
      - description: Specify the audit uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Audit"
          description: (empty)
      summary: Returns the specified audit log
      tags:
      - audits
  /v1/audits/{uid}/sysMsg:
    get:
      operationId: v1AuditsUidGetSysMsg
      parameters:
      - description: Specify the audit uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AuditSysMsg"
          description: (empty)
      summary: Returns the specified system audit message
      tags:
      - audits
  /v1/audits/{uid}/userMsg:
    patch:
      operationId: v1AuditsUidMsgUpdate
      parameters:
      - description: Specify the audit uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AuditMsgUpdate"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified user message for the specified audit
      tags:
      - audits
      x-codegen-request-body-name: body
  /v1/auth/authenticate:
    post:
      description: Creates a authentication request with the specified credentials
      operationId: v1Authenticate
      parameters:
      - description: Describes a way to set cookie from backend.
        in: query
        name: setCookie
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AuthLogin"
        description: Describes the credential details required for authentication
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserToken"
          description: OK
      summary: Authenticates the user for the specified crendentials
      tags:
      - auth
      x-codegen-request-body-name: body
  /v1/auth/org:
    get:
      description: Returns the allowed login method and information with the organization
        details
      operationId: v1AuthOrg
      parameters:
      - in: query
        name: orgName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1LoginResponse"
          description: OK
      summary: Returns the user organization details
      tags:
      - auth
  /v1/auth/org/{org}/oidc/callback:
    get:
      description: Returns the Authorization token for the palette. This is called
        by the IDP as a callback url after IDP authenticates the user with its server.
      operationId: V1OidcCallback
      parameters:
      - description: Organization name
        in: path
        name: org
        required: true
        schema:
          type: string
      - description: Describes temporary and very short lived code sent by IDP to
          validate the token
        in: query
        name: code
        schema:
          type: string
      - description: Describes a state to validate and associate request and response
        in: query
        name: state
        schema:
          type: string
      - description: Describes a error code in case the IDP is not able to validate
          and authenticates the user
        in: query
        name: error
        schema:
          type: string
      - description: Describes a error in case the IDP is not able to validate and
          authenticates the user
        in: query
        name: error_description
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserToken"
          description: OK
      summary: Idp authorization code callback
      tags:
      - auth
  /v1/auth/org/{org}/oidc/logout:
    get:
      description: Returns No Content. Works as a callback url after the IDP logout
        from their server.
      operationId: V1OidcLogout
      parameters:
      - description: Organization name
        in: path
        name: org
        required: true
        schema:
          type: string
      - description: Describes a state to validate and associate request and response
        in: query
        name: state
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Identity provider logout url for the Oidc
      tags:
      - auth
  /v1/auth/org/{org}/saml/callback:
    post:
      description: Returns the Authorization token for the palette. This is called
        by the SAML based IDP as a callback url after IDP authenticates the user with
        its server.
      operationId: V1SamlCallback
      parameters:
      - description: Organization name
        in: path
        name: org
        required: true
        schema:
          type: string
      - description: Deprecated.
        in: query
        name: authToken
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/V1SamlCallback_request"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserToken"
          description: OK
      summary: Identity provider callback url for the SMAL authentication
      tags:
      - auth
  /v1/auth/org/{org}/saml/logout:
    post:
      description: Returns No Content. Works as a callback url after the IDP logout
        from their server.
      operationId: V1SamlLogout
      parameters:
      - description: Organization name
        in: path
        name: org
        required: true
        schema:
          type: string
      - description: Deprecated.
        in: query
        name: authToken
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/V1SamlLogout_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Identity provider logout url for the SMAL
      tags:
      - auth
  /v1/auth/orgs:
    get:
      description: Returns a list of user's organizations details and login methods
      operationId: V1AuthOrgs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Organizations"
          description: OK
      summary: Returns a list of user's organizations
      tags:
      - auth
  /v1/auth/password/{passwordToken}/activate:
    patch:
      description: Updates and Activates user password with the help of password token
      operationId: v1PasswordActivate
      parameters:
      - description: Describes the expirable password token for the user to be used
          for authentication of user
        in: path
        name: passwordToken
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PasswordActivate_request"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates and Activates the specified user password using the password
        token
      tags:
      - auth
      x-codegen-request-body-name: body
  /v1/auth/password/{passwordToken}/reset:
    patch:
      description: Updates the new user password with the help of password token
      operationId: v1PasswordReset
      parameters:
      - description: Describes the expirable password token for the user to be used
          for authentication of user
        in: path
        name: passwordToken
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PasswordActivate_request"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Resets the user password using the password token
      tags:
      - auth
      x-codegen-request-body-name: body
  /v1/auth/refresh/{token}:
    get:
      description: Returns a new token within refresh timeout and same session id
        is maintained
      operationId: v1AuthRefresh
      parameters:
      - description: Describes a way to set cookie from backend.
        in: query
        name: setCookie
        schema:
          default: true
          type: boolean
      - description: Non expired Authorization token
        in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserToken"
          description: OK
      summary: Refreshes authentication token
      tags:
      - auth
  /v1/auth/sso/idps:
    get:
      description: Returns a list of predefined Identity Provider (IDP)
      operationId: V1SsoIdps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1IdentityProviders"
          description: (empty)
      summary: Returns a list of predefined Identity Provider (IDP)
      tags:
      - auth
  /v1/auth/sso/logins:
    get:
      description: Returns a list of supported sso logins and their authentication
        mechanism
      operationId: V1SsoLogins
      parameters:
      - in: query
        name: org
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SsoLogins"
          description: (empty)
      summary: Returns a list of supported sso logins
      tags:
      - auth
  /v1/auth/sso/providers:
    get:
      description: Returns a list of supported sso auth providers
      operationId: V1AuthSsoProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SsoLogins"
          description: (empty)
      summary: Returns a list of supported sso auth providers
      tags:
      - auth
  /v1/auth/sso/{ssoApp}/callback:
    get:
      description: Returns Authorization token. Works as a callback url for the system
        defined sso apps
      operationId: V1SsoCallback
      parameters:
      - description: Describes the sso app use to login into the system
        in: path
        name: ssoApp
        required: true
        schema:
          type: string
      - description: Describes temporary and very short lived code sent by IDP to
          validate the token
        in: query
        name: code
        schema:
          type: string
      - description: Describes a state to validate and associate request and response
        in: query
        name: state
        schema:
          type: string
      - description: Describes a error code in case the IDP is not able to validate
          and authenticates the user
        in: query
        name: error
        schema:
          type: string
      - description: Describes a error in case the IDP is not able to validate and
          authenticates the user
        in: query
        name: error_description
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserToken"
          description: OK
      summary: Returns Authorization token. Works as a callback url for the system
        defined sso apps
      tags:
      - auth
  /v1/auth/user/org/forgot:
    get:
      description: Returns No Content. Sends the user organization(s) information
        via email
      operationId: V1AuthUserOrgForgot
      parameters:
      - description: Describes user's email id for sending organzation(s) details
          via email.
        in: query
        name: emailId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Returns No Content. Sends the user organization information via email
      tags:
      - auth
  /v1/auth/user/password/reset:
    post:
      description: Creates request to reset password via email. Password reset email
        will be sent to the user. Sends 204 No Content.
      operationId: v1PasswordResetRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PasswordResetRequest_request"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates request to reset password via email
      tags:
      - auth
      x-codegen-request-body-name: body
  /v1/cloudaccounts/aws:
    get:
      operationId: v1CloudAccountsAwsList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsAccounts"
          description: An array of cloud account items
      summary: Retrieves a list of AWS cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsAwsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsAccount"
        description: Request payload to validate AWS cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an AWS cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/aws/{uid}:
    delete:
      operationId: v1CloudAccountsAwsDelete
      parameters:
      - description: AWS cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified AWS account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsAwsGet
      parameters:
      - description: AWS cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: assumeCredentials
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsAccount"
          description: OK
      summary: Returns the specified AWS account
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsAwsUpdate
      parameters:
      - description: AWS cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsAccount"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified AWS account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/azure:
    get:
      operationId: v1CloudAccountsAzureList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureAccounts"
          description: An array of azure cloud account items
      summary: Retrieves a list of azure cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsAzureCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureAccount"
        description: Request payload to validate Azure cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create azure cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/azure/{uid}:
    delete:
      operationId: v1CloudAccountsAzureDelete
      parameters:
      - description: Azure cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified azure account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsAzureGet
      parameters:
      - description: Azure cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureAccount"
          description: OK
      summary: Returns the specified azure cloud account
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsAzureUpdate
      parameters:
      - description: Azure cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureAccount"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified azure account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/cloudTypes/{cloudType}:
    get:
      operationId: v1CloudAccountsCustomList
      parameters:
      - description: Custom cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomAccounts"
          description: An array of cloud account by specified cloud type items
      summary: Retrieves a list of cloud accounts by cloud type
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsCustomCreate
      parameters:
      - description: Custom cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomAccountEntity"
        description: Request payload to validate Custom cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an cloud account of specific cloud type
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/cloudTypes/{cloudType}/{uid}:
    delete:
      operationId: v1CloudAccountsCustomDelete
      parameters:
      - description: Custom cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Custom cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified account by cloud type
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsCustomGet
      parameters:
      - description: Custom cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Custom cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomAccount"
          description: OK
      summary: Returns the specified account by cloud type
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsCustomUpdate
      parameters:
      - description: Custom cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Custom cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomAccountEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified account by cloud type
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/gcp:
    get:
      operationId: v1CloudAccountsGcpList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpAccounts"
          description: An array of gcp cloud account items
      summary: Retrieves a list of gcp cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsGcpCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpAccountEntity"
        description: Request payload to validate GCP cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a GCP cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/gcp/{uid}:
    delete:
      operationId: v1CloudAccountsGcpDelete
      parameters:
      - description: GCP cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified GCP account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsGcpGet
      parameters:
      - description: GCP cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpAccount"
          description: OK
      summary: Returns the specified GCP cloud account
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsGcpUpdate
      parameters:
      - description: GCP cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpAccountEntity"
        description: Request payload to validate GCP cloud account
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified GCP account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/maas:
    get:
      operationId: v1CloudAccountsMaasList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasAccounts"
          description: An array of cloud account items
      summary: Retrieves a list of Maas cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsMaasCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasAccount"
        description: Request payload to validate Maas cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Maas cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/maas/{uid}:
    delete:
      operationId: v1CloudAccountsMaasDelete
      parameters:
      - description: Maas cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Maas account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsMaasGet
      parameters:
      - description: Maas cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasAccount"
          description: OK
      summary: Returns the specified Maas account
      tags:
      - cloudaccounts
    patch:
      operationId: v1CloudAccountsMaasPatch
      parameters:
      - description: Maas cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CloudAccountsPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patches the specified CloudAccount Maas
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
    put:
      operationId: v1CloudAccountsMaasUpdate
      parameters:
      - description: Maas cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasAccount"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Maas account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/maas/{uid}/properties/azs:
    get:
      operationId: v1MaasAccountsUidAzs
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasZones"
          description: (empty)
      summary: Get the maas azs for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/maas/{uid}/properties/domains:
    get:
      operationId: v1MaasAccountsUidDomains
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasDomains"
          description: (empty)
      summary: Get the maas domains for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/maas/{uid}/properties/resourcePools:
    get:
      operationId: v1MaasAccountsUidPools
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasPools"
          description: (empty)
      summary: Get the maas pools for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/maas/{uid}/properties/subnets:
    get:
      operationId: v1MaasAccountsUidSubnets
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasSubnets"
          description: (empty)
      summary: Get the maas subnets for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/maas/{uid}/properties/tags:
    get:
      operationId: v1MaasAccountsUidTags
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasTags"
          description: (empty)
      summary: Get the maas tags for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack:
    get:
      operationId: v1CloudAccountsOpenStackList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackAccounts"
          description: An array of cloud account items
      summary: Retrieves a list of OpenStack cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsOpenStackCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackAccount"
        description: Request payload to validate OpenStack cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a OpenStack cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/openstack/{uid}:
    delete:
      operationId: v1CloudAccountsOpenStackDelete
      parameters:
      - description: OpenStack cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified OpenStack account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsOpenStackGet
      parameters:
      - description: OpenStack cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackAccount"
          description: OK
      summary: Returns the specified OpenStack account
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsOpenStackUpdate
      parameters:
      - description: OpenStack cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackAccount"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified OpenStack account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/openstack/{uid}/properties/azs:
    get:
      operationId: v1OpenstackAccountsUidAzs
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: string
      - in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackAzs"
          description: (empty)
      summary: Get the openstack azs for a given account and region
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack/{uid}/properties/flavors:
    get:
      operationId: v1OpenstackAccountsUidFlavors
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      - in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackFlavors"
          description: (empty)
      summary: Get the openstack keypairs for a given account and scope
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack/{uid}/properties/keypairs:
    get:
      operationId: v1OpenstackAccountsUidKeypairs
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      - in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackKeypairs"
          description: (empty)
      summary: Get the openstack keypairs for a given account and scope
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack/{uid}/properties/networks:
    get:
      operationId: v1OpenstackAccountsUidNetworks
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: project
        schema:
          type: string
      - in: query
        name: region
        schema:
          type: string
      - in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackNetworks"
          description: (empty)
      summary: Get the openstack networks for a given account and scope
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack/{uid}/properties/projects:
    get:
      operationId: v1OpenstackAccountsUidProjects
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackProjects"
          description: (empty)
      summary: Get the openstack projects for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/openstack/{uid}/properties/regions:
    get:
      operationId: v1OpenstackAccountsUidRegions
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackRegions"
          description: (empty)
      summary: Get the openstack regions for a given account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/summary:
    get:
      operationId: v1CloudAccountsListSummary
      parameters:
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CloudAccountsSummary"
          description: An array of cloud account summary items
      summary: Retrieves a list of cloud accounts summary
      tags:
      - cloudaccounts
  /v1/cloudaccounts/vsphere:
    get:
      operationId: v1CloudAccountsVsphereList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereAccounts"
          description: An array of cloud account items
      summary: Retrieves a list of vSphere cloud accounts
      tags:
      - cloudaccounts
    post:
      operationId: v1CloudAccountsVsphereCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereAccount"
        description: Request payload to validate VSphere cloud account
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a vSphere cloud account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/vsphere/{uid}:
    delete:
      operationId: v1CloudAccountsVsphereDelete
      parameters:
      - description: VSphere cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified vSphere account
      tags:
      - cloudaccounts
    get:
      operationId: v1CloudAccountsVsphereGet
      parameters:
      - description: VSphere cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereAccount"
          description: OK
      summary: Returns the specified vSphere account
      tags:
      - cloudaccounts
    put:
      operationId: v1CloudAccountsVsphereUpdate
      parameters:
      - description: VSphere cloud account uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereAccount"
        description: Request payload to validate VSphere cloud account
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified VSphere account
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudaccounts/vsphere/{uid}/properties/computecluster/resources:
    get:
      operationId: v1VsphereAccountsUidClusterRes
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: datacenter
        required: true
        schema:
          type: string
      - in: query
        name: computecluster
        required: true
        schema:
          type: string
      - in: query
        name: useQualifiedNetworkName
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereComputeClusterResources"
          description: (empty)
      summary: Get the vSphere computecluster resources for the given overlord account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/vsphere/{uid}/properties/datacenters:
    get:
      operationId: v1VsphereAccountsUidDatacenters
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDatacenters"
          description: (empty)
      summary: Get the vSphere datacenters & datacluster for the given overlord account
      tags:
      - cloudaccounts
  /v1/cloudaccounts/{uid}/geoLocation:
    patch:
      operationId: v1AccountsGeolocationPatch
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GeolocationLatlong"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the geolocation annotation
      tags:
      - cloudaccounts
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aks/{configUid}:
    get:
      operationId: v1CloudConfigsAksGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureCloudConfig"
          description: OK
      summary: Returns the specified AKS cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/aks/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsAksUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aks/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsAksMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an AKS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aks/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsAksMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAksMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified AKS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aks/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsAksPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureMachines"
          description: An array of AKS machine items
      summary: Retrieves a list of AKS machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsAksPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aks/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsAksPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Azure machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsAksPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureMachine"
          description: OK
      summary: Returns the specified AKS machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAksPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}:
    get:
      operationId: v1CloudConfigsAwsGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsCloudConfig"
          description: OK
      summary: Returns the specified AWS cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/aws/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsAwsUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/clusterConfig/hybridConfig:
    put:
      operationId: v1AwsCloudConfigsUidHybridConfig
      parameters:
      - description: AWS Cluster's Hybrid Configuration
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsCloudHybridConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the hybrid configuration information of AWS cluster
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/edge-native/machinePools:
    post:
      operationId: V1AwsCloudConfigsEdgeNativeUidMachinePoolCreate
      parameters:
      - description: Hybrid AWS cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HybridEdgeNativeMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Hybrid AWS cloud config's Edge-Native machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/edge-native/machinePools/{machinePoolName}:
    delete:
      operationId: v1AwsCloudConfigsEdgeNativeMachinePoolDelete
      parameters:
      - description: AWS Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Edge-native machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Edge-Native machine pool of hybrid AWS cluster
      tags:
      - cloudconfigs
    get:
      operationId: v1AwsCloudConfigsEdgeNativeMachinePoolGet
      parameters:
      - description: AWS Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Edge-native machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1HybridEdgeNativeMachinePoolConfig"
          description: OK
      summary: Returns the specified AWS Cluster's Edge-Native machine pool configuration
      tags:
      - cloudconfigs
    put:
      operationId: v1AwsCloudConfigsEdgeNativeMachinePoolUpdate
      parameters:
      - description: AWS Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Edge-native machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HybridEdgeNativeMachinePoolConfigUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Hybrid AWS cluster cloud config's Edge-Native
        machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsAwsMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an AWS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsAwsMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAwsMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified AWS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsAwsPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsMachines"
          description: An array of AWS machine items
      summary: Retrieves a list of AWS machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsAwsPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/aws/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsAwsPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified AWS machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsAwsPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsMachine"
          description: OK
      summary: Returns the specified AWS machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAwsPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/azure/{configUid}:
    get:
      operationId: v1CloudConfigsAzureGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureCloudConfig"
          description: OK
      summary: Returns the specified Azure cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/azure/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsAzureUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/azure/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsAzureMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Azure cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/azure/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsAzureMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAzureMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Azure cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/azure/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      description: Returns all the Azure machines restricted to the user role and
        filters.
      operationId: v1CloudConfigsAzurePoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureMachines"
          description: An array of AWS machine items
      summary: Retrieves a list of Azure machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsAzurePoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/azure/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsAzurePoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Azure machine
      tags:
      - cloudconfigs
    get:
      description: Returns a Azure machine for the specified uid.
      operationId: v1CloudConfigsAzurePoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureMachine"
          description: OK
      summary: Returns the specified Azure machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsAzurePoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}:
    get:
      operationId: v1CloudConfigsCustomGet
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudConfig"
          description: OK
      summary: Returns the specified Custom cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsCustomUidClusterConfig
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsCustomMachinePoolCreate
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Custom cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsCustomMachinePoolDelete
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsCustomMachinePoolUpdate
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Custom cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsCustomPoolMachinesList
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomMachines"
          description: An array of Custom machine items
      summary: Retrieves a list of Custom machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsCustomPoolMachinesAdd
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/cloudTypes/{cloudType}/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsCustomPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Custom machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsCustomPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomMachine"
          description: OK
      summary: Returns the specified Custom machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsCustomPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/edge-native/{configUid}:
    get:
      operationId: v1CloudConfigsEdgeNativeGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeNativeCloudConfig"
          description: OK
      summary: Returns the specified edge-native cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/edge-native/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsEdgeNativeUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeNativeCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/edge-native/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsEdgeNativeMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a edge-native cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/edge-native/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsEdgeNativeMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsEdgeNativeMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge-native cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/edge-native/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsEdgeNativePoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeNativeMachines"
          description: An array of edge-native machine items
      summary: Retrieves a list of edge-native machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsEdgeNativePoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeNativeMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the edge-native machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/edge-native/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsEdgeNativePoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified edge-native machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsEdgeNativePoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeNativeMachine"
          description: OK
      summary: Returns the specified edge-native machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsEdgeNativePoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeNativeMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}:
    get:
      operationId: v1CloudConfigsEksGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EksCloudConfig"
          description: OK
      summary: Returns the specified EKS cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/eks/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsEksUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EksCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}/fargateProfiles:
    put:
      operationId: v1CloudConfigsEksUidFargateProfilesUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EksFargateProfiles"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates EKS cloud config's fargate profiles
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsEksMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EksMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an EKS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsEksMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsEksMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EksMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified EKS cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsEksPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsMachines"
          description: An array of EKS machine items
      summary: Retrieves a list of EKS machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsEksPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/eks/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsEksPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified EKS machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsEksPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsMachine"
          description: OK
      summary: Returns the specified EKS machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsEksPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gcp/{configUid}:
    get:
      operationId: v1CloudConfigsGcpGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpCloudConfig"
          description: OK
      summary: Returns the specified GCP cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/gcp/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsGcpUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gcp/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsGcpMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a Gcp cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gcp/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsGcpMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGcpMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified GCP cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gcp/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsGcpPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpMachines"
          description: An array of GCP machine items
      summary: Retrieves a list of GCP machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsGcpPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gcp/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsGcpPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified GCP machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsGcpPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpMachine"
          description: OK
      summary: Returns the specified GCP machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGcpPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/generic/{configUid}:
    get:
      operationId: v1CloudConfigsGenericGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GenericCloudConfig"
          description: OK
      summary: Returns the specified Generic cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/generic/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsGenericUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GenericCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/generic/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsGenericMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GenericMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a generic cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/generic/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsGenericMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGenericMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GenericMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified generic cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/generic/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsGenericPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GenericMachines"
          description: An array of Generic machine items
      summary: Retrieves a list of Generic machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsGenericPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GenericMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/generic/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsGenericPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsGenericPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GenericMachine"
          description: OK
      summary: Returns the specified generic machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGenericPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GenericMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gke/{configUid}:
    get:
      operationId: v1CloudConfigsGkeGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpCloudConfig"
          description: OK
      summary: Returns the specified GKE cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/gke/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsGkeUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gke/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsGkeMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an GKE cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gke/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsGkeMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGkeMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified GKE cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gke/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsGkePoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpMachines"
          description: An array of GKE machine items
      summary: Retrieves a list of GKE machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsGkePoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/gke/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsGkePoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Gcp machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsGkePoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpMachine"
          description: OK
      summary: Returns the specified GKE machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsGkePoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/maas/{configUid}:
    get:
      operationId: v1CloudConfigsMaasGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasCloudConfig"
          description: OK
      summary: Returns the specified Maas cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/maas/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsMaasUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/maas/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsMaasMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Maas cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/maas/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsMaasMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsMaasMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Maas cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/maas/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsMaasPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasMachines"
          description: An array of Maas machine items
      summary: Retrieves a list of Maas machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsMaasPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/maas/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsMaasPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified Maas machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsMaasPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasMachine"
          description: OK
      summary: Returns the specified Maas machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsMaasPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/openstack/{configUid}:
    get:
      operationId: v1CloudConfigsOpenStackGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackCloudConfig"
          description: OK
      summary: Returns the specified OpenStack cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/openstack/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsOpenStackUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/openstack/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsOpenStackMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a OpenStack cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/openstack/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsOpenStackMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsOpenStackMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified OpenStack cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/openstack/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsOpenStackPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackMachines"
          description: An array of OpenStack machine items
      summary: Retrieves a list of OpenStack machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsOpenStackPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the OpenStack machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/openstack/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsOpenStackPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified OpenStack machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsOpenStackPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackMachine"
          description: OK
      summary: Returns the specified OpenStack machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsOpenStackPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}:
    get:
      operationId: v1CloudConfigsVirtualGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualCloudConfig"
          description: OK
      summary: Returns the specified Virtual cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/virtual/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsVirtualUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsVirtualMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a virtual cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsVirtualMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsVirtualMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified virtual cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsVirtualPoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachines"
          description: An array of virtual machine items
      summary: Retrieves a list of virtual machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsVirtualPoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsVirtualPoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified virtual machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsVirtualPoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachine"
          description: OK
      summary: Returns the specified virtual machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsVirtualPoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to the cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/virtual/{configUid}/resize:
    put:
      operationId: v1CloudConfigsVirtualUidUpdate
      parameters:
      - description: Specify virtual cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualClusterResize"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates and resizes the virtual cluster
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/vsphere/{configUid}:
    get:
      operationId: v1CloudConfigsVsphereGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereCloudConfig"
          description: OK
      summary: Returns the specified vSphere cloud config
      tags:
      - cloudconfigs
  /v1/cloudconfigs/vsphere/{configUid}/clusterConfig:
    put:
      operationId: v1CloudConfigsVsphereUidClusterConfig
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereCloudClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster configuration information
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/vsphere/{configUid}/machinePools:
    post:
      operationId: v1CloudConfigsVsphereMachinePoolCreate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereMachinePoolConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a vSphere cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/vsphere/{configUid}/machinePools/{machinePoolName}:
    delete:
      operationId: v1CloudConfigsVsphereMachinePoolDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified machine pool
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsVsphereMachinePoolUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereMachinePoolConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified vSphere cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/vsphere/{configUid}/machinePools/{machinePoolName}/machines:
    get:
      operationId: v1CloudConfigsVspherePoolMachinesList
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereMachines"
          description: An array of vSphere machine items
      summary: Retrieves a list of vSphere machines
      tags:
      - cloudconfigs
    post:
      operationId: v1CloudConfigsVspherePoolMachinesAdd
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereMachine"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds the vSphere machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/vsphere/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}:
    delete:
      operationId: v1CloudConfigsVspherePoolMachinesUidDelete
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified vSphere machine
      tags:
      - cloudconfigs
    get:
      operationId: v1CloudConfigsVspherePoolMachinesUidGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereMachine"
          description: OK
      summary: Returns the specified vSphere machine
      tags:
      - cloudconfigs
    put:
      operationId: v1CloudConfigsVspherePoolMachinesUidUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereMachine"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine to cloud config's machine pool
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/{cloudType}/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}/maintenance:
    put:
      operationId: v1CloudConfigsMachinePoolsMachineUidMaintenanceUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      - description: Cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MachineMaintenance"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine maintenance
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/{cloudType}/{configUid}/machinePools/{machinePoolName}/machines/{machineUid}/maintenance/status:
    put:
      operationId: v1CloudConfigsMachinePoolsMachineUidMaintenanceStatusUpdate
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      - description: Machine pool name
        in: path
        name: machinePoolName
        required: true
        schema:
          type: string
      - description: Machine uid
        in: path
        name: machineUid
        required: true
        schema:
          type: string
      - description: Cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MachineMaintenanceStatus"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified machine maintenance
      tags:
      - cloudconfigs
      x-codegen-request-body-name: body
  /v1/cloudconfigs/{configUid}/machinePools/machineUids:
    get:
      operationId: v1CloudConfigsMachinePoolsMachineUidsGet
      parameters:
      - description: Cluster's cloud config uid
        in: path
        name: configUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MachinePoolsMachineUids"
          description: OK
      summary: Returns the specified cloud config's machine pools and machine uid
      tags:
      - cloudconfigs
  /v1/clouds/aws/account/secret/credentials:
    post:
      operationId: V1AwsAccountSecretCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsSecretSpecInputEntity"
        description: Retrieves the Aws secret credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsAccountCredentials"
          description: (empty)
      summary: Retrieves the Aws secret credentials
      tags:
      - clouds
      x-codegen-request-body-name: account
  /v1/clouds/aws/account/sts:
    get:
      operationId: V1AwsAccountStsGet
      parameters:
      - description: "AWS accounts are scoped to a single partition. Allowed values\
          \ [aws, aws-us-gov], Default values"
        in: query
        name: partition
        schema:
          default: aws
          enum:
          - aws
          - aws-us-gov
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/V1AwsAccountSts"
          description: (empty)
      summary: Retrieves AWS external id and account id
      tags:
      - clouds
  /v1/clouds/aws/account/validate:
    post:
      operationId: V1AwsAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsCloudAccount"
        description: Request payload to validate AWS cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified AWS account credentials
      tags:
      - clouds
      x-codegen-request-body-name: awsCloudAccount
  /v1/clouds/aws/amiTypes:
    get:
      operationId: V1AwsAmiTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AmiTypes"
          description: (empty)
      summary: Retrieves a list of AWS AMI types
      tags:
      - clouds
  /v1/clouds/aws/cloudwatch/validate:
    post:
      description: Validates aws cloud watch credentials
      operationId: V1CloudsAwsCloudWatchValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1.CloudWatchConfig"
        description: Request payload for cloud watch config
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: validates aws cloud watch credentials
      tags:
      - clouds
      x-codegen-request-body-name: cloudWatchConfig
  /v1/clouds/aws/cost:
    post:
      operationId: v1AwsCloudCost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsCloudCostSpec"
        description: Request payload for AWS cloud cost
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsCloudCostSummary"
          description: (empty)
      summary: Retrieves AWS cloud account usage cost from cost explorer.
      tags:
      - clouds
      x-codegen-request-body-name: body
  /v1/clouds/aws/imageIds/{imageId}/volumeSize:
    get:
      description: Get AWS Volume Size
      operationId: V1AwsVolumeSizeGet
      parameters:
      - description: Specific AWS Region
        in: query
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: AWS image id
        in: path
        name: imageId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsVolumeSize"
          description: (empty)
      summary: Get AWS Volume Size
      tags:
      - clouds
  /v1/clouds/aws/policies:
    post:
      operationId: V1AwsIamPolicies
      parameters:
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsCloudAccount"
        description: Request payload for AWS Cloud Account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsPolicies"
          description: (empty)
      summary: Retrieves a list of AWS policies for the specified account
      tags:
      - clouds
      x-codegen-request-body-name: account
  /v1/clouds/aws/policyArns/validate:
    post:
      operationId: V1AwsPolicyArnsValidate
      parameters:
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsPolicyArnsSpec"
        description: Request payload to validate AWS policy ARN
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the aws policy arns validate
      tags:
      - clouds
      x-codegen-request-body-name: spec
  /v1/clouds/aws/properties/validate:
    post:
      operationId: V1AwsPropertiesValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1AwsPropertiesValidateSpec"
        description: Request payload for AWS properties validate spec
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate AWS properties
      tags:
      - clouds
      x-codegen-request-body-name: properties
  /v1/clouds/aws/regions:
    get:
      operationId: V1AwsRegions
      parameters:
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsRegions"
          description: (empty)
      summary: Retrieves a list of AWS regions for the specified account
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/availabilityzones:
    get:
      operationId: V1AwsZones
      parameters:
      - description: Region for which zones are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsAvailabilityZones"
          description: (empty)
      summary: Retrieves a list of AWS availability zones for the specified region
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/copydefaultimages:
    post:
      operationId: V1AwsCopyImageFromDefaultRegion
      parameters:
      - description: Region to copy AWS image from
        in: path
        name: region
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsFindImageRequest"
        description: Request payload to copy the AWS image
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AsyncOperationIdEntity"
          description: (empty)
      summary: Copies the specified image from one region to another region
      tags:
      - clouds
      x-codegen-request-body-name: spectroClusterAwsImageTag
  /v1/clouds/aws/regions/{region}/eksClusters/name/validate:
    get:
      description: Returns no contents if aws cluster name is valid else error.
      operationId: V1AwsClusterNameValidate
      parameters:
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: cluster name to be validated
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: Region for which cluster name is validated
        in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if Aws cluster name is valid
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/images:
    post:
      operationId: V1AwsFindImage
      parameters:
      - description: Region to find AWS image
        in: path
        name: region
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsFindImageRequest"
        description: Request payload to find the AWS image
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsImage"
          description: (empty)
      summary: Returns AWS image for the specified AMI name
      tags:
      - clouds
      x-codegen-request-body-name: awsImageRequest
  /v1/clouds/aws/regions/{region}/instancetypes:
    get:
      operationId: V1AwsInstanceTypes
      parameters:
      - description: Region for which AWS instances are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Filter for instances having cpu greater than or equal
        in: query
        name: cpuGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having memory greater than or equal
        in: query
        name: memoryGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having gpu greater than or equal
        in: query
        name: gpuGtEq
        schema:
          format: double
          type: number
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsInstanceTypes"
          description: (empty)
      summary: Retrieves a list of AWS instance types
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/keypairs:
    get:
      operationId: V1AwsKeyPairs
      parameters:
      - description: Region for which AWS key pairs are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsKeyPairs"
          description: (empty)
      summary: Retrieves a list of AWS keypairs
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/keypairs/{keypair}/validate:
    post:
      operationId: V1AwsKeyPairValidate
      parameters:
      - description: Region for which AWS key pairs is validated
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: AWS Key pair which is to be validated
        in: path
        name: keypair
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified AWS keypair
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/kms/{keyId}:
    get:
      operationId: V1AwsKmsKeyGet
      parameters:
      - description: Region for which AWS KMS key belongs
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: The globally unique identifier for the KMS key
        in: path
        name: keyId
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsKmsKeyEntity"
          description: (empty)
      summary: Get AWS KMS key by Id
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/kmskeys:
    get:
      operationId: V1AwsKmsKeys
      parameters:
      - description: Region for which AWS KMS key are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsKmsKeys"
          description: (empty)
      summary: Retrieves a list of AWS KMS keys for the specified account
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/kmskeys/validate:
    get:
      operationId: V1AwsKmsKeyValidate
      parameters:
      - description: Region for which AWS KMS key is validated
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: AWS KEY ARN for validation
        in: query
        name: keyArn
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate an Aws KMS key for the specified account
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/storagetypes:
    get:
      operationId: V1AwsStorageTypes
      parameters:
      - description: Region for which AWS storage types are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsStorageTypes"
          description: (empty)
      summary: Retrieves a list of AWS storage types
      tags:
      - clouds
  /v1/clouds/aws/regions/{region}/vpcs:
    get:
      operationId: V1AwsVpcs
      parameters:
      - description: Region for which VPCs are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsVpcs"
          description: (empty)
      summary: Retrieves a list of VPCs for the specified account
      tags:
      - clouds
  /v1/clouds/aws/s3/validate:
    post:
      operationId: V1AwsS3Validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AwsS3BucketCredentials"
        description: AWS S3 bucket credentials
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the AWS S3 bucket
      tags:
      - clouds
      x-codegen-request-body-name: awsS3Credential
  /v1/clouds/aws/securitygroups:
    get:
      operationId: V1AwsSecurityGroups
      parameters:
      - description: Uid for the specific AWS cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: Region for which security groups are requested
        in: query
        name: region
        required: true
        schema:
          type: string
      - description: Vpc Id for which security groups are requested
        in: query
        name: vpcId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsSecurityGroups"
          description: (empty)
      summary: Retrieves a list of AWS security groups for the specified account
      tags:
      - clouds
  /v1/clouds/aws/volumeTypes:
    get:
      description: List all AWS Volume Types
      operationId: V1AwsVolumeTypesGet
      parameters:
      - description: Specific AWS Region
        in: query
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AWSVolumeTypes"
          description: (empty)
      summary: Get all AWS Volume Types
      tags:
      - clouds
  /v1/clouds/azure/account/validate:
    post:
      description: Returns no contents if account is valid else error.
      operationId: V1AzureAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzureCloudAccount"
        description: Request payload for Azure cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if Azure account is valid
      tags:
      - clouds
      x-codegen-request-body-name: azureCloudAccount
  /v1/clouds/azure/groups:
    get:
      operationId: V1AzureGroups
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureGroups"
          description: (empty)
      summary: Retrieves a list of Azure groups
      tags:
      - clouds
  /v1/clouds/azure/regions:
    get:
      operationId: V1AzureRegions
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: SubscriptionId for which resources is requested
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureRegions"
          description: (empty)
      summary: Retrieves a list of Azure regions
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/instancetypes:
    get:
      operationId: V1AzureInstanceTypes
      parameters:
      - description: Region for which Azure instance types are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Filter for instances having cpu greater than or equal
        in: query
        name: cpuGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having memory greater than or equal
        in: query
        name: memoryGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having gpu greater than or equal
        in: query
        name: gpuGtEq
        schema:
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureInstanceTypes"
          description: (empty)
      summary: Retrieves a list of Azure instance types
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/storagetypes:
    get:
      operationId: V1AzureStorageTypes
      parameters:
      - description: Region for which Azure storage types are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureStorageTypes"
          description: (empty)
      summary: Retrieves a list of Azure storage types
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/subscriptions/{subscriptionId}/aksClusters/name/validate:
    get:
      description: Returns no contents if Azure cluster name is valid else error.
      operationId: V1AzureClusterNameValidate
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: cluster name to be validated
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: region in which cluster name is to be validated
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: subscriptionId in which cluster name is to be validated
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: resourceGroup in which cluster name is to be validated
        in: query
        name: resourceGroup
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if Azure cluster name is valid
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/subscriptions/{subscriptionId}/networks:
    get:
      operationId: V1AzureVirtualNetworkList
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Region for which Azure virtual networks are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for which Azure virtual networks are requested
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: Resource group for which Azure virtual networks are requested
        in: query
        name: resourceGroup
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureVirtualNetworkList"
          description: (empty)
      summary: Retrieves a list of Azure virtual network list for the sepcified account
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/subscriptions/{subscriptionId}/resourceGroups:
    get:
      operationId: V1AzureResourceGroupList
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Region for which Azure resource group are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for which Azure resource group are requested
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureResourceGroupList"
          description: (empty)
      summary: Retrieves a list of Azure resource group for the specified account
      tags:
      - clouds
  /v1/clouds/azure/regions/{region}/zones:
    get:
      operationId: V1AzureZones
      parameters:
      - description: Region for which Azure zones are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: subscriptionId of azure account
        in: query
        name: subscriptionId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureZoneEntity"
          description: (empty)
      summary: Retrieves a list of Azure zones for the specified region
      tags:
      - clouds
  /v1/clouds/azure/resourceGroups/{resourceGroup}/privateDnsZones:
    get:
      description: Returns Azure private DNS zones
      operationId: V1AzurePrivateDnsZones
      parameters:
      - description: resourceGroup for which Azure private dns zones are requested
        in: path
        name: resourceGroup
        required: true
        schema:
          type: string
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: subscriptionId for which Azure private dns zones are requested
        in: query
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzurePrivateDnsZones"
          description: (empty)
      summary: Get Azure private DNS zones for the given resource group
      tags:
      - clouds
  /v1/clouds/azure/resourceGroups/{resourceGroup}/storageAccounts:
    get:
      description: Returns Azure storage accounts.
      operationId: V1AzureStorageAccounts
      parameters:
      - description: resourceGroup for which Azure storage accounts are requested
        in: path
        name: resourceGroup
        required: true
        schema:
          type: string
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: subscriptionId for which Azure storage accounts are requested
        in: query
        name: subscriptionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureStorageAccounts"
          description: (empty)
      summary: Get Azure storage accounts
      tags:
      - clouds
  /v1/clouds/azure/resourceGroups/{resourceGroup}/storageAccounts/{storageAccountName}/containers:
    get:
      description: Returns Azure storage containers for the given account.
      operationId: V1AzureStorageContainers
      parameters:
      - description: resourceGroup for which Azure storage accounts are requested
        in: path
        name: resourceGroup
        required: true
        schema:
          type: string
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: subscriptionId for which Azure storage accounts are requested
        in: query
        name: subscriptionId
        required: true
        schema:
          type: string
      - description: resourceGroup for which Azure storage accounts are requested
        in: path
        name: storageAccountName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureStorageContainers"
          description: (empty)
      summary: Get Azure storage containers
      tags:
      - clouds
  /v1/clouds/azure/storageaccounttypes:
    get:
      description: Returns Azure storage account types.
      operationId: V1AzureStorageAccountTypes
      parameters:
      - description: Region for which Azure storage account types are requested
        in: query
        name: region
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureStorageAccountEntity"
          description: (empty)
      summary: Get Azure storage account types
      tags:
      - clouds
  /v1/clouds/azure/subscriptions:
    get:
      description: Returns list of Azure subscription list.
      operationId: V1AzureSubscriptionList
      parameters:
      - description: Uid for the specific Azure cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureSubscriptionList"
          description: (empty)
      summary: Retrieves a list of Azure subscription list for the specified account
      tags:
      - clouds
  /v1/clouds/azure/vhds/{vhd}/url:
    get:
      operationId: V1AzureVhdUrl
      parameters:
      - description: vhd location for which Azure vhd url is requested
        in: path
        name: vhd
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AzureVhdUrlEntity"
          description: (empty)
      summary: Returns the Azure vhd url for the specified vhd location
      tags:
      - clouds
  /v1/clouds/cloudTypes:
    get:
      operationId: V1CustomCloudTypesGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypes"
          description: (empty)
      summary: Returns the custom cloud types
      tags:
      - clouds
  /v1/clouds/cloudTypes/register:
    post:
      operationId: V1CustomCloudTypeRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomCloudRequestEntity"
        description: Request payload to register custom cloud type
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Registers the custom cloud type
      tags:
      - clouds
      x-codegen-request-body-name: body
  /v1/clouds/cloudTypes/{cloudType}:
    delete:
      operationId: V1CustomCloudTypesDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the custom cloud type
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/cloudAccountKeys:
    get:
      operationId: V1CustomCloudTypeCloudAccountKeysGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeCloudAccountKeys"
          description: (empty)
      summary: Returns valid keys for the cloud account used for custom cloud type
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeCloudAccountKeysUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomCloudTypeCloudAccountKeys"
        description: Request payload for custom cloud meta entity
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type cloud account keys
      tags:
      - clouds
      x-codegen-request-body-name: body
  /v1/clouds/cloudTypes/{cloudType}/content/bootstrap:
    delete:
      operationId: V1CustomCloudTypeBootstrapDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type bootstrap
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeBootstrapGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type bootstrap
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeBootstrapUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type bootstrap
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/cloudProvider:
    delete:
      operationId: V1CustomCloudTypeCloudProviderDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type cloud provider
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeCloudProviderGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type cloud provider
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeCloudProviderUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type cloud provider
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/controlPlane:
    delete:
      operationId: V1CustomCloudTypeControlPlaneDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type control plane
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeControlPlaneGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type control plane
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeControlPlaneUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type control plane
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/core:
    delete:
      operationId: V1CustomCloudTypeCoreDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type core
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeCoreGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type core
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeCoreUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type core
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/templates/clusterTemplate:
    delete:
      operationId: V1CustomCloudTypeClusterTemplateDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type cluster template
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeClusterTemplateGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type cluster template
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeClusterTemplateUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type cluster template
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/templates/controlPlanePoolTemplate:
    delete:
      operationId: V1CustomCloudTypeControlPlanePoolTemplateDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type controlPlane pool template
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeControlPlanePoolTemplateGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type controlPlane pool template
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeControlPlanePoolTemplateUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type controlPlane pool template
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/content/templates/workerPoolTemplate:
    delete:
      operationId: V1CustomCloudTypeWorkerPoolTemplateDelete
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the custom cloud type worker pool template
      tags:
      - clouds
    get:
      operationId: V1CustomCloudTypeWorkerPoolTemplateGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudTypeContentResponse"
          description: (empty)
      summary: Returns the custom cloud type worker pool template
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeWorkerPoolTemplateUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type worker pool template
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/logo:
    get:
      operationId: V1CustomCloudTypeLogoGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Download the logo
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the custom cloud type logo
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeLogoUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/V1CustomCloudTypeBootstrapUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update the custom cloud type logo
      tags:
      - clouds
  /v1/clouds/cloudTypes/{cloudType}/meta:
    get:
      operationId: V1CustomCloudTypeMetaGet
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CustomCloudMetaEntity"
          description: (empty)
      summary: Returns the custom cloud type meta
      tags:
      - clouds
    put:
      operationId: V1CustomCloudTypeMetaUpdate
      parameters:
      - description: Unique cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CustomCloudRequestEntity"
        description: Request payload for custom cloud meta entity
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the custom cloud type meta
      tags:
      - clouds
      x-codegen-request-body-name: body
  /v1/clouds/eks/properties/validate:
    post:
      operationId: V1EksPropertiesValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1EksPropertiesValidateSpec"
        description: Request payload for EKS properties validate spec
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate EKS properties
      tags:
      - clouds
      x-codegen-request-body-name: properties
  /v1/clouds/gcp/account/validate:
    post:
      operationId: V1GcpAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpCloudAccountValidateEntity"
        description: Uid for the specific GCP cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified GCP account credentials
      tags:
      - clouds
      x-codegen-request-body-name: gcpCloudAccount
  /v1/clouds/gcp/azs/validate:
    post:
      operationId: V1GcpAzValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AzValidateEntity"
        description: Uid for the specific GCP cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified GCP az
      tags:
      - clouds
      x-codegen-request-body-name: entity
  /v1/clouds/gcp/bucketname/validate:
    post:
      operationId: V1GcpBucketNameValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GcpAccountNameValidateSpec"
        description: Request payload for GCP account name validate
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified GCP bucket name credentials
      tags:
      - clouds
      x-codegen-request-body-name: body
  /v1/clouds/gcp/image/container/validate:
    get:
      operationId: V1GcpContainerImageValidate
      parameters:
      - description: image path in the container
        in: query
        name: imagePath
        required: true
        schema:
          type: string
      - description: tag in the GCP container
        in: query
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the image with tag
      tags:
      - clouds
  /v1/clouds/gcp/images/{imageName}/url:
    get:
      operationId: V1GcpImageUrl
      parameters:
      - description: imageName for which GCP image url is requested
        in: path
        name: imageName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpImageUrlEntity"
          description: (empty)
      summary: Returns the Gcp image url for the specified image location
      tags:
      - clouds
  /v1/clouds/gcp/projects:
    get:
      operationId: V1GcpProjects
      parameters:
      - description: Uid for the specific GCP cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpProjects"
          description: (empty)
      summary: Retrieves a list of GCP projects for the specified account
      tags:
      - clouds
  /v1/clouds/gcp/projects/{project}/regions:
    get:
      operationId: V1GcpRegions
      parameters:
      - description: Uid for the specific GCP cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Project Name for which GCP zones are requested
        in: path
        name: project
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpRegions"
          description: (empty)
      summary: Retrieves a list of GCP regions
      tags:
      - clouds
  /v1/clouds/gcp/projects/{project}/regions/{region}/networks:
    get:
      operationId: V1GcpNetworks
      parameters:
      - description: Uid for the specific GCP cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Region for which GCP networks are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Project Name for which GCP networks are requested
        in: path
        name: project
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpNetworks"
          description: (empty)
      summary: Retrieves a list of GCP networks for the specified account
      tags:
      - clouds
  /v1/clouds/gcp/projects/{project}/regions/{region}/zones:
    get:
      operationId: V1GcpZones
      parameters:
      - description: Uid for the specific GCP cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Region for which GCP zones are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Project Name for which GCP zones are requested
        in: path
        name: project
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpZones"
          description: (empty)
      summary: Retrieves a list of GCP zones for the specified account and region
      tags:
      - clouds
  /v1/clouds/gcp/projects/{project}/validate:
    post:
      operationId: V1GcpProjectValidate
      parameters:
      - description: GCP project uid
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CloudAccountUidEntity"
        description: Uid for the specific GCP cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate the specified GCP project
      tags:
      - clouds
      x-codegen-request-body-name: cloudAccountUid
  /v1/clouds/gcp/projects/{project}/zones:
    get:
      operationId: V1GcpAvailabilityZones
      parameters:
      - description: Uid for the specific GCP cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: Project Name for which GCP zones are requested
        in: path
        name: project
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpZones"
          description: (empty)
      summary: Retrieves a list of GCP zones for the specified account
      tags:
      - clouds
  /v1/clouds/gcp/properties/validate:
    post:
      operationId: V1GcpPropertiesValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1GcpPropertiesValidateSpec"
        description: Request payload for GCP properties validate spec
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validate GCP properties
      tags:
      - clouds
      x-codegen-request-body-name: properties
  /v1/clouds/gcp/regions/{region}/instancetypes:
    get:
      operationId: V1GcpInstanceTypes
      parameters:
      - description: Region for which GCP instance types are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      - description: Filter for instances having cpu greater than or equal
        in: query
        name: cpuGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having memory greater than or equal
        in: query
        name: memoryGtEq
        schema:
          format: double
          type: number
      - description: Filter for instances having gpu greater than or equal
        in: query
        name: gpuGtEq
        schema:
          format: double
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpInstanceTypes"
          description: (empty)
      summary: Retrieves a list of GCP instance types
      tags:
      - clouds
  /v1/clouds/gcp/regions/{region}/storagetypes:
    get:
      operationId: V1GcpStorageTypes
      parameters:
      - description: Region for which GCP storage types are requested
        in: path
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1GcpStorageTypes"
          description: (empty)
      summary: Retrieves a list of Gcp storage types
      tags:
      - clouds
  /v1/clouds/maas/account/validate:
    post:
      description: Returns no contents if account is valid else error.
      operationId: V1MaasAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1MaasCloudAccount"
        description: Request payload for Maas cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if Maas account is valid
      tags:
      - clouds
      x-codegen-request-body-name: account
  /v1/clouds/maas/azs:
    get:
      operationId: V1MaasZonesGet
      parameters:
      - description: Uid for the specific Maas cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasZones"
          description: (empty)
      summary: Retrieves a list of Maas zones for a particular account uid
      tags:
      - clouds
  /v1/clouds/maas/domains:
    get:
      operationId: V1MaasDomainsGet
      parameters:
      - description: Uid for the specific Maas cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasDomains"
          description: (empty)
      summary: Retrieves a list of Maas domains
      tags:
      - clouds
  /v1/clouds/maas/resourcePools:
    get:
      operationId: V1MaasPoolsGet
      parameters:
      - description: Uid for the specific Maas cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasPools"
          description: (empty)
      summary: Retrieves a list of Maas pools for a particular account uid
      tags:
      - clouds
  /v1/clouds/maas/subnets:
    get:
      operationId: V1MaasSubnetsGet
      parameters:
      - description: Uid for the specific Maas cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasSubnets"
          description: (empty)
      summary: Retrieves a list of Maas subnets for a particular account uid
      tags:
      - clouds
  /v1/clouds/maas/tags:
    get:
      operationId: V1MaasTagsGet
      parameters:
      - description: Uid for the specific Maas cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MaasTags"
          description: (empty)
      summary: Retrieves a list of Maas tags for a particular account uid
      tags:
      - clouds
  /v1/clouds/openstack/account/validate:
    post:
      description: Returns no contents if account is valid else error.
      operationId: V1OpenStackAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OpenStackCloudAccount"
        description: Request payload for OpenStack cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if OpenStack account is valid
      tags:
      - clouds
      x-codegen-request-body-name: openstackCloudAccount
  /v1/clouds/openstack/azs:
    get:
      operationId: V1OpenStackAzsGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: project for which OpenStack azs are requested
        in: query
        name: project
        schema:
          type: string
      - description: region for which OpenStack azs are requested
        in: query
        name: region
        schema:
          type: string
      - description: domain for which OpenStack azs are requested
        in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackAzs"
          description: (empty)
      summary: Retrieves a list of OpenStack azs for a particular account uid
      tags:
      - clouds
  /v1/clouds/openstack/flavors:
    get:
      operationId: V1OpenStackFlavorsGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: project for which OpenStack flavors are requested
        in: query
        name: project
        schema:
          type: string
      - description: region for which OpenStack flavors are requested
        in: query
        name: region
        schema:
          type: string
      - description: domain for which OpenStack flavors are requested
        in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackFlavors"
          description: (empty)
      summary: Returns the OpenStack flavors
      tags:
      - clouds
  /v1/clouds/openstack/keypairs:
    get:
      operationId: V1OpenStackKeypairsGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: project for which OpenStack keypairs are requested
        in: query
        name: project
        schema:
          type: string
      - description: region for which OpenStack keypairs are requested
        in: query
        name: region
        schema:
          type: string
      - description: domain for which OpenStack keypairs are requested
        in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackKeypairs"
          description: (empty)
      summary: Returns the OpenStack keypair
      tags:
      - clouds
  /v1/clouds/openstack/networks:
    get:
      operationId: V1OpenStackNetworksGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      - description: project for which OpenStack networks are requested
        in: query
        name: project
        schema:
          type: string
      - description: region for which OpenStack networks are requested
        in: query
        name: region
        schema:
          type: string
      - description: domain for which OpenStack networks are requested
        in: query
        name: domain
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackNetworks"
          description: (empty)
      summary: Returns the OpenStack networks
      tags:
      - clouds
  /v1/clouds/openstack/projects:
    get:
      operationId: V1OpenStackProjectsGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackProjects"
          description: (empty)
      summary: Returns the OpenStack projects
      tags:
      - clouds
  /v1/clouds/openstack/regions:
    get:
      operationId: V1OpenStackRegionsGet
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OpenStackRegions"
          description: (empty)
      summary: Returns the OpenStack regions
      tags:
      - clouds
  /v1/clouds/vsphere/account/validate:
    post:
      description: Returns no contents if account is valid else error.
      operationId: V1VsphereAccountValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereCloudAccount"
        description: Request payload for VSphere cloud account
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if Vsphere account is valid
      tags:
      - clouds
      x-codegen-request-body-name: vsphereCloudAccount
  /v1/clouds/vsphere/datacenters:
    get:
      operationId: V1VsphereDatacenters
      parameters:
      - description: Uid for the specific OpenStack cloud account
        in: query
        name: cloudAccountUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDatacenters"
          description: (empty)
      summary: Returns the vsphere data centers
      tags:
      - clouds
  /v1/clouds/vsphere/datacenters/{uid}/computeclusters/{computecluster}:
    get:
      operationId: V1VsphereComputeClusterResources
      parameters:
      - description: Uid for the specific VSphere cloud account
        in: query
        name: cloudAccountUid
        required: true
        schema:
          type: string
      - description: computecluster for which resources is requested
        in: path
        name: computecluster
        required: true
        schema:
          type: string
      - description: VSphere datacenter uid for which resources is requested
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereComputeClusterResources"
          description: (empty)
      summary: Returns the resources for vsphere compute cluster
      tags:
      - clouds
  /v1/clouds/vsphere/env:
    get:
      operationId: V1VsphereEnv
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereCloudAccount"
        description: Request payload for VSphere cloud account
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereEnv"
          description: (empty)
      summary: Retrieves vsphere env
      tags:
      - clouds
      x-codegen-request-body-name: vsphereCloudAccount
  /v1/clouds/{cloud}/compute/{type}/rate:
    get:
      operationId: V1CloudComputeRate
      parameters:
      - description: cloud for which compute rate is requested
        in: path
        name: cloud
        required: true
        schema:
          type: string
      - description: instance type for which compute rate is requested
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: region for which compute rate is requested
        in: query
        name: region
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CloudCost"
          description: (empty)
      summary: Returns the cloud compute rate
      tags:
      - clouds
  /v1/clouds/{cloud}/storage/{type}/rate:
    get:
      operationId: V1CloudStorageRate
      parameters:
      - description: cloud for which compute rate is requested
        in: path
        name: cloud
        required: true
        schema:
          type: string
      - description: storage type for which compute rate is requested
        in: path
        name: type
        required: true
        schema:
          type: string
      - description: region for which compute rate is requested
        in: query
        name: region
        required: true
        schema:
          type: string
      - description: maxDiskType for which compute rate is requested
        in: query
        name: maxDiskType
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CloudCost"
          description: (empty)
      summary: Returns the cloud storage rate
      tags:
      - clouds
  /v1/clustergroups:
    post:
      operationId: v1ClusterGroupsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterGroupEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create cluster groups
      tags:
      - clustergroups
      x-codegen-request-body-name: body
  /v1/clustergroups/developerCredit/usage/{scope}:
    get:
      operationId: v1ClusterGroupsDeveloperCreditUsageGet
      parameters:
      - in: path
        name: scope
        required: true
        schema:
          enum:
          - system
          - tenant
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterGroupsDeveloperCreditUsage"
          description: Cluster group developer credit usage
      summary: Get cluster group developer credit usage by scope
      tags:
      - clustergroups
  /v1/clustergroups/hostCluster:
    get:
      operationId: v1ClusterGroupsHostClusterSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterGroupsHostClusterSummary"
          description: An array of cluster groups of host cluster type summary
      summary: Retrieves a list of cluster groups host cluster summary
      tags:
      - clustergroups
  /v1/clustergroups/hostCluster/metadata:
    get:
      operationId: v1ClusterGroupsHostClusterMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterGroupsHostClusterMetadata"
          description: An array of cluster groups host cluster metadata items
      summary: Retrieves a list of cluster groups host cluster metadata
      tags:
      - clustergroups
  /v1/clustergroups/validate/name:
    get:
      operationId: v1ClusterGroupsValidateName
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the cluster groups name
      tags:
      - clustergroups
  /v1/clustergroups/{uid}:
    delete:
      operationId: v1ClusterGroupsUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified cluster group
      tags:
      - clustergroups
    get:
      operationId: v1ClusterGroupsUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterGroup"
          description: OK
      summary: Returns the specified cluster groups
      tags:
      - clustergroups
  /v1/clustergroups/{uid}/hostCluster:
    put:
      operationId: v1ClusterGroupsUidHostClusterUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterGroupHostClusterEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates cluster reference and host cluster config
      tags:
      - clustergroups
      x-codegen-request-body-name: body
  /v1/clustergroups/{uid}/meta:
    put:
      operationId: v1ClusterGroupsUidMetaUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ObjectMeta"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster groups meta
      tags:
      - clustergroups
      x-codegen-request-body-name: body
  /v1/clustergroups/{uid}/packs/resolvedValues:
    get:
      operationId: v1ClusterGroupsUidPacksResolvedValuesGet
      parameters:
      - description: Cluster group uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfilesParamReferenceEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfilesResolvedValues"
          description: OK
      summary: Returns the specified clustergroup's profile packs resolved values
      tags:
      - clustergroups
      x-codegen-request-body-name: body
  /v1/clustergroups/{uid}/profiles:
    get:
      operationId: v1ClusterGroupsUidProfilesGet
      parameters:
      - description: ClusterGroup uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "includes pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfileList"
          description: OK
      summary: Returns the associated profiles of a specified cluster group
      tags:
      - clustergroups
    put:
      operationId: v1ClusterGroupsUidProfilesUpdate
      parameters:
      - description: ClusterGroup uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfiles"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster groups profiles
      tags:
      - clustergroups
      x-codegen-request-body-name: body
  /v1/clusterprofiles:
    post:
      operationId: v1ClusterProfilesCreate
      parameters:
      - description: If true then cluster profile will be created and published in
          a single transaction
        in: query
        name: publish
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/bulk:
    delete:
      operationId: v1ClusterProfilesBulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1BulkDeleteRequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1BulkDeleteResponse"
          description: OK
      summary: Deletes list of cluster profiles
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/import:
    post:
      operationId: v1ClusterProfilesImport
      parameters:
      - description: If true then cluster profile will be published post successful
          import
        in: query
        name: publish
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/import/file:
    post:
      operationId: v1ClusterProfilesImportFile
      parameters:
      - description: If true then cluster profile will be published post successful
          import
        in: query
        name: publish
        schema:
          type: boolean
      - description: "Cluster profile import file format [\"yaml\", \"json\"]"
        in: query
        name: format
        schema:
          default: json
          enum:
          - yaml
          - json
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/v1ClusterProfilesImportFile_request"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a cluster profile via file
      tags:
      - clusterprofiles
  /v1/clusterprofiles/import/validate:
    post:
      operationId: v1ClusterProfilesImportValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileImportEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfileImportEntity"
          description: Cluster profile import validated response
      summary: Validates cluster profile import
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/macros:
    get:
      operationId: v1MacrosList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Macros"
          description: OK
      summary: Retrieves a list of macros
      tags:
      - clusterprofiles
  /v1/clusterprofiles/validate/name:
    get:
      description: Validates the cluster profile name and version
      operationId: v1ClusterProfilesValidateNameVersion
      parameters:
      - description: Cluster profile name
        in: query
        name: name
        schema:
          type: string
      - description: Cluster profile version
        in: query
        name: version
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the cluster profile metadata
      tags:
      - clusterprofiles
  /v1/clusterprofiles/validate/packs:
    post:
      operationId: v1ClusterProfilesValidatePacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileTemplateDraft"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfileValidatorResponse"
          description: Cluster profile packs validation response
      summary: Validates cluster profile packs
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}:
    delete:
      operationId: v1ClusterProfilesDelete
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified cluster profile
      tags:
      - clusterprofiles
    get:
      operationId: v1ClusterProfilesGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfile"
          description: OK
      summary: Returns a specified cluster profile
      tags:
      - clusterprofiles
    put:
      operationId: v1ClusterProfilesUpdate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/clone:
    post:
      operationId: v1ClusterProfilesUidClone
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileCloneEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a clone of the specified cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/clone/validate:
    post:
      description: "Validates the cloned cluster profile name, version and target\
        \ project uid"
      operationId: v1ClusterProfilesUidCloneValidate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileCloneMetaInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the cluster profile clone
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/export:
    get:
      operationId: V1ClusterProfilesUidExport
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Cluster profile export file format [ \"yaml\", \"json\" ]"
        in: query
        name: format
        schema:
          default: json
          enum:
          - yaml
          - json
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Exports cluster profile as a file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Export the specified cluster profile
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/export/terraform:
    get:
      operationId: V1ClusterProfilesUidExportTerraform
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Cluster profile export file format [ \"yaml\", \"json\" ]"
        in: query
        name: format
        schema:
          default: yaml
          enum:
          - yaml
          - json
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Downloads cluster profile export file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Downloads the specified cluster profile
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/metadata:
    patch:
      operationId: v1ClusterProfilesUidMetadataUpdate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProfileMetaEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster profile metadata
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packRefs:
    patch:
      operationId: v1ClusterProfilesPacksRefUpdate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile notification uid
        in: query
        name: notify
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileNotificationUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates cluster profile packs ref
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packs:
    get:
      operationId: v1ClusterProfilesUidPacksGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfilePacksEntities"
          description: OK
      summary: Returns the specified cluster profile packs
      tags:
      - clusterprofiles
    post:
      operationId: v1ClusterProfilesUidPacksAdd
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackInputEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds a new pack to the specified cluster profile and returns the created
        pack uid
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packs/manifests:
    get:
      operationId: v1ClusterProfilesUidPacksManifestsGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma seperated pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfilePacksManifests"
          description: OK
      summary: Returns the specified cluster profile pack manifests
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/packs/resolvedValues:
    get:
      operationId: v1ClusterProfilesUidPacksResolvedValuesGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackParamsEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackResolvedValues"
          description: OK
      summary: Returns the specified cluster profile packs resolved values
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packs/{packName}:
    delete:
      operationId: v1ClusterProfilesUidPacksNameDelete
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified pack information in the cluster profile
      tags:
      - clusterprofiles
    get:
      operationId: V1ClusterProfilesUidPacksNameGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackRefSummaryResponse"
          description: OK
      summary: Returns the specified cluster profile pack
      tags:
      - clusterprofiles
    put:
      operationId: v1ClusterProfilesUidPacksNameUpdate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified pack information in the cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packs/{packName}/config:
    get:
      operationId: v1ClusterProfilesUidPacksConfigGet
      parameters:
      - description: cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      - description: Cluster profile pack uid
        in: query
        name: packUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfilePackConfigList"
          description: An array of cluster profile pack configurations
      summary: Returns the specified cluster profile pack configuration
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/packs/{packName}/manifests:
    get:
      operationId: v1ClusterProfilesUidPacksUidManifests
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ManifestEntities"
          description: OK
      summary: Returns the associated manifests for the specified profile's pack
      tags:
      - clusterprofiles
    post:
      operationId: v1ClusterProfilesUidPacksNameManifestsAdd
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestInputEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Adds manifest to the profiles packs and returns the added manifests
        uid
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/packs/{packName}/manifests/{manifestUid}:
    delete:
      operationId: v1ClusterProfilesUidPacksNameManifestsUidDelete
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      - description: Cluster profile pack manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified cluster profile pack manifest
      tags:
      - clusterprofiles
    get:
      operationId: v1ClusterProfilesUidPacksNameManifestsUidGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      - description: Cluster profile pack manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ManifestEntity"
          description: OK
      summary: Returns the specified cluster profile pack manifest
      tags:
      - clusterprofiles
    put:
      operationId: v1ClusterProfilesUidPacksNameManifestsUidUpdate
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      - description: Cluster profile pack manifest uid
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified manifest of the profile's pack
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/publish:
    patch:
      description: |
        Publish the draft cluster profile with next revision, the current draft cluster profile will be marked to published
        and the draft cluster profile will be set to null in the cluster profile template.
      operationId: v1ClusterProfilesPublish
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Cluster profile published successfully
      summary: Publishes the specified cluster profile
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/spc/download:
    get:
      operationId: v1ClusterProfilesUidSpcDownload
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Download cluster profile archive file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Downloads the specified cluster profile
      tags:
      - clusterprofiles
  /v1/clusterprofiles/{uid}/validate/packs:
    post:
      operationId: v1ClusterProfilesUidValidatePacks
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfileTemplateDraft"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfileValidatorResponse"
          description: Cluster profile packs validation response
      summary: Validates specified cluster profile packs
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/clusterprofiles/{uid}/variables:
    delete:
      operationId: V1ClusterProfilesUidVariablesDelete
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VariableNames"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified cluster profile variables
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
    get:
      operationId: V1ClusterProfilesUidVariablesGet
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Variables"
          description: OK
      summary: Retrieve a list of variables defined for the cluster profile
      tags:
      - clusterprofiles
    patch:
      operationId: V1ClusterProfilesUidVariablesPatch
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Variables"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update specific variables defined for a cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
    put:
      operationId: V1ClusterProfilesUidVariablesPut
      parameters:
      - description: Cluster profile uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Variables"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the variables defined for a cluster profile
      tags:
      - clusterprofiles
      x-codegen-request-body-name: body
  /v1/dashboard/appDeployments:
    post:
      operationId: v1DashboardAppDeployments
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppDeploymentsFilterSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppDeploymentsSummary"
          description: An array of application deployment summary items
      summary: "Retrieves a list of application deployments filter summary Supported\
        \ filter fields - [\"appDeploymentName\", \"clusterUid\", \"tags\"] Supported\
        \ sort fields - [\"appDeploymentName\", \"creationTimestamp\", \"lastModifiedTimestamp\"\
        ]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/appProfiles:
    post:
      operationId: v1DashboardAppProfiles
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AppProfilesFilterSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppProfilesSummary"
          description: An array of application profiles summary items
      summary: "Retrieves a list of application profiles filter summary Supported\
        \ filter fields - [\"profileName\", \"tags\"] Supported sort fields - [\"\
        profileName\", \"creationTimestamp\", \"lastModifiedTimestamp\"]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/appProfiles/metadata:
    get:
      operationId: v1DashboardAppProfilesMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AppProfilesMetadata"
          description: An array of application profile summary items
      summary: Retrieves a list of application profile metadata
      tags:
      - dashboard
  /v1/dashboard/appliances/metadata:
    post:
      operationId: v1EdgeHostsMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostsMetadataFilter"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostsMetadataSummary"
          description: An array of edgenative pair summary items
      summary: Retrieves a list of edgehosts summary
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/cloudaccounts/metadata:
    get:
      operationId: v1DashboardCloudAccountsMetadata
      parameters:
      - in: query
        name: environment
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CloudAccountsMetadata"
          description: An array of cloud accounts summary items
      summary: Retrieves a list of cloud accounts metadata
      tags:
      - dashboard
  /v1/dashboard/clustergroups/{uid}/hostClusters:
    post:
      operationId: v1ClusterGroupUidHostClustersSummary
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersSummary"
          description: An array of cluster summary items
      summary: Retrieves a list of cluster summary for a given cluster group
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/clustergroups/{uid}/virtualClusters:
    post:
      operationId: v1ClusterGroupUidVirtualClustersSummary
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersSummary"
          description: An array of cluster summary items
      summary: Retrieves a list of cluster summary for a given cluster group
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/clusterprofiles:
    post:
      operationId: v1ClusterProfilesFilterSummary
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterProfilesFilterSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfilesSummary"
          description: An array of cluster profiles summary items
      summary: "Retrieves a list of cluster profiles filter summary Supported filter\
        \ fields - [\"profileName\", \"tags\", \"profileType\", \"environment\"] Supported\
        \ sort fields - [\"profileName\", \"environment\", \"profileType\", \"creationTimestamp\"\
        , \"lastModifiedTimestamp\"]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/clusterprofiles/metadata:
    get:
      operationId: v1ClusterProfilesMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfilesMetadata"
          description: An array of cluster summary items
      summary: Retrieves a list of cluster profiles metadata
      tags:
      - dashboard
  /v1/dashboard/clusterprofiles/{uid}:
    get:
      operationId: v1ClusterProfilesUidSummary
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfileSummary"
          description: Cluster profile summary response
      summary: Retrieves a specified cluster profile summary
      tags:
      - dashboard
  /v1/dashboard/edgehosts/search:
    post:
      operationId: v1DashboardEdgehostsSearch
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostsSearchSummary"
          description: An array of edgenative pair summary items
      summary: Retrieves a list of Edgehosts summary with provided search filter.
        Supported fields as per schema /v1/dashboard/edgehosts/search/schema
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/edgehosts/search/schema:
    get:
      operationId: v1DashboardEdgehostsSearchSchemaGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SearchFilterSchemaSpec"
          description: An array of schema items
      summary: Retrieves a schema for the Edgehost search filter
      tags:
      - dashboard
  /v1/dashboard/pcgs/search:
    post:
      operationId: v1DashboardPcgsSearchSummary
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PcgsSummary"
          description: An array of cluster summary items
      summary: Retrieves a list of PCG summary with provided search filter. Supported
        fields as per schema /v1/dashboard/pcgs/search/schema
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/pcgs/search/schema:
    get:
      operationId: v1DashboardPcgSearchSchemaGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SearchFilterSchemaSpec"
          description: An array of schema items
      summary: Retrieves a schema for the PCG search filter
      tags:
      - dashboard
  /v1/dashboard/projects:
    post:
      operationId: v1ProjectsFilterSummary
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectsFilterSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectsSummary"
          description: An array of project filter summary items
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/projects/metadata:
    get:
      operationId: v1ProjectsMetadata
      parameters:
      - description: Name of the project
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectsMetadata"
          description: An array of project metadata items
      summary: Retrieves a list of projects metadata
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/cost:
    post:
      operationId: v1DashboardSpectroClustersCostSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterCloudCostSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourcesCloudCostSummary"
          description: An array of resources cloud cost summary items
      summary: Retrieves spectro clusters cloud cost summary information
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/filters/workspace:
    get:
      operationId: v1SpectroClustersFiltersWorkspace
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersSummary"
          description: An array of cluster summary items
      summary: "Retrieves a list of running, non rbac configured clusters in a workspace"
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/meta:
    get:
      description: Returns metadata information for all clusters
      operationId: v1SpectroClustersMetaGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersMeta"
          description: An array of cluster metadata items
      summary: Get all clusters metadata
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/metadata:
    get:
      operationId: v1SpectroClustersMetadataGet
      parameters:
      - in: query
        name: quickFilter
        schema:
          enum:
          - hostclusters
          - strictHostclusters
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersMetadata"
          description: An array of cluster summary items
      summary: Retrieves a list of cluster summary metadata
      tags:
      - dashboard
    post:
      operationId: v1SpectroClustersMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterMetadataSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersMetadata"
          description: An array of cluster summary items
      summary: Retrieves a list of cluster summary
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/metadata/search:
    post:
      operationId: v1SpectroClustersMetadataSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersMetadataSearch"
          description: An array of cluster summary meta items
      summary: "Retrieves a list of cluster metadata with provided search filter spec\
        \ Supported sort fields - [\"environment\", \"clusterName\", \"clusterState\"\
        , \"creationTimestamp\", \"lastModifiedTimestamp\"]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/metadata/search/schema:
    get:
      operationId: v1SpectroClustersMetadataSearchSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SearchFilterSchemaSpec"
          description: An array of cluster meta schema items
      summary: Retrieves a schema for the cluster metadata search filter
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/repaveStatus:
    get:
      operationId: v1DashboardSpectroClustersRepaveList
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      - in: query
        name: repaveState
        schema:
          default: Pending
          enum:
          - Pending
          - Approved
          - Reverted
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersSummary"
          description: An array of cluster summary items
      summary: Retrieves a list of clusters with the desired repave state
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/resources/consumption:
    post:
      operationId: v1SpectroClustersResourcesConsumption
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceConsumptionSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourcesConsumption"
          description: An array of resource consumption data items
      summary: Retrieves spectro clusters resource consumption
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/resources/cost:
    post:
      operationId: v1SpectroClustersResourcesCostSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceCostSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourcesCostSummary"
          description: An array of resources cost summary items
      summary: Retrieves spectro clusters resources cost summary information
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/resources/usage:
    post:
      operationId: v1SpectroClustersResourcesUsageSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceUsageSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourcesUsageSummary"
          description: An array of resources usage summary items
      summary: Retrieves spectro clusters resources usage summary information
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/search:
    post:
      operationId: v1SpectroClustersSearchFilterSummary
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          format: int64
          maximum: 50
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClustersSummary"
          description: An array of cluster summary items
      summary: "Retrieves a list of cluster summary with provided search filter spec\
        \ Supported sort fields - [\"environment\", \"clusterName\", \"memoryUsage\"\
        , \"healthState\", \"creationTimestamp\", \"lastModifiedTimestamp\"]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/search/export:
    get:
      operationId: v1DashboardClustersSearchSummaryExportGet
      parameters:
      - in: query
        name: encodedFilter
        schema:
          type: string
      - in: query
        name: format
        schema:
          default: csv
          enum:
          - csv
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Export and download the list of cluster summary with matching search
        filter and download as a file(csv)
      tags:
      - dashboard
    post:
      operationId: v1DashboardClustersSearchSummaryExport
      parameters:
      - in: query
        name: format
        schema:
          default: csv
          enum:
          - csv
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SearchFilterSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: "Export the list of cluster summary with matching search filter and\
        \ download as a file(csv) Supported sort fields - [\"environment\", \"clusterName\"\
        , \"healthState\", \"creationTimestamp\", \"lastModifiedTimestamp\"]"
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/search/input:
    get:
      operationId: v1DashboardSpectroClustersSearchInput
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterSearchInputSpec"
          description: An array of cluster search filter input items
      summary: Retrieves a supported input values for the cluster search filter
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/search/schema:
    get:
      operationId: v1SpectroClustersSearchSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SearchFilterSchemaSpec"
          description: An array of cluster filter schema items
      summary: Retrieves a schema for the cluster search filter
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/vms:
    get:
      operationId: V1DashboardVMEnabledClustersList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VMClusters"
          description: An array of schema items
      summary: Retrieves a list of Virtual machine enabled clusters
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/{uid}:
    get:
      operationId: v1SpectroClustersSummaryUid
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterUidSummary"
          description: An spectro cluster summary
      summary: Returns the specified cluster summary
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/{uid}/cost:
    get:
      operationId: v1SpectroClustersUidCostSummary
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: startTime
        schema:
          format: date-time
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: endTime
        schema:
          format: date-time
          type: string
      - description: "period in minutes, group the data point by the specified period"
        in: query
        name: period
        schema:
          format: int32
          minimum: 60
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterCostSummary"
          description: An spectro cluster cost summary
      summary: Retrieves the specified cluster cost summary
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/{uid}/overview:
    get:
      operationId: v1SpectroClustersSummaryUidOverview
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterUidSummary"
          description: An spectro cluster summary overview
      summary: Returns the specified cluster summary overview
      tags:
      - dashboard
  /v1/dashboard/spectroclusters/{uid}/resources/consumption:
    post:
      operationId: v1SpectroClustersUidResourcesConsumption
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceConsumptionSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourcesConsumption"
          description: An array of resource consumption data items
      summary: Retrieves specified spectro cluster resource consumption
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloads
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkload"
          description: An array of cluster workloads
      summary: Retrieves specified cluster workloads
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/clusterrolebinding:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsClusterRoleBinding
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadRoleBindings"
          description: An array of cluster workload clusterrolebindings
      summary: Retrieves specified cluster workload clusterrolebindings
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/cronjob:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsCronJob
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadCronJobs"
          description: An array of cluster workload cronjobs
      summary: Retrieves specified cluster workload cronjobs
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/daemonset:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsDaemonSet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadDaemonSets"
          description: An array of cluster workload daemonsets
      summary: Retrieves specified cluster workload daemonsets
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/deployment:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsDeployment
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadDeployments"
          description: An array of cluster workload deployments
      summary: Retrieves specified cluster workload deployments
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/job:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsJob
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadJobs"
          description: An array of cluster workload jobs
      summary: Retrieves specified cluster workload jobs
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/namespace:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsNamespace
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadNamespaces"
          description: An array of cluster workload namespaces
      summary: Retrieves specified cluster workload namespaces
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/pod:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsPod
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadPods"
          description: An array of cluster workload pods
      summary: Retrieves specified cluster workload pods
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/rolebinding:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsRoleBinding
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadRoleBindings"
          description: An array of cluster workload rolebindings
      summary: Retrieves specified cluster workload rolebindings
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/spectroclusters/{uid}/workloads/statefulset:
    post:
      operationId: v1DashboardSpectroClustersUidWorkloadsStatefulSet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterWorkloadStatefulSets"
          description: An array of cluster workload statefulsets
      summary: Retrieves specified cluster workload statefulsets
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces:
    get:
      operationId: v1DashboardWorkspacesList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DashboardWorkspaces"
          description: An array of workspace
      summary: Retrieves a list of workspace
      tags:
      - dashboard
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/clusterrolebinding:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsClusterRoleBinding
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadRoleBindings"
          description: An array of clusters workload clusterrolebindings
      summary: Retrieves specified workspace clusters workload clusterrolebindings
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/cronjob:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsCronJob
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadCronJobs"
          description: An array of clusters workload cronjobs
      summary: Retrieves specified workspace clusters workload cronjobs
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/daemonset:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsDaemonSet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadDaemonSets"
          description: An array of clusters workload daemonsets
      summary: Retrieves specified workspace clusters workload daemonsets
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/deployment:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsDeployment
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadDeployments"
          description: An array of clusters workload deployments
      summary: Retrieves specified workspace clusters workload deployments
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/job:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsJob
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadJobs"
          description: An array of clusters workload jobs
      summary: Retrieves specified workspace clusters workload jobs
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/namespace:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsNamespace
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadNamespaces"
          description: An array of clusters workload namespaces
      summary: Retrieves specified workspace clusters workload namespaces
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/pod:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsPod
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadPods"
          description: An array of clusters workload pods
      summary: Retrieves specified workspace clusters workload pods
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/rolebinding:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsRoleBinding
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadRoleBindings"
          description: An array of clusters workload rolebindings
      summary: Retrieves specified workspace clusters workload rolebindings
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/dashboard/workspaces/{uid}/spectroclusters/workloads/statefulset:
    post:
      operationId: v1DashboardWorkspacesUidSpectroClustersWorkloadsStatefulSet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceWorkloadsSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceClustersWorkloadStatefulSets"
          description: An array of clusters workload statefulsets
      summary: Retrieves specified workspace clusters workload statefulsets
      tags:
      - dashboard
      x-codegen-request-body-name: body
  /v1/datasinks/cloudwatch:
    post:
      description: Sync data to cloud watch
      operationId: V1DataSinksCloudWatchSink
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1.DataSinkCloudWatchConfig"
        description: Request payload for cloud watch config
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: sync data to cloud watch
      tags:
      - datasinks
      x-codegen-request-body-name: dataSinkCloudWatchConfig
  /v1/edgehosts:
    post:
      operationId: v1EdgeHostDevicesCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDeviceEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create the edge host device
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/metadata:
    get:
      operationId: v1EdgeHostsMetadataQuickFilterGet
      parameters:
      - in: query
        name: type
        schema:
          enum:
          - edge-native
          - vsphere
          type: string
      - in: query
        name: quickFilter
        schema:
          enum:
          - unusedEdgeHosts
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostsMeta"
          description: An array of edge host metadata
      summary: Retrieves a list of edge hosts metadata matching the filter condition
      tags:
      - edgehosts
  /v1/edgehosts/register:
    post:
      operationId: v1EdgeHostDevicesRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDevice"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostDevice"
          description: OK
      summary: Registers the edge host device
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/tags:
    get:
      operationId: v1EdgeHostsTagsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostsTags"
          description: An array of edge hosts tags
      summary: Retrieves a list of edge hosts tags
      tags:
      - edgehosts
  /v1/edgehosts/tokens:
    get:
      operationId: v1EdgeTokensList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeTokens"
          description: An array of edge tokens
      summary: Retrieves a list of edge tokens
      tags:
      - edgehosts
    post:
      operationId: v1EdgeTokensCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeTokenEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create the edge token
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/tokens/{uid}:
    delete:
      operationId: v1EdgeTokensUidDelete
      parameters:
      - description: Edge token uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified edge token
      tags:
      - edgehosts
    get:
      operationId: v1EdgeTokensUidGet
      parameters:
      - description: Edge token uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeToken"
          description: OK
      summary: Returns the specified edge token
      tags:
      - edgehosts
    put:
      operationId: v1EdgeTokensUidUpdate
      parameters:
      - description: Edge token uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeTokenUpdate"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge token
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/tokens/{uid}/state:
    put:
      operationId: v1EdgeTokensUidState
      parameters:
      - description: Edge token uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeTokenActiveState"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Revoke or re-activate the edge token access
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}:
    delete:
      operationId: v1EdgeHostDevicesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified edge host device
      tags:
      - edgehosts
    get:
      operationId: v1EdgeHostDevicesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - description: resolve pack values if set to true
        in: query
        name: resolvePackValues
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostDevice"
          description: OK
      summary: Returns the specified edge host device
      tags:
      - edgehosts
    put:
      operationId: v1EdgeHostDevicesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDevice"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge host device
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/cluster/associate:
    delete:
      operationId: v1EdgeHostDevicesUidClusterDeassociate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deassociate the clusters to the edge host
      tags:
      - edgehosts
    patch:
      operationId: v1EdgeHostDevicesUidClusterAssociate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostClusterEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Associate the clusters to the edge host
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/config:
    get:
      operationId: v1EdgeHostDevicesUidConfigGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostConfig"
          description: OK
      summary: Get the specified edge host device configuration
      tags:
      - edgehosts
  /v1/edgehosts/{uid}/health:
    patch:
      operationId: v1EdgeHostDevicesHealthUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostHealth"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the edge host health
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/hostCheckSum:
    patch:
      operationId: v1EdgeHostDeviceHostCheckSumUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDeviceHostCheckSum"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the specified edge host device host check sum
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/hostPairingKey:
    patch:
      operationId: v1EdgeHostDeviceHostPairingKeyUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDeviceHostPairingKey"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the specified edge host device host pairing key
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/meta:
    put:
      operationId: v1EdgeHostDevicesUidMetaUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostDeviceMetaUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge host device meta
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/pack/manifests/{manifestUid}:
    get:
      operationId: v1EdgeHostDevicesUidPackManifestsUidGet
      parameters:
      - description: edge host uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: manifest uid which is part of the pack ref
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      - description: resolve pack manifest values if set to true
        in: query
        name: resolveManifestValues
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Manifest"
          description: Pack manifest content
      summary: Returns the specified edge host's manifest
      tags:
      - edgehosts
  /v1/edgehosts/{uid}/packs/status:
    patch:
      operationId: v1EdgeHostDevicesUidPacksStatusPatch
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterPacksStatusEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patch update specified edge host's packs status
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/profiles:
    get:
      operationId: v1EdgeHostDevicesUidProfilesGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "includes pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfileList"
          description: OK
      summary: Returns the associated profiles of a specified edge host device
      tags:
      - edgehosts
    put:
      operationId: v1EdgeHostDevicesUidProfilesUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfiles"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Associate cluster profiles to the specified edge host device
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/reset:
    put:
      operationId: V1EdgeHostsUidReset
      parameters:
      - description: Edge host uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Reset the cluster through edge host
      tags:
      - edgehosts
  /v1/edgehosts/{uid}/spc/download:
    get:
      operationId: v1EdgeHostDevicesUidSpcDownload
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download spc archive file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Download the specified edge host device spc
      tags:
      - edgehosts
  /v1/edgehosts/{uid}/tunnelConfig:
    patch:
      operationId: v1EdgeHostDevicesUidTunnelConfigUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroTunnelConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge host device tunnel configuration
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/tunnelStatus:
    patch:
      operationId: v1EdgeHostDevicesUidTunnelStatusUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroTunnelStatus"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the edge host tunnel status
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/edgehosts/{uid}/vsphere/properties:
    put:
      operationId: v1EdgeHostDevicesUidVspherePropertiesUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EdgeHostVsphereCloudProperties"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified edge host device vsphere properties
      tags:
      - edgehosts
      x-codegen-request-body-name: body
  /v1/events/components:
    get:
      description: Returns a paginated list of component events based on request parameters
      operationId: v1EventsComponentsList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Events"
          description: An array of component events items
      summary: Returns a paginated list of component events based on request parameters
      tags:
      - events
    post:
      description: Creates a component event
      operationId: v1EventsComponentsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Event"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a component event
      tags:
      - events
      x-codegen-request-body-name: body
  /v1/events/components/bulk:
    post:
      description: Creates the component events in bulk
      operationId: v1EventsComponentsCreateBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1BulkEvents"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uids"
          description: Created successfully
      summary: Creates the component events in bulk
      tags:
      - events
      x-codegen-request-body-name: body
  /v1/events/components/{objectKind}/{objectUid}:
    delete:
      operationId: v1EventsComponentsObjTypeUidDelete
      parameters:
      - description: Describes the related object uid for which events has to be fetched
        in: path
        name: objectKind
        required: true
        schema:
          enum:
          - spectrocluster
          - edgehost
          type: string
      - description: Describes the related object kind for which events has to be
          fetched
        in: path
        name: objectUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete all the components events for the specified related object
      tags:
      - events
    get:
      description: Returns a list of components events for the specified related object
      operationId: v1EventsComponentsObjTypeUidList
      parameters:
      - description: Describes the related object uid for which events has to be fetched
        in: path
        name: objectKind
        required: true
        schema:
          enum:
          - spectrocluster
          - edgehost
          type: string
      - description: Describes the related object kind for which events has to be
          fetched
        in: path
        name: objectUid
        required: true
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Events"
          description: An array of component event items
      summary: Returns a list of components events for the specified related object
      tags:
      - events
  /v1/features:
    get:
      operationId: v1FeaturesList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Features"
          description: OK
      summary: Retrieves the list of features
      tags:
      - features
  /v1/features/{uid}:
    put:
      operationId: v1FeaturesUpdate
      parameters:
      - description: Specify the feature uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1FeatureUpdate"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update a feature
      tags:
      - features
      x-codegen-request-body-name: body
  /v1/filters:
    get:
      operationId: v1FiltersList
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1FiltersSummary"
          description: An array of filters
      summary: Returns a list of Filters
      tags:
      - filters
  /v1/filters/metadata:
    get:
      operationId: v1FiltersMetadata
      parameters:
      - description: "filterType can be - [tag, meta, resource]"
        in: query
        name: filterType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1FiltersMetadata"
          description: An array of filters
      summary: Returns a list of Filters metadata
      tags:
      - filters
  /v1/filters/tag:
    post:
      operationId: v1TagFiltersCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TagFilter"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a Tag filter
      tags:
      - filters
      x-codegen-request-body-name: body
  /v1/filters/tag/{uid}:
    delete:
      operationId: v1TagFilterUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the specified Filter object
      tags:
      - filters
    get:
      operationId: v1TagFilterUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TagFilterSummary"
          description: A Filter object
      summary: Returns the specified Filter object
      tags:
      - filters
    put:
      operationId: v1TagFilterUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TagFilter"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates a Tag filter
      tags:
      - filters
      x-codegen-request-body-name: body
  /v1/metrics/{resourceKind}/values:
    get:
      description: Returns all the metrics for a given resource kind
      operationId: v1MetricsList
      parameters:
      - in: path
        name: resourceKind
        required: true
        schema:
          enum:
          - pod
          - namespace
          - spectrocluster
          - machine
          - project
          type: string
      - in: query
        name: metricKind
        schema:
          default: all
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: startTime
        schema:
          format: date-time
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: endTime
        schema:
          format: date-time
          type: string
      - in: query
        name: period
        schema:
          default: 1
          format: int32
          type: integer
      - description: "Deprecated. includeMasterMachines in boolean, group the data\
          \ point by including control plane nodes if set to true"
        in: query
        name: includeMasterMachines
        schema:
          default: false
          type: boolean
      - description: "includeControlPlaneMachines in boolean, group the data point\
          \ by including control plane nodes if set to true"
        in: query
        name: includeControlPlaneMachines
        schema:
          default: false
          type: boolean
      - description: "if true then api returns only aggregation values, else api returns\
          \ all data points by default"
        in: query
        name: discrete
        schema:
          default: false
          type: boolean
      - in: query
        name: spectroClusterUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MetricTimeSeriesList"
          description: An array of metric items
      summary: Retrieves the list of metrics for a specified resource kind
      tags:
      - metrics
  /v1/metrics/{resourceKind}/{resourceUid}/values:
    delete:
      operationId: v1MetricsUidDelete
      parameters:
      - in: path
        name: resourceKind
        required: true
        schema:
          enum:
          - pod
          - namespace
          - spectrocluster
          - machine
          - project
          type: string
      - in: path
        name: resourceUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the metrics of the specified resource
      tags:
      - metrics
    get:
      operationId: v1MetricsUidList
      parameters:
      - in: path
        name: resourceKind
        required: true
        schema:
          enum:
          - pod
          - namespace
          - spectrocluster
          - machine
          - project
          type: string
      - in: path
        name: resourceUid
        required: true
        schema:
          type: string
      - description: multiple metric kinds can be provided with comma separated
        in: query
        name: metricKind
        schema:
          default: all
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: startTime
        schema:
          format: date-time
          type: string
      - description: Time is a wrapper around time.Time which supports correct marshaling
          to YAML and JSON.  Wrappers are provided for many of the factory methods
          that the time package offers.
        in: query
        name: endTime
        schema:
          format: date-time
          type: string
      - description: "period in minutes, group the data point by the specified period"
        in: query
        name: period
        schema:
          default: 1
          format: int32
          type: integer
      - description: "Deprecated. includeMasterMachines in boolean, group the data\
          \ point by including control plane nodes if set to true"
        in: query
        name: includeMasterMachines
        schema:
          default: false
          type: boolean
      - description: "includeControlPlaneMachines in boolean, group the data point\
          \ by including control plane nodes if set to true"
        in: query
        name: includeControlPlaneMachines
        schema:
          default: false
          type: boolean
      - description: "if true then api returns only aggregation values, else api returns\
          \ all data points by default"
        in: query
        name: discrete
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MetricTimeSeries"
          description: An array of metric items
      summary: Returns the metrics for a specified resource uid
      tags:
      - metrics
  /v1/notifications/:
    get:
      description: Returns a paginated list of notifications based on request parameters
      operationId: v1NotificationsList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Notifications"
          description: An array of notification items
      summary: Returns a paginated list of notifications based on request parameters
      tags:
      - notifications
  /v1/notifications/events:
    post:
      description: Creates a notification event
      operationId: v1NotificationsEventCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1NotificationEvent"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a notification event
      tags:
      - notifications
      x-codegen-request-body-name: body
  /v1/notifications/{objectKind}/{objectUid}:
    get:
      description: Returns a list of notifications for the specified related object
      operationId: v1NotificationsObjTypeUidList
      parameters:
      - description: Describes the related object kind for which notifications have
          to be fetched
        in: path
        name: objectKind
        required: true
        schema:
          enum:
          - spectrocluster
          - clusterprofile
          - appdeployment
          type: string
      - description: Describes the related object uid for which notifications have
          to be fetched
        in: path
        name: objectUid
        required: true
        schema:
          type: string
      - description: Describes a way to fetch "done" notifications
        in: query
        name: isDone
        schema:
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Notifications"
          description: An array of component event items
      summary: Returns a list of notifications for the specified related object
      tags:
      - notifications
  /v1/notifications/{uid}/ack:
    patch:
      description: Updates the specified notification for the acknowledgment
      operationId: v1NotificationsUidAck
      parameters:
      - description: Describes acknowledging notification uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified notification for the acknowledgment
      tags:
      - notifications
  /v1/notifications/{uid}/done:
    patch:
      description: Updates the specified notification action as done
      operationId: v1NotificationsUidDone
      parameters:
      - description: Describes notification uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified notification action as done
      tags:
      - notifications
  /v1/overlords:
    get:
      operationId: v1OverlordsList
      parameters:
      - in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Overlords"
          description: (empty)
      summary: Retrieves a list of overlords owned by the tenant
      tags:
      - overlords
  /v1/overlords/maas/manifest:
    get:
      operationId: V1OverlordsMaasManifest
      parameters:
      - in: query
        name: pairingCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OverlordManifest"
          description: (empty)
      summary: Returns the manifests required for the private gateway installation
      tags:
      - overlords
  /v1/overlords/maas/{uid}/account:
    post:
      operationId: v1OverlordsUidMaasAccountCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordMaasAccountCreate"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the maas cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: v1OverlordsUidMaasAccountUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordMaasAccountEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the maas cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/maas/{uid}/account/validate:
    post:
      operationId: v1OverlordsUidMaasAccountValidate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordsUidMaasAccountValidate_request"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: validate the maas cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/maas/{uid}/cloudconfig:
    post:
      operationId: V1OverlordsUidMaasCloudConfigCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordMaasCloudConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the maas cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: V1OverlordsUidMaasCloudConfigUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordMaasCloudConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the maas cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/maas/{uid}/clusterprofile:
    get:
      operationId: v1OverlordsUidMaasClusterProfile
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfile"
          description: OK
      summary: Returns the specified maas private gateway cluster profile
      tags:
      - overlords
  /v1/overlords/migrate:
    post:
      operationId: V1OverlordsMigrate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordMigrateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: migrate all the clusters from source overlord to target overlord
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/openstack/manifest:
    get:
      operationId: v1OverlordsOpenStackManifest
      parameters:
      - in: query
        name: pairingCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OverlordManifest"
          description: (empty)
      summary: Returns the manifests required for the private gateway installation
      tags:
      - overlords
  /v1/overlords/openstack/{uid}/account:
    post:
      operationId: v1OverlordsUidOpenStackAccountCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordOpenStackAccountCreate"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the OpenStack cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: v1OverlordsUidOpenStackAccountUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordOpenStackAccountEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the OpenStack cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/openstack/{uid}/account/validate:
    post:
      operationId: v1OverlordsUidOpenStackAccountValidate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordsUidOpenStackAccountValidate_request"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: validate the OpenStack cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/openstack/{uid}/cloudconfig:
    post:
      operationId: v1OverlordsUidOpenStackCloudConfigCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordOpenStackCloudConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the OpenStack cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: v1OverlordsUidOpenStackCloudConfigUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordOpenStackCloudConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the OpenStack cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/openstack/{uid}/clusterprofile:
    get:
      operationId: v1OverlordsUidOpenStackClusterProfile
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfile"
          description: OK
      summary: Returns the specified OpenStack private gateway cluster profile
      tags:
      - overlords
  /v1/overlords/pairing/code:
    get:
      operationId: v1OverlordsPairingCode
      parameters:
      - in: query
        name: cloudType
        schema:
          enum:
          - vsphere
          - openstack
          - maas
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PairingCode"
          description: (empty)
      summary: Returns the pairing code for the private gateway
      tags:
      - overlords
  /v1/overlords/vsphere/manifest:
    get:
      operationId: v1OverlordsVsphereManifest
      parameters:
      - in: query
        name: pairingCode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OverlordManifest"
          description: (empty)
      summary: Returns the manifests required for the private gateway installation
      tags:
      - overlords
  /v1/overlords/vsphere/ova:
    get:
      operationId: v1OverlordsVsphereOvaGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OverloadVsphereOva"
          description: (empty)
      summary: Returns overlord's ova information
      tags:
      - overlords
  /v1/overlords/vsphere/{uid}/account:
    post:
      operationId: v1OverlordsUidVsphereAccountCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordVsphereAccountCreate"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the vSphere cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: v1OverlordsUidVsphereAccountUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordVsphereAccountEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the vSphere cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/vsphere/{uid}/account/validate:
    post:
      operationId: v1OverlordsUidVsphereAccountValidate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordsUidVsphereAccountValidate_request"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: validate the vSphere cloudaccount for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/vsphere/{uid}/cloudconfig:
    post:
      operationId: v1OverlordsUidVsphereCloudConfigCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordVsphereCloudConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the vSphere cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
    put:
      operationId: v1OverlordsUidVsphereCloudConfigUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OverlordVsphereCloudConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the vSphere cloud config for the private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/vsphere/{uid}/clusterprofile:
    get:
      operationId: v1OverlordsUidVsphereClusterProfile
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterProfile"
          description: OK
      summary: Returns the specified vsphere private gateway cluster profile
      tags:
      - overlords
  /v1/overlords/vsphere/{uid}/pools:
    get:
      operationId: v1OverlordsUidPoolsList
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1IpPools"
          description: (empty)
      summary: Retrieves a list of IP Pools for the specified private gateway
      tags:
      - overlords
    post:
      operationId: v1OverlordsUidPoolCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1IpPoolInputEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an IP pool defintion for the sepcified private gateway
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/vsphere/{uid}/pools/{poolUid}:
    delete:
      operationId: v1OverlordsUidPoolDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: poolUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the private gateways's specified IP Pool data
      tags:
      - overlords
    put:
      operationId: v1OverlordsUidPoolUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: poolUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1IpPoolInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the private gateways's specified IP Pool data
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/vsphere/{uid}/properties/computecluster/resources:
    get:
      operationId: v1OverlordsUidVsphereComputeclusterRes
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: datacenter
        required: true
        schema:
          type: string
      - in: query
        name: computecluster
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereComputeClusterResources"
          description: (empty)
      summary: Retrieves the vSphere computecluster resources for the specified private
        gateway's account
      tags:
      - overlords
  /v1/overlords/vsphere/{uid}/properties/datacenters:
    get:
      operationId: v1OverlordsUidVsphereDatacenters
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDatacenters"
          description: (empty)
      summary: Retrieves the vSphere datacenters & datacluster for the specified private
        gateway's account
      tags:
      - overlords
  /v1/overlords/{uid}:
    delete:
      operationId: v1OverlordsUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeletedMsg"
          description: (empty)
      summary: delete the private gateway
      tags:
      - overlords
    get:
      operationId: v1OverlordsUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Overlord"
          description: (empty)
      summary: Returns the specified private gateway's for the given uid
      tags:
      - overlords
  /v1/overlords/{uid}/metadata:
    put:
      operationId: v1OverlordsUidMetadataUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ObjectMetaInputEntitySchema"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update the private gateway's metadata
      tags:
      - overlords
      x-codegen-request-body-name: body
  /v1/overlords/{uid}/reset:
    put:
      operationId: v1OverlordsUidReset
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UpdatedMsg"
          description: (empty)
      summary: reset the private gateway by disaaociating the private gateway's resources
      tags:
      - overlords
  /v1/packs:
    get:
      operationId: v1PacksSummaryList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackSummaries"
          description: An array of pack summary items
      summary: Retrieves a list of packs
      tags:
      - packs
  /v1/packs/search:
    post:
      operationId: v1PacksSearch
      parameters:
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PacksFilterSpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackMetadataList"
          description: An array of pack summary items
      summary: Retrieves a list of packs based on filter
      tags:
      - packs
      x-codegen-request-body-name: body
  /v1/packs/{packName}/registries/{registryUid}:
    get:
      operationId: v1PacksNameRegistryUidList
      parameters:
      - description: Pack registry uid
        in: path
        name: registryUid
        required: true
        schema:
          type: string
      - description: Pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      - description: Pack cloud type
        in: query
        name: cloudType
        schema:
          default: all
          type: string
      - description: Pack layer
        in: query
        name: layer
        schema:
          type: string
      - description: "Comma seperated pack states. Example values are \"deprecated\"\
          \ \"deprecated,disabled\". If states is not specified or empty then by default\
          \ API will return all packs except \"disabled\" packs"
        in: query
        name: states
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackTagEntity"
          description: (empty)
      summary: Retrieves a list of packs
      tags:
      - packs
  /v1/packs/{packUid}/logo:
    get:
      operationId: v1PacksPackUidLogo
      parameters:
      - description: Pack uid
        in: path
        name: packUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            image/png:
              schema:
                format: binary
                type: string
            image/gif:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Cache-Control:
              description: Cache control directive for the response
              schema:
                type: string
            Expires:
              schema:
                type: string
      summary: Returns the logo for a specified pack
      tags:
      - packs
  /v1/packs/{uid}:
    get:
      operationId: v1PacksUid
      parameters:
      - description: Pack uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackTagEntity"
          description: A pack for the specified uid
      summary: Returns the specified pack
      tags:
      - packs
  /v1/packs/{uid}/readme:
    get:
      operationId: v1PacksUidReadme
      parameters:
      - description: Pack uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackReadme"
          description: Readme describes the documentation of the specified pack
      summary: Returns the readme of a specified pack
      tags:
      - packs
  /v1/pcg/selfHosted:
    post:
      operationId: v1PcgSelfHosted
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PcgSelfHostedParams"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PcgServiceKubectlCommands"
          description: (empty)
      summary: Returns the private gateway manifest link
      tags:
      - pcg
      x-codegen-request-body-name: body
  /v1/pcg/{uid}/register:
    post:
      operationId: v1PcgUidRegister
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PairingCode"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Registers the pcg
      tags:
      - pcg
      x-codegen-request-body-name: pairingCode
  /v1/pcg/{uid}/services/ally/manifest:
    get:
      operationId: v1PcgUidAllyManifestGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the pcg ally manifest
      tags:
      - pcg
  /v1/pcg/{uid}/services/jet/manifest:
    get:
      operationId: v1PcgUidJetManifestGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the pcg jet manifest
      tags:
      - pcg
  /v1/permissions:
    get:
      operationId: v1PermissionsList
      parameters:
      - in: query
        name: scope
        schema:
          enum:
          - system
          - tenant
          - project
          - resource
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Permissions"
          description: An array of permissions
      summary: Retrieves a list of permissions
      tags:
      - permissions
  /v1/projects:
    post:
      operationId: v1ProjectsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/alerts:
    get:
      operationId: v1ProjectsAlerts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectAlertComponents"
          description: An array of alert components
      summary: Retrieves a list of supported alerts for a project
      tags:
      - projects
  /v1/projects/{uid}:
    delete:
      operationId: v1ProjectsUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: cleanupProjectResources
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectCleanup"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
    get:
      operationId: v1ProjectsUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Project"
          description: OK
      summary: Returns the specified project
      tags:
      - projects
    put:
      operationId: v1ProjectsUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/alerts/{component}:
    delete:
      operationId: v1ProjectsUidAlertDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified alert to the specified project
      tags:
      - projects
    post:
      operationId: v1ProjectsUidAlertCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Channel"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create the specified alert to the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
    put:
      operationId: v1ProjectsUidAlertUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AlertEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Upsert the specified alert to the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/alerts/{component}/{alertUid}:
    delete:
      operationId: v1ProjectsUidAlertsUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      - in: path
        name: alertUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified alert of the specified project
      tags:
      - projects
    get:
      operationId: v1ProjectsUidAlertsUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      - in: path
        name: alertUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Channel"
          description: OK
      summary: Get the specified alert of the specified project
      tags:
      - projects
    put:
      operationId: v1ProjectsUidAlertsUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: component
        required: true
        schema:
          type: string
      - in: path
        name: alertUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Channel"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the specified alert of the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/macros:
    delete:
      operationId: v1ProjectsUidMacrosDeleteByMacroName
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Delete the macros for the specified project by macro name
      tags:
      - projects
      x-codegen-request-body-name: body
    get:
      operationId: v1ProjectsUidMacrosList
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Macros"
          description: OK
      summary: List the macros of the specified project
      tags:
      - projects
    patch:
      operationId: v1ProjectsUidMacrosUpdateByMacroName
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros for the specified project by macro name
      tags:
      - projects
      x-codegen-request-body-name: body
    post:
      operationId: v1ProjectsUidMacrosCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Create or add new macros for the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
    put:
      operationId: v1ProjectsUidMacrosUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros of the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/meta:
    put:
      operationId: v1ProjectsUidMetaUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ObjectMeta"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the metadata of the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/preferences/clusterSettings:
    get:
      operationId: v1ProjectClusterSettingsGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectClusterSettings"
          description: (empty)
      summary: Get project cluster settings
      tags:
      - projects
  /v1/projects/{uid}/preferences/clusterSettings/nodesAutoRemediationSetting:
    put:
      operationId: v1ProjectClustersNodesAutoRemediationSettingUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1NodesAutoRemediationSettings"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update project clusters nodes auto remediation setting
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/teams:
    put:
      operationId: v1ProjectsUidTeamsUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectTeamsEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the teams association to the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/users:
    put:
      operationId: v1ProjectsUidUsersUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectUsersEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the users association to the specified project
      tags:
      - projects
      x-codegen-request-body-name: body
  /v1/projects/{uid}/validate:
    delete:
      operationId: v1ProjectsUidValidate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectActiveResources"
          description: (empty)
      summary: Validate and returns active resource of project before delete
      tags:
      - projects
  /v1/registries/helm:
    get:
      operationId: v1RegistriesHelmList
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1HelmRegistries"
          description: An array of registry items
      summary: Retrieves a list of Helm registries
      tags:
      - registries
    post:
      operationId: v1RegistriesHelmCreate
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HelmRegistryEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a helm registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/helm/summary:
    get:
      operationId: v1RegistriesHelmSummaryList
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1HelmRegistriesSummary"
          description: An array of registry items
      summary: Retrieves a list of helm registries as summary
      tags:
      - registries
  /v1/registries/helm/validate:
    post:
      description: Returns no contents if helm registry is valid else error.
      operationId: V1RegistriesHelmValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HelmRegistrySpec"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if helm registry is valid
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/helm/{uid}:
    delete:
      operationId: v1RegistriesHelmUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified helm registry
      tags:
      - registries
    get:
      operationId: v1RegistriesHelmUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1HelmRegistry"
          description: OK
      summary: Returns the specified Helm registry
      tags:
      - registries
    put:
      operationId: v1RegistriesHelmUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HelmRegistry"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified helm registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/helm/{uid}/sync:
    post:
      description: Sync all the helm charts from the registry
      operationId: v1RegistriesHelmUidSync
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: forceSync
        schema:
          default: false
          type: boolean
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync Helm registry
      tags:
      - registries
  /v1/registries/helm/{uid}/sync/status:
    get:
      description: Get the sync status for the specified helm registry
      operationId: v1RegistriesHelmUidSyncStatus
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistrySyncStatus"
          description: Helm registry sync status
      summary: Get helm registry sync status
      tags:
      - registries
  /v1/registries/metadata:
    get:
      operationId: v1RegistriesMetadata
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistriesMetadata"
          description: An array of registry metadata items
      summary: Retrieves a list of registries metadata
      tags:
      - registries
  /v1/registries/oci/basic:
    post:
      operationId: v1BasicOciRegistriesCreate
      parameters:
      - in: query
        name: skipPackSync
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1BasicOciRegistry"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a basic oci registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/basic/validate:
    post:
      description: Returns no contents if oci registry is valid else error.
      operationId: v1BasicOciRegistriesValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1BasicOciRegistrySpec"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if oci registry is valid
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/ecr:
    post:
      operationId: v1EcrRegistriesCreate
      parameters:
      - in: query
        name: skipPackSync
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EcrRegistry"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a ecr registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/ecr/validate:
    post:
      description: Returns no contents if ecr registry is valid else error.
      operationId: v1EcrRegistriesValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EcrRegistrySpec"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if ecr registry is valid
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/image:
    get:
      operationId: v1OciImageRegistryGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OciImageRegistry"
          description: (empty)
      summary: Creates a image registry
      tags:
      - registries
  /v1/registries/oci/summary:
    get:
      operationId: v1OciRegistriesSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OciRegistries"
          description: An array of oci registry items
      summary: Retrieves a oci registries summary
      tags:
      - registries
  /v1/registries/oci/{uid}:
    get:
      operationId: v1OciRegistriesGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: clusterUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1OciRegistryEntity"
          description: OK
      summary: Returns the information of specified oci registry
      tags:
      - registries
  /v1/registries/oci/{uid}/basic:
    delete:
      operationId: v1BasicOciRegistriesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified basic oci registry
      tags:
      - registries
    get:
      operationId: v1BasicOciRegistriesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1BasicOciRegistry"
          description: OK
      summary: Returns the basic oci registry
      tags:
      - registries
    put:
      operationId: v1BasicOciRegistriesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1BasicOciRegistry"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified basic oci registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/{uid}/basic/sync:
    post:
      description: Sync all the content from the oci registry
      operationId: v1BasicOciRegistriesUidSync
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: forceSync
        schema:
          default: false
          type: boolean
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync oci registry
      tags:
      - registries
  /v1/registries/oci/{uid}/basic/sync/status:
    get:
      description: Get sync status for the oci specified registry
      operationId: v1BasicOciRegistriesUidSyncStatus
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistrySyncStatus"
          description: Oci registry sync status
      summary: Get oci registry sync status
      tags:
      - registries
  /v1/registries/oci/{uid}/ecr:
    delete:
      operationId: v1EcrRegistriesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified ecr registry
      tags:
      - registries
    get:
      operationId: v1EcrRegistriesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EcrRegistry"
          description: OK
      summary: Returns the specified ecr registry
      tags:
      - registries
    put:
      operationId: v1EcrRegistriesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EcrRegistry"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified ecr registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/oci/{uid}/ecr/sync:
    post:
      description: Sync all the content from the ecr registry
      operationId: v1EcrRegistriesUidSync
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: forceSync
        schema:
          default: false
          type: boolean
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync ecr registry
      tags:
      - registries
  /v1/registries/oci/{uid}/ecr/sync/status:
    get:
      description: Get sync status for the ecr specified registry
      operationId: v1EcrRegistriesUidSyncStatus
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistrySyncStatus"
          description: Ecr registry sync status
      summary: Get ecr registry sync status
      tags:
      - registries
  /v1/registries/pack:
    get:
      operationId: v1RegistriesPackList
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackRegistries"
          description: An array of registry items
      summary: Retrieves a list of Pack registries
      tags:
      - registries
    post:
      operationId: v1RegistriesPackCreate
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      - in: query
        name: skipPackSync
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackRegistry"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a pack registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/pack/summary:
    get:
      operationId: v1RegistriesPackSummaryList
      parameters:
      - in: query
        name: scope
        schema:
          default: all
          enum:
          - system
          - tenant
          - all
          type: string
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackRegistriesSummary"
          description: An array of registry items
      summary: Retrieves a list of pack registries as summary
      tags:
      - registries
  /v1/registries/pack/validate:
    post:
      description: Returns no contents if pack registry is valid else error.
      operationId: V1RegistriesPackValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackRegistrySpec"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Check if pack registry is valid
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/pack/{uid}:
    delete:
      operationId: v1RegistriesPackUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified pack registry
      tags:
      - registries
    get:
      operationId: v1RegistriesPackUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackRegistry"
          description: OK
      summary: Returns the specified Pack registry
      tags:
      - registries
    put:
      operationId: v1RegistriesPackUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PackRegistry"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified pack registry
      tags:
      - registries
      x-codegen-request-body-name: body
  /v1/registries/pack/{uid}/sync:
    post:
      description: Sync all the packs from the registry
      operationId: v1RegistriesPackUidSync
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: forceSync
        schema:
          default: false
          type: boolean
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync Pack registry
      tags:
      - registries
  /v1/registries/pack/{uid}/sync/status:
    get:
      description: Get sync status for the pack specified registry
      operationId: v1RegistriesPackUidSyncStatus
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistrySyncStatus"
          description: Pack registry sync status
      summary: Get pack registry sync status
      tags:
      - registries
  /v1/registries/{registryName}/config:
    get:
      operationId: v1RegistriesNameConfigGet
      parameters:
      - in: path
        name: registryName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RegistryConfigEntity"
          description: OK
      summary: Returns the specified system scope registry configuration
      tags:
      - registries
  /v1/registries/{uid}:
    delete:
      operationId: v1RegistriesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified registry
      tags:
      - registries
  /v1/roles:
    get:
      operationId: v1RolesList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Roles"
          description: OK
      summary: Retrieves a list of roles
      tags:
      - roles
    post:
      operationId: v1RolesCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Role"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a role with specified permissions
      tags:
      - roles
      x-codegen-request-body-name: body
  /v1/roles/{uid}:
    delete:
      operationId: v1RolesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified role
      tags:
      - roles
    get:
      operationId: v1RolesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Role"
          description: OK
      summary: Returns the specified role
      tags:
      - roles
    put:
      operationId: v1RolesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Role"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified role
      tags:
      - roles
      x-codegen-request-body-name: body
  /v1/roles/{uid}/clone:
    post:
      operationId: v1RolesClone
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1RoleClone"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Clone the role
      tags:
      - roles
      x-codegen-request-body-name: body
  /v1/services/{serviceName}/version:
    get:
      operationId: v1ServiceVersionGet
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        schema:
          enum:
          - ally
          - jet
          - palette
          - ambit
          - ally-lite
          - palette-lite
          - crony
          - tick
          - edge
          - lodge
          - level
          - edgeconfig
          - firth
          - stylus
          type: string
      - description: spectro cluster uid
        in: query
        name: clusterUid
        schema:
          type: string
      - description: edge host uid
        in: query
        name: edgeHostUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ServiceVersion"
          description: OK
      summary: Returns a latest version for a given service name
      tags:
      - services
  /v1/services/{serviceName}/versions/{version}/manifest:
    get:
      operationId: v1ServiceManifestGet
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        schema:
          enum:
          - ally
          - jet
          - palette
          - ambit
          - ally-lite
          - palette-lite
          - crony
          - tick
          - edge
          - lodge
          - level
          - edgeconfig
          - firth
          - stylus
          type: string
      - description: service version
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: action type
        in: query
        name: action
        required: true
        schema:
          enum:
          - apply
          - delete
          - resources
          type: string
      - description: resource file name
        in: query
        name: resourceFilename
        schema:
          type: string
      - description: spectro cluster uid
        in: query
        name: clusterUid
        schema:
          type: string
      - description: edge host uid
        in: query
        name: edgeHostUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ServiceManifest"
          description: OK
      summary: Returns a service manifest for a given service name and version
      tags:
      - services
  /v1/spectroclusters/aks:
    post:
      operationId: v1SpectroClustersAksCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an AKS cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aks/rate:
    post:
      operationId: v1SpectroClustersAksRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Aks Cluster estimated rate response
      summary: Get AKS cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aks/validate:
    post:
      operationId: v1SpectroClustersAksValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Aks Cluster validation response
      summary: Validates AKS cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aws:
    post:
      operationId: v1SpectroClustersAwsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAwsClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an AWS cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aws/import:
    post:
      operationId: v1SpectroClustersAwsImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports an AWS cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aws/rate:
    post:
      operationId: v1SpectroClustersAwsRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAwsClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Aws Cluster estimated rate response
      summary: Get AWS cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/aws/validate:
    post:
      operationId: v1SpectroClustersAwsValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAwsClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Aws Cluster validation response
      summary: Validates AWS cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/azure:
    post:
      operationId: v1SpectroClustersAzureCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an Azure cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/azure/import:
    post:
      operationId: v1SpectroClustersAzureImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports an Azure cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/azure/rate:
    post:
      operationId: v1SpectroClustersAzureRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Azure Cluster estimated rate response
      summary: Get Azure cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/azure/validate:
    post:
      operationId: v1SpectroClustersAzureValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroAzureClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Azure Cluster validation response
      summary: Validates Azure cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/cloudTypes/{cloudType}:
    post:
      operationId: v1SpectroClustersCustomCreate
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroCustomClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a Custom cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/cloudTypes/{cloudType}/validate:
    post:
      operationId: v1SpectroClustersCustomValidate
      parameters:
      - description: Cluster's cloud type
        in: path
        name: cloudType
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroCustomClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Custom Cluster validation response
      summary: Validates Custom cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/config/edgeInstaller:
    get:
      operationId: v1SpectroClustersConfigEdgeInstaller
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterEdgeInstallerConfig"
          description: (empty)
      summary: Cluster configuration for the edge installer
      tags:
      - spectroclusters
  /v1/spectroclusters/edge-native:
    post:
      operationId: v1SpectroClustersEdgeNativeCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEdgeNativeClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an EdgeNative cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/edge-native/import:
    post:
      operationId: v1SpectroClustersEdgeNativeImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEdgeNativeClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports an EdgeNative cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/edge-native/rate:
    post:
      operationId: v1SpectroClustersEdgeNativeRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEdgeNativeClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: EdgeNative Cluster estimated rate response
      summary: Get edge-native cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/edge-native/validate:
    post:
      operationId: v1SpectroClustersEdgeNativeValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEdgeNativeClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: EdgeNative Cluster validation response
      summary: Validates edge-native cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/eks:
    post:
      operationId: v1SpectroClustersEksCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEksClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an EKS cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/eks/rate:
    post:
      operationId: v1SpectroClustersEksRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEksClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Eks Cluster estimated rate response
      summary: Get EKS cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/eks/validate:
    post:
      operationId: v1SpectroClustersEksValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroEksClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Eks Cluster validation response
      summary: Validates EKS cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/features/backup/locations/{uid}:
    get:
      operationId: V1ClusterFeatureBackupLocationUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterRefs"
          description: OK
      summary: Returns the cluster object references based on locationUid
      tags:
      - spectroclusters
    put:
      operationId: V1ClusterFeatureBackupLocationUidChange
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterBackupLocationType"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Change cluster backup location
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/features/logFetcher/{uid}/download:
    get:
      operationId: v1ClusterFeatureLogFetcherLogDownload
      parameters:
      - description: Log fetcher uid for which log is requested
        in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: fileName
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Download log fetcher logs for cluster by log fetcher uid
      tags:
      - spectroclusters
  /v1/spectroclusters/features/logFetcher/{uid}/log:
    post:
      operationId: v1ClusterFeatureLogFetcherLogUpdate
      parameters:
      - description: Cluster uid for which log is requested
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Unique request Id
        in: query
        name: requestId
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/v1ClusterFeatureLogFetcherLogUpdate_request"
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update log fetcher logs by log fetcher uid
      tags:
      - spectroclusters
  /v1/spectroclusters/gcp:
    post:
      operationId: v1SpectroClustersGcpCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a GCP cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gcp/import:
    post:
      operationId: v1SpectroClustersGcpImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a GCP cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gcp/rate:
    post:
      operationId: v1SpectroClustersGcpRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Gcp Cluster estimated rate response
      summary: Get GCP cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gcp/validate:
    post:
      operationId: v1SpectroClustersGcpValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Gcp Cluster validation response
      summary: Validates GCP cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/generic/import:
    post:
      description: "The machines information will be captured, whereas the cloud specific\
        \ configuration info will not be retrieved"
      operationId: v1SpectroClustersGenericImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGenericClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a cluster of any cloud type in generic way
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/generic/rate:
    post:
      operationId: v1SpectroClustersGenericRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGenericClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Genric Cluster estimated rate response
      summary: Get generic cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gke:
    post:
      operationId: v1SpectroClustersGkeCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates an GKE cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gke/rate:
    post:
      operationId: v1SpectroClustersGkeRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Gke Cluster estimated rate response
      summary: Get GKE cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/gke/validate:
    post:
      operationId: v1SpectroClustersGkeValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroGcpClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Gke Cluster validation response
      summary: Validates GKE cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/maas:
    post:
      operationId: v1SpectroClustersMaasCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroMaasClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a MAAS cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/maas/import:
    post:
      operationId: v1SpectroClustersMaasImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroMaasClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a Maas cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/maas/rate:
    post:
      operationId: v1SpectroClustersMaasRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroMaasClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Maas Cluster estimated rate response
      summary: Get maas cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/maas/validate:
    post:
      operationId: v1SpectroClustersMaasValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroMaasClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Maas Cluster validation response
      summary: Validates MAAS cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/openstack:
    post:
      operationId: v1SpectroClustersOpenStackCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroOpenStackClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a OpenStack cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/openstack/import:
    post:
      operationId: v1SpectroClustersOpenStackImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroOpenStackClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports an OpenStack cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/openstack/rate:
    post:
      operationId: v1SpectroClustersOpenStackRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroOpenStackClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Openstack Cluster estimated rate response
      summary: Get openstack cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/openstack/validate:
    post:
      operationId: v1SpectroClustersOpenStackValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroOpenStackClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: vSphere Cluster validation response
      summary: Validates OpenStack cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/spc/download:
    post:
      operationId: v1SpectroClustersSpcDownload
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterDefinitionEntity"
        required: false
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Cluster definition archive file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Downloads the cluster definition archive file
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/tags:
    get:
      operationId: v1SpectroClustersTagsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterTags"
          description: An array of spectrocluster tags
      summary: Retrieves a list of spectrocluster tags
      tags:
      - spectroclusters
  /v1/spectroclusters/upgrade/settings:
    get:
      operationId: v1SpectroClustersUpgradeSettingsGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterUpgradeSettingsEntity"
          description: (empty)
      summary: Get cluster settings by context
      tags:
      - spectroclusters
    post:
      operationId: v1SpectroClustersUpgradeSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterUpgradeSettingsEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update all clusters upgrade settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/validate/name:
    get:
      operationId: v1SpectroClustersValidateName
      parameters:
      - description: Cluster name
        in: query
        name: name
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the cluster name
      tags:
      - spectroclusters
  /v1/spectroclusters/validate/packs:
    post:
      operationId: v1SpectroClustersValidatePacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterPacksEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Cluster packs validation response
      summary: Validates spectro cluster packs
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/virtual:
    post:
      operationId: v1SpectroClustersVirtualCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVirtualClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a virtual cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/virtual/packs/values:
    get:
      operationId: v1VirtualClustersPacksValues
      parameters:
      - description: Kubernetes distribution type
        in: query
        name: kubernetesDistroType
        schema:
          default: k3s
          enum:
          - k3s
          - cncf_k8s
          - vcluster-generic
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualPacksValues"
          description: Successful response
      summary: Get the cluster pack values yaml
      tags:
      - spectroclusters
  /v1/spectroclusters/virtual/validate:
    post:
      operationId: v1SpectroClustersVirtualValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVirtualClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Virtual Cluster validation response
      summary: Validates virtual cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/vsphere:
    post:
      operationId: v1SpectroClustersVsphereCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVsphereClusterEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a vSphere cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/vsphere/import:
    post:
      operationId: v1SpectroClustersVsphereImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVsphereClusterImportEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Imports a vSphere cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/vsphere/rate:
    post:
      operationId: v1SpectroClustersVsphereRate
      parameters:
      - in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVsphereClusterRateEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: Vsphere Cluster estimated rate response
      summary: Get vSphere cluster estimated rate information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/vsphere/validate:
    post:
      operationId: v1SpectroClustersVsphereValidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroVsphereClusterEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: vSphere Cluster validation response
      summary: Validates vSphere cluster create operation
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}:
    delete:
      operationId: v1SpectroClustersDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: If set to true the cluster will be force deleted and user has
          to manually clean up the provisioned cloud resources
        in: query
        name: forceDelete
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified cluster
      tags:
      - spectroclusters
    get:
      operationId: v1SpectroClustersGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Comma separated tags like system,profile"
        in: query
        name: includeTags
        schema:
          type: string
      - description: Resolve pack values if set to true
        in: query
        name: resolvePackValues
        schema:
          default: false
          type: boolean
      - description: "Includes pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      - description: Filter cluster profile templates by profileType
        in: query
        name: profileType
        schema:
          type: string
      - description: Include non spectro labels in the cluster labels if set to true
        in: query
        name: includeNonSpectroLabels
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroCluster"
          description: OK
      summary: Returns the specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/assets:
    get:
      operationId: v1SpectroClustersUidAssetsGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterAssetEntity"
          description: OK
      summary: Get the cluster asset doc
      tags:
      - spectroclusters
    post:
      operationId: v1SpectroClustersUidAssets
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Associate the assets for the cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/assets/adminKubeconfig:
    get:
      operationId: v1SpectroClustersUidAdminKubeConfig
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's kube config file
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/assets/adminTokenKubeconfig:
    delete:
      operationId: v1SpectroClustersUidTokenKubeConfigDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the cluster's token kube config data
      tags:
      - spectroclusters
    get:
      operationId: v1SpectroClustersUidTokenKubeConfigGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's token kube config file
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidTokenKubeConfigUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetTokenKubeConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's token kube config data
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/assets/frpKubeconfig:
    delete:
      operationId: v1SpectroClustersUidFrpKubeConfigDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the cluster's frp kube config client data
      tags:
      - spectroclusters
    get:
      operationId: v1SpectroClustersUidFrpKubeConfigGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's frp kube config file
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidFrpKubeConfigUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetFrpKubeConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's frp kube config data
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/assets/kubeconfig:
    get:
      operationId: v1SpectroClustersUidKubeConfig
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: FRP (reverse-proxy) based kube config will be returned if available
        in: query
        name: frp
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's kube config file
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidKubeConfigUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetKubeConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's manifest data
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/assets/kubeconfigclient:
    delete:
      operationId: v1SpectroClustersUidKubeConfigClientDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the cluster's kube config client data
      tags:
      - spectroclusters
    get:
      operationId: v1SpectroClustersUidKubeConfigClientGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's kube config client file
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidKubeConfigClientUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetKubeConfigClient"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's kube config client data
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/assets/manifest:
    get:
      operationId: v1SpectroClustersUidManifestGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      summary: Returns the specified cluster's manifest data
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidManifestUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterAssetManifest"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster's manifest data
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/clusterConfig/clusterMetaAttribute:
    patch:
      operationId: v1SpectroClustersUidClusterMetaAttributeUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterMetaAttributeEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster meta attribute
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/clusterConfig/controlPlaneHealthCheckTimeout:
    patch:
      operationId: V1ControlPlaneHealthCheckTimeoutUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ControlPlaneHealthCheckTimeoutEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster controlPlane health check timeout
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/clusterConfig/hostCluster:
    patch:
      operationId: V1HostClusterConfigUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1HostClusterConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster host config
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/clusterConfig/lifecycleConfig:
    patch:
      operationId: v1SpectroClustersUidLifecycleConfigUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1LifecycleConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster Life cycle configuration
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/clusterConfig/osPatch:
    patch:
      operationId: v1SpectroClustersUidOsPatchUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1OsPatchEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster OS patch configuration
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/config/namespaces:
    get:
      operationId: v1SpectroClustersUidConfigNamespacesGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterNamespaceResources"
          description: OK
      summary: Retrieves namespaces for the specified cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidConfigNamespacesUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterNamespaceResourcesUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates namespaces for the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/config/namespaces/{namespaceUid}:
    get:
      operationId: v1SpectroClustersUidConfigNamespacesUidGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster namespace uid
        in: path
        name: namespaceUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterNamespaceResource"
          description: Cluster's namespace response
      summary: Retrieves the specified namespace of the cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidConfigNamespacesUidUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster namespace uid
        in: path
        name: namespaceUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterNamespaceResourceInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified namespace of the cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/config/rbacs:
    get:
      operationId: v1SpectroClustersUidConfigRbacsGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterRbacs"
          description: OK
      summary: Retrieves RBAC information for the specified cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidConfigRbacsUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterRbacResourcesUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates RBAC information for the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/config/rbacs/{rbacUid}:
    get:
      operationId: v1SpectroClustersUidConfigRbacsUidGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: RBAC resource uid
        in: path
        name: rbacUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterRbac"
          description: Cluster's RBAC response
      summary: Retrieves the specified RBAC of the cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersUidConfigRbacsUidUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: RBAC resource uid
        in: path
        name: rbacUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterRbacInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified RBAC of the cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/download:
    get:
      operationId: v1SpectroClustersUidDownload
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download cluster archive file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Download the specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/edge-native/edgeHosts:
    get:
      operationId: v1EdgeNativeClustersHostsList
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EdgeHostDevices"
          description: List of edge host device
      summary: Retrieves a list of edge host of edge-native cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/edge/reset:
    post:
      operationId: V1SpectroClustersUidEdgeReset
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: reset the edge clusters by deleting machine pools and conditions
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/backup:
    delete:
      operationId: v1ClusterFeatureBackupScheduleReset
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Reset cluster backup schedule settings
      tags:
      - spectroclusters
    get:
      operationId: v1ClusterFeatureBackupGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: backupRequestUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterBackup"
          description: OK
      summary: Returns the cluster backup result
      tags:
      - spectroclusters
    post:
      operationId: v1ClusterFeatureBackupCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterBackupConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create cluster backup settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
    put:
      operationId: v1ClusterFeatureBackupUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterBackupConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update cluster backup settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/backup/onDemand:
    post:
      operationId: v1ClusterFeatureBackupOnDemandCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterBackupConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create on demand cluster backup
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/backup/{backupName}/request/{requestUid}:
    delete:
      operationId: v1ClusterFeatureBackupDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          type: string
      - in: path
        name: requestUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete cluster backup
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan:
    get:
      operationId: v1ClusterFeatureComplianceScanGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterComplianceScan"
          description: OK
      summary: "Returns the compliance scan of cluster, if driverType is provided\
        \ then specific status of driverType will be returned"
      tags:
      - spectroclusters
    post:
      operationId: v1ClusterFeatureComplianceScanCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterComplianceScheduleConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create cluster compliance scan
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
    put:
      operationId: v1ClusterFeatureComplianceScanUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterComplianceScheduleConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update cluster compliance scan settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/complianceScan/logs/drivers:
    get:
      operationId: v1ClusterFeatureComplianceScanLogsGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterComplianceScanLogs"
          description: OK
      summary: Returns the compliance scan log by cluster uid and driver type
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/drivers/kubeBench:
    put:
      operationId: v1ClusterFeatureScanKubeBenchLogUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1KubeBenchEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the KubeBench compliance scan log by uid
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/complianceScan/logs/drivers/kubeHunter:
    put:
      operationId: v1ClusterFeatureScanKubeHunterLogUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1KubeHunterEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the KubeHunter compliance scan log by uid
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/complianceScan/logs/drivers/sonobuoy:
    put:
      operationId: v1ClusterFeatureScanSonobuoyLogUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SonobuoyEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the Sonobuoy compliance scan log by uid
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/complianceScan/logs/drivers/syft:
    patch:
      operationId: v1ClusterFeatureScanSyftLogUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SyftEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the Syft compliance scan log by uid
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}:
    delete:
      operationId: v1ClusterFeatureComplianceScanLogDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the compliance scan log by uid
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/kubeBench:
    get:
      operationId: v1ClusterFeatureKubeBenchLogGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      - in: query
        name: reportId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterScanLogKubeBench"
          description: OK
      summary: Returns the KubeBench compliance scan log by uid
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/kubeHunter:
    get:
      operationId: v1ClusterFeatureKubeHunterLogGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      - in: query
        name: reportId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterScanLogKubeHunter"
          description: OK
      summary: Returns the KubeHunter compliance scan log by uid
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/sonobuoy:
    get:
      operationId: v1ClusterFeatureSonobuoyLogGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      - in: query
        name: reportId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterScanLogSonobuoy"
          description: OK
      summary: Returns the Sonobuoy compliance scan log by uid
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/syft:
    get:
      operationId: v1ClusterFeatureSyftLogGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterScanLogSyft"
          description: OK
      summary: Returns the Syft compliance scan log by uid
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/syft/sbom:
    get:
      operationId: v1SyftScanLogImageSBOMGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      - in: query
        name: image
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the image sbom of syft scan log of cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/logs/{logUid}/drivers/{driver}/download:
    get:
      operationId: v1ClusterFeatureDriverLogDownload
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: logUid
        required: true
        schema:
          type: string
      - in: path
        name: driver
        required: true
        schema:
          enum:
          - kubeBench
          - kubeHunter
          - sonobuoy
          - syft
          type: string
      - in: query
        name: fileFormat
        schema:
          default: pdf
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Downloads the driver cluster logs
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/complianceScan/onDemand:
    post:
      operationId: v1ClusterFeatureComplianceScanOnDemandCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterComplianceOnDemandConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create on demand cluster compliance scan
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/helmCharts:
    get:
      operationId: v1ClusterFeatureHelmChartsGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterHelmCharts"
          description: OK
      summary: Get the installed helm charts of a specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/logFetcher:
    get:
      operationId: v1ClusterFeatureLogFetcherGet
      parameters:
      - description: Cluster uid for which log is requested
        in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: requestId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterLogFetcher"
          description: OK
      summary: Get the log fetcher for cluster
      tags:
      - spectroclusters
    post:
      operationId: v1ClusterFeatureLogFetcherCreate
      parameters:
      - description: Cluster uid for which log is requested
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterLogFetcherRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create the log fetcher for cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/features/manifests:
    get:
      operationId: v1ClusterFeatureManifestsGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterManifests"
          description: OK
      summary: Get the installed manifests of a specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/restore:
    get:
      operationId: v1ClusterFeatureRestoreGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: restoreRequestUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterRestore"
          description: OK
      summary: Returns the cluster restore of cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/features/restore/onDemand:
    post:
      operationId: v1ClusterFeatureRestoreOnDemandCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterRestoreConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create on demand cluster restore
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/heartbeat:
    put:
      operationId: v1SpectroClustersUidHeartbeatUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterHeartbeat"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update specific cluster heartbeat
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/hybridPools/metadata:
    get:
      operationId: v1SpectroClustersGetHybridPoolsMetadata
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterHybridPoolsMetadata"
          description: OK
      summary: Returns the metadata of all hybrid pools associated with the specified
        cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/hybridSettings:
    patch:
      operationId: v1SpectroClustersUidHybridSettings
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterHybridSettingsEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update specific cluster hybrid settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/import/manifest:
    get:
      operationId: v1SpectroClustersUidImportManifest
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: download file
          headers:
            Content-Disposition:
              schema:
                type: string
      summary: Returns the specified cluster's import manifest file
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/import/upgrade:
    patch:
      operationId: v1SpectroClustersUidImportUpgradePatch
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Upgrade the specified imported read only cluster with full permissions
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/k8certificates:
    get:
      operationId: v1SpectroClustersK8Certificate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1MachineCertificates"
          description: OK
      summary: Get K8Certificate for spectro cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersK8CertificateUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterK8sCertificate"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update K8Certificate for spectro cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/k8certificates/renew:
    patch:
      operationId: v1SpectroClustersCertificatesRenew
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Sets the cluster control plane nodes Kubernetes certificates for renewal
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/kubectl/redirect:
    get:
      operationId: V1SpectroClustersUidKubeCtlRedirect
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterKubeCtlRedirect"
          description: (empty)
      summary: Returns the specified cluster's kube config file
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/location:
    put:
      operationId: v1SpectroClustersUidLocationPut
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterLocationInputEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Associate the assets for the cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/metadata:
    patch:
      operationId: v1SpectroClustersUidMetadataUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ObjectMetaInputEntitySchema"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the specified spectro cluster metadata
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/namespaces:
    get:
      operationId: v1ClusterNamespacesGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: skipEmptyNamespaces
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterNamespaces"
          description: OK
      summary: Returns available namespaces for the cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/oidc:
    get:
      operationId: V1SpectroClustersUidOIDC
      parameters:
      - description: spc uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterOidcSpec"
          description: OK
      summary: Returns k8s spectrocluster oidc
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/oidc/dashboard/url:
    get:
      operationId: V1SpectroClustersUidOIDCDashboardUrl
      parameters:
      - description: spc uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SectroClusterK8sDashboardUrl"
          description: OK
      summary: Returns k8s dashboard url
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/pack/manifests/{manifestUid}:
    get:
      operationId: v1SpectroClustersUidPackManifestsUidGet
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: manifest uid which is part of the pack ref
        in: path
        name: manifestUid
        required: true
        schema:
          type: string
      - description: resolve pack manifest values if set to true
        in: query
        name: resolveManifestValues
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Manifest"
          description: Pack manifest content
      summary: Returns the specified cluster's manifest
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/pack/properties:
    get:
      operationId: v1SpectroClustersUidPackProperties
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Pack layer
        in: query
        name: layer
        required: true
        schema:
          type: string
      - description: Pack values yaml field path
        in: query
        name: fieldPath
        required: true
        schema:
          type: string
      - description: Pack name
        in: query
        name: name
        schema:
          type: string
      - description: Is the macros need to be resolved
        in: query
        name: resolveMacros
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterPackProperties"
          description: Cluster's pack properties response
      summary: Get specified cluster pack properties
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/packRefs:
    patch:
      operationId: v1SpectroClustersPacksRefUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: notify
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterNotificationUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's pack references
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/packs/resolvedValues:
    get:
      operationId: v1SpectroClustersUidPacksResolvedValuesGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfilesParamReferenceEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfilesResolvedValues"
          description: OK
      summary: Returns the specified cluster's packs resolved values
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/packs/status:
    patch:
      operationId: v1SpectroClustersUidPacksStatusPatch
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterPacksStatusEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patch update specified cluster's packs status
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/profileUpdates:
    get:
      operationId: v1SpectroClustersGetProfileUpdates
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfileUpdates"
          description: OK
      summary: Returns the profile updates of a specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/profiles:
    delete:
      operationId: v1SpectroClustersDeleteProfiles
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfilesDeleteEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Remove cluster profiles from the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
    get:
      operationId: v1SpectroClustersGetProfiles
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "includes pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfileList"
          description: OK
      summary: Returns the associated profiles of a specified cluster
      tags:
      - spectroclusters
    patch:
      operationId: v1SpectroClustersPatchProfiles
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Resolve pending cluster notification if set to true
        in: query
        name: resolveNotification
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfiles"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patch cluster profiles to the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
    put:
      operationId: v1SpectroClustersUpdateProfiles
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Resolve pending cluster notification if set to true
        in: query
        name: resolveNotification
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterProfiles"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Associate cluster profiles to the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/profiles/packs/manifests:
    get:
      operationId: v1SpectroClustersGetProfilesPacksManifests
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Includes pack meta such as schema, presets"
        in: query
        name: includePackMeta
        schema:
          type: string
      - description: Resolve pack macro variables if set to true
        in: query
        name: resolveMacros
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterProfilesPacksManifests"
          description: OK
      summary: Returns the associated profile's pack manifests of a specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/profiles/{profileUid}/packs/{packName}/config:
    get:
      operationId: v1SpectroClustersUidProfilesUidPacksConfigGet
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: profile uid
        in: path
        name: profileUid
        required: true
        schema:
          type: string
      - description: pack name
        in: path
        name: packName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterPackConfigList"
          description: An array of cluster pack values
      summary: Returns the specified cluster's profile pack configuration
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/profiles/{profileUid}/packs/{packName}/manifests:
    get:
      operationId: v1SpectroClustersProfilesUidPackManifestsGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile uid
        in: path
        name: profileUid
        required: true
        schema:
          type: string
      - description: Name of the pack
        in: path
        name: packName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1PackManifests"
          description: OK
      summary: Returns the associated profiles pack manifests of the specified cluster
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersProfilesUidPackManifestsUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Cluster profile uid
        in: path
        name: profileUid
        required: true
        schema:
          type: string
      - description: Name of the pack
        in: path
        name: packName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ManifestRefInputEntities"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates cluster profiles pack manifests to the specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/rate:
    get:
      operationId: v1SpectroClustersUidRate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Period type [hourly, monthly, yearly]"
        in: query
        name: periodType
        schema:
          default: hourly
          enum:
          - hourly
          - monthly
          - yearly
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRate"
          description: OK
      summary: Returns the estimated rate of the specified cluster
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/repave/approve:
    patch:
      operationId: v1SpectroClustersUidRepaveApproveUpdate
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Returns the spectrocluster repave approve update
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/repave/status:
    get:
      operationId: v1SpectroClustersUidRepaveGet
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRepave"
          description: Returns cluster repave status
      summary: Returns the spectrocluster repave
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/reset:
    put:
      operationId: V1SpectroClustersUidReset
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: reset the cluster s by deleting machine pools and condtions
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/status:
    get:
      operationId: v1SpectroClustersUidStatus
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterStatusEntity"
          description: OK
      summary: Get the cluster's status
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/status/condition:
    put:
      operationId: v1SpectroClustersUpdateStatusCondition
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterCondition"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster status condition
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/status/conditions:
    patch:
      operationId: v1SpectroClustersUpdateStatusConditions
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/v1ClusterCondition"
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster status conditions
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/status/endpoints:
    put:
      operationId: v1SpectroClustersUpdateStatusEndpoints
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/v1APIEndpoint"
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster's service endpoints information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/status/imported:
    patch:
      operationId: v1SpectroClustersUpdateStatusImported
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster status as imported
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/status/services:
    put:
      operationId: v1SpectroClustersUpdateStatusServices
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/v1LoadBalancerService"
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified cluster's services information
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/status/spcApply:
    get:
      operationId: v1SpectroClustersUidStatusSpcApplyGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpcApply"
          description: (empty)
      summary: Returns the SPC apply information for the agent
      tags:
      - spectroclusters
    post:
      operationId: v1SpectroClustersUidStatusSpcApply
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Set the CanBeApplied to true on the spcApply status. CanBeApplied indicates
        the agent to orchestrate the spc changes
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/status/spcApply/patchTime:
    patch:
      operationId: v1SpectroClustersUidStatusSpcPatchTime
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpcPatchTimeEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the agent patch time for the SPC changes
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/status/upgrades:
    put:
      operationId: v1SpectroClustersUidUpgradesPut
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterUidUpgrades"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the cluster's upgrade status
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/upgrade/settings:
    post:
      operationId: v1SpectroClustersUidUpgradeSettings
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterUpgradeSettingsEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update specific cluster upgrade settings
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/validate/packs:
    post:
      operationId: v1SpectroClustersUidValidatePacks
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterPacksEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterValidatorResponse"
          description: Cluster packs validation response
      summary: Validates cluster packs
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/validate/repave:
    post:
      operationId: v1SpectroClustersUidValidateRepave
      parameters:
      - description: cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterPacksEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SpectroClusterRepaveValidationResponse"
          description: Cluster repave validation response
      summary: Validates if cluster gets repaved for the specified packs
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/variables:
    get:
      operationId: v1SpectroClustersUidVariablesGet
      parameters:
      - description: Cluster uid for which variables need to be retrieved
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1SpectroClusterVariables"
                type: array
          description: (empty)
      summary: Retrieve a list of variables associated with the cluster
      tags:
      - spectroclusters
    patch:
      operationId: v1SpectroClustersUidVariablesPatch
      parameters:
      - description: Cluster uid for which variables need to be retrieved
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/v1SpectroClusterVariableUpdateEntity"
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update cluster variable values for specified cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms:
    get:
      operationId: v1SpectroClustersVMList
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Namespace names, comma separated value (ex: dev,test). If namespace\
          \ is empty it returns the specific resource under all namespace"
        explode: false
        in: query
        name: namespace
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualMachineList"
          description: OK
      summary: Returns the list of virtual machines
      tags:
      - spectroclusters
    post:
      operationId: v1SpectroClustersVMCreate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterVirtualMachine"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualMachine"
          description: (empty)
      summary: Create virtual machine
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/snapshot:
    get:
      operationId: v1ClusterVMSnapshotsList
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "vmName is comma separated value (ex: name1,name2)."
        explode: false
        in: query
        name: vmName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Namespace names, comma separated value (ex: dev,test). If namespace\
          \ is empty it returns the specific resource under all namespace"
        explode: false
        in: query
        name: namespace
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachineSnapshotList"
          description: OK
      summary: Returns the list of snapshots of given namespaces
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}:
    delete:
      operationId: v1SpectroClustersVMDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the virtual machine
      tags:
      - spectroclusters
    get:
      operationId: v1SpectroClustersVMGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualMachine"
          description: (empty)
      summary: Get virtual machine
      tags:
      - spectroclusters
    put:
      operationId: v1SpectroClustersVMUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterVirtualMachine"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualMachine"
          description: (empty)
      summary: Updates the specified virtual machine of the cluster
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/addVolume:
    put:
      operationId: v1SpectroClustersVMAddVolume
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VMAddVolumeEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Add volume to the virtual machine instance
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/clone:
    post:
      operationId: v1SpectroClustersVMClone
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SpectroClusterVMCloneEntity"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ClusterVirtualMachine"
          description: (empty)
      summary: Clone virtual machine
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/migrate:
    put:
      operationId: v1SpectroClustersVMMigrate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Migrate the virtual machine
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}/pause:
    put:
      operationId: v1SpectroClustersVMPause
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Pause the virtual machine instance
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}/removeVolume:
    put:
      operationId: v1SpectroClustersVMRemoveVolume
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VMRemoveVolumeEntity"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Remove volume from the virtual machine instance
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/restart:
    put:
      operationId: v1SpectroClustersVMRestart
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Restart the virtual machine
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}/resume:
    put:
      operationId: v1SpectroClustersVMResume
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Resume the virtual machine instance
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}/snapshot:
    post:
      operationId: v1VMSnapshotCreate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name of virtual machine
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachineSnapshot"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachineSnapshot"
          description: (empty)
      summary: Create snapshot of virtual machine
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/snapshot/{snapshotName}:
    delete:
      operationId: v1VMSnapshotDelete
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Snapshot name
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete the snapshot of virtual machine
      tags:
      - spectroclusters
    get:
      operationId: v1VMSnapshotGet
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Snapshot name
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachineSnapshot"
          description: (empty)
      summary: Get virtual machine snapshot
      tags:
      - spectroclusters
    put:
      operationId: v1VMSnapshotUpdate
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Snapshot name
        in: path
        name: snapshotName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VirtualMachineSnapshot"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VirtualMachineSnapshot"
          description: (empty)
      summary: Updates the specified snapshot of a virtual machine
      tags:
      - spectroclusters
      x-codegen-request-body-name: body
  /v1/spectroclusters/{uid}/vms/{vmName}/start:
    put:
      operationId: v1SpectroClustersVMStart
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Start the virtual machine
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/vms/{vmName}/stop:
    put:
      operationId: v1SpectroClustersVMStop
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Virtual Machine name
        in: path
        name: vmName
        required: true
        schema:
          type: string
      - description: Namespace name
        in: query
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Stop the virtual machine
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/workloads/sync:
    post:
      description: Sync specified cluster workload
      operationId: v1SpectroClustersUidWorkloadsSync
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync specified cluster workload
      tags:
      - spectroclusters
  /v1/spectroclusters/{uid}/workloads/{workloadKind}/sync:
    post:
      operationId: v1SpectroClustersUidWorkloadsKindSync
      parameters:
      - description: Cluster uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: Workload kind
        in: path
        name: workloadKind
        required: true
        schema:
          enum:
          - namespace
          - pod
          - deployment
          - statefulset
          - daemonset
          - job
          - cronjob
          - rolebinding
          - clusterrolebinding
          type: string
      responses:
        "202":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Sync specified cluster workload
      tags:
      - spectroclusters
  /v1/system/config/reverseproxy:
    get:
      operationId: V1SystemConfigReverseProxyGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SystemReverseProxy"
          description: (empty)
      summary: get the system config reverse proxy
      tags:
      - system
    put:
      operationId: V1SystemConfigReverseProxyUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1SystemReverseProxy"
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Updated"
          description: (empty)
      summary: updates the system config reverse proxy
      tags:
      - system
      x-codegen-request-body-name: body
  /v1/system/passwords/blocklist:
    delete:
      operationId: V1PasswordsBlockListDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1PasswordsBlockList"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete a list of block listed passwords
      tags:
      - system
      x-codegen-request-body-name: body
    patch:
      operationId: V1PasswordsBlockListUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1PasswordsBlockList"
        required: true
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Updated"
          description: (empty)
      summary: List of block listed passwords
      tags:
      - system
      x-codegen-request-body-name: body
  /v1/teams:
    get:
      operationId: v1TeamsList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Teams"
          description: An array of teams
      summary: Retrieves a list of teams
      tags:
      - teams
    post:
      operationId: v1TeamsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Team"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a team with the specified users and roles
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/summary:
    post:
      operationId: v1TeamsSummaryGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TeamsSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TeamsSummaryList"
          description: An array of teams summary items
      summary: Retrieves a list of teams summary with provided filter spec
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/{uid}:
    delete:
      operationId: v1TeamsUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified team
      tags:
      - teams
    get:
      operationId: v1TeamsUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Team"
          description: OK
      summary: Returns the sepcified team
      tags:
      - teams
    patch:
      operationId: v1TeamsUidPatch
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TeamPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patches the specified team
      tags:
      - teams
      x-codegen-request-body-name: body
    put:
      operationId: v1TeamsUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Team"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the sepcified team
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/{uid}/projects:
    get:
      operationId: v1TeamsProjectRoles
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectRolesEntity"
          description: OK
      summary: Returns the specified team's project and roles data
      tags:
      - teams
    put:
      operationId: v1TeamsProjectRolesPut
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectRolesPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the projects and roles for the specified team
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/{uid}/resourceRoles:
    get:
      description: Returns resource roles for team
      operationId: v1TeamsUidResourceRoles
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourceRoles"
          description: OK
      summary: Returns the specified individual and resource roles for a team
      tags:
      - teams
    post:
      description: Resource roles added to specific team
      operationId: v1TeamsUidResourceRolesCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceRolesUpdateEntity"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Add resource roles for team
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/{uid}/resourceRoles/{resourceRoleUid}:
    delete:
      operationId: v1TeamsUidResourceRolesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: resourceRoleUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deleted the resource roles from team
      tags:
      - teams
    patch:
      description: Specific resource roles fo team is updated
      operationId: v1TeamsResourceRolesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: resourceRoleUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceRolesUpdateEntity"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the resource roles for team
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/teams/{uid}/roles:
    get:
      operationId: V1TeamsUidTenantRolesGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TeamTenantRolesEntity"
          description: OK
      summary: Returns the specified team's tenant roles
      tags:
      - teams
    put:
      operationId: V1TeamsUidTenantRolesUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TeamTenantRolesUpdate"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the tenant roles of the specified team
      tags:
      - teams
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/address:
    patch:
      operationId: v1PatchTenantAddress
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantAddressPatch"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update tenant address
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/assets/certs:
    get:
      operationId: V1TenantUIdAssetsCertsList
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantAssetCerts"
          description: OK
      summary: lists the certificates for the tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidAssetsCertsCreate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantAssetCert"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create the tenant certificate
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/assets/certs/{certificateUid}:
    delete:
      operationId: V1TenantUidAssetsCertsUidDelete
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - in: path
        name: certificateUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: deletes the tenant certificate
      tags:
      - tenants
    get:
      operationId: V1TenantUidAssetsCertsUidGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - in: path
        name: certificateUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantAssetCert"
          description: OK
      summary: Returns the ca certificate for the tenant
      tags:
      - tenants
    put:
      operationId: V1TenantUidAssetsCertsUidUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - in: path
        name: certificateUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantAssetCert"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: updates the tenant certificate
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/assets/dataSinks:
    delete:
      operationId: V1TenantUidAssetsDataSinksDelete
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: deletes the tenant data sink config
      tags:
      - tenants
    get:
      operationId: V1TenantUidAssetsDataSinksGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DataSinkConfig"
          description: OK
      summary: Returns data sink config of tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidAssetsDataSinksCreate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1DataSinkConfig"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: create data sink config
      tags:
      - tenants
      x-codegen-request-body-name: body
    put:
      operationId: V1TenantUidAssetsDataSinksUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1DataSinkConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: updates the tenant data sink config
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/authTokenSettings:
    get:
      operationId: v1TenantUidAuthTokenSettingsGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AuthTokenSettings"
          description: OK
      summary: Get tenant auth token settings
      tags:
      - tenants
    put:
      operationId: v1TenantUidAuthTokenSettingsUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AuthTokenSettings"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update tenant auth token settings
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/contract/accept:
    patch:
      operationId: v1TenantsUidContractAccept
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Tenant to accept the contract agreement
      tags:
      - tenants
  /v1/tenants/{tenantUid}/creditAccount/aws:
    delete:
      operationId: v1TenantsCreditAccountDelete
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - in: query
        name: forceDelete
        schema:
          default: false
          type: boolean
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the aws credit account for tenants
      tags:
      - tenants
    get:
      operationId: v1TenantsCreditAccountGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1AwsCreditAccountEntity"
          description: OK
      summary: Get the credit accounts for the tenants with free tier access
      tags:
      - tenants
  /v1/tenants/{tenantUid}/domains:
    get:
      operationId: V1TenantUidDomainsGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantDomains"
          description: (empty)
      summary: retrieves the domains for tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidDomainsUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantDomains"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: creates or updates domains for tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/emailId:
    patch:
      operationId: v1PatchTenantEmailId
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantEmailPatch"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update tenant emailId
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/freemium:
    get:
      operationId: v1TenantFreemiumGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantFreemium"
          description: (empty)
      summary: Get tenant level freemium configuration
      tags:
      - tenants
    put:
      operationId: v1TenantFreemiumUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantFreemium"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update tenant freemium configuration
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/freemiumUsage:
    get:
      operationId: v1TenantFreemiumUsageGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantFreemiumUsage"
          description: OK
      summary: Get tenant freemium usage
      tags:
      - tenants
  /v1/tenants/{tenantUid}/invoices/{invoiceUid}:
    get:
      operationId: v1InvoicesUidGet
      parameters:
      - description: Specify the tenant uid
        in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - description: Specify the invoice uid
        in: path
        name: invoiceUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Invoice"
          description: (empty)
      summary: Returns a specified invoice
      tags:
      - tenants
  /v1/tenants/{tenantUid}/invoices/{invoiceUid}/report/invoice/pdf:
    get:
      operationId: V1InvoiceUidReportInvoicePdf
      parameters:
      - description: Specify the tenant uid
        in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - description: Specify the invoice uid
        in: path
        name: invoiceUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Downloads the specified invoice report
      tags:
      - tenants
  /v1/tenants/{tenantUid}/invoices/{invoiceUid}/report/pdf:
    get:
      operationId: V1InvoiceUidReportPdf
      parameters:
      - description: Specify the tenant uid
        in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - description: Specify the invoice uid
        in: path
        name: invoiceUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Downloads the specified monthly invoice report
      tags:
      - tenants
  /v1/tenants/{tenantUid}/invoices/{invoiceUid}/report/usage/pdf:
    get:
      operationId: V1InvoiceUidReportUsagePdf
      parameters:
      - description: Specify the tenant uid
        in: path
        name: tenantUid
        required: true
        schema:
          type: string
      - description: Specify the invoice uid
        in: path
        name: invoiceUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
      summary: Downloads the specified tenant usage
      tags:
      - tenants
  /v1/tenants/{tenantUid}/loginBanner:
    get:
      operationId: v1TenantUidLoginBannerGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1LoginBannerSettings"
          description: OK
      summary: Get tenant login banner settings
      tags:
      - tenants
    put:
      operationId: v1TenantUidLoginBannerUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1LoginBannerSettings"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update tenant login banner settings
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/macros:
    delete:
      operationId: v1TenantsUidMacrosDeleteByMacroName
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Delete the macros for the specified tenant by given macro name
      tags:
      - tenants
      x-codegen-request-body-name: body
    get:
      operationId: v1TenantsUidMacrosList
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Macros"
          description: OK
      summary: List the macros of the specified tenant
      tags:
      - tenants
    patch:
      operationId: v1TenantsUidMacrosUpdateByMacroName
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros for the specified tenant by given macro name
      tags:
      - tenants
      x-codegen-request-body-name: body
    post:
      operationId: v1TenantsUidMacrosCreate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Create or add new macros for the specified tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
    put:
      operationId: v1TenantsUidMacrosUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros of the specified tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/oidc/config:
    get:
      operationId: V1TenantUidOidcConfigGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantOidcClientSpec"
          description: OK
      summary: Returns the oidc Spec for tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidOidcConfigUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantOidcClientSpec"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Associates the  oidc Spec for the tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/password/policy:
    get:
      operationId: V1TenantUidPasswordPolicyGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantPasswordPolicyEntity"
          description: (empty)
      summary: retrieves the password policy for tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidPasswordPolicyUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantPasswordPolicyEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: creates or updates a password policy for tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/preferences/clusterGroup:
    get:
      operationId: V1TenantPrefClusterGroupGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantEnableClusterGroup"
          description: (empty)
      summary: Get is cluster group enabled for a specific tenant
      tags:
      - tenants
    put:
      operationId: V1TenantPrefClusterGroupUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantEnableClusterGroup"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Enable or Disable cluster group for a specific tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/preferences/clusterSettings:
    get:
      operationId: v1TenantClusterSettingsGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantClusterSettings"
          description: (empty)
      summary: Get tenant cluster settings
      tags:
      - tenants
  /v1/tenants/{tenantUid}/preferences/clusterSettings/nodesAutoRemediationSetting:
    put:
      operationId: v1TenantClustersNodesAutoRemediationSettingUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1NodesAutoRemediationSettings"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update tenant clusters nodes auto remediation setting
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/preferences/developerCredit:
    get:
      operationId: V1TenantDeveloperCreditGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1DeveloperCredit"
          description: (empty)
      summary: Get developer credit enabled for a specific tenant
      tags:
      - tenants
    put:
      operationId: V1TenantDeveloperCreditUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1DeveloperCredit"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: update developer credit for a specific tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/preferences/fips:
    get:
      operationId: v1TenantFipsSettingsGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1FipsSettings"
          description: (empty)
      summary: Get tenant fips settings
      tags:
      - tenants
    put:
      operationId: v1TenantFipsSettingsUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1FipsSettings"
        required: false
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Update tenant fips setting
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/rateConfig:
    get:
      operationId: v1RateConfigGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1RateConfig"
          description: OK
      summary: Get all rate config for public and private cloud
      tags:
      - tenants
    put:
      operationId: v1RateConfigUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1RateConfig"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: updates the rate config for public and private cloud
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/resourceLimits:
    get:
      operationId: v1TenantResourceLimitsGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantResourceLimits"
          description: (empty)
      summary: Get tenant level resource limits configuration
      tags:
      - tenants
    patch:
      operationId: v1TenantResourceLimitsUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantResourceLimitsEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update tenant resource limits configuration
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/saml/config:
    get:
      operationId: V1TenantUidSamlConfigSpecGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantSamlSpec"
          description: OK
      summary: Returns the specified service provider metadata and Saml Spec for tenant
      tags:
      - tenants
    post:
      operationId: V1TenantUidSamlConfigUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantSamlRequestSpec"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Associates the specified federation metadata for the tenant
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/tenants/{tenantUid}/sso/auth/providers:
    get:
      operationId: V1TenantUidSsoAuthProvidersGet
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1TenantSsoAuthProvidersEntity"
          description: OK
      summary: get sso logins for the tenants
      tags:
      - tenants
    post:
      operationId: V1TenantUidSsoAuthProvidersUpdate
      parameters:
      - in: path
        name: tenantUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1TenantSsoAuthProvidersEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: enable sso logins for the tenants
      tags:
      - tenants
      x-codegen-request-body-name: body
  /v1/users:
    get:
      description: Lists users the given user context
      operationId: v1UsersList
      parameters:
      - description: "Set of fields to be presented in the response with values. The\
          \ fields are comma separated. Eg: metadata.uid,metadata.name"
        in: query
        name: fields
        schema:
          type: string
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      - description: |-
          limit is a maximum number of responses to return for a list call. Default and maximum value of the limit is 50.
          If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results.
        in: query
        name: limit
        schema:
          default: 50
          format: int64
          type: integer
      - description: offset is the next index number from which the response will
          start. The response offset value can be used along with continue token for
          the pagination.
        in: query
        name: offset
        schema:
          format: int64
          type: integer
      - description: continue token to paginate the subsequent data items
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Users"
          description: OK
      summary: Lists users
      tags:
      - users
    post:
      description: A user is created for the given user context
      operationId: v1UsersCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create User
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations:
    get:
      operationId: v1UsersAssetsLocationGet
      parameters:
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsLocations"
          description: OK
      summary: Returns the specified users location
      tags:
      - users
  /v1/users/assets/locations/azure:
    post:
      operationId: v1UsersAssetsLocationAzureCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationAzure"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create a Azure location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/azure/{uid}:
    get:
      operationId: v1UsersAssetsLocationAzureGet
      parameters:
      - description: Specify the Azure location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsLocationAzure"
          description: (empty)
      summary: Returns the specified Azure location
      tags:
      - users
    put:
      operationId: v1UsersAssetsLocationAzureUpdate
      parameters:
      - description: Specify the Azure location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationAzure"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified Azure location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/gcp:
    post:
      operationId: v1UsersAssetsLocationGcpCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationGcp"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create a GCP location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/gcp/{uid}:
    get:
      operationId: v1UsersAssetsLocationGcpGet
      parameters:
      - description: Specify the GCP location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsLocationGcp"
          description: (empty)
      summary: Returns the specified GCP location
      tags:
      - users
    put:
      operationId: v1UsersAssetsLocationGcpUpdate
      parameters:
      - description: Specify the GCP location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationGcp"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified GCP location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/minio:
    post:
      operationId: v1UsersAssetsLocationMinioCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationS3"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create a MinIO location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/minio/{uid}:
    get:
      operationId: v1UsersAssetsLocationMinioGet
      parameters:
      - description: Specify the MinIO location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsLocationS3"
          description: (empty)
      summary: Returns the specified MinIO location
      tags:
      - users
    put:
      operationId: v1UsersAssetsLocationMinioUpdate
      parameters:
      - description: Specify the MinIO location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationS3"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified MinIO location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/s3:
    post:
      operationId: v1UsersAssetsLocationS3Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationS3"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create a S3 location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/s3/{uid}:
    delete:
      operationId: v1UsersAssetsLocationS3Delete
      parameters:
      - description: Specify the S3 location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Returns the specified S3 location
      tags:
      - users
    get:
      operationId: v1UsersAssetsLocationS3Get
      parameters:
      - description: Specify the S3 location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsLocationS3"
          description: (empty)
      summary: Returns the specified S3 location
      tags:
      - users
    put:
      operationId: v1UsersAssetsLocationS3Update
      parameters:
      - description: Specify the S3 location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetsLocationS3"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified S3 location
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/locations/{type}/{uid}/default:
    patch:
      operationId: v1UsersAssetsLocationDefaultUpdate
      parameters:
      - description: Specify the location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      - description: "Specify the location type [aws/azure/gcp/minio/s3]"
        in: path
        name: type
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the default backup location
      tags:
      - users
  /v1/users/assets/locations/{uid}:
    delete:
      operationId: v1UsersAssetsLocationDelete
      parameters:
      - description: Specify the location uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified location
      tags:
      - users
  /v1/users/assets/sshkeys:
    get:
      operationId: v1UsersAssetsSshGet
      parameters:
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetsSsh"
          description: (empty)
      summary: Returns the SSH keys
      tags:
      - users
    post:
      operationId: v1UserAssetsSshCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetSshEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Creates a SSH key
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/sshkeys/{uid}:
    delete:
      operationId: v1UsersAssetSshDelete
      parameters:
      - description: Specify the SSH key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Returns the specified user ssh key
      tags:
      - users
    get:
      operationId: v1UsersAssetSshGetUid
      parameters:
      - description: Specify the SSH key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserAssetSsh"
          description: (empty)
      summary: Returns the specified user ssh key
      tags:
      - users
    put:
      operationId: v1UsersAssetSshUpdate
      parameters:
      - description: Specify the SSH key uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserAssetSsh"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified user ssh key
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/vsphere/dnsMapping:
    get:
      operationId: v1VsphereMappingGet
      parameters:
      - description: Specify the vSphere gateway uid
        in: query
        name: gatewayUid
        required: true
        schema:
          type: string
      - description: Specify the vSphere datacenter name
        in: query
        name: datacenter
        required: true
        schema:
          type: string
      - description: Specify the vSphere network name
        in: query
        name: network
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDnsMapping"
          description: (empty)
      summary: Returns the specified vSphere DNS mapping
      tags:
      - users
  /v1/users/assets/vsphere/dnsMappings:
    get:
      operationId: v1VsphereDnsMappingsGet
      parameters:
      - description: |-
          Filters can be combined with AND, OR operators with field path name. Eg: metadata.name=TestServiceANDspec.cloudType=aws

          Server will be restricted to certain fields based on the indexed data for each resource.
        in: query
        name: filters
        schema:
          type: string
      - description: "Specify the fields with sort order. 1 indicates ascending and\
          \ -1 for descending. Eg: orderBy=metadata.name=1,metadata.uid=-1"
        in: query
        name: orderBy
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDnsMappings"
          description: (empty)
      summary: Returns the specified vSphere DNS mappings
      tags:
      - users
    post:
      operationId: v1VsphereDnsMappingCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereDnsMapping"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create a vSphere DNS mapping
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/assets/vsphere/dnsMappings/{uid}:
    delete:
      operationId: v1VsphereDnsMappingDelete
      parameters:
      - description: Specify the vSphere DNS mapping uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified vSphere DNS mapping
      tags:
      - users
    get:
      operationId: v1VsphereDnsMappingGet
      parameters:
      - description: Specify the vSphere DNS mapping uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1VsphereDnsMapping"
          description: (empty)
      summary: Returns the specified vSphere DNS mapping
      tags:
      - users
    put:
      operationId: v1VsphereDnsMappingUpdate
      parameters:
      - description: Specify the vSphere DNS mapping uid
        in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1VsphereDnsMapping"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified vSphere DNS mapping
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/auth/tokens/revoke:
    post:
      operationId: v1UsersAuthTokensRevoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AuthTokenRevoke"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Revoke access of specific token(s)
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/config/scar:
    get:
      operationId: V1UsersConfigScarGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SystemScarSpec"
          description: (empty)
      summary: Get the system Spectro repository. Restricted to edge services
      tags:
      - users
  /v1/users/info:
    get:
      description: Returns a basic information of User for the specified uid.
      operationId: v1UsersInfoGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserInfo"
          description: OK
      summary: Returns the base information of specified User
      tags:
      - users
  /v1/users/kubectl/session/{sessionUid}:
    get:
      description: gets users kubectl session
      operationId: V1UsersKubectlSessionUid
      parameters:
      - in: path
        name: sessionUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserKubectlSession"
          description: OK
      summary: gets users kubectl session
      tags:
      - users
  /v1/users/meta:
    get:
      operationId: v1UsersMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UsersMetadata"
          description: An array of users metadata items
      summary: Retrieves a list of users metadata
      tags:
      - users
  /v1/users/password/change:
    patch:
      description: User password change request via current password and emailId
      operationId: V1UsersPasswordChange
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/V1UsersPasswordChange_request"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: User password change request using the user emailId
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/password/reset:
    patch:
      description: User password request will be sent to the supplied emailId
      operationId: v1UsersEmailPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UsersEmailPasswordReset_request"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: User password reset request using the email id
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/summary:
    post:
      operationId: v1UsersSummaryGet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UsersSummarySpec"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UsersSummaryList"
          description: An array of users summary items
      summary: Retrieves a list of users summary with provided filter spec
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/system/features:
    get:
      description: Returns the users system feature
      operationId: v1UsersSystemFeature
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1SystemFeatures"
          description: OK
      summary: Returns the users system feature
      tags:
      - users
  /v1/users/system/macros:
    delete:
      operationId: v1UsersSystemMacrosDeleteByMacroName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Delete the macros for the system user by macro name
      tags:
      - users
      x-codegen-request-body-name: body
    get:
      operationId: v1UsersSystemMacrosList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Macros"
          description: OK
      summary: List the macros of the system
      tags:
      - users
    patch:
      operationId: v1UsersSystemMacrosUpdateByMacroName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros for the system user by macro name
      tags:
      - users
      x-codegen-request-body-name: body
    post:
      operationId: v1UsersSystemMacrosCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Create or add new macros for the system user
      tags:
      - users
      x-codegen-request-body-name: body
    put:
      operationId: v1UsersSystemMacrosUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1Macros"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update the macros of the system
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}:
    delete:
      description: Deletes the specified User for given uid
      operationId: v1UsersUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified User
      tags:
      - users
    get:
      description: Returns a User for the specified uid.
      operationId: v1UsersUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1User"
          description: OK
      summary: Returns the specified User
      tags:
      - users
    patch:
      description: User is patched for the specified information
      operationId: v1UsersUidPatch
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Patches the specified User
      tags:
      - users
      x-codegen-request-body-name: body
    put:
      description: A user is created for the given user context
      operationId: v1UsersUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserUpdateEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update User
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/password/change:
    patch:
      description: User password change request via current password
      operationId: v1UsersUidPasswordChange
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UsersUidPasswordChange_request"
        required: true
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: User password change request using the user uid
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/password/reset:
    patch:
      description: "User password reset request, will send the password reset option\
        \ through the emailId"
      operationId: v1UsersUidPasswordReset
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: User password reset request using the user uid
      tags:
      - users
  /v1/users/{uid}/projects:
    get:
      description: Returns a User with projects and roles
      operationId: v1UsersProjectRoles
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ProjectRolesEntity"
          description: OK
      summary: Returns the specified User Projects and Roles information
      tags:
      - users
    put:
      description: User is updated with projects and roles
      operationId: v1UsersProjectRolesPut
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ProjectRolesPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the projects and roles for user
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/resourceRoles:
    get:
      description: Returns resource roles for user
      operationId: v1UsersUidResourceRoles
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ResourceRoles"
          description: OK
      summary: Returns the specified individual and resource roles for a user
      tags:
      - users
    post:
      description: Resource roles added to specific user
      operationId: v1UsersUidResourceRolesCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceRolesUpdateEntity"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Add resource roles for user
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/resourceRoles/{resourceRoleUid}:
    delete:
      operationId: v1UsersUidResourceRolesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: resourceRoleUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deleted the resource roles from user
      tags:
      - users
    patch:
      description: Specific resource roles fo user is updated
      operationId: v1UsersResourceRolesUidUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: resourceRoleUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ResourceRolesUpdateEntity"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the resource roles for user
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/roles:
    get:
      description: Returns roles clubbed from team
      operationId: v1UsersUidRoles
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1UserRolesEntity"
          description: OK
      summary: Returns the specified individual and team roles for a user
      tags:
      - users
    put:
      description: User is updated with roles
      operationId: v1UsersUidRolesUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserRoleUIDs"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the roles for user
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/users/{uid}/status/loginMode:
    patch:
      operationId: v1UsersStatusLoginMode
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UserStatusLoginMode"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Users status login mode
      tags:
      - users
      x-codegen-request-body-name: body
  /v1/workspaces:
    post:
      operationId: v1WorkspacesCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create workspace
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/teams/{teamUid}/roles:
    get:
      operationId: v1TeamsWorkspaceGetRoles
      parameters:
      - in: path
        name: teamUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceScopeRoles"
          description: OK
      summary: Returns the specified team's workspaces and roles data
      tags:
      - workspaces
    put:
      operationId: v1TeamsWorkspaceRolesPut
      parameters:
      - in: path
        name: teamUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspacesRolesPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the workspace roles for the specified team
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/users/{userUid}/roles:
    get:
      description: Returns a User with workspaces and roles
      operationId: v1UsersWorkspaceGetRoles
      parameters:
      - in: path
        name: userUid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceScopeRoles"
          description: OK
      summary: Returns the specified User workspaces and Roles information
      tags:
      - workspaces
    put:
      description: User is updated with workspace roles
      operationId: v1UsersWorkspaceRolesPut
      parameters:
      - in: path
        name: userUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspacesRolesPatch"
        required: true
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the workspace roles for user
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/validate/name:
    get:
      operationId: v1WorkspacesValidateName
      parameters:
      - in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Ok response without content
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Validates the workspace name
      tags:
      - workspaces
  /v1/workspaces/{uid}:
    delete:
      operationId: v1WorkspacesUidDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified workspace
      tags:
      - workspaces
    get:
      operationId: v1WorkspacesUidGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Workspace"
          description: OK
      summary: Returns the specified workspace
      tags:
      - workspaces
  /v1/workspaces/{uid}/backup:
    delete:
      operationId: v1WorkspaceOpsBackupDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceBackupDeleteEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Delete workspace backup
      tags:
      - workspaces
      x-codegen-request-body-name: body
    get:
      operationId: v1WorkspaceOpsBackupGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: backupRequestUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceBackup"
          description: OK
      summary: Returns the  workspace backup result
      tags:
      - workspaces
    post:
      operationId: v1WorkspaceOpsBackupCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceBackupConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create workspace backup settings
      tags:
      - workspaces
      x-codegen-request-body-name: body
    put:
      operationId: v1WorkspaceOpsBackupUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceBackupConfigEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Update workspace backup settings
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/backup/onDemand:
    post:
      operationId: v1WorkspaceOpsBackupOnDemandCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceBackupConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create On demand Workspace Backup
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/clusterNamespaces:
    put:
      operationId: v1WorkspacesUidClusterNamespacesUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceClusterNamespacesEntity"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified workspace namespaces
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/clusterRbacs:
    post:
      operationId: v1WorkspacesClusterRbacCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterRbac"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create cluster rbac in workspace
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/clusterRbacs/{clusterRbacUid}:
    delete:
      operationId: v1WorkspacesUidClusterRbacDelete
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: clusterRbacUid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The resource was deleted successfully
      summary: Deletes the specified workspace cluster rbac
      tags:
      - workspaces
    put:
      operationId: v1WorkspacesUidClusterRbacUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: path
        name: clusterRbacUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ClusterRbac"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified workspace cluster rbac
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/meta:
    put:
      operationId: v1WorkspacesUidMetaUpdate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ObjectMeta"
        required: false
      responses:
        "204":
          content: {}
          description: The resource was updated successfully
      summary: Updates the specified workspace meta
      tags:
      - workspaces
      x-codegen-request-body-name: body
  /v1/workspaces/{uid}/restore:
    get:
      operationId: v1WorkspaceOpsRestoreGet
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      - in: query
        name: restoreRequestUid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1WorkspaceRestore"
          description: OK
      summary: Returns the  workspace restore result
      tags:
      - workspaces
  /v1/workspaces/{uid}/restore/onDemand:
    post:
      operationId: v1WorkspaceOpsRestoreOnDemandCreate
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1WorkspaceRestoreConfigEntity"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Uid"
          description: Created successfully
          headers:
            AuditUid:
              description: Audit uid for the request
              schema:
                type: string
      summary: Create On demand Workspace Restore
      tags:
      - workspaces
      x-codegen-request-body-name: body
components:
  schemas:
    V1AwsAccountSts:
      description: AWS cloud account sts
      example:
        accountId: accountId
        partition: aws
        externalId: externalId
      properties:
        accountId:
          description: "A 12-digit number, such as 123456789012, that uniquely identifies\
            \ an AWS account"
          type: string
        externalId:
          description: "It can be passed to the AssumeRole API of the STS. It can\
            \ be used in the condition element in a role's trust policy, allowing\
            \ the role to be assumed only when a certain value is present in the external\
            \ ID"
          type: string
        partition:
          $ref: "#/components/schemas/v1AwsPartition"
      type: object
    V1AwsPropertiesValidateSpec:
      description: AWS properties validate spec
      example:
        sshKeyName: sshKeyName
        region: region
      properties:
        region:
          type: string
        sshKeyName:
          type: string
      type: object
    V1EksPropertiesValidateSpec:
      description: Eks properties validate spec
      example:
        sshKeyName: sshKeyName
        vpcId: vpcId
        name: name
        cloudAccountUid: cloudAccountUid
        subnets:
        - subnets
        - subnets
        region: region
      properties:
        cloudAccountUid:
          type: string
        name:
          type: string
        region:
          type: string
        sshKeyName:
          type: string
        subnets:
          items:
            type: string
          type: array
        vpcId:
          type: string
      type: object
    V1GcpPropertiesValidateSpec:
      description: Gcp properties validate spec
      example:
        cloudAccountUid: cloudAccountUid
        azs:
        - azs
        - azs
        region: region
        projectId: projectId
      properties:
        azs:
          items:
            type: string
          type: array
        cloudAccountUid:
          type: string
        projectId:
          type: string
        region:
          type: string
      type: object
    V1PasswordsBlockList:
      description: List of blocklisted passwords
      example:
        spec:
          passwords:
          - passwords
          - passwords
      properties:
        spec:
          $ref: "#/components/schemas/v1PasswordsBlockListEntity"
      type: object
    urlEncodedBase64:
      format: url-encoded-base64
      type: string
    v1.AzureAccountEntitySpec:
      example:
        clientId: clientId
        tenantId: tenantId
        clientSecret: clientSecret
        subscriptionId: subscriptionId
        clientCloud: public
      properties:
        clientCloud:
          default: public
          description: Contains configuration for Azure cloud
          enum:
          - azure-china
          - azure-government
          - public
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        subscriptionId:
          type: string
        tenantId:
          type: string
      type: object
    v1.CloudWatchConfig:
      description: Cloud watch config entity
      properties:
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        group:
          description: Name of the group
          type: string
        region:
          description: Name of the region
          type: string
        stream:
          description: Name of the stream
          type: string
      type: object
    v1.DataSinkCloudWatchConfig:
      description: Data sink cloud watch config
      properties:
        payload:
          description: List of data sink payload entities
          items:
            $ref: "#/components/schemas/v1.DataSinkPayload"
          type: array
          uniqueItems: true
        spec:
          $ref: "#/components/schemas/v1.CloudWatchConfig"
      type: object
    v1.DataSinkPayload:
      additionalProperties:
        properties: {}
        type: object
      description: Data sink payload entity
      properties:
        refUid:
          description: RefUid of the data sink payload
          type: string
        timestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1.DataSinkPayloads:
      description: List of data sink payload entities
      items:
        $ref: "#/components/schemas/v1.DataSinkPayload"
      type: array
      uniqueItems: true
    v1AADProfile:
      description: AADProfile - AAD integration is managed by AKS.
      example:
        adminGroupObjectIDs:
        - adminGroupObjectIDs
        - adminGroupObjectIDs
        managed: true
      properties:
        adminGroupObjectIDs:
          description: AdminGroupObjectIDs - AAD group object IDs that will have admin
            role of the cluster.
          items:
            type: string
          type: array
        managed:
          description: Managed - Whether to enable managed AAD.
          type: boolean
          x-omitempty: false
      required:
      - adminGroupObjectIDs
      - managed
      type: object
    v1APIEndpoint:
      description: APIEndpoint represents a reachable Kubernetes API endpoint.
      example:
        port: 0
        host: host
      properties:
        host:
          description: The hostname on which the API server is serving.
          type: string
        port:
          description: The port on which the API server is serving.
          format: int32
          type: integer
      required:
      - host
      - port
      type: object
    v1APIServerAccessProfile:
      description: APIServerAccessProfile - access profile for AKS API server.
      example:
        privateDNSZone: privateDNSZone
        enablePrivateClusterPublicFQDN: true
        enablePrivateCluster: true
        authorizedIPRanges:
        - ""
        - ""
      properties:
        authorizedIPRanges:
          description: AuthorizedIPRanges - Authorized IP Ranges to kubernetes API
            server.
          items:
            default: ""
            type: string
          type: array
        enablePrivateCluster:
          description: EnablePrivateCluster - Whether to create the cluster as a private
            cluster or not.
          type: boolean
        enablePrivateClusterPublicFQDN:
          description: EnablePrivateClusterPublicFQDN - Whether to create additional
            public FQDN for private cluster or not.
          type: boolean
        privateDNSZone:
          description: PrivateDNSZone - Private dns zone mode for private cluster.
          type: string
      type: object
    v1AWSVolumeTypes:
      description: AWS Volume Types
      example:
        volumeTypes:
        - maxIops: maxIops
          name: name
          id: id
          maxThroughPut: maxThroughPut
        - maxIops: maxIops
          name: name
          id: id
          maxThroughPut: maxThroughPut
      properties:
        volumeTypes:
          items:
            $ref: "#/components/schemas/v1AwsVolumeType"
          type: array
      type: object
    v1AclMeta:
      description: Resource access control information (Read-only response data)
      example:
        projectUid: projectUid
        tenantUid: tenantUid
        ownerUid: ownerUid
      properties:
        ownerUid:
          description: User or service uid which created the resource
          type: string
        projectUid:
          description: Project's uid if the resource is under a project
          type: string
        tenantUid:
          description: Tenant's uid
          type: string
      type: object
    v1ActivationsSystemResponse:
      properties:
        status:
          $ref: "#/components/schemas/v1ActivationsSystemResponse_status"
      type: object
    v1ActiveTenantResources:
      description: Active resources of tenant
      properties:
        activeResources:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    v1Address:
      description: Tenant Address
      example:
        country: country
        pincode: pincode
        city: city
        addressLine1: addressLine1
        addressLine2: addressLine2
        state: state
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        pincode:
          type: string
        state:
          type: string
      type: object
    v1Alert:
      example:
        component: component
        channels:
        - uid: uid
          createdBy: createdBy
          identifiers:
          - identifiers
          - identifiers
          alertAllUsers: true
          http:
            headers: "{}"
            method: method
            body: body
            url: url
          isActive: true
          type: email
          status:
            isSucceeded: true
            time: 2000-01-23T04:56:07.000+00:00
            message: message
        - uid: uid
          createdBy: createdBy
          identifiers:
          - identifiers
          - identifiers
          alertAllUsers: true
          http:
            headers: "{}"
            method: method
            body: body
            url: url
          isActive: true
          type: email
          status:
            isSucceeded: true
            time: 2000-01-23T04:56:07.000+00:00
            message: message
      properties:
        channels:
          items:
            $ref: "#/components/schemas/v1Channel"
          type: array
        component:
          type: string
      type: object
    v1AlertEntity:
      properties:
        channels:
          items:
            $ref: "#/components/schemas/v1Channel"
          type: array
      type: object
    v1AlertNotificationStatus:
      example:
        isSucceeded: true
        time: 2000-01-23T04:56:07.000+00:00
        message: message
      properties:
        isSucceeded:
          type: boolean
          x-omitempty: false
        message:
          type: string
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1Alerts:
      items:
        $ref: "#/components/schemas/v1Alert"
      type: array
    v1AmiTypes:
      description: List of AWS AMI types
      example:
        amiTypes:
        - amiTypes
        - amiTypes
      properties:
        amiTypes:
          description: List of AWS AMI types
          items:
            type: string
          type: array
      type: object
    v1ApiKey:
      description: API key information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          expiry: 2000-01-23T04:56:07.000+00:00
          user:
            firstName: firstName
            lastName: lastName
            uid: uid
          key: key
        status:
          isActive: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ApiKeySpec"
        status:
          $ref: "#/components/schemas/v1ApiKeyStatus"
      type: object
    v1ApiKeyActiveState:
      properties:
        isActive:
          description: API key active state
          type: boolean
      type: object
    v1ApiKeyCreateResponse:
      description: Response of create API key
      example:
        uid: uid
        apiKey: apiKey
      properties:
        apiKey:
          description: Api key is used for authentication
          type: string
        uid:
          description: User uid
          type: string
      type: object
    v1ApiKeyEntity:
      description: API key request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ApiKeySpecEntity"
      type: object
    v1ApiKeySpec:
      description: API key specification
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        user:
          firstName: firstName
          lastName: lastName
          uid: uid
        key: key
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        key:
          description: "Deprecated: API key field will be no longer available"
          type: string
        user:
          $ref: "#/components/schemas/v1ApiKeyUser"
      type: object
    v1ApiKeySpecEntity:
      description: API key specification
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        userUid:
          description: User to whom the API key has to be created
          type: string
      type: object
    v1ApiKeySpecUpdate:
      description: API key update request specification
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1ApiKeyStatus:
      description: API key status
      example:
        isActive: true
      properties:
        isActive:
          description: API key active state
          type: boolean
      type: object
    v1ApiKeyUpdate:
      description: API key update request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ApiKeySpecUpdate"
      type: object
    v1ApiKeyUser:
      description: API key user information
      example:
        firstName: firstName
        lastName: lastName
        uid: uid
      properties:
        firstName:
          description: First name of user
          type: string
        lastName:
          description: Last name of user
          type: string
        uid:
          description: User uid
          type: string
      type: object
    v1ApiKeys:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            expiry: 2000-01-23T04:56:07.000+00:00
            user:
              firstName: firstName
              lastName: lastName
              uid: uid
            key: key
          status:
            isActive: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            expiry: 2000-01-23T04:56:07.000+00:00
            user:
              firstName: firstName
              lastName: lastName
              uid: uid
            key: key
          status:
            isActive: true
      properties:
        items:
          description: List of API keys
          items:
            $ref: "#/components/schemas/v1ApiKey"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ApiProfiler:
      properties:
        api:
          type: string
        endTime:
          format: date-time
          type: string
        ops:
          items:
            type: string
          type: array
        requestUid:
          type: string
        startTime:
          format: date-time
          type: string
        timeTaken:
          format: int64
          type: integer
      type: object
    v1AppDeployment:
      description: Application deployment response
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          profile:
            template:
              appTiers:
              - uid: uid
                name: name
                type: manifest
                version: version
              - uid: uid
                name: name
                type: manifest
                version: version
              registryRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            metadata:
              uid: uid
              name: name
              version: version
          config:
            target:
              envRef:
                uid: uid
                name: name
                type: type
              clusterRef:
                uid: uid
                name: name
                deploymentClusterType: virtual
        status:
          lifecycleStatus:
            msg: msg
            status: Pausing
          appTiers:
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          state: state
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppDeploymentSpec"
        status:
          $ref: "#/components/schemas/v1AppDeploymentStatus"
      type: object
    v1AppDeploymentClusterGroupConfigEntity:
      description: Application deployment cluster group config
      properties:
        targetSpec:
          $ref: "#/components/schemas/v1AppDeploymentClusterGroupTargetSpec"
      type: object
    v1AppDeploymentClusterGroupEntity:
      description: Application deployment cluster group request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1AppDeploymentClusterGroupSpec"
      type: object
    v1AppDeploymentClusterGroupSpec:
      description: Application deployment cluster group spec
      properties:
        config:
          $ref: "#/components/schemas/v1AppDeploymentClusterGroupConfigEntity"
        profile:
          $ref: "#/components/schemas/v1AppDeploymentProfileEntity"
      type: object
    v1AppDeploymentClusterGroupTargetSpec:
      description: Application deployment cluster group target spec
      properties:
        clusterGroupUid:
          description: Application deployment cluster group uid
          type: string
        clusterLimits:
          $ref: "#/components/schemas/v1AppDeploymentTargetClusterLimits"
        clusterName:
          description: Application deployment virtual cluster name
          type: string
      required:
      - clusterGroupUid
      - clusterName
      type: object
    v1AppDeploymentClusterHealth:
      description: Application deployment cluster health status
      example:
        state: state
      properties:
        state:
          type: string
      type: object
    v1AppDeploymentClusterRef:
      description: Application deployment cluster reference
      example:
        uid: uid
        name: name
        deploymentClusterType: virtual
      properties:
        deploymentClusterType:
          description: "Application deployment source cluster type[ \"virtualCluster\"\
            , \"hostCluster\" ]"
          enum:
          - virtual
          - host
          type: string
        name:
          description: Application deployment cluster name
          type: string
        uid:
          description: Application deployment cluster uid
          type: string
      type: object
    v1AppDeploymentClusterRefSummary:
      description: Application deployment cluster reference
      example:
        uid: uid
        name: name
        deploymentClusterType: virtual
      properties:
        deploymentClusterType:
          description: "Application deployment source cluster type[ \"virtualCluster\"\
            , \"hostCluster\" ]"
          enum:
          - virtual
          - host
          type: string
        name:
          description: Application deployment source cluster name
          type: string
        uid:
          description: Application deployment source cluster uid
          type: string
      type: object
    v1AppDeploymentClusterStatus:
      description: Application deployment cluster status
      example:
        health:
          state: state
        state: state
      properties:
        health:
          $ref: "#/components/schemas/v1AppDeploymentClusterHealth"
        state:
          type: string
      type: object
    v1AppDeploymentConfig:
      description: Application deployment config response
      example:
        target:
          envRef:
            uid: uid
            name: name
            type: type
          clusterRef:
            uid: uid
            name: name
            deploymentClusterType: virtual
      properties:
        target:
          $ref: "#/components/schemas/v1AppDeploymentTargetConfig"
      type: object
    v1AppDeploymentConfigSummary:
      description: Application deployment config summary
      example:
        target:
          clusterRef:
            uid: uid
            name: name
            deploymentClusterType: virtual
      properties:
        target:
          $ref: "#/components/schemas/v1AppDeploymentTargetConfigSummary"
      type: object
    v1AppDeploymentFilterSpec:
      description: Application deployment filter spec
      properties:
        appDeploymentName:
          $ref: "#/components/schemas/v1FilterString"
        clusterUids:
          $ref: "#/components/schemas/v1FilterArray"
        tags:
          $ref: "#/components/schemas/v1FilterArray"
      type: object
    v1AppDeploymentNotifications:
      description: Application deployment notifications
      example:
        isAvailable: true
      properties:
        isAvailable:
          type: boolean
          x-omitempty: false
      type: object
    v1AppDeploymentProfile:
      description: Application deployment profile
      example:
        template:
          appTiers:
          - uid: uid
            name: name
            type: manifest
            version: version
          - uid: uid
            name: name
            type: manifest
            version: version
          registryRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        metadata:
          uid: uid
          name: name
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1AppDeploymentProfileMeta"
        template:
          $ref: "#/components/schemas/v1AppProfileTemplate"
      type: object
    v1AppDeploymentProfileEntity:
      description: Application deployment profile request payload
      properties:
        appProfileUid:
          description: Application deployment profile uid
          type: string
      required:
      - appProfileUid
      type: object
    v1AppDeploymentProfileMeta:
      description: Application deployment profile metadata
      example:
        uid: uid
        name: name
        version: version
      properties:
        name:
          description: Application deployment profile name
          type: string
        uid:
          description: Application deployment profile uid
          type: string
        version:
          description: Application deployment profile version
          type: string
      type: object
    v1AppDeploymentProfileMetadataSummary:
      description: Application deployment profile metadata summary
      example:
        uid: uid
        name: name
        version: version
      properties:
        name:
          type: string
        uid:
          type: string
        version:
          type: string
      type: object
    v1AppDeploymentProfileSpec:
      description: Application deployment profile spec
      example:
        template:
          appTiers:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              registryUid: registryUid
              values: values
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              containerRegistryUid: containerRegistryUid
              sourceAppTierUid: sourceAppTierUid
              type: manifest
              installOrder: 0
              version: version
              properties:
              - format: format
                name: name
                type: type
                value: value
              - format: format
                name: name
                type: type
                value: value
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              registryUid: registryUid
              values: values
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              containerRegistryUid: containerRegistryUid
              sourceAppTierUid: sourceAppTierUid
              type: manifest
              installOrder: 0
              version: version
              properties:
              - format: format
                name: name
                type: type
                value: value
              - format: format
                name: name
                type: type
                value: value
          registryRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        metadata:
          uid: uid
          name: name
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1AppDeploymentProfileMeta"
        template:
          $ref: "#/components/schemas/v1AppProfileTemplateSpec"
      type: object
    v1AppDeploymentProfileSummary:
      description: Application deployment profile summary
      example:
        template:
          appTiers:
          - uid: uid
            name: name
            source:
              uid: uid
              addonSubType: addonSubType
              addonType: addonType
              name: name
              type: type
              logoUrl: logoUrl
            type: type
            version: version
          - uid: uid
            name: name
            source:
              uid: uid
              addonSubType: addonSubType
              addonType: addonType
              name: name
              type: type
              logoUrl: logoUrl
            type: type
            version: version
        metadata:
          uid: uid
          name: name
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1AppDeploymentProfileMetadataSummary"
        template:
          $ref: "#/components/schemas/v1AppProfileTemplateSummary"
      type: object
    v1AppDeploymentProfileVersion:
      description: Application deployment profile version
      example:
        uid: uid
        version: version
      properties:
        uid:
          description: Application deployment profile uid
          type: string
        version:
          description: Application deployment profile version
          type: string
      type: object
    v1AppDeploymentProfileVersions:
      description: Application deployment profile versions
      example:
        metadata:
          uid: uid
          name: name
          version: version
        latestVersions:
        - uid: uid
          version: version
        - uid: uid
          version: version
        availableVersions:
        - uid: uid
          version: version
        - uid: uid
          version: version
      properties:
        availableVersions:
          description: Application deployment profile available versions
          items:
            $ref: "#/components/schemas/v1AppDeploymentProfileVersion"
          type: array
        latestVersions:
          description: Application deployment profile latest versions
          items:
            $ref: "#/components/schemas/v1AppDeploymentProfileVersion"
          type: array
        metadata:
          $ref: "#/components/schemas/v1AppDeploymentProfileMeta"
      type: object
    v1AppDeploymentSortFields:
      enum:
      - appDeploymentName
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1AppDeploymentSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1AppDeploymentSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1AppDeploymentSpec:
      description: Application deployment spec
      example:
        profile:
          template:
            appTiers:
            - uid: uid
              name: name
              type: manifest
              version: version
            - uid: uid
              name: name
              type: manifest
              version: version
            registryRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          metadata:
            uid: uid
            name: name
            version: version
        config:
          target:
            envRef:
              uid: uid
              name: name
              type: type
            clusterRef:
              uid: uid
              name: name
              deploymentClusterType: virtual
      properties:
        config:
          $ref: "#/components/schemas/v1AppDeploymentConfig"
        profile:
          $ref: "#/components/schemas/v1AppDeploymentProfile"
      type: object
    v1AppDeploymentStatus:
      description: Application deployment status
      example:
        lifecycleStatus:
          msg: msg
          status: Pausing
        appTiers:
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        state: state
      properties:
        appTiers:
          description: Application deployment tiers
          items:
            $ref: "#/components/schemas/v1ClusterPackStatus"
          type: array
        lifecycleStatus:
          $ref: "#/components/schemas/v1LifecycleStatus"
        state:
          description: "Application deployment state [ \"Pending\", \"Deploying\"\
            , \"Deployed\", \"Updating\" ]"
          type: string
      type: object
    v1AppDeploymentStatusSummary:
      description: Application deployment status summary
      example:
        cluster:
          health:
            state: state
          state: state
        state: state
        notifications:
          isAvailable: true
      properties:
        cluster:
          $ref: "#/components/schemas/v1AppDeploymentClusterStatus"
        notifications:
          $ref: "#/components/schemas/v1AppDeploymentNotifications"
        state:
          type: string
      type: object
    v1AppDeploymentSummary:
      description: Application deployment summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          profile:
            template:
              appTiers:
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
            metadata:
              uid: uid
              name: name
              version: version
          config:
            target:
              clusterRef:
                uid: uid
                name: name
                deploymentClusterType: virtual
        status:
          cluster:
            health:
              state: state
            state: state
          state: state
          notifications:
            isAvailable: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppDeploymentSummary_spec"
        status:
          $ref: "#/components/schemas/v1AppDeploymentStatusSummary"
      type: object
    v1AppDeploymentTargetClusterLimits:
      description: Application deployment target cluster limits
      properties:
        cpu:
          description: CPU cores
          format: int32
          type: integer
        memoryMiB:
          description: Memory in MiB
          format: int32
          type: integer
        storageGiB:
          description: Storage in GiB
          format: int32
          type: integer
      type: object
    v1AppDeploymentTargetConfig:
      description: Application deployment target config response
      example:
        envRef:
          uid: uid
          name: name
          type: type
        clusterRef:
          uid: uid
          name: name
          deploymentClusterType: virtual
      properties:
        clusterRef:
          $ref: "#/components/schemas/v1AppDeploymentClusterRef"
        envRef:
          $ref: "#/components/schemas/v1AppDeploymentTargetEnvironmentRef"
      type: object
    v1AppDeploymentTargetConfigSummary:
      description: Application deployment target config summary
      example:
        clusterRef:
          uid: uid
          name: name
          deploymentClusterType: virtual
      properties:
        clusterRef:
          $ref: "#/components/schemas/v1AppDeploymentClusterRefSummary"
      type: object
    v1AppDeploymentTargetEnvironmentRef:
      description: Application deployment target environment reference
      example:
        uid: uid
        name: name
        type: type
      properties:
        name:
          description: Application deployment target resource name
          type: string
        type:
          description: "Application deployment target resource type [ \"nestedCluster\"\
            , \"clusterGroup\" ]"
          type: string
        uid:
          description: Application deployment target resource uid
          type: string
      type: object
    v1AppDeploymentVirtualClusterConfigEntity:
      description: Application deployment virtual cluster config
      properties:
        targetSpec:
          $ref: "#/components/schemas/v1AppDeploymentVirtualClusterTargetSpec"
      type: object
    v1AppDeploymentVirtualClusterEntity:
      description: Application deployment virtual cluster request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1AppDeploymentVirtualClusterSpec"
      type: object
    v1AppDeploymentVirtualClusterSpec:
      description: Application deployment virtual cluster spec
      properties:
        config:
          $ref: "#/components/schemas/v1AppDeploymentVirtualClusterConfigEntity"
        profile:
          $ref: "#/components/schemas/v1AppDeploymentProfileEntity"
      type: object
    v1AppDeploymentVirtualClusterTargetSpec:
      description: Application deployment virtual cluster target spec
      properties:
        clusterUid:
          description: Application deployment virtual cluster uid
          type: string
      required:
      - clusterUid
      type: object
    v1AppDeploymentsFilterSpec:
      description: Application deployment filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1AppDeploymentFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1AppDeploymentSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1AppDeploymentsSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        appDeployments:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            profile:
              template:
                appTiers:
                - uid: uid
                  name: name
                  source:
                    uid: uid
                    addonSubType: addonSubType
                    addonType: addonType
                    name: name
                    type: type
                    logoUrl: logoUrl
                  type: type
                  version: version
                - uid: uid
                  name: name
                  source:
                    uid: uid
                    addonSubType: addonSubType
                    addonType: addonType
                    name: name
                    type: type
                    logoUrl: logoUrl
                  type: type
                  version: version
              metadata:
                uid: uid
                name: name
                version: version
            config:
              target:
                clusterRef:
                  uid: uid
                  name: name
                  deploymentClusterType: virtual
          status:
            cluster:
              health:
                state: state
              state: state
            state: state
            notifications:
              isAvailable: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            profile:
              template:
                appTiers:
                - uid: uid
                  name: name
                  source:
                    uid: uid
                    addonSubType: addonSubType
                    addonType: addonType
                    name: name
                    type: type
                    logoUrl: logoUrl
                  type: type
                  version: version
                - uid: uid
                  name: name
                  source:
                    uid: uid
                    addonSubType: addonSubType
                    addonType: addonType
                    name: name
                    type: type
                    logoUrl: logoUrl
                  type: type
                  version: version
              metadata:
                uid: uid
                name: name
                version: version
            config:
              target:
                clusterRef:
                  uid: uid
                  name: name
                  deploymentClusterType: virtual
          status:
            cluster:
              health:
                state: state
              state: state
            state: state
            notifications:
              isAvailable: true
      properties:
        appDeployments:
          items:
            $ref: "#/components/schemas/v1AppDeploymentSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      type: object
    v1AppFeatureFreemium:
      description: Freemium information
      properties:
        activeClustersLimit:
          type: integer
          x-omitempty: false
        isFreemium:
          type: boolean
          x-omitempty: false
        overageUsageLimit:
          format: float64
          type: number
          x-omitempty: false
        totalUsageLimit:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1AppFeatures:
      description: System app features
      properties:
        developerCredit:
          $ref: "#/components/schemas/v1DeveloperCredit"
        freeCloudCredit:
          type: boolean
          x-omitempty: false
        freemium:
          $ref: "#/components/schemas/v1AppFeatureFreemium"
      type: object
    v1AppProfile:
      description: Application profile response
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          parentUid: parentUid
          template:
            appTiers:
            - uid: uid
              name: name
              type: manifest
              version: version
            - uid: uid
              name: name
              type: manifest
              version: version
            registryRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          versions:
          - uid: uid
            version: version
          - uid: uid
            version: version
          version: version
        status:
          inUseApps:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppProfile_spec"
        status:
          $ref: "#/components/schemas/v1AppProfile_status"
      type: object
    v1AppProfileCloneEntity:
      description: Application profile clone request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1AppProfileCloneMetaInputEntity"
      type: object
    v1AppProfileCloneMetaInputEntity:
      description: Application profile clone metadata
      properties:
        name:
          description: Application profile name
          type: string
        target:
          $ref: "#/components/schemas/v1AppProfileCloneTarget"
        version:
          description: Application profile version
          type: string
      required:
      - name
      type: object
    v1AppProfileCloneTarget:
      description: Application profile clone target
      properties:
        projectUid:
          description: Application profile clone target project uid
          type: string
      type: object
    v1AppProfileEntity:
      description: Application profile request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1AppProfileEntity_spec"
      type: object
    v1AppProfileFilterSpec:
      description: Application profile filter spec
      properties:
        profileName:
          $ref: "#/components/schemas/v1FilterString"
        tags:
          $ref: "#/components/schemas/v1FilterArray"
        version:
          $ref: "#/components/schemas/v1FilterVersionString"
      type: object
    v1AppProfileMetaEntity:
      description: Application profile metadata request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1AppProfileMetaUpdateEntity"
        version:
          description: Application profile version
          type: string
      required:
      - metadata
      type: object
    v1AppProfileMetaUpdateEntity:
      description: Application profile metadata update request payload
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Application profile annotations
          type: object
        labels:
          additionalProperties:
            type: string
          description: Application profile labels
          type: object
      type: object
    v1AppProfileMetadata:
      description: Application profile metadata summary
      example:
        metadata:
          uid: uid
          name: name
        spec:
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectEntity"
        spec:
          $ref: "#/components/schemas/v1AppProfileMetadata_spec"
      type: object
    v1AppProfileSortFields:
      enum:
      - profileName
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1AppProfileSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1AppProfileSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1AppProfileSummary:
      description: Application profile summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          parentUid: parentUid
          template:
            appTiers:
            - uid: uid
              name: name
              source:
                uid: uid
                addonSubType: addonSubType
                addonType: addonType
                name: name
                type: type
                logoUrl: logoUrl
              type: type
              version: version
            - uid: uid
              name: name
              source:
                uid: uid
                addonSubType: addonSubType
                addonType: addonType
                name: name
                type: type
                logoUrl: logoUrl
              type: type
              version: version
          versions:
          - uid: uid
            version: version
          - uid: uid
            version: version
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppProfileSummary_spec"
      type: object
    v1AppProfileTemplate:
      description: Application profile template information
      example:
        appTiers:
        - uid: uid
          name: name
          type: manifest
          version: version
        - uid: uid
          name: name
          type: manifest
          version: version
        registryRefs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
      properties:
        appTiers:
          description: Application profile tiers
          items:
            $ref: "#/components/schemas/v1AppTierRef"
          type: array
          uniqueItems: true
        registryRefs:
          description: Application profile registries reference
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
      type: object
    v1AppProfileTemplateEntity:
      description: Application profile template spec
      properties:
        appTiers:
          description: Application profile tiers
          items:
            $ref: "#/components/schemas/v1AppTierEntity"
          type: array
          uniqueItems: true
      type: object
    v1AppProfileTemplateSpec:
      description: Application profile template specs
      example:
        appTiers:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            registryUid: registryUid
            values: values
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            containerRegistryUid: containerRegistryUid
            sourceAppTierUid: sourceAppTierUid
            type: manifest
            installOrder: 0
            version: version
            properties:
            - format: format
              name: name
              type: type
              value: value
            - format: format
              name: name
              type: type
              value: value
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            registryUid: registryUid
            values: values
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            containerRegistryUid: containerRegistryUid
            sourceAppTierUid: sourceAppTierUid
            type: manifest
            installOrder: 0
            version: version
            properties:
            - format: format
              name: name
              type: type
              value: value
            - format: format
              name: name
              type: type
              value: value
        registryRefs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
      properties:
        appTiers:
          description: Application profile tiers
          items:
            $ref: "#/components/schemas/v1AppTier"
          type: array
          uniqueItems: true
        registryRefs:
          description: Application profile registries reference
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
      type: object
    v1AppProfileTemplateSummary:
      description: Application profile template summary
      example:
        appTiers:
        - uid: uid
          name: name
          source:
            uid: uid
            addonSubType: addonSubType
            addonType: addonType
            name: name
            type: type
            logoUrl: logoUrl
          type: type
          version: version
        - uid: uid
          name: name
          source:
            uid: uid
            addonSubType: addonSubType
            addonType: addonType
            name: name
            type: type
            logoUrl: logoUrl
          type: type
          version: version
      properties:
        appTiers:
          items:
            $ref: "#/components/schemas/v1AppTierSummary"
          type: array
      type: object
    v1AppProfileTiers:
      description: Application profile tiers information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          appTiers:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              registryUid: registryUid
              values: values
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              containerRegistryUid: containerRegistryUid
              sourceAppTierUid: sourceAppTierUid
              type: manifest
              installOrder: 0
              version: version
              properties:
              - format: format
                name: name
                type: type
                value: value
              - format: format
                name: name
                type: type
                value: value
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              registryUid: registryUid
              values: values
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              containerRegistryUid: containerRegistryUid
              sourceAppTierUid: sourceAppTierUid
              type: manifest
              installOrder: 0
              version: version
              properties:
              - format: format
                name: name
                type: type
                value: value
              - format: format
                name: name
                type: type
                value: value
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppProfileTiersSpec"
      type: object
    v1AppProfileTiersSpec:
      description: Application profile tiers information
      example:
        appTiers:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            registryUid: registryUid
            values: values
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            containerRegistryUid: containerRegistryUid
            sourceAppTierUid: sourceAppTierUid
            type: manifest
            installOrder: 0
            version: version
            properties:
            - format: format
              name: name
              type: type
              value: value
            - format: format
              name: name
              type: type
              value: value
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            registryUid: registryUid
            values: values
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            containerRegistryUid: containerRegistryUid
            sourceAppTierUid: sourceAppTierUid
            type: manifest
            installOrder: 0
            version: version
            properties:
            - format: format
              name: name
              type: type
              value: value
            - format: format
              name: name
              type: type
              value: value
      properties:
        appTiers:
          description: Application profile tiers
          items:
            $ref: "#/components/schemas/v1AppTier"
          type: array
          uniqueItems: true
      type: object
    v1AppProfileVersion:
      description: Application profile version
      example:
        uid: uid
        version: version
      properties:
        uid:
          type: string
        version:
          type: string
      type: object
    v1AppProfilesFilterSpec:
      description: Application profile filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1AppProfileFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1AppProfileSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1AppProfilesMetadata:
      example:
        appProfiles:
        - metadata:
            uid: uid
            name: name
          spec:
            version: version
        - metadata:
            uid: uid
            name: name
          spec:
            version: version
      properties:
        appProfiles:
          items:
            $ref: "#/components/schemas/v1AppProfileMetadata"
          type: array
          uniqueItems: true
      type: object
    v1AppProfilesSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        appProfiles:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            parentUid: parentUid
            template:
              appTiers:
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
            versions:
            - uid: uid
              version: version
            - uid: uid
              version: version
            version: version
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            parentUid: parentUid
            template:
              appTiers:
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
              - uid: uid
                name: name
                source:
                  uid: uid
                  addonSubType: addonSubType
                  addonType: addonType
                  name: name
                  type: type
                  logoUrl: logoUrl
                type: type
                version: version
            versions:
            - uid: uid
              version: version
            - uid: uid
              version: version
            version: version
      properties:
        appProfiles:
          items:
            $ref: "#/components/schemas/v1AppProfileSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      type: object
    v1AppTier:
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          registryUid: registryUid
          values: values
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          containerRegistryUid: containerRegistryUid
          sourceAppTierUid: sourceAppTierUid
          type: manifest
          installOrder: 0
          version: version
          properties:
          - format: format
            name: name
            type: type
            value: value
          - format: format
            name: name
            type: type
            value: value
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AppTierSpec"
      type: object
    v1AppTierEntity:
      description: Application tier request payload
      properties:
        containerRegistryUid:
          description: Application tier container registry uid
          type: string
        installOrder:
          description: Application tier installation order
          format: int32
          type: integer
        manifests:
          description: Application tier manifests
          items:
            $ref: "#/components/schemas/v1ManifestInputEntity"
          type: array
        name:
          description: Application tier name
          type: string
        properties:
          description: Application tier properties
          items:
            $ref: "#/components/schemas/v1AppTierPropertyEntity"
          type: array
        registryUid:
          description: Application tier registry uid
          type: string
        sourceAppTierUid:
          description: Application tier source pack uid
          type: string
        type:
          $ref: "#/components/schemas/v1AppTierType"
        values:
          description: Application tier configuration values in yaml format
          type: string
        version:
          description: Application tier version
          type: string
      required:
      - name
      type: object
    v1AppTierManifests:
      description: Application tier manifests data
      example:
        manifests:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            published:
              digest: digest
              content: content
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            published:
              digest: digest
              content: content
      properties:
        manifests:
          description: Application tier manifests array
          items:
            $ref: "#/components/schemas/v1Manifest"
          type: array
      type: object
    v1AppTierPatchEntity:
      description: Application tier patch request payload
      properties:
        appTier:
          $ref: "#/components/schemas/v1AppTierEntity"
        replaceWithAppTier:
          description: Application tier UID to be replaced with new tier
          type: string
      type: object
    v1AppTierProperty:
      description: Application tier property object
      example:
        format: format
        name: name
        type: type
        value: value
      properties:
        format:
          description: Application tier property format
          type: string
        name:
          description: Application tier property name
          type: string
        type:
          description: Application tier property data type
          type: string
        value:
          description: Application tier property value
          type: string
      type: object
    v1AppTierPropertyEntity:
      description: Application tier property object
      properties:
        name:
          description: Application tier property name
          type: string
        value:
          description: Application tier property value
          type: string
      type: object
    v1AppTierRef:
      description: Application tier reference
      example:
        uid: uid
        name: name
        type: manifest
        version: version
      properties:
        name:
          description: Application tier name
          type: string
        type:
          $ref: "#/components/schemas/v1AppTierType"
        uid:
          description: Application tier uid to uniquely identify the tier
          type: string
        version:
          description: Application tier version
          type: string
      type: object
    v1AppTierResolvedValues:
      description: Application tier resolved macro values
      example:
        resolved:
          key: resolved
      properties:
        resolved:
          additionalProperties:
            type: string
          description: Application tier resolved macro values map
          type: object
      type: object
    v1AppTierSourceSummary:
      description: Application profile's tier source information
      example:
        uid: uid
        addonSubType: addonSubType
        addonType: addonType
        name: name
        type: type
        logoUrl: logoUrl
      properties:
        addonSubType:
          type: string
        addonType:
          type: string
        logoUrl:
          type: string
        name:
          type: string
        type:
          type: string
        uid:
          type: string
      type: object
    v1AppTierSpec:
      description: Application tier specs
      example:
        registryUid: registryUid
        values: values
        manifests:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        containerRegistryUid: containerRegistryUid
        sourceAppTierUid: sourceAppTierUid
        type: manifest
        installOrder: 0
        version: version
        properties:
        - format: format
          name: name
          type: type
          value: value
        - format: format
          name: name
          type: type
          value: value
      properties:
        containerRegistryUid:
          description: Application tier container registry uid
          type: string
        installOrder:
          description: Application tier installation order
          format: int32
          type: integer
        manifests:
          description: Application tier attached manifest content in yaml format
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
        properties:
          description: Application tier properties
          items:
            $ref: "#/components/schemas/v1AppTierProperty"
          type: array
        registryUid:
          description: Registry uid
          type: string
        sourceAppTierUid:
          description: Application tier source pack uid
          type: string
        type:
          $ref: "#/components/schemas/v1AppTierType"
        values:
          description: Application tier configuration values in yaml format
          type: string
        version:
          description: Application tier version
          type: string
      type: object
    v1AppTierSummary:
      description: Application profile's tier summary
      example:
        uid: uid
        name: name
        source:
          uid: uid
          addonSubType: addonSubType
          addonType: addonType
          name: name
          type: type
          logoUrl: logoUrl
        type: type
        version: version
      properties:
        name:
          type: string
        source:
          $ref: "#/components/schemas/v1AppTierSourceSummary"
        type:
          type: string
        uid:
          type: string
        version:
          type: string
      type: object
    v1AppTierType:
      default: manifest
      enum:
      - manifest
      - helm
      - operator-instance
      - container
      type: string
    v1AppTierUpdateEntity:
      description: Application tier update request payload
      properties:
        containerRegistryUid:
          description: Application tier container registry uid
          type: string
        installOrder:
          description: Application tier installation order
          format: int32
          type: integer
        manifests:
          description: Application tier manifests
          items:
            $ref: "#/components/schemas/v1ManifestRefUpdateEntity"
          type: array
        name:
          description: Application tier name
          type: string
        properties:
          description: Application tier properties
          items:
            $ref: "#/components/schemas/v1AppTierPropertyEntity"
          type: array
        values:
          description: Application tier configuration values in yaml format
          type: string
        version:
          description: Application tier version
          type: string
      type: object
    v1AppVersion:
      description: spectro application management app version information
      properties:
        intermediateVersions:
          items:
            $ref: "#/components/schemas/v1ReleaseVersion"
          type: array
          uniqueItems: true
        latestVerson:
          $ref: "#/components/schemas/v1ReleaseVersion"
      type: object
    v1ArchType:
      default: amd64
      enum:
      - amd64
      - arm64
      type: string
    v1AsyncOperationIdEntity:
      description: Async operation id
      example:
        operationId: operationId
      properties:
        operationId:
          description: OperationId for a particular sync operation id
          type: string
      type: object
    v1AsyncResult:
      properties:
        data:
          properties: {}
          type: object
        error:
          type: string
        isSuccess:
          type: boolean
      type: object
    v1AsyncStatus:
      properties:
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        result:
          $ref: "#/components/schemas/v1AsyncResult"
        stage:
          type: string
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1Audit:
      description: Audit response payload
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          actor:
            actorType: user
            project:
              uid: uid
              name: name
            serviceName: serviceName
            user:
              firstName: firstName
              lastName: lastName
              uid: uid
              org: org
              emailId: emailId
          actionType: create
          resource:
            uid: uid
            kind: kind
            name: name
            label: label
          actionMsg: actionMsg
          contentMsg: contentMsg
          userMsg: userMsg
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AuditSpec"
      type: object
    v1AuditActor:
      description: Audit actor object
      example:
        actorType: user
        project:
          uid: uid
          name: name
        serviceName: serviceName
        user:
          firstName: firstName
          lastName: lastName
          uid: uid
          org: org
          emailId: emailId
      properties:
        actorType:
          enum:
          - user
          - system
          - service
          type: string
        project:
          $ref: "#/components/schemas/v1ProjectMeta"
        serviceName:
          type: string
        user:
          $ref: "#/components/schemas/v1UserMeta"
      type: object
    v1AuditMsgUpdate:
      description: Audit user message update request payload
      properties:
        userMsg:
          description: User message
          maxLength: 255
          minLength: 3
          type: string
      type: object
    v1AuditResourceReference:
      description: Audit resource reference object
      example:
        uid: uid
        kind: kind
        name: name
        label: label
      properties:
        kind:
          description: Audit resource type
          type: string
        label:
          description: Audit resource label
          type: string
        name:
          description: Audit resource name
          type: string
        uid:
          description: Audit resource uid
          type: string
      required:
      - uid
      type: object
    v1AuditSpec:
      description: Audit specifications
      example:
        actor:
          actorType: user
          project:
            uid: uid
            name: name
          serviceName: serviceName
          user:
            firstName: firstName
            lastName: lastName
            uid: uid
            org: org
            emailId: emailId
        actionType: create
        resource:
          uid: uid
          kind: kind
          name: name
          label: label
        actionMsg: actionMsg
        contentMsg: contentMsg
        userMsg: userMsg
      properties:
        actionMsg:
          description: Audit action message
          type: string
        actionType:
          enum:
          - create
          - update
          - delete
          - publish
          - deploy
          type: string
        actor:
          $ref: "#/components/schemas/v1AuditActor"
        contentMsg:
          description: Audit content message
          type: string
        resource:
          $ref: "#/components/schemas/v1AuditResourceReference"
        userMsg:
          description: Audit user message
          type: string
      type: object
    v1AuditSysMsg:
      description: Audit system message
      example:
        actionMsg: actionMsg
        contentMsg: contentMsg
      properties:
        actionMsg:
          description: Audit resource action message
          type: string
        contentMsg:
          description: Audit resource content message
          type: string
      type: object
    v1Audits:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            actor:
              actorType: user
              project:
                uid: uid
                name: name
              serviceName: serviceName
              user:
                firstName: firstName
                lastName: lastName
                uid: uid
                org: org
                emailId: emailId
            actionType: create
            resource:
              uid: uid
              kind: kind
              name: name
              label: label
            actionMsg: actionMsg
            contentMsg: contentMsg
            userMsg: userMsg
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            actor:
              actorType: user
              project:
                uid: uid
                name: name
              serviceName: serviceName
              user:
                firstName: firstName
                lastName: lastName
                uid: uid
                org: org
                emailId: emailId
            actionType: create
            resource:
              uid: uid
              kind: kind
              name: name
              label: label
            actionMsg: actionMsg
            contentMsg: contentMsg
            userMsg: userMsg
      properties:
        items:
          description: List of audit message
          items:
            $ref: "#/components/schemas/v1Audit"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1AuthAllyTokenRequest:
      properties:
        edgeAuthToken:
          type: string
        edgeHostUid:
          type: string
        spectroClusterUid:
          type: string
      type: object
    v1AuthCertsGet:
      description: Auth certs get
      properties:
        apiDomain:
          type: string
          x-omitempty: false
        caCert:
          type: string
          x-omitempty: false
        insecureSkipVerify:
          type: boolean
          x-omitempty: false
        rootDomain:
          type: string
          x-omitempty: false
      type: object
    v1AuthEdgeJetKeyRequest:
      properties:
        edgeAuthToken:
          type: string
        edgeHostUid:
          type: string
        spectroClusterUid:
          type: string
      required:
      - edgeAuthToken
      - edgeHostUid
      type: object
    v1AuthJetKeyRequest:
      properties:
        allyAuthToken:
          type: string
        hostClusterUid:
          type: string
      required:
      - allyAuthToken
      - hostClusterUid
      type: object
    v1AuthLogin:
      description: Describes the credential details required for authentication
      properties:
        emailId:
          description: Describes the email id required for the user to authenticate
          type: string
        org:
          description: Describes the user's organization name to login
          type: string
        password:
          description: Describes the password required for the user to authenticate
          format: password
          type: string
      type: object
    v1AuthLoginEntity:
      description: Auth login entity
      properties:
        authType:
          enum:
          - password
          - sso
          type: string
        orgName:
          type: string
        redirectUrl:
          type: string
          x-omitempty: false
      type: object
    v1AuthLogins:
      description: Deprecated. Applicable auth logins with multiple orgs
      properties:
        appEnv:
          type: string
        authType:
          description: Deprecated.
          enum:
          - password
          - sso
          type: string
        orgName:
          description: Deprecated.
          type: string
        orgs:
          items:
            $ref: "#/components/schemas/v1AuthLoginEntity"
          type: array
        redirectUrl:
          description: Deprecated.
          type: string
          x-omitempty: false
      type: object
    v1AuthMfaLoginFinishRequest:
      properties:
        _type:
          type: string
        authenticatorAttachment:
          type: string
        clientExtensionResults:
          additionalProperties:
            properties: {}
            type: object
          type: object
        deviceName:
          type: string
        id:
          type: string
        rawId:
          format: url-encoded-base64
          type: string
        response:
          $ref: "#/components/schemas/v1AuthMfaLoginFinishRequest_response"
      type: object
    v1AuthServiceTokenRequest:
      properties:
        authKey:
          type: string
        edgeHostUid:
          type: string
        hostClusterUid:
          type: string
        isSystem:
          type: boolean
        jetUid:
          type: string
        overlordUid:
          type: string
        serviceVersion:
          type: string
        spectroClusterUid:
          type: string
        tenantUid:
          type: string
      type: object
    v1AuthServiceTokenResponse:
      properties:
        token:
          type: string
      type: object
    v1AuthShellyLoginRequest:
      properties:
        secret:
          type: string
      type: object
    v1AuthToken:
      properties:
        token:
          type: string
      type: object
    v1AuthTokenRevoke:
      properties:
        tokens:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1AuthTokenSettings:
      description: System auth token settings
      example:
        expiryTimeMinutes: 129
      properties:
        expiryTimeMinutes:
          description: Auth token expiry time in minutes
          format: int32
          maximum: 1440
          minimum: 15
          type: integer
          x-omitempty: false
      type: object
    v1AuthTunnel:
      description: Tunnel authorize request
      properties:
        kind:
          description: kind of the resource
          type: string
        uid:
          description: uid of the resource
          type: string
      type: object
    v1AwsAMI:
      example:
        os: os
        id: id
        state: state
        region: region
      properties:
        id:
          type: string
        os:
          type: string
        region:
          type: string
        state:
          type: string
      type: object
    v1AwsAccount:
      description: Aws cloud account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          credentialType: secret
          secretSpec:
            mission: mission
            permissionBoundary: permissionBoundary
            role: role
            agency: agency
            accountName: accountName
            namePrefix: namePrefix
            tls:
              cert: cert
              ca: ca
              key: key
            isCapValidationEnabled: true
            policy: policy
          partition: aws
          sts:
            externalId: externalId
            arn: arn
          secretKey: secretKey
          accessKey: accessKey
          secretToken: secretToken
          policyARNs:
          - policyARNs
          - policyARNs
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1AwsAccountCredentials:
      description: Aws secret account credentials
      example:
        secretKey: secretKey
        accessKey: accessKey
        expirationTime: 2000-01-23T04:56:07.000+00:00
        secretToken: secretToken
      properties:
        accessKey:
          description: Aws account access key
          type: string
        expirationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        secretKey:
          description: Aws account secret key
          type: string
        secretToken:
          description: Aws account secret token
          type: string
      type: object
    v1AwsAccounts:
      description: List of AWS accounts
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1AwsAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1AwsAmiReference:
      description: AMI is the reference to the AMI from which to create the machine
        instance
      example:
        eksOptimizedLookupType: AmazonLinux
        id: id
      properties:
        eksOptimizedLookupType:
          description: "EKSOptimizedLookupType If specified, will look up an EKS Optimized\
            \ image in SSM Parameter store"
          enum:
          - AmazonLinux
          - AmazonLinuxGPU
          type: string
        id:
          description: ID of resource
          type: string
      type: object
    v1AwsAvailabilityZone:
      description: Distinct locations within an AWS Region that are engineered to
        be isolated from failures in other Zones
      example:
        name: name
        zoneId: zoneId
        state: state
      properties:
        name:
          description: AWS availability zone name
          type: string
        state:
          description: AWS availability zone state
          type: string
        zoneId:
          description: AWS availability zone id
          type: string
      type: object
    v1AwsAvailabilityZones:
      example:
        zones:
        - name: name
          zoneId: zoneId
          state: state
        - name: name
          zoneId: zoneId
          state: state
      properties:
        zones:
          description: List of AWS Zones
          items:
            $ref: "#/components/schemas/v1AwsAvailabilityZone"
          type: array
      required:
      - zones
      type: object
    v1AwsCloudAccount:
      description: "AWS cloud account which includes access key and secret key in\
        \ case of 'secret' credentials type. It includes policyARNS, ARN and externalId\
        \ in case of sts. Partition is a group of AWS Region and Service objects"
      example:
        credentialType: secret
        secretSpec:
          mission: mission
          permissionBoundary: permissionBoundary
          role: role
          agency: agency
          accountName: accountName
          namePrefix: namePrefix
          tls:
            cert: cert
            ca: ca
            key: key
          isCapValidationEnabled: true
          policy: policy
        partition: aws
        sts:
          externalId: externalId
          arn: arn
        secretKey: secretKey
        accessKey: accessKey
        secretToken: secretToken
        policyARNs:
        - policyARNs
        - policyARNs
      properties:
        accessKey:
          description: AWS account access key
          type: string
        credentialType:
          $ref: "#/components/schemas/v1AwsCloudAccountCredentialType"
        partition:
          default: aws
          description: "AWS accounts are scoped to a single partition. Allowed values\
            \ [aws, aws-us-gov], Default values"
          enum:
          - aws
          - aws-us-gov
          - aws-iso
          - aws-iso-b
          type: string
        policyARNs:
          description: List of policy ARNs required in case of credentialType sts.
          items:
            type: string
          type: array
        secretKey:
          description: AWS account secret key
          type: string
        secretSpec:
          $ref: "#/components/schemas/v1AwsSecretSpec"
        secretToken:
          description: AWS account secret token; in case of aws-iso and aws-iso-b
          type: string
        sts:
          $ref: "#/components/schemas/v1AwsStsCredentials"
      type: object
    v1AwsCloudAccountCredentialType:
      default: secret
      description: "Allowed Values [secret, sts]. STS type will be used for role assumption\
        \ for sts type, accessKey/secretKey contains the source account, Arn is the\
        \ target account."
      enum:
      - secret
      - sts
      type: string
    v1AwsCloudClusterConfigEntity:
      description: AWS cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1AwsClusterConfig"
      type: object
    v1AwsCloudConfig:
      description: AwsCloudConfig is the Schema for the awscloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          hybridMachinePools:
          - poolUid: poolUid
            poolCloudType: edge-native
            poolName: poolName
          - poolUid: poolUid
            poolCloudType: edge-native
            poolName: poolName
          machinePoolConfig:
          - isControlPlane: true
            capacityType: on-demand
            rootDeviceSize: 5
            instanceType: instanceType
            nodeRepaveInterval: 1
            additionalLabels:
              key: additionalLabels
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            maxSize: 0
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            spotMarketOptions:
              maxPrice: maxPrice
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            minSize: 6
            azs:
            - azs
            - azs
            subnetIds:
              key: subnetIds
          - isControlPlane: true
            capacityType: on-demand
            rootDeviceSize: 5
            instanceType: instanceType
            nodeRepaveInterval: 1
            additionalLabels:
              key: additionalLabels
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            maxSize: 0
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            spotMarketOptions:
              maxPrice: maxPrice
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            minSize: 6
            azs:
            - azs
            - azs
            subnetIds:
              key: subnetIds
          clusterConfig:
            sshKeyName: sshKeyName
            bastionDisabled: true
            hybridConfig:
              remoteNodeCidrs:
              - remoteNodeCidrs
              - remoteNodeCidrs
              remotePodCidrs:
              - remotePodCidrs
              - remotePodCidrs
              awsVpcCidr: awsVpcCidr
              iamRolesAnywhere:
                profileArn: profileArn
                roleArn: roleArn
                rootCaPrivateKey: rootCaPrivateKey
                rootCaCertificate: rootCaCertificate
                trustAnchorArn: trustAnchorArn
              systemsManager:
                activationCode: activationCode
                activationId: activationId
            vpcId: vpcId
            region: region
            controlPlaneLoadBalancer: controlPlaneLoadBalancer
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          images:
          - os: os
            id: id
            state: state
            region: region
          - os: os
            id: id
            state: state
            region: region
          sourceImageId: sourceImageId
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          roleDigest:
            key: roleDigest
          ansibleRoleDigest: ansibleRoleDigest
          useCapiImage: true
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AwsCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1AwsCloudConfigStatus"
      type: object
    v1AwsCloudConfigSpec:
      description: AwsCloudConfigSpec defines the cloud configuration input by user
        This will translate to clusterspec/machinespec for cluster-api
      example:
        hybridMachinePools:
        - poolUid: poolUid
          poolCloudType: edge-native
          poolName: poolName
        - poolUid: poolUid
          poolCloudType: edge-native
          poolName: poolName
        machinePoolConfig:
        - isControlPlane: true
          capacityType: on-demand
          rootDeviceSize: 5
          instanceType: instanceType
          nodeRepaveInterval: 1
          additionalLabels:
            key: additionalLabels
          additionalSecurityGroups:
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          maxSize: 0
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          spotMarketOptions:
            maxPrice: maxPrice
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          minSize: 6
          azs:
          - azs
          - azs
          subnetIds:
            key: subnetIds
        - isControlPlane: true
          capacityType: on-demand
          rootDeviceSize: 5
          instanceType: instanceType
          nodeRepaveInterval: 1
          additionalLabels:
            key: additionalLabels
          additionalSecurityGroups:
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          maxSize: 0
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          spotMarketOptions:
            maxPrice: maxPrice
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          minSize: 6
          azs:
          - azs
          - azs
          subnetIds:
            key: subnetIds
        clusterConfig:
          sshKeyName: sshKeyName
          bastionDisabled: true
          hybridConfig:
            remoteNodeCidrs:
            - remoteNodeCidrs
            - remoteNodeCidrs
            remotePodCidrs:
            - remotePodCidrs
            - remotePodCidrs
            awsVpcCidr: awsVpcCidr
            iamRolesAnywhere:
              profileArn: profileArn
              roleArn: roleArn
              rootCaPrivateKey: rootCaPrivateKey
              rootCaCertificate: rootCaCertificate
              trustAnchorArn: trustAnchorArn
            systemsManager:
              activationCode: activationCode
              activationId: activationId
          vpcId: vpcId
          region: region
          controlPlaneLoadBalancer: controlPlaneLoadBalancer
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1AwsClusterConfig"
        hybridMachinePools:
          items:
            $ref: "#/components/schemas/v1AwsHybridMachinePool"
          type: array
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1AwsMachinePoolConfig"
          type: array
      type: object
    v1AwsCloudConfigStatus:
      description: AwsCloudConfigStatus defines the observed state of AwsCloudConfig
        The cloudimage info built by Mold is stored here image should be mapped to
        a specific machinepool
      example:
        images:
        - os: os
          id: id
          state: state
          region: region
        - os: os
          id: id
          state: state
          region: region
        sourceImageId: sourceImageId
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        roleDigest:
          key: roleDigest
        ansibleRoleDigest: ansibleRoleDigest
        useCapiImage: true
        isAddonLayer: true
      properties:
        ansibleRoleDigest:
          description: For mold controller to identify if is there any changes in
            Pack
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        images:
          description: Images array items should be 1-to-1 mapping to Spec.MachinePoolConfig
          items:
            $ref: "#/components/schemas/v1AwsAMI"
          type: array
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
        roleDigest:
          additionalProperties:
            type: string
          description: this map will be for ansible roles present in eack pack
          type: object
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        useCapiImage:
          description: "PackerVariableDigest string `json:\"packerDigest,omitempty\"\
            ` If no ansible roles found in Packs then Mold should tell Drive to use\
            \ capi image and not create custom image, because there is nothing to\
            \ add"
          type: boolean
      type: object
    v1AwsCloudCostSpec:
      description: Aws cloud account usage cost payload spec
      properties:
        accountId:
          description: AccountId of AWS cloud cost
          type: string
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        filter:
          $ref: "#/components/schemas/v1AwsCloudCostSpecFilter"
      required:
      - credentials
      type: object
    v1AwsCloudCostSpecFilter:
      description: Aws cloud account usage cost payload filter. startTime and endTime
        should be within 12 months range from now.
      properties:
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        iamUserId:
          description: IAM UserId of AWS account
          type: string
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      required:
      - startTime
      type: object
    v1AwsCloudCostSummary:
      description: AWS cloud account usage cost summary response data
      example:
        cost:
          total: 1.4658129805029452
          monthlyCosts:
          - amount: 0.8008281904610115
            timestamp: 6
          - amount: 0.8008281904610115
            timestamp: 6
      properties:
        cost:
          $ref: "#/components/schemas/v1AwsCloudCostSummaryCloudCost"
      type: object
    v1AwsCloudCostSummaryCloudCost:
      description: AWS cloud account usage cost summary of monthlyCosts and totalCost
      example:
        total: 1.4658129805029452
        monthlyCosts:
        - amount: 0.8008281904610115
          timestamp: 6
        - amount: 0.8008281904610115
          timestamp: 6
      properties:
        monthlyCosts:
          description: Monthly cost of AWS cost
          items:
            $ref: "#/components/schemas/v1AwsCloudCostSummaryMonthlyCost"
          type: array
        total:
          description: Total cost of AWS cost
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1AwsCloudCostSummaryMonthlyCost:
      example:
        amount: 0.8008281904610115
        timestamp: 6
      properties:
        amount:
          description: Amount for aws cloud cost
          format: float64
          type: number
          x-omitempty: false
        timestamp:
          description: Time duration for aws cloud cost
          type: integer
      type: object
    v1AwsCloudHybridConfigEntity:
      description: AWS cloud hybrid config entity
      properties:
        hybridConfig:
          $ref: "#/components/schemas/v1AwsHybridConfig"
      type: object
    v1AwsClusterConfig:
      description: Cluster level configuration for aws cloud and applicable for all
        the machine pools
      example:
        sshKeyName: sshKeyName
        bastionDisabled: true
        hybridConfig:
          remoteNodeCidrs:
          - remoteNodeCidrs
          - remoteNodeCidrs
          remotePodCidrs:
          - remotePodCidrs
          - remotePodCidrs
          awsVpcCidr: awsVpcCidr
          iamRolesAnywhere:
            profileArn: profileArn
            roleArn: roleArn
            rootCaPrivateKey: rootCaPrivateKey
            rootCaCertificate: rootCaCertificate
            trustAnchorArn: trustAnchorArn
          systemsManager:
            activationCode: activationCode
            activationId: activationId
        vpcId: vpcId
        region: region
        controlPlaneLoadBalancer: controlPlaneLoadBalancer
      properties:
        bastionDisabled:
          description: Create bastion node option we have earlier supported creation
            of bastion by default capa seems to favour session manager against bastion
            node https://github.com/kubernetes-sigs/cluster-api-provider-aws/issues/947
          type: boolean
        controlPlaneLoadBalancer:
          description: "ControlPlaneLoadBalancer specifies how API server elb will\
            \ be configured, this field is optional, not provided, \"\", default =>\
            \ \"Internet-facing\" \"Internet-facing\" => \"Internet-facing\" \"internal\"\
            \ => \"internal\" For spectro saas setup we require to talk to the apiserver\
            \ from our cluster so ControlPlaneLoadBalancer should be \"\", not provided\
            \ or \"Internet-facing\""
          type: string
        hybridConfig:
          $ref: "#/components/schemas/v1AwsHybridConfig"
        region:
          type: string
        sshKeyName:
          type: string
        vpcId:
          description: "VPC Id to deploy cluster into should have one public and one\
            \ private subnet for the the cluster creation, this field is optional,\
            \ If VPC Id is not provided a fully managed VPC will be created"
          type: string
      required:
      - region
      type: object
    v1AwsCreditAccount:
      properties:
        creditLimitInDollars:
          format: float64
          type: number
        loginCredentials:
          $ref: "#/components/schemas/v1AwsLoginCredentials"
        userCloudAccount:
          $ref: "#/components/schemas/v1AwsUserCloudAccount"
      type: object
    v1AwsCreditAccountEntity:
      example:
        creditLimitInDollars: 0.8008281904610115
        creditUsedInDollars: 6.027456183070403
        loginCredentials:
          password: password
          iamUser: iamUser
        userCloudAccount:
          accountId: accountId
          cloudAccount:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
      properties:
        creditLimitInDollars:
          format: float64
          type: number
          x-omitempty: false
        creditUsedInDollars:
          format: float64
          type: number
          x-omitempty: false
        loginCredentials:
          $ref: "#/components/schemas/v1AwsLoginCredentials"
        userCloudAccount:
          $ref: "#/components/schemas/v1AwsUserCloudAccount"
      type: object
    v1AwsFindImageRequest:
      description: AWS image name and credentials
      properties:
        amiName:
          description: AWS image ami name
          type: string
        awsAccount:
          $ref: "#/components/schemas/v1AwsCloudAccount"
      type: object
    v1AwsHybridConfig:
      description: AwsHybridConfig specifies the AWS Hybrid configuration for the
        cluster
      example:
        remoteNodeCidrs:
        - remoteNodeCidrs
        - remoteNodeCidrs
        remotePodCidrs:
        - remotePodCidrs
        - remotePodCidrs
        awsVpcCidr: awsVpcCidr
        iamRolesAnywhere:
          profileArn: profileArn
          roleArn: roleArn
          rootCaPrivateKey: rootCaPrivateKey
          rootCaCertificate: rootCaCertificate
          trustAnchorArn: trustAnchorArn
        systemsManager:
          activationCode: activationCode
          activationId: activationId
      properties:
        awsVpcCidr:
          description: AWS VPC CIDR is the CIDR of the AWS/EKS cluster's VPC
          type: string
        iamRolesAnywhere:
          $ref: "#/components/schemas/v1IamRolesAnywhere"
        remoteNodeCidrs:
          description: RemoteNodeCIDRs specifies the Node CIDRs of all remote nodes
          items:
            type: string
          type: array
        remotePodCidrs:
          description: RemotePodCIDRs specifies the Pod CIDRs of all remote pods
          items:
            type: string
          type: array
        systemsManager:
          $ref: "#/components/schemas/v1SystemsManager"
      type: object
    v1AwsHybridMachinePool:
      description: Machine pool reference of cloud config of cluster deployed by hybrid
        cluster
      example:
        poolUid: poolUid
        poolCloudType: edge-native
        poolName: poolName
      properties:
        poolCloudType:
          $ref: "#/components/schemas/v1HybridPoolClusterCloudType"
        poolName:
          description: Machine pool name
          type: string
        poolUid:
          description: Machine pool uid
          type: string
      type: object
    v1AwsIamPolicy:
      description: Aws policy
      example:
        policyId: policyId
        policyName: policyName
        arn: arn
      properties:
        arn:
          type: string
        policyId:
          type: string
        policyName:
          type: string
      type: object
    v1AwsImage:
      description: AWS image name and ami
      example:
        owner: owner
        name: name
        id: id
      properties:
        id:
          description: AWS image id
          type: string
        name:
          description: AWS image name
          type: string
        owner:
          description: AWS image owner id
          type: string
      type: object
    v1AwsInstanceTypes:
      description: List of AWS instance types
      example:
        instanceTypes:
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
      properties:
        instanceTypes:
          items:
            $ref: "#/components/schemas/v1InstanceType"
          type: array
      type: object
    v1AwsKeyPairs:
      description: List of AWS keypairs
      example:
        keyNames:
        - keyNames
        - keyNames
      properties:
        keyNames:
          description: Array of Aws Keypair names
          items:
            type: string
          type: array
      type: object
    v1AwsKmsKey:
      description: AWS KMS Key - gives you centralized control over the cryptographic
        keys used to protect your data.
      example:
        keyArn: keyArn
        keyAlias: keyAlias
        keyId: keyId
      properties:
        keyAlias:
          description: AWS KMS alias
          type: string
        keyArn:
          description: AWS KMS arn
          type: string
        keyId:
          description: AWS KMS keyid
          type: string
      required:
      - keyArn
      - keyId
      type: object
    v1AwsKmsKeyEntity:
      description: List of AWS Keys
      example:
        awsAccountId: awsAccountId
        keyId: keyId
        enabled: true
      properties:
        awsAccountId:
          description: The twelve-digit account ID of the Amazon Web Services account
            that owns the KMS key
          type: string
        enabled:
          description: Specifies whether the KMS key is enabled.
          type: boolean
        keyId:
          description: The globally unique identifier for the KMS key
          type: string
      type: object
    v1AwsKmsKeys:
      description: List of AWS Keys
      example:
        kmsKeys:
        - keyArn: keyArn
          keyAlias: keyAlias
          keyId: keyId
        - keyArn: keyArn
          keyAlias: keyAlias
          keyId: keyId
      properties:
        kmsKeys:
          items:
            $ref: "#/components/schemas/v1AwsKmsKey"
          type: array
      required:
      - kmsKeys
      type: object
    v1AwsLaunchTemplate:
      description: AWSLaunchTemplate specifies the launch template to use to create
        the managed node group
      example:
        imageLookupFormat: imageLookupFormat
        rootVolume:
          encrypted: true
          iops: 0
          encryptionKey: encryptionKey
          throughput: 6
          type: type
          deviceName: deviceName
        additionalSecurityGroups:
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        imageLookupBaseOS: imageLookupBaseOS
        ami:
          eksOptimizedLookupType: AmazonLinux
          id: id
        imageLookupOrg: imageLookupOrg
      properties:
        additionalSecurityGroups:
          description: AdditionalSecurityGroups is an array of references to security
            groups that should be applied to the instances
          items:
            $ref: "#/components/schemas/v1AwsResourceReference"
          type: array
          uniqueItems: true
        ami:
          $ref: "#/components/schemas/v1AwsAmiReference"
        imageLookupBaseOS:
          description: ImageLookupBaseOS is the name of the base operating system
            to use for image lookup the AMI is not set
          type: string
        imageLookupFormat:
          description: ImageLookupFormat is the AMI naming format to look up the image
          type: string
        imageLookupOrg:
          description: ImageLookupOrg is the AWS Organization ID to use for image
            lookup if AMI is not set
          type: string
        rootVolume:
          $ref: "#/components/schemas/v1AwsRootVolume"
      type: object
    v1AwsLoginCredentials:
      example:
        password: password
        iamUser: iamUser
      properties:
        iamUser:
          type: string
        password:
          format: password
          type: string
      type: object
    v1AwsMachine:
      description: AWS cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          iamProfile: iamProfile
          phase: phase
          subnetId: subnetId
          sshKeyName: sshKeyName
          instanceType: instanceType
          vpcId: vpcId
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          az: az
          dnsName: dnsName
          additionalSecurityGroups:
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          ami: ami
          type: type
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AwsMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1AwsMachinePoolCloudConfigEntity:
      properties:
        additionalSecurityGroups:
          description: Additional Security groups
          items:
            $ref: "#/components/schemas/v1AwsResourceReference"
          type: array
        azs:
          items:
            type: string
          type: array
        capacityType:
          default: on-demand
          description: EC2 instance capacity type
          enum:
          - on-demand
          - spot
          type: string
        instanceType:
          description: instance type
          type: string
        rootDeviceSize:
          description: rootDeviceSize in GBs
          format: int64
          maximum: 2000
          minimum: 1
          type: integer
        spotMarketOptions:
          $ref: "#/components/schemas/v1SpotMarketOptions"
        subnets:
          items:
            $ref: "#/components/schemas/v1AwsSubnetEntity"
          type: array
      required:
      - instanceType
      type: object
    v1AwsMachinePoolConfig:
      example:
        isControlPlane: true
        capacityType: on-demand
        rootDeviceSize: 5
        instanceType: instanceType
        nodeRepaveInterval: 1
        additionalLabels:
          key: additionalLabels
        additionalSecurityGroups:
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        maxSize: 0
        instanceConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          cpuSet: 0
          category: category
          memoryMiB: 1
        spotMarketOptions:
          maxPrice: maxPrice
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 5
        name: name
        minSize: 6
        azs:
        - azs
        - azs
        subnetIds:
          key: subnetIds
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalSecurityGroups:
          description: Additional Security groups
          items:
            $ref: "#/components/schemas/v1AwsResourceReference"
          type: array
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          description: AZs is only used for dynamic placement
          items:
            type: string
          type: array
        capacityType:
          default: on-demand
          description: EC2 instance capacity type
          enum:
          - on-demand
          - spot
          type: string
        instanceConfig:
          $ref: "#/components/schemas/v1InstanceConfig"
        instanceType:
          description: instance type
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        rootDeviceSize:
          description: rootDeviceSize in GBs
          format: int64
          type: integer
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        spotMarketOptions:
          $ref: "#/components/schemas/v1SpotMarketOptions"
        subnetIds:
          additionalProperties:
            type: string
          description: "AZ to subnet mapping filled by ally from hubble SubnetIDs\
            \ [\"us-west-2d\"] = \"subnet-079b6061\" This field is optional If we\
            \ don't provide a subnetId then by default the first private subnet from\
            \ the AZ will be picked up for deployment"
          type: object
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      required:
      - isControlPlane
      type: object
    v1AwsMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1AwsMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1AwsMachineSpec:
      description: AWS cloud VM definition spec
      example:
        iamProfile: iamProfile
        phase: phase
        subnetId: subnetId
        sshKeyName: sshKeyName
        instanceType: instanceType
        vpcId: vpcId
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        az: az
        dnsName: dnsName
        additionalSecurityGroups:
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        - filters:
          - values:
            - values
            - values
            name: name
          - values:
            - values
            - values
            name: name
          id: id
          arn: arn
        ami: ami
        type: type
      properties:
        additionalSecurityGroups:
          description: Additional Security groups
          items:
            $ref: "#/components/schemas/v1AwsResourceReference"
          type: array
        ami:
          type: string
        az:
          type: string
        dnsName:
          type: string
        iamProfile:
          type: string
        instanceType:
          type: string
        nics:
          items:
            $ref: "#/components/schemas/v1AwsNic"
          type: array
        phase:
          type: string
        sshKeyName:
          type: string
        subnetId:
          type: string
        type:
          type: string
        vpcId:
          type: string
      required:
      - ami
      - instanceType
      - vpcId
      type: object
    v1AwsMachines:
      description: AWS machine list
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            iamProfile: iamProfile
            phase: phase
            subnetId: subnetId
            sshKeyName: sshKeyName
            instanceType: instanceType
            vpcId: vpcId
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            az: az
            dnsName: dnsName
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            ami: ami
            type: type
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            iamProfile: iamProfile
            phase: phase
            subnetId: subnetId
            sshKeyName: sshKeyName
            instanceType: instanceType
            vpcId: vpcId
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            az: az
            dnsName: dnsName
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            ami: ami
            type: type
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1AwsMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1AwsNic:
      description: AWS network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        index: 0
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1AwsPartition:
      default: aws
      description: "AWS accounts are scoped to a single partition. Allowed values\
        \ [aws, aws-us-gov], Default values"
      enum:
      - aws
      - aws-us-gov
      type: string
    v1AwsPolicies:
      example:
        policies:
        - policyId: policyId
          policyName: policyName
          arn: arn
        - policyId: policyId
          policyName: policyName
          arn: arn
      properties:
        policies:
          items:
            $ref: "#/components/schemas/v1AwsIamPolicy"
          type: array
      required:
      - policies
      type: object
    v1AwsPolicyArnsSpec:
      description: Aws policy ARNs spec
      properties:
        account:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        policyArns:
          items:
            type: string
          type: array
      required:
      - account
      - policyArns
      type: object
    v1AwsRegion:
      description: AWS region which represents separate geographic area.
      example:
        endpoint: endpoint
        name: name
        optInStatus: optInStatus
      properties:
        endpoint:
          description: AWS offer a regional endpoint that can used to make requests
          type: string
        name:
          description: Name of the AWS region
          type: string
        optInStatus:
          description: Enable your account to operate in the particular regions
          type: string
      type: object
    v1AwsRegions:
      example:
        regions:
        - endpoint: endpoint
          name: name
          optInStatus: optInStatus
        - endpoint: endpoint
          name: name
          optInStatus: optInStatus
      properties:
        regions:
          description: List of AWS regions
          items:
            $ref: "#/components/schemas/v1AwsRegion"
          type: array
      required:
      - regions
      type: object
    v1AwsResourceFilter:
      description: Filter is a filter used to identify an AWS resource
      example:
        values:
        - values
        - values
        name: name
      properties:
        name:
          description: Name of the filter. Filter names are case-sensitive
          type: string
        values:
          description: Values includes one or more filter values. Filter values are
            case-sensitive
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1AwsResourceReference:
      description: AWSResourceReference is a reference to a specific AWS resource
        by ID or filters
      example:
        filters:
        - values:
          - values
          - values
          name: name
        - values:
          - values
          - values
          name: name
        id: id
        arn: arn
      properties:
        arn:
          description: ARN of resource
          type: string
        filters:
          description: Filters is a set of key/value pairs used to identify a resource
          items:
            $ref: "#/components/schemas/v1AwsResourceFilter"
          type: array
          uniqueItems: true
        id:
          description: ID of resource
          type: string
      type: object
    v1AwsRootVolume:
      description: Volume encapsulates the configuration options for the storage device.
      example:
        encrypted: true
        iops: 0
        encryptionKey: encryptionKey
        throughput: 6
        type: type
        deviceName: deviceName
      properties:
        deviceName:
          description: Device name
          type: string
        encrypted:
          description: EncryptionKey is the KMS key to use to encrypt the volume.
            Can be either a KMS key ID or ARN
          type: boolean
        encryptionKey:
          description: EncryptionKey is the KMS key to use to encrypt the volume.
            Can be either a KMS key ID or ARN
          type: string
        iops:
          description: IOPS is the number of IOPS requested for the disk. Not applicable
            to all types
          format: int64
          type: integer
        throughput:
          description: Throughput to provision in MiB/s supported for the volume type.
            Not applicable to all types.
          format: int64
          type: integer
        type:
          description: "Type is the type of the volume (e.g. gp2, io1, etc...)"
          type: string
      type: object
    v1AwsS3BucketCredentials:
      description: AWS S3 Bucket credentials
      properties:
        bucket:
          description: Name of AWS S3 bucket
          type: string
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        folder:
          description: Name of the folder in the specified AWS S3 bucket.
          type: string
        region:
          description: Name of the available AWS region.
          type: string
      required:
      - bucket
      - credentials
      - region
      type: object
    v1AwsSecretSpec:
      description: "AWS cloud account which includes access key and secret key in\
        \ case of 'secret' credentials type. It includes policyARNS, ARN and externalId\
        \ in case of sts. Partition is a group of AWS Region and Service objects"
      example:
        mission: mission
        permissionBoundary: permissionBoundary
        role: role
        agency: agency
        accountName: accountName
        namePrefix: namePrefix
        tls:
          cert: cert
          ca: ca
          key: key
        isCapValidationEnabled: true
        policy: policy
      properties:
        accountName:
          description: AWS secret accountName; only for aws-iso-b environment
          type: string
        agency:
          description: AWS secret agency
          type: string
        isCapValidationEnabled:
          description: Flag to rotate the secret region credentials
          type: boolean
        mission:
          description: AWS secret mission; only for aws-iso environment
          type: string
        namePrefix:
          description: Policy Boundary
          type: string
        permissionBoundary:
          description: Role or Policy Prefix
          type: string
        policy:
          description: AWS secret policy; JSON string
          type: string
        role:
          description: AWS secret role
          type: string
        tls:
          $ref: "#/components/schemas/v1AwsSecretTlsConfig"
      type: object
    v1AwsSecretSpecInputEntity:
      description: AWS Secret spec input entity
      properties:
        partition:
          default: aws-iso-b
          description: "AWS accounts are scoped to a single partition. Allowed values\
            \ [aws-iso, aws-iso-b], Default values"
          enum:
          - aws-iso
          - aws-iso-b
          type: string
        secretSpec:
          $ref: "#/components/schemas/v1AwsSecretSpec"
      type: object
    v1AwsSecretTlsConfig:
      description: TLS configuration for the AWS secret
      example:
        cert: cert
        ca: ca
        key: key
      properties:
        ca:
          description: CA certificate
          type: string
        cert:
          description: Certificate
          type: string
        key:
          description: Key
          type: string
      type: object
    v1AwsSecurityGroups:
      example:
        groups:
        - groupName: groupName
          groupId: groupId
          ownerId: ownerId
        - groupName: groupName
          groupId: groupId
          ownerId: ownerId
      properties:
        groups:
          items:
            $ref: "#/components/schemas/v1AwsSecuritygroup"
          type: array
      required:
      - groups
      type: object
    v1AwsSecuritygroup:
      description: Aws security group
      example:
        groupName: groupName
        groupId: groupId
        ownerId: ownerId
      properties:
        groupId:
          type: string
        groupName:
          type: string
        ownerId:
          type: string
      type: object
    v1AwsStorageTypes:
      example:
        storageTypes:
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
      properties:
        storageTypes:
          description: List of AWS storage types
          items:
            $ref: "#/components/schemas/v1StorageType"
          type: array
      type: object
    v1AwsStsCredentials:
      description: Aws sts credentials
      example:
        externalId: externalId
        arn: arn
      properties:
        arn:
          description: Arn for the aws sts credentials in cloud account
          type: string
        externalId:
          description: ExternalId for the aws sts credentials in cloud account
          type: string
      type: object
    v1AwsSubnet:
      description: A subnet is a range of IP addresses in a AWS VPC
      example:
        subnetId: subnetId
        mapPublicIpOnLaunch: true
        name: name
        az: az
        isPrivate: true
      properties:
        az:
          description: Every subnet can only be associated with only one Availability
            Zone
          type: string
        isPrivate:
          description: Is this subnet private
          type: boolean
        mapPublicIpOnLaunch:
          description: Indicates whether instances launched in this subnet receive
            a public IPv4 address.
          type: boolean
          x-omitempty: false
        name:
          description: Name of the subnet
          type: string
        subnetId:
          description: Id of the subnet
          type: string
      type: object
    v1AwsSubnetEntity:
      properties:
        az:
          type: string
        id:
          type: string
      type: object
    v1AwsUserCloudAccount:
      example:
        accountId: accountId
        cloudAccount:
          credentialType: secret
          secretSpec:
            mission: mission
            permissionBoundary: permissionBoundary
            role: role
            agency: agency
            accountName: accountName
            namePrefix: namePrefix
            tls:
              cert: cert
              ca: ca
              key: key
            isCapValidationEnabled: true
            policy: policy
          partition: aws
          sts:
            externalId: externalId
            arn: arn
          secretKey: secretKey
          accessKey: accessKey
          secretToken: secretToken
          policyARNs:
          - policyARNs
          - policyARNs
      properties:
        accountId:
          type: string
        cloudAccount:
          $ref: "#/components/schemas/v1AwsCloudAccount"
      type: object
    v1AwsVolumeSize:
      description: AWS Volume Size entity
      example:
        sizeGB: 0
      properties:
        sizeGB:
          description: AWS volume size
          type: integer
      type: object
    v1AwsVolumeType:
      description: AWS Volume Type entity
      example:
        maxIops: maxIops
        name: name
        id: id
        maxThroughPut: maxThroughPut
      properties:
        id:
          description: AWS volume type id
          type: string
        maxIops:
          description: Iops through put of volume type
          type: string
        maxThroughPut:
          description: Max through put of volume type
          type: string
        name:
          description: AWS Volume Type Name
          type: string
      type: object
    v1AwsVpc:
      description: A virtual network dedicated to a AWS account
      example:
        cidrBlock: cidrBlock
        vpcId: vpcId
        name: name
        subnets:
        - subnetId: subnetId
          mapPublicIpOnLaunch: true
          name: name
          az: az
          isPrivate: true
        - subnetId: subnetId
          mapPublicIpOnLaunch: true
          name: name
          az: az
          isPrivate: true
      properties:
        cidrBlock:
          type: string
        name:
          description: Name of the virtual network
          type: string
        subnets:
          description: List of subnets associated to a AWS VPC
          items:
            $ref: "#/components/schemas/v1AwsSubnet"
          type: array
        vpcId:
          description: Id of the virtual network
          type: string
      required:
      - vpcId
      type: object
    v1AwsVpcs:
      description: List of AWS VPCs
      example:
        vpcs:
        - cidrBlock: cidrBlock
          vpcId: vpcId
          name: name
          subnets:
          - subnetId: subnetId
            mapPublicIpOnLaunch: true
            name: name
            az: az
            isPrivate: true
          - subnetId: subnetId
            mapPublicIpOnLaunch: true
            name: name
            az: az
            isPrivate: true
        - cidrBlock: cidrBlock
          vpcId: vpcId
          name: name
          subnets:
          - subnetId: subnetId
            mapPublicIpOnLaunch: true
            name: name
            az: az
            isPrivate: true
          - subnetId: subnetId
            mapPublicIpOnLaunch: true
            name: name
            az: az
            isPrivate: true
      properties:
        vpcs:
          items:
            $ref: "#/components/schemas/v1AwsVpc"
          type: array
      required:
      - vpcs
      type: object
    v1AzValidateEntity:
      description: Az validate entity
      properties:
        azs:
          description: Gcp Azs
          items:
            type: string
          type: array
        project:
          description: Gcp project
          type: string
        region:
          description: Gcp region
          type: string
        uid:
          description: Cloud account uid
          type: string
      type: object
    v1AzureAccount:
      description: Azure account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          settings:
            disablePropertiesRequest: true
          clientId: clientId
          tenantName: tenantName
          azureEnvironment: AzurePublicCloud
          tenantId: tenantId
          clientSecret: clientSecret
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AzureCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1AzureAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            settings:
              disablePropertiesRequest: true
            clientId: clientId
            tenantName: tenantName
            azureEnvironment: AzurePublicCloud
            tenantId: tenantId
            clientSecret: clientSecret
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            settings:
              disablePropertiesRequest: true
            clientId: clientId
            tenantName: tenantName
            azureEnvironment: AzurePublicCloud
            tenantId: tenantId
            clientSecret: clientSecret
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1AzureAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1AzureAvailabilityZone:
      description: Azure availability zone
      example:
        name: name
      properties:
        name:
          description: Azure availability zone name
          type: string
      type: object
    v1AzureCloudAccount:
      example:
        settings:
          disablePropertiesRequest: true
        clientId: clientId
        tenantName: tenantName
        azureEnvironment: AzurePublicCloud
        tenantId: tenantId
        clientSecret: clientSecret
      properties:
        azureEnvironment:
          default: AzurePublicCloud
          description: Contains configuration for Azure cloud
          enum:
          - AzureChinaCloud
          - AzurePublicCloud
          - AzureUSGovernment
          - AzureUSGovernmentCloud
          type: string
        clientId:
          description: Client ID(Directory ID) is a unique identifier generated by
            Azure AD that is tied to an application
          type: string
        clientSecret:
          description: ClientSecret is the secret associated with Client
          type: string
        settings:
          $ref: "#/components/schemas/v1CloudAccountSettings"
        tenantId:
          description: Tenant ID is the ID for the Azure AD tenant that the user belongs
            to.
          type: string
        tenantName:
          description: Tenant ID is the ID for the Azure AD tenant that the user belongs
            to.
          type: string
      required:
      - clientId
      - clientSecret
      - tenantId
      type: object
    v1AzureCloudClusterConfigEntity:
      description: Azure cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1AzureClusterConfig"
      type: object
    v1AzureCloudConfig:
      description: AzureCloudConfig is the Schema for the azurecloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          machinePoolConfig:
          - isControlPlane: true
            instanceType: instanceType
            nodeRepaveInterval: 7
            additionalLabels:
              key: additionalLabels
            maxSize: 5
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 3
            isSystemNodePool: true
            name: name
            osType: null
            minSize: 2
            azs:
            - azs
            - azs
            spotVMOptions:
              maxPrice: maxPrice
            osDisk:
              managedDisk:
                storageAccountType: storageAccountType
              osType: Linux
              diskSizeGB: 9
          - isControlPlane: true
            instanceType: instanceType
            nodeRepaveInterval: 7
            additionalLabels:
              key: additionalLabels
            maxSize: 5
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 3
            isSystemNodePool: true
            name: name
            osType: null
            minSize: 2
            azs:
            - azs
            - azs
            spotVMOptions:
              maxPrice: maxPrice
            osDisk:
              managedDisk:
                storageAccountType: storageAccountType
              osType: Linux
              diskSizeGB: 9
          clusterConfig:
            apiServerAccessProfile:
              privateDNSZone: privateDNSZone
              enablePrivateClusterPublicFQDN: true
              enablePrivateCluster: true
              authorizedIPRanges:
              - ""
              - ""
            resourceGroup: resourceGroup
            infraLBConfig:
              apiServerLB:
                ipAllocationMethod: Dynamic
                apiServerLBStaticIP: apiServerLBStaticIP
                privateDNSZoneResourceGroup: privateDNSZoneResourceGroup
                privateDNSName: privateDNSName
                type: Public
            storageAccountName: storageAccountName
            vnetName: vnetName
            workerSubnet:
              securityGroupName: securityGroupName
              nsgResourceGroup: nsgResourceGroup
              cidrBlock: cidrBlock
              name: name
            vnetResourceGroup: vnetResourceGroup
            sshKey: sshKey
            containerName: containerName
            controlPlaneSubnet:
              securityGroupName: securityGroupName
              nsgResourceGroup: nsgResourceGroup
              cidrBlock: cidrBlock
              name: name
            location: location
            aadProfile:
              adminGroupObjectIDs:
              - adminGroupObjectIDs
              - adminGroupObjectIDs
              managed: true
            subscriptionId: subscriptionId
            enablePrivateCluster: true
            vnetCidrBlock: vnetCidrBlock
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          images:
            resourceGroup: resourceGroup
            name: name
            state: state
            subscriptionID: subscriptionID
            version: version
            gallery: gallery
          sourceImageId: sourceImageId
          vhdImage:
            os: os
            name: name
            id: id
            state: state
            region: region
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          roleDigest:
            key: roleDigest
          ansibleRoleDigest: ansibleRoleDigest
          useCapiImage: true
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AzureCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1AzureCloudConfigStatus"
      type: object
    v1AzureCloudConfigSpec:
      description: AzureCloudConfigSpec defines the cloud configuration input by user
        This will translate to clusterspec/machinespec for cluster-api
      example:
        machinePoolConfig:
        - isControlPlane: true
          instanceType: instanceType
          nodeRepaveInterval: 7
          additionalLabels:
            key: additionalLabels
          maxSize: 5
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 3
          isSystemNodePool: true
          name: name
          osType: null
          minSize: 2
          azs:
          - azs
          - azs
          spotVMOptions:
            maxPrice: maxPrice
          osDisk:
            managedDisk:
              storageAccountType: storageAccountType
            osType: Linux
            diskSizeGB: 9
        - isControlPlane: true
          instanceType: instanceType
          nodeRepaveInterval: 7
          additionalLabels:
            key: additionalLabels
          maxSize: 5
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 3
          isSystemNodePool: true
          name: name
          osType: null
          minSize: 2
          azs:
          - azs
          - azs
          spotVMOptions:
            maxPrice: maxPrice
          osDisk:
            managedDisk:
              storageAccountType: storageAccountType
            osType: Linux
            diskSizeGB: 9
        clusterConfig:
          apiServerAccessProfile:
            privateDNSZone: privateDNSZone
            enablePrivateClusterPublicFQDN: true
            enablePrivateCluster: true
            authorizedIPRanges:
            - ""
            - ""
          resourceGroup: resourceGroup
          infraLBConfig:
            apiServerLB:
              ipAllocationMethod: Dynamic
              apiServerLBStaticIP: apiServerLBStaticIP
              privateDNSZoneResourceGroup: privateDNSZoneResourceGroup
              privateDNSName: privateDNSName
              type: Public
          storageAccountName: storageAccountName
          vnetName: vnetName
          workerSubnet:
            securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          vnetResourceGroup: vnetResourceGroup
          sshKey: sshKey
          containerName: containerName
          controlPlaneSubnet:
            securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          location: location
          aadProfile:
            adminGroupObjectIDs:
            - adminGroupObjectIDs
            - adminGroupObjectIDs
            managed: true
          subscriptionId: subscriptionId
          enablePrivateCluster: true
          vnetCidrBlock: vnetCidrBlock
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1AzureClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1AzureMachinePoolConfig"
          type: array
      type: object
    v1AzureCloudConfigStatus:
      description: AzureCloudConfigStatus defines the observed state of AzureCloudConfig
        The cloudimage info built by Mold is stored here image should be mapped to
        a specific machinepool
      example:
        images:
          resourceGroup: resourceGroup
          name: name
          state: state
          subscriptionID: subscriptionID
          version: version
          gallery: gallery
        sourceImageId: sourceImageId
        vhdImage:
          os: os
          name: name
          id: id
          state: state
          region: region
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        roleDigest:
          key: roleDigest
        ansibleRoleDigest: ansibleRoleDigest
        useCapiImage: true
        isAddonLayer: true
      properties:
        ansibleRoleDigest:
          description: For mold controller to identify if is there any changes in
            Pack
          type: string
        conditions:
          description: "spectroAnsibleProvisioner: should be added only once, subsequent\
            \ recocile will use the same provisioner SpectroAnsiblePacker bool `json:\"\
            spectroAnsiblePacker,omitempty\"`"
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        images:
          $ref: "#/components/schemas/v1AzureImage"
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
        roleDigest:
          additionalProperties:
            type: string
          description: this map will be for ansible roles present in eack pack
          type: object
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        useCapiImage:
          description: "PackerVariableDigest string `json:\"packerDigest,omitempty\"\
            ` If no ansible roles found in Packs then Mold should tell Drive to use\
            \ capi image and not create custom image, because there is nothing to\
            \ add"
          type: boolean
        vhdImage:
          $ref: "#/components/schemas/v1AzureVHDImage"
      type: object
    v1AzureClusterConfig:
      description: Cluster level configuration for Azure cloud and applicable for
        all the machine pools
      example:
        apiServerAccessProfile:
          privateDNSZone: privateDNSZone
          enablePrivateClusterPublicFQDN: true
          enablePrivateCluster: true
          authorizedIPRanges:
          - ""
          - ""
        resourceGroup: resourceGroup
        infraLBConfig:
          apiServerLB:
            ipAllocationMethod: Dynamic
            apiServerLBStaticIP: apiServerLBStaticIP
            privateDNSZoneResourceGroup: privateDNSZoneResourceGroup
            privateDNSName: privateDNSName
            type: Public
        storageAccountName: storageAccountName
        vnetName: vnetName
        workerSubnet:
          securityGroupName: securityGroupName
          nsgResourceGroup: nsgResourceGroup
          cidrBlock: cidrBlock
          name: name
        vnetResourceGroup: vnetResourceGroup
        sshKey: sshKey
        containerName: containerName
        controlPlaneSubnet:
          securityGroupName: securityGroupName
          nsgResourceGroup: nsgResourceGroup
          cidrBlock: cidrBlock
          name: name
        location: location
        aadProfile:
          adminGroupObjectIDs:
          - adminGroupObjectIDs
          - adminGroupObjectIDs
          managed: true
        subscriptionId: subscriptionId
        enablePrivateCluster: true
        vnetCidrBlock: vnetCidrBlock
      properties:
        aadProfile:
          $ref: "#/components/schemas/v1AADProfile"
        apiServerAccessProfile:
          $ref: "#/components/schemas/v1APIServerAccessProfile"
        containerName:
          type: string
        controlPlaneSubnet:
          $ref: "#/components/schemas/v1Subnet"
        enablePrivateCluster:
          description: Deprecated. use apiServerAccessProfile.enablePrivateCluster
          type: boolean
        infraLBConfig:
          $ref: "#/components/schemas/v1InfraLBConfig"
        location:
          description: Location is the Azure datacenter location
          type: string
        resourceGroup:
          type: string
        sshKey:
          type: string
        storageAccountName:
          type: string
        subscriptionId:
          description: Subscription ID is unique identifier for the subscription used
            to access Azure services
          type: string
        vnetCidrBlock:
          type: string
        vnetName:
          description: VNETName is the virtual network in which the cluster is to
            be provisioned.
          type: string
        vnetResourceGroup:
          type: string
        workerSubnet:
          $ref: "#/components/schemas/v1Subnet"
      required:
      - location
      - sshKey
      - subscriptionId
      type: object
    v1AzureGroup:
      description: Azure group entity
      example:
        name: name
        id: id
      properties:
        id:
          description: Azure group id
          type: string
        name:
          description: Azure group name
          type: string
      type: object
    v1AzureGroups:
      description: List of Azure groups
      example:
        groups:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        groups:
          items:
            $ref: "#/components/schemas/v1AzureGroup"
          type: array
      required:
      - groups
      type: object
    v1AzureImage:
      description: Refers to Azure Shared Gallery image
      example:
        resourceGroup: resourceGroup
        name: name
        state: state
        subscriptionID: subscriptionID
        version: version
        gallery: gallery
      properties:
        gallery:
          type: string
        name:
          type: string
        resourceGroup:
          type: string
        state:
          type: string
        subscriptionID:
          type: string
        version:
          type: string
      type: object
    v1AzureInstanceTypes:
      description: List of Azure instance types
      example:
        instanceTypes:
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
      properties:
        instanceTypes:
          items:
            $ref: "#/components/schemas/v1InstanceType"
          type: array
      type: object
    v1AzureMachine:
      description: Azure cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          allocatePublicIP: true
          image:
            offer: offer
            resourceGroup: resourceGroup
            name: name
            publisher: publisher
            id: id
            sku: sku
            subscriptionId: subscriptionId
            version: version
            gallery: gallery
          sshPublicKey: sshPublicKey
          additionalTags:
            key: additionalTags
          instanceType: instanceType
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          location: location
          availabilityZone:
            id: id
            enabled: true
          osDisk:
            managedDisk:
              storageAccountType: storageAccountType
            osType: Linux
            diskSizeGB: 9
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1AzureMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1AzureMachinePoolCloudConfigEntity:
      properties:
        azs:
          items:
            type: string
          type: array
        instanceType:
          description: Instance type stands for VMSize in Azure
          type: string
        isSystemNodePool:
          description: whether this pool is for system node Pool
          type: boolean
        osDisk:
          $ref: "#/components/schemas/v1AzureOSDisk"
      type: object
    v1AzureMachinePoolConfig:
      example:
        isControlPlane: true
        instanceType: instanceType
        nodeRepaveInterval: 7
        additionalLabels:
          key: additionalLabels
        maxSize: 5
        instanceConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          cpuSet: 0
          category: category
          memoryMiB: 1
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 3
        isSystemNodePool: true
        name: name
        osType: null
        minSize: 2
        azs:
        - azs
        - azs
        spotVMOptions:
          maxPrice: maxPrice
        osDisk:
          managedDisk:
            storageAccountType: storageAccountType
          osType: Linux
          diskSizeGB: 9
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          items:
            type: string
          type: array
        instanceConfig:
          $ref: "#/components/schemas/v1InstanceConfig"
        instanceType:
          description: Instance type stands for VMSize in Azure
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        isSystemNodePool:
          description: whether this pool is for system node Pool
          type: boolean
          x-omitempty: false
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        osDisk:
          $ref: "#/components/schemas/v1AzureOSDisk"
        osType:
          $ref: "#/components/schemas/v1OsType"
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        spotVMOptions:
          $ref: "#/components/schemas/v1SpotVMOptions"
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      required:
      - isControlPlane
      type: object
    v1AzureMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1AzureMachinePoolCloudConfigEntity"
        managedPoolConfig:
          $ref: "#/components/schemas/v1AzureManagedMachinePoolConfig"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1AzureMachineSpec:
      description: Azure cloud VM definition spec
      example:
        allocatePublicIP: true
        image:
          offer: offer
          resourceGroup: resourceGroup
          name: name
          publisher: publisher
          id: id
          sku: sku
          subscriptionId: subscriptionId
          version: version
          gallery: gallery
        sshPublicKey: sshPublicKey
        additionalTags:
          key: additionalTags
        instanceType: instanceType
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        location: location
        availabilityZone:
          id: id
          enabled: true
        osDisk:
          managedDisk:
            storageAccountType: storageAccountType
          osType: Linux
          diskSizeGB: 9
      properties:
        additionalTags:
          additionalProperties:
            type: string
          type: object
        allocatePublicIP:
          type: boolean
        availabilityZone:
          $ref: "#/components/schemas/v1AzureMachineSpecAvailabilityZone"
        image:
          $ref: "#/components/schemas/v1AzureMachineSpecImage"
        instanceType:
          type: string
        location:
          type: string
        nics:
          items:
            $ref: "#/components/schemas/v1AzureNic"
          type: array
        osDisk:
          $ref: "#/components/schemas/v1AzureOSDisk"
        sshPublicKey:
          type: string
      required:
      - instanceType
      - location
      - osDisk
      type: object
    v1AzureMachineSpecAvailabilityZone:
      description: Azure Machine Spec Availability zone
      example:
        id: id
        enabled: true
      properties:
        enabled:
          type: boolean
        id:
          type: string
      type: object
    v1AzureMachineSpecImage:
      description: Azure Machine Spec Image
      example:
        offer: offer
        resourceGroup: resourceGroup
        name: name
        publisher: publisher
        id: id
        sku: sku
        subscriptionId: subscriptionId
        version: version
        gallery: gallery
      properties:
        gallery:
          type: string
        id:
          type: string
        name:
          type: string
        offer:
          type: string
        publisher:
          type: string
        resourceGroup:
          type: string
        sku:
          type: string
        subscriptionId:
          type: string
        version:
          type: string
      type: object
    v1AzureMachines:
      description: Azure machine list
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            allocatePublicIP: true
            image:
              offer: offer
              resourceGroup: resourceGroup
              name: name
              publisher: publisher
              id: id
              sku: sku
              subscriptionId: subscriptionId
              version: version
              gallery: gallery
            sshPublicKey: sshPublicKey
            additionalTags:
              key: additionalTags
            instanceType: instanceType
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            location: location
            availabilityZone:
              id: id
              enabled: true
            osDisk:
              managedDisk:
                storageAccountType: storageAccountType
              osType: Linux
              diskSizeGB: 9
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            allocatePublicIP: true
            image:
              offer: offer
              resourceGroup: resourceGroup
              name: name
              publisher: publisher
              id: id
              sku: sku
              subscriptionId: subscriptionId
              version: version
              gallery: gallery
            sshPublicKey: sshPublicKey
            additionalTags:
              key: additionalTags
            instanceType: instanceType
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            location: location
            availabilityZone:
              id: id
              enabled: true
            osDisk:
              managedDisk:
                storageAccountType: storageAccountType
              osType: Linux
              diskSizeGB: 9
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1AzureMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1AzureManagedMachinePoolConfig:
      properties:
        isSystemNodePool:
          description: whether this pool is for system node Pool
          type: boolean
          x-omitempty: false
        osType:
          $ref: "#/components/schemas/v1OsType"
      type: object
    v1AzureNic:
      description: AWS network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        index: 0
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1AzureOSDisk:
      example:
        managedDisk:
          storageAccountType: storageAccountType
        osType: Linux
        diskSizeGB: 9
      properties:
        diskSizeGB:
          format: int32
          type: integer
        managedDisk:
          $ref: "#/components/schemas/v1ManagedDisk"
        osType:
          $ref: "#/components/schemas/v1OsType"
      type: object
    v1AzurePrivateDnsZone:
      description: Azure Private DNS zone entity
      example:
        name: name
        location: location
        id: id
      properties:
        id:
          description: Fully qualified resource Id for the resource
          type: string
        location:
          description: The Azure Region where the resource lives
          type: string
        name:
          description: The name of the resource
          type: string
      type: object
    v1AzurePrivateDnsZones:
      description: List of Azure storage accounts
      example:
        privateDnsZones:
        - name: name
          location: location
          id: id
        - name: name
          location: location
          id: id
      properties:
        privateDnsZones:
          items:
            $ref: "#/components/schemas/v1AzurePrivateDnsZone"
          type: array
      type: object
    v1AzureRegion:
      description: Azure region entity
      example:
        displayName: displayName
        name: name
        zones:
        - name: name
        - name: name
      properties:
        displayName:
          description: Azure region displayname
          type: string
        name:
          description: Azure region name
          type: string
        zones:
          description: List of zones associated to a particular Azure region
          items:
            $ref: "#/components/schemas/v1AzureAvailabilityZone"
          type: array
      type: object
    v1AzureRegions:
      description: List of Azure regions
      example:
        regions:
        - displayName: displayName
          name: name
          zones:
          - name: name
          - name: name
        - displayName: displayName
          name: name
          zones:
          - name: name
          - name: name
      properties:
        regions:
          items:
            $ref: "#/components/schemas/v1AzureRegion"
          type: array
      required:
      - regions
      type: object
    v1AzureResourceGroupList:
      description: List of Azure resource group
      example:
        resourceGroupList:
        - name: name
          location: location
          id: id
        - name: name
          location: location
          id: id
      properties:
        resourceGroupList:
          items:
            $ref: "#/components/schemas/v1ResourceGroup"
          type: array
      type: object
    v1AzureStorageAccountEntity:
      description: Azure Storage Account Entity
      example:
        storageAccountTypes:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        storageAccountTypes:
          items:
            $ref: "#/components/schemas/v1StorageAccountEntity"
          type: array
      type: object
    v1AzureStorageAccounts:
      description: List of Azure storage accounts
      example:
        accounts:
        - kind: kind
          name: name
          location: location
          id: id
        - kind: kind
          name: name
          location: location
          id: id
      properties:
        accounts:
          items:
            $ref: "#/components/schemas/v1StorageAccount"
          type: array
      type: object
    v1AzureStorageConfig:
      description: Azure storage config object
      example:
        resourceGroup: resourceGroup
        credentials:
          clientId: clientId
          tenantId: tenantId
          clientSecret: clientSecret
          subscriptionId: subscriptionId
          clientCloud: public
        containerName: containerName
        sku: sku
        storageName: storageName
      properties:
        containerName:
          description: Azure container name
          type: string
        credentials:
          $ref: "#/components/schemas/v1.AzureAccountEntitySpec"
        resourceGroup:
          description: "Azure resource group name, to which the storage account is\
            \ mapped"
          type: string
        sku:
          description: Azure sku
          type: string
        storageName:
          description: Azure storage name
          type: string
      required:
      - containerName
      - credentials
      - resourceGroup
      - storageName
      type: object
    v1AzureStorageContainers:
      description: List of Azure storage containers
      example:
        containers:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
      properties:
        containers:
          items:
            $ref: "#/components/schemas/v1StorageContainer"
          type: array
      type: object
    v1AzureStorageTypes:
      description: List of Azure storage types
      example:
        storageTypes:
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
      properties:
        storageTypes:
          items:
            $ref: "#/components/schemas/v1StorageType"
          type: array
      type: object
    v1AzureSubscriptionList:
      description: List of Azure subscription
      example:
        subscriptionList:
        - displayName: displayName
          state: state
          subscriptionId: subscriptionId
          authorizationSource: authorizationSource
        - displayName: displayName
          state: state
          subscriptionId: subscriptionId
          authorizationSource: authorizationSource
      properties:
        subscriptionList:
          items:
            $ref: "#/components/schemas/v1Subscription"
          type: array
      type: object
    v1AzureVHDImage:
      description: "Mold always create VHD image for custom image, and this can be\
        \ use as golden images"
      example:
        os: os
        name: name
        id: id
        state: state
        region: region
      properties:
        id:
          type: string
        name:
          type: string
        os:
          type: string
        region:
          type: string
        state:
          type: string
      type: object
    v1AzureVhdUrlEntity:
      description: Azure vhd url entity
      example:
        name: name
        url: url
      properties:
        name:
          description: The name of the resource
          type: string
        url:
          description: The url of the Azure Vhd
          type: string
      type: object
    v1AzureVirtualNetworkList:
      description: List of Azure virtual network
      example:
        virtualNetworkList:
        - addressSpaces:
          - addressSpaces
          - addressSpaces
          name: name
          location: location
          subnets:
          - securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          - securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          id: id
          type: type
        - addressSpaces:
          - addressSpaces
          - addressSpaces
          name: name
          location: location
          subnets:
          - securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          - securityGroupName: securityGroupName
            nsgResourceGroup: nsgResourceGroup
            cidrBlock: cidrBlock
            name: name
          id: id
          type: type
      properties:
        virtualNetworkList:
          items:
            $ref: "#/components/schemas/v1VirtualNetwork"
          type: array
      type: object
    v1AzureZoneEntity:
      description: List of Azure zone
      example:
        zoneList:
        - id: id
        - id: id
      properties:
        zoneList:
          items:
            $ref: "#/components/schemas/v1ZoneEntity"
          type: array
      type: object
    v1BackupLocationConfig:
      description: Backup location configuration
      example:
        uid: uid
        name: name
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        uid:
          type: string
      type: object
    v1BackupRestoreStatusMeta:
      description: Backup restored status
      example:
        destinationClusterRef:
          uid: uid
          kind: kind
          name: name
        restoreState: restoreState
        backupName: backupName
      properties:
        backupName:
          type: string
        destinationClusterRef:
          $ref: "#/components/schemas/v1ResourceReference"
        restoreState:
          type: string
      type: object
    v1BackupState:
      description: Backup state
      example:
        msg: msg
        state: state
        backupTime: 2000-01-23T04:56:07.000+00:00
        deleteState: deleteState
      properties:
        backupTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        deleteState:
          type: string
        msg:
          type: string
        state:
          type: string
      type: object
    v1BackupStatusConfig:
      description: Backup config
      example:
        includeClusterResourceMode: null
        includeAllDisks: true
        includeClusterResources: true
        namespaces:
        - namespaces
        - namespaces
      properties:
        includeAllDisks:
          type: boolean
        includeClusterResourceMode:
          $ref: "#/components/schemas/v1IncludeClusterResourceMode"
        includeClusterResources:
          description: Deprecated. Use includeClusterResourceMode
          type: boolean
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1BackupStatusMeta:
      description: Backup  status meta
      example:
        backupedNamespaces:
        - backupedNamespaces
        - backupedNamespaces
        expiryDate: 2000-01-23T04:56:07.000+00:00
        backupState:
          msg: msg
          state: state
          backupTime: 2000-01-23T04:56:07.000+00:00
          deleteState: deleteState
        backupName: backupName
      properties:
        backupName:
          type: string
        backupState:
          $ref: "#/components/schemas/v1BackupState"
        backupedNamespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        expiryDate:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1BasicOciRegistry:
      description: Basic oci registry information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          containsSpectroManifest: true
          registryUid: registryUid
          endpoint: endpoint
          basePath: basePath
          auth:
            password: password
            tls:
              certificate: certificate
              insecureSkipVerify: true
              ca: ca
              enabled: true
              key: key
            type: noAuth
            token: token
            username: username
          scope: scope
          isSyncSupported: true
          baseContentPath: baseContentPath
          providerType: helm
        status:
          syncStatus:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1BasicOciRegistrySpec"
        status:
          $ref: "#/components/schemas/v1OciRegistryStatus"
      type: object
    v1BasicOciRegistrySpec:
      description: Basic oci registry spec
      example:
        containsSpectroManifest: true
        registryUid: registryUid
        endpoint: endpoint
        basePath: basePath
        auth:
          password: password
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          type: noAuth
          token: token
          username: username
        scope: scope
        isSyncSupported: true
        baseContentPath: baseContentPath
        providerType: helm
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        baseContentPath:
          description: OCI registry content base path
          type: string
        basePath:
          description: OCI registry api base path
          type: string
        containsSpectroManifest:
          type: boolean
          x-omitempty: false
        endpoint:
          description: OCI registry endpoint
          type: string
        isSyncSupported:
          type: boolean
        providerType:
          default: helm
          enum:
          - helm
          - zarf
          - pack
          type: string
        registryUid:
          description: Basic oci registry uid
          type: string
        scope:
          type: string
      required:
      - auth
      - endpoint
      type: object
    v1Billing:
      description: billing preference
      properties:
        billingDay:
          type: integer
        tierPricing:
          $ref: "#/components/schemas/v1TierPrice"
      type: object
    v1BrokerLogin:
      description: Request for broker login request
      properties:
        subscriberSubjects:
          description: subjects that client need to subscribe
          items:
            type: string
          type: array
      type: object
    v1BrokerToken:
      description: Response for broker login request
      properties:
        clientType:
          description: clientType indicates the type of the client making the request
          type: string
        maxAllowedClients:
          description: maximum number of clients that can subscribe to the subject
          type: integer
        msgCtxData:
          description: message context data can be used as contextual information
            for the message exchange
          type: object
        publisherSubjects:
          description: subjects that client can publish
          items:
            type: string
          type: array
        subscriberSubjects:
          description: subjects that client has subscribed
          items:
            type: string
          type: array
      type: object
    v1BulkDeleteFailure:
      example:
        uid: uid
        errMsg: errMsg
        name: name
      properties:
        errMsg:
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1BulkDeleteRequest:
      properties:
        uids:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - uids
      type: object
    v1BulkDeleteResponse:
      example:
        failures:
        - uid: uid
          errMsg: errMsg
          name: name
        - uid: uid
          errMsg: errMsg
          name: name
        deletedCount: 0
        isSucceeded: true
        message: message
      properties:
        deletedCount:
          type: integer
          x-omitempty: false
        failures:
          items:
            $ref: "#/components/schemas/v1BulkDeleteFailure"
          type: array
          uniqueItems: true
          x-omitempty: false
        isSucceeded:
          type: boolean
          x-omitempty: false
        message:
          type: string
          x-omitempty: false
      type: object
    v1BulkEvents:
      description: Describes a list component events' details
      items:
        $ref: "#/components/schemas/v1Event"
      type: array
      uniqueItems: true
    v1CPU:
      example:
        cores: 0
      properties:
        cores:
          description: number of cpu cores
          format: int32
          type: integer
      type: object
    v1Card:
      description: Card details object
      properties:
        brand:
          description: Card brand
          type: string
        country:
          description: Country name the card belongs
          type: string
        expYear:
          description: Expiry year of the card
          format: uint64
          type: number
        fingerPrint:
          description: Finger print
          type: string
        funding:
          description: Funding
          type: string
        last4:
          description: Last 4 digit of the card
          type: string
      type: object
    v1Cert:
      example:
        certificate: certificate
        isCA: true
        key: key
      properties:
        certificate:
          type: string
          x-omitempty: false
        isCA:
          type: boolean
          x-omitempty: false
        key:
          type: string
          x-omitempty: false
      type: object
    v1Certificate:
      description: Certificate details
      example:
        name: name
        expiry: 2000-01-23T04:56:07.000+00:00
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
      type: object
    v1CertificateAuthority:
      description: Certificate Authority
      example:
        certificates:
        - name: name
          expiry: 2000-01-23T04:56:07.000+00:00
        - name: name
          expiry: 2000-01-23T04:56:07.000+00:00
        name: name
        expiry: 2000-01-23T04:56:07.000+00:00
      properties:
        certificates:
          items:
            $ref: "#/components/schemas/v1Certificate"
          type: array
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
      type: object
    v1Channel:
      example:
        uid: uid
        createdBy: createdBy
        identifiers:
        - identifiers
        - identifiers
        alertAllUsers: true
        http:
          headers: "{}"
          method: method
          body: body
          url: url
        isActive: true
        type: email
        status:
          isSucceeded: true
          time: 2000-01-23T04:56:07.000+00:00
          message: message
      properties:
        alertAllUsers:
          type: boolean
          x-omitempty: false
        createdBy:
          type: string
        http:
          $ref: "#/components/schemas/v1Channel_http"
        identifiers:
          items:
            type: string
          type: array
          uniqueItems: true
        isActive:
          type: boolean
          x-omitempty: false
        status:
          $ref: "#/components/schemas/v1AlertNotificationStatus"
        type:
          enum:
          - email
          - app
          - http
          type: string
        uid:
          type: string
      type: object
    v1ClassificationBanner:
      properties:
        config:
          description: JSON-formatted string containing classification banner configuration
            data
          type: string
      type: object
    v1CleanUpResource:
      description: Resources of tenant
      properties:
        activeResources:
          $ref: "#/components/schemas/v1ActiveTenantResources"
        tenantStatus:
          $ref: "#/components/schemas/v1TenantCleanUpStatus"
      type: object
    v1CloudAccountMeta:
      description: Cloud account meta information
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1CloudAccountMetadata:
      description: Cloud account metadata summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
      type: object
    v1CloudAccountSettings:
      description: Cloud account settings
      example:
        disablePropertiesRequest: true
      properties:
        disablePropertiesRequest:
          description: Will disable certain properties request to cloud and the input
            is collected directly from the user
          type: boolean
          x-omitempty: false
      type: object
    v1CloudAccountStatus:
      description: Status of the account
      example:
        tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
        tokenExpiry: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        state:
          description: Cloud account status
          type: string
        tokenExpiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        tokenGenerationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1CloudAccountSummary:
      description: Cloud account summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        specSummary:
          accountId: accountId
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        specSummary:
          $ref: "#/components/schemas/v1CloudAccountSummary_specSummary"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1CloudAccountUidEntity:
      description: Cloud account uid entity
      properties:
        uid:
          description: Cloud account uid
          type: string
      type: object
    v1CloudAccountsMetadata:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1CloudAccountMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1CloudAccountsPatch:
      items:
        $ref: "#/components/schemas/v1HttpPatch"
      type: array
    v1CloudAccountsSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          specSummary:
            accountId: accountId
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          specSummary:
            accountId: accountId
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1CloudAccountSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1CloudCategory:
      default: cloud
      description: Cloud category description
      enum:
      - datacenter
      - cloud
      - edge
      type: string
    v1CloudConfigMeta:
      example:
        uid: uid
        hybridMachinePools:
        - isControlPlane: true
          size: 1
          cloudType: cloudType
          healthy: 0
          infraProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          maintenanceMode: 6
          labels:
          - labels
          - labels
        - isControlPlane: true
          size: 1
          cloudType: cloudType
          healthy: 0
          infraProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          maintenanceMode: 6
          labels:
          - labels
          - labels
        cloudType: cloudType
        machinePools:
        - isControlPlane: true
          size: 1
          cloudType: cloudType
          healthy: 0
          infraProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          maintenanceMode: 6
          labels:
          - labels
          - labels
        - isControlPlane: true
          size: 1
          cloudType: cloudType
          healthy: 0
          infraProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          maintenanceMode: 6
          labels:
          - labels
          - labels
      properties:
        cloudType:
          type: string
        hybridMachinePools:
          description: Hybrid Machine pools meta information
          items:
            $ref: "#/components/schemas/v1MachinePoolMeta"
          type: array
        machinePools:
          description: Machine pools meta information
          items:
            $ref: "#/components/schemas/v1MachinePoolMeta"
          type: array
        uid:
          description: Cluster's cloud config uid
          type: string
      type: object
    v1CloudCost:
      description: Cloud cost information
      example:
        compute: 0.8008281904610115
        total: 1.4658129805029452
        storage: 6.027456183070403
      properties:
        compute:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1CloudCostDataPoint:
      description: Cloud cost data point information
      example:
        compute: 0.8008281904610115
        total: 5.962133916683182
        storage: 6.027456183070403
        timestamp: 1.4658129805029452
      properties:
        compute:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        timestamp:
          format: int64
          type: number
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1CloudInstanceRateConfig:
      description: Cloud instance rate config
      example:
        memoryRateProportion: 6.0274563
        computeRateProportion: 0.8008282
      properties:
        computeRateProportion:
          format: float
          type: number
        memoryRateProportion:
          format: float
          type: number
      type: object
    v1CloudMachineStatus:
      description: cloud machine status
      example:
        maintenanceStatus:
          action: action
          state: state
          message: message
        instanceState: Pending
        health:
          lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
          state: state
          conditions:
          - reason: reason
            message: message
            type: type
            status: status
          - reason: reason
            message: message
            type: type
            status: status
      properties:
        health:
          $ref: "#/components/schemas/v1MachineHealth"
        instanceState:
          enum:
          - Pending
          - Provisioning
          - Provisioned
          - Running
          - Deleting
          - Deleted
          - Failed
          - Unknown
          type: string
        maintenanceStatus:
          $ref: "#/components/schemas/v1MachineMaintenanceStatus"
      type: object
    v1CloudRate:
      description: Cloud estimated rate information
      example:
        compute:
          rate: 6.027456183070403
          type: type
        total: 7.061401241503109
        storage:
        - sizeGB: 5.637376656633329
          rate: 5.962133916683182
          iops: 1.4658129805029452
          throughput: 2.3021358869347655
          type: type
        - sizeGB: 5.637376656633329
          rate: 5.962133916683182
          iops: 1.4658129805029452
          throughput: 2.3021358869347655
          type: type
      properties:
        compute:
          $ref: "#/components/schemas/v1ComputeRate"
        storage:
          items:
            $ref: "#/components/schemas/v1StorageRate"
          type: array
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1CloudResourceMetadata:
      description: Cloud resource metadata
      example:
        instanceTypes:
          key:
            cost:
              price:
              - onDemand: 0.8008281904610115
                os: linux
                spot: 6.027456183070403
              - onDemand: 0.8008281904610115
                os: linux
                spot: 6.027456183070403
            memory: 5.637376656633329
            price: 2.3021358869347655
            nonSupportedZones:
            - nonSupportedZones
            - nonSupportedZones
            supportedArchitectures:
            - supportedArchitectures
            - supportedArchitectures
            cpu: 1.4658129805029452
            category: category
            type: type
            gpu: 5.962133916683182
        storageTypes:
          key:
            throughputCost:
              discountedUsage: discountedUsage
              price:
              - price: price
                limit: limit
              - price: price
                limit: limit
            cost:
              discountedUsage: discountedUsage
              price:
              - price: price
                limit: limit
              - price: price
                limit: limit
            iopsCost:
              discountedUsage: discountedUsage
              price:
              - price: price
                limit: limit
              - price: price
                limit: limit
            kind: kind
            name: name
      properties:
        instanceTypes:
          additionalProperties:
            $ref: "#/components/schemas/v1InstanceType"
          type: object
        storageTypes:
          additionalProperties:
            $ref: "#/components/schemas/v1StorageType"
          type: object
      type: object
    v1CloudSpotPrice:
      description: Spot price entity of a particular cloud type
      properties:
        spotPrice:
          description: Spot price of a resource for a particular cloud
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1CloudWatch:
      example:
        credentials:
          credentialType: secret
          secretSpec:
            mission: mission
            permissionBoundary: permissionBoundary
            role: role
            agency: agency
            accountName: accountName
            namePrefix: namePrefix
            tls:
              cert: cert
              ca: ca
              key: key
            isCapValidationEnabled: true
            policy: policy
          partition: aws
          sts:
            externalId: externalId
            arn: arn
          secretKey: secretKey
          accessKey: accessKey
          secretToken: secretToken
          policyARNs:
          - policyARNs
          - policyARNs
        stream: stream
        region: region
        group: group
      properties:
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        group:
          type: string
        region:
          type: string
        stream:
          type: string
      type: object
    v1ClusterBackup:
      description: Cluster Backup
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          config:
            backupLocationName: backupLocationName
            includeClusterResourceMode: Always
            backupLocationUid: backupLocationUid
            schedule:
              scheduledRunTime: scheduledRunTime
            backupPrefix: backupPrefix
            durationInHours: 0.8008281904610115
            locationType: locationType
            includeAllDisks: true
            backupName: backupName
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
        status:
          clusterBackupStatuses:
          - actor:
              uid: uid
              actorType: actorType
            backupStatusMeta:
            - backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            - backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            backupConfig:
              includeClusterResourceMode: null
              includeAllDisks: true
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
            backupRequestUid: backupRequestUid
            restoreStatusMeta:
            - destinationClusterRef:
                uid: uid
                kind: kind
                name: name
              restoreState: restoreState
              backupName: backupName
            - destinationClusterRef:
                uid: uid
                kind: kind
                name: name
              restoreState: restoreState
              backupName: backupName
            state: state
            backupLocationConfig:
              uid: uid
              name: name
              type: type
          - actor:
              uid: uid
              actorType: actorType
            backupStatusMeta:
            - backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            - backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            backupConfig:
              includeClusterResourceMode: null
              includeAllDisks: true
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
            backupRequestUid: backupRequestUid
            restoreStatusMeta:
            - destinationClusterRef:
                uid: uid
                kind: kind
                name: name
              restoreState: restoreState
              backupName: backupName
            - destinationClusterRef:
                uid: uid
                kind: kind
                name: name
              restoreState: restoreState
              backupName: backupName
            state: state
            backupLocationConfig:
              uid: uid
              name: name
              type: type
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterBackupSpec"
        status:
          $ref: "#/components/schemas/v1ClusterBackupStatus"
      type: object
    v1ClusterBackupConfig:
      description: Cluster backup config
      example:
        backupLocationName: backupLocationName
        includeClusterResourceMode: Always
        backupLocationUid: backupLocationUid
        schedule:
          scheduledRunTime: scheduledRunTime
        backupPrefix: backupPrefix
        durationInHours: 0.8008281904610115
        locationType: locationType
        includeAllDisks: true
        backupName: backupName
        includeClusterResources: true
        namespaces:
        - namespaces
        - namespaces
      properties:
        backupLocationName:
          type: string
        backupLocationUid:
          type: string
        backupName:
          type: string
        backupPrefix:
          type: string
        durationInHours:
          format: int64
          type: number
        includeAllDisks:
          type: boolean
        includeClusterResourceMode:
          $ref: "#/components/schemas/v1IncludeClusterResourceMode"
        includeClusterResources:
          description: Deprecated. Use includeClusterResourceMode
          type: boolean
        locationType:
          type: string
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        schedule:
          $ref: "#/components/schemas/v1ClusterFeatureSchedule"
      type: object
    v1ClusterBackupLocationType:
      description: Cluster backup location type
      properties:
        locationType:
          type: string
      required:
      - locationType
      type: object
    v1ClusterBackupSpec:
      description: Cluster Backup Spec
      example:
        clusterUid: clusterUid
        config:
          backupLocationName: backupLocationName
          includeClusterResourceMode: Always
          backupLocationUid: backupLocationUid
          schedule:
            scheduledRunTime: scheduledRunTime
          backupPrefix: backupPrefix
          durationInHours: 0.8008281904610115
          locationType: locationType
          includeAllDisks: true
          backupName: backupName
          includeClusterResources: true
          namespaces:
          - namespaces
          - namespaces
      properties:
        clusterUid:
          type: string
        config:
          $ref: "#/components/schemas/v1ClusterBackupConfig"
      type: object
    v1ClusterBackupStatus:
      description: Cluster Backup Status
      example:
        clusterBackupStatuses:
        - actor:
            uid: uid
            actorType: actorType
          backupStatusMeta:
          - backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          - backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          backupConfig:
            includeClusterResourceMode: null
            includeAllDisks: true
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
          backupRequestUid: backupRequestUid
          restoreStatusMeta:
          - destinationClusterRef:
              uid: uid
              kind: kind
              name: name
            restoreState: restoreState
            backupName: backupName
          - destinationClusterRef:
              uid: uid
              kind: kind
              name: name
            restoreState: restoreState
            backupName: backupName
          state: state
          backupLocationConfig:
            uid: uid
            name: name
            type: type
        - actor:
            uid: uid
            actorType: actorType
          backupStatusMeta:
          - backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          - backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          backupConfig:
            includeClusterResourceMode: null
            includeAllDisks: true
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
          backupRequestUid: backupRequestUid
          restoreStatusMeta:
          - destinationClusterRef:
              uid: uid
              kind: kind
              name: name
            restoreState: restoreState
            backupName: backupName
          - destinationClusterRef:
              uid: uid
              kind: kind
              name: name
            restoreState: restoreState
            backupName: backupName
          state: state
          backupLocationConfig:
            uid: uid
            name: name
            type: type
      properties:
        clusterBackupStatuses:
          items:
            $ref: "#/components/schemas/v1ClusterBackupStatusMeta"
          type: array
      type: object
    v1ClusterBackupStatusMeta:
      description: Cluster Backup Status Meta
      example:
        actor:
          uid: uid
          actorType: actorType
        backupStatusMeta:
        - backupedNamespaces:
          - backupedNamespaces
          - backupedNamespaces
          expiryDate: 2000-01-23T04:56:07.000+00:00
          backupState:
            msg: msg
            state: state
            backupTime: 2000-01-23T04:56:07.000+00:00
            deleteState: deleteState
          backupName: backupName
        - backupedNamespaces:
          - backupedNamespaces
          - backupedNamespaces
          expiryDate: 2000-01-23T04:56:07.000+00:00
          backupState:
            msg: msg
            state: state
            backupTime: 2000-01-23T04:56:07.000+00:00
            deleteState: deleteState
          backupName: backupName
        backupConfig:
          includeClusterResourceMode: null
          includeAllDisks: true
          includeClusterResources: true
          namespaces:
          - namespaces
          - namespaces
        backupRequestUid: backupRequestUid
        restoreStatusMeta:
        - destinationClusterRef:
            uid: uid
            kind: kind
            name: name
          restoreState: restoreState
          backupName: backupName
        - destinationClusterRef:
            uid: uid
            kind: kind
            name: name
          restoreState: restoreState
          backupName: backupName
        state: state
        backupLocationConfig:
          uid: uid
          name: name
          type: type
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        backupConfig:
          $ref: "#/components/schemas/v1BackupStatusConfig"
        backupLocationConfig:
          $ref: "#/components/schemas/v1BackupLocationConfig"
        backupRequestUid:
          type: string
        backupStatusMeta:
          items:
            $ref: "#/components/schemas/v1BackupStatusMeta"
          type: array
        restoreStatusMeta:
          items:
            $ref: "#/components/schemas/v1BackupRestoreStatusMeta"
          type: array
        state:
          type: string
      type: object
    v1ClusterComplianceOnDemandConfig:
      description: Cluster compliance scan on demand configuration
      properties:
        kubeBench:
          $ref: "#/components/schemas/v1ClusterComplianceScanKubeBenchConfig"
        kubeHunter:
          $ref: "#/components/schemas/v1ClusterComplianceScanKubeHunterConfig"
        sonobuoy:
          $ref: "#/components/schemas/v1ClusterComplianceScanSonobuoyConfig"
        syft:
          $ref: "#/components/schemas/v1ClusterComplianceScanSyftConfig"
      type: object
    v1ClusterComplianceScan:
      description: Cluster Compliance Scan
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          driverSpec:
            key:
              isClusterConfig: true
              config:
                schedule:
                  scheduledRunTime: scheduledRunTime
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterComplianceScanSpec"
      type: object
    v1ClusterComplianceScanKubeBenchConfig:
      description: Cluster compliance scan config for kube bench driver
      properties:
        runScan:
          type: boolean
      type: object
    v1ClusterComplianceScanKubeBenchScheduleConfig:
      description: Cluster compliance scan schedule config for kube bench driver
      properties:
        schedule:
          $ref: "#/components/schemas/v1ClusterFeatureSchedule"
      type: object
    v1ClusterComplianceScanKubeHunterConfig:
      description: Cluster compliance scan config for kube hunter driver
      properties:
        runScan:
          type: boolean
      type: object
    v1ClusterComplianceScanKubeHunterScheduleConfig:
      description: Cluster compliance scan schedule config for kube hunter driver
      properties:
        schedule:
          $ref: "#/components/schemas/v1ClusterFeatureSchedule"
      type: object
    v1ClusterComplianceScanLogSpec:
      description: Cluster compliance scan logs spec
      example:
        clusterUid: clusterUid
        driverType: driverType
      properties:
        clusterUid:
          type: string
        driverType:
          type: string
      type: object
    v1ClusterComplianceScanLogs:
      description: Cluster compliance scan Logs
      example:
        kubeBenchLogs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                fail: 0
                warn: 5
                pass: 1
                name: name
                time: 2000-01-23T04:56:07.000+00:00
                type: type
                logs:
                - remediation: remediation
                  expected: expected
                  description: description
                  testId: testId
                  state: state
                  value: value
                - remediation: remediation
                  expected: expected
                  description: description
                  testId: testId
                  state: state
                  value: value
                info: 6
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                fail: 0
                warn: 5
                pass: 1
                name: name
                time: 2000-01-23T04:56:07.000+00:00
                type: type
                logs:
                - remediation: remediation
                  expected: expected
                  description: description
                  testId: testId
                  state: state
                  value: value
                - remediation: remediation
                  expected: expected
                  description: description
                  testId: testId
                  state: state
                  value: value
                info: 6
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        kubeHunterLogs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                vulnerabilites:
                  high: 5
                  low: 2
                  medium: 7
                time: 2000-01-23T04:56:07.000+00:00
                logs:
                - reference: reference
                  severity: severity
                  evidence: evidence
                  description: description
                  testId: testId
                  vulnerability: vulnerability
                - reference: reference
                  severity: severity
                  evidence: evidence
                  description: description
                  testId: testId
                  vulnerability: vulnerability
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                vulnerabilites:
                  high: 5
                  low: 2
                  medium: 7
                time: 2000-01-23T04:56:07.000+00:00
                logs:
                - reference: reference
                  severity: severity
                  evidence: evidence
                  description: description
                  testId: testId
                  vulnerability: vulnerability
                - reference: reference
                  severity: severity
                  evidence: evidence
                  description: description
                  testId: testId
                  vulnerability: vulnerability
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        sonobuoyLogs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                fail: 9
                node: node
                total: 2
                plugin: plugin
                pass: 3
                logs:
                - msg: msg
                  output: output
                  path: path
                  description: description
                  state: state
                - msg: msg
                  output: output
                  path: path
                  description: description
                  state: state
                status: status
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            reports:
              key:
                fail: 9
                node: node
                total: 2
                plugin: plugin
                pass: 3
                logs:
                - msg: msg
                  output: output
                  path: path
                  description: description
                  state: state
                - msg: msg
                  output: output
                  path: path
                  description: description
                  state: state
                status: status
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            state: state
            message: message
        syftLogs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            scanContext:
              scope: scope
              format: format
              labelSelector: labelSelector
              namespace: namespace
              podName: podName
            reports:
            - imageContexts:
              - containerName: containerName
                namespace: namespace
                podName: podName
              - containerName: containerName
                namespace: namespace
                podName: podName
              image: image
              vulnerabilitySummary:
                high: 7
                critical: 4
                low: 1
                medium: 1
                negligible: 1
                unknown: 6
              vulnerabilities:
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              state: state
              time: 2000-01-23T04:56:07.000+00:00
              isSBOMExist: true
              dependencies:
              - name: name
                type: type
                version: version
              - name: name
                type: type
                version: version
            - imageContexts:
              - containerName: containerName
                namespace: namespace
                podName: podName
              - containerName: containerName
                namespace: namespace
                podName: podName
              image: image
              vulnerabilitySummary:
                high: 7
                critical: 4
                low: 1
                medium: 1
                negligible: 1
                unknown: 6
              vulnerabilities:
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              state: state
              time: 2000-01-23T04:56:07.000+00:00
              isSBOMExist: true
              dependencies:
              - name: name
                type: type
                version: version
              - name: name
                type: type
                version: version
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            location:
              uid: uid
              name: name
            state: state
            message: message
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterUid: clusterUid
            driverType: driverType
          status:
            actor:
              uid: uid
              actorType: actorType
            scanContext:
              scope: scope
              format: format
              labelSelector: labelSelector
              namespace: namespace
              podName: podName
            reports:
            - imageContexts:
              - containerName: containerName
                namespace: namespace
                podName: podName
              - containerName: containerName
                namespace: namespace
                podName: podName
              image: image
              vulnerabilitySummary:
                high: 7
                critical: 4
                low: 1
                medium: 1
                negligible: 1
                unknown: 6
              vulnerabilities:
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              state: state
              time: 2000-01-23T04:56:07.000+00:00
              isSBOMExist: true
              dependencies:
              - name: name
                type: type
                version: version
              - name: name
                type: type
                version: version
            - imageContexts:
              - containerName: containerName
                namespace: namespace
                podName: podName
              - containerName: containerName
                namespace: namespace
                podName: podName
              image: image
              vulnerabilitySummary:
                high: 7
                critical: 4
                low: 1
                medium: 1
                negligible: 1
                unknown: 6
              vulnerabilities:
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              - severity: severity
                installed: installed
                name: name
                fixedIn: fixedIn
                vulnerability: vulnerability
                type: type
              state: state
              time: 2000-01-23T04:56:07.000+00:00
              isSBOMExist: true
              dependencies:
              - name: name
                type: type
                version: version
              - name: name
                type: type
                version: version
            scanTime:
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            requestUid: requestUid
            location:
              uid: uid
              name: name
            state: state
            message: message
      properties:
        kubeBenchLogs:
          items:
            $ref: "#/components/schemas/v1ClusterScanLogKubeBench"
          type: array
        kubeHunterLogs:
          items:
            $ref: "#/components/schemas/v1ClusterScanLogKubeHunter"
          type: array
        sonobuoyLogs:
          items:
            $ref: "#/components/schemas/v1ClusterScanLogSonobuoy"
          type: array
        syftLogs:
          items:
            $ref: "#/components/schemas/v1ClusterScanLogSyft"
          type: array
      type: object
    v1ClusterComplianceScanSonobuoyConfig:
      description: Cluster compliance scan config for sonobuoy driver
      properties:
        runScan:
          type: boolean
      type: object
    v1ClusterComplianceScanSonobuoyScheduleConfig:
      description: Cluster compliance scan schedule config for sonobuoy driver
      properties:
        schedule:
          $ref: "#/components/schemas/v1ClusterFeatureSchedule"
      type: object
    v1ClusterComplianceScanSpec:
      description: Cluster compliance scan Spec
      example:
        clusterUid: clusterUid
        driverSpec:
          key:
            isClusterConfig: true
            config:
              schedule:
                scheduledRunTime: scheduledRunTime
      properties:
        clusterUid:
          type: string
        driverSpec:
          additionalProperties:
            $ref: "#/components/schemas/v1ComplianceScanDriverSpec"
          type: object
      type: object
    v1ClusterComplianceScanSyftConfig:
      description: Cluster compliance scan config for syft driver
      properties:
        config:
          $ref: "#/components/schemas/v1ClusterComplianceScanSyftDriverConfig"
        runScan:
          type: boolean
      type: object
    v1ClusterComplianceScanSyftDriverConfig:
      description: Cluster compliance scan specification
      properties:
        format:
          enum:
          - cyclonedx-json
          - github-json
          - spdx-json
          - syft-json
          type: string
        labelSelector:
          type: string
        location:
          $ref: "#/components/schemas/v1ObjectEntity"
        namespace:
          type: string
        podName:
          type: string
        scope:
          enum:
          - cluster
          - namespace
          - label-selector
          - pod
          type: string
      type: object
    v1ClusterComplianceScheduleConfig:
      description: Cluster compliance scan schedule configuration
      properties:
        kubeBench:
          $ref: "#/components/schemas/v1ClusterComplianceScanKubeBenchScheduleConfig"
        kubeHunter:
          $ref: "#/components/schemas/v1ClusterComplianceScanKubeHunterScheduleConfig"
        sonobuoy:
          $ref: "#/components/schemas/v1ClusterComplianceScanSonobuoyScheduleConfig"
      type: object
    v1ClusterCondition:
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        lastProbeTime: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        lastProbeTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastTransitionTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        reason:
          description: "Unique, one-word, CamelCase reason for the condition's last\
            \ transition."
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - status
      - type
      type: object
    v1ClusterConfig:
      example:
        clusterMetaAttribute: clusterMetaAttribute
        machineManagementConfig:
          osPatchConfig:
            schedule: schedule
            onDemandPatchAfter: 2000-01-23T04:56:07.000+00:00
            patchOnBoot: true
            rebootIfRequired: true
        hostClusterConfig:
          clusterEndpoint:
            type: Ingress
            config:
              ingressConfig:
                port: 6
                host: host
              loadBalancerConfig:
                externalIPs:
                - externalIPs
                - externalIPs
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                externalTrafficPolicy: externalTrafficPolicy
          clusterGroup:
            uid: uid
            kind: kind
            name: name
          isHostCluster: false
          hostCluster:
            uid: uid
            kind: kind
            name: name
        clusterResources:
          rbacs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          namespaces:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        lifecycleConfig:
          pause: false
        controlPlaneHealthCheckTimeout: controlPlaneHealthCheckTimeout
        updateWorkerPoolsInParallel: true
        clusterRbac:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        hybridClusterConfig:
          clusterUid: clusterUid
          enable: true
          hybridMachinePoolClusterRefs:
          - uid: uid
            cloudType: edge-native
          - uid: uid
            cloudType: edge-native
        machineHealthConfig:
          nodeReadyHealthCheckDuration: nodeReadyHealthCheckDuration
          networkReadyHealthCheckDuration: networkReadyHealthCheckDuration
          healthCheckMaxUnhealthy: healthCheckMaxUnhealthy
      properties:
        clusterMetaAttribute:
          description: ClusterMetaAttribute contains additional cluster metadata information.
          type: string
        clusterRbac:
          description: Deprecated. Use clusterResources
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
        clusterResources:
          $ref: "#/components/schemas/v1ClusterResources"
        controlPlaneHealthCheckTimeout:
          description: "ControlPlaneHealthCheckTimeout is the timeout to check for\
            \ ready state of the control plane nodes. If the node is not ready within\
            \ the time out set, the node will be deleted and a new node will be launched."
          type: string
        hostClusterConfig:
          $ref: "#/components/schemas/v1HostClusterConfig"
        hybridClusterConfig:
          $ref: "#/components/schemas/v1HybridClusterConfig"
        lifecycleConfig:
          $ref: "#/components/schemas/v1LifecycleConfig"
        machineHealthConfig:
          $ref: "#/components/schemas/v1MachineHealthCheckConfig"
        machineManagementConfig:
          $ref: "#/components/schemas/v1MachineManagementConfig"
        updateWorkerPoolsInParallel:
          description: "UpdateWorkerPoolsInParallel is used to decide if the update\
            \ of workerpools happen in parallel. When this flag is false, the workerpools\
            \ are updated sequentially."
          type: boolean
      type: object
    v1ClusterConfigEntity:
      properties:
        clusterMetaAttribute:
          description: ClusterMetaAttribute can be used to set additional cluster
            metadata information.
          type: string
        controlPlaneHealthCheckTimeout:
          type: string
        hostClusterConfig:
          $ref: "#/components/schemas/v1HostClusterConfig"
        lifecycleConfig:
          $ref: "#/components/schemas/v1LifecycleConfig"
        location:
          $ref: "#/components/schemas/v1ClusterLocation"
        machineManagementConfig:
          $ref: "#/components/schemas/v1MachineManagementConfig"
        resources:
          $ref: "#/components/schemas/v1ClusterResourcesEntity"
        updateWorkerPoolsInParallel:
          type: boolean
      type: object
    v1ClusterConfigResponse:
      example:
        hostClusterConfig:
          clusterGroup:
            uid: uid
            kind: kind
            name: name
      properties:
        hostClusterConfig:
          $ref: "#/components/schemas/v1HostClusterConfigResponse"
      type: object
    v1ClusterDefinitionEntity:
      description: Cluster definition entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterDefinitionSpecEntity"
      type: object
    v1ClusterDefinitionProfileEntity:
      description: Cluster definition profile entity
      properties:
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackValuesEntity"
          type: array
          uniqueItems: true
        uid:
          description: Cluster profile uid
          type: string
      required:
      - uid
      type: object
    v1ClusterDefinitionSpecEntity:
      description: Cluster definition spec entity
      properties:
        cloudType:
          type: string
        profiles:
          description: Cluster definition profiles
          items:
            $ref: "#/components/schemas/v1ClusterDefinitionProfileEntity"
          type: array
          uniqueItems: true
      required:
      - cloudType
      - profiles
      type: object
    v1ClusterEdgeInstallerConfig:
      example:
        installerDownloadLinks: "{}"
      properties:
        installerDownloadLinks:
          type: object
      type: object
    v1ClusterFeatureActor:
      description: Compliance Scan actor
      example:
        uid: uid
        actorType: actorType
      properties:
        actorType:
          type: string
        uid:
          type: string
      type: object
    v1ClusterFeatureSchedule:
      description: Cluster feature schedule
      example:
        scheduledRunTime: scheduledRunTime
      properties:
        scheduledRunTime:
          type: string
      type: object
    v1ClusterFips:
      example:
        mode: none
      properties:
        mode:
          $ref: "#/components/schemas/v1ClusterFipsMode"
      type: object
    v1ClusterFipsMode:
      default: none
      enum:
      - full
      - none
      - partial
      - unknown
      type: string
    v1ClusterGroup:
      description: Cluster group information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterProfileTemplates:
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          type: hostCluster
          clustersConfig:
            endpointType: Ingress
            values: values
            hostClustersConfig:
            - clusterUid: clusterUid
              endpointConfig:
                ingressConfig:
                  port: 6
                  host: host
                loadBalancerConfig:
                  externalIPs:
                  - externalIPs
                  - externalIPs
                  loadBalancerSourceRanges:
                  - loadBalancerSourceRanges
                  - loadBalancerSourceRanges
                  externalTrafficPolicy: externalTrafficPolicy
            - clusterUid: clusterUid
              endpointConfig:
                ingressConfig:
                  port: 6
                  host: host
                loadBalancerConfig:
                  externalIPs:
                  - externalIPs
                  - externalIPs
                  loadBalancerSourceRanges:
                  - loadBalancerSourceRanges
                  - loadBalancerSourceRanges
                  externalTrafficPolicy: externalTrafficPolicy
            kubernetesDistroType: k3s
            limitConfig:
              cpuMilliCore: 5
              memory: 5
              cpu: 1
              memoryMiB: 2
              overSubscription: 7
              storageGiB: 9
          clusterRefs:
          - clusterUid: clusterUid
            clusterName: clusterName
          - clusterUid: clusterUid
            clusterName: clusterName
        status:
          isActive: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterGroupSpec"
        status:
          $ref: "#/components/schemas/v1ClusterGroupStatus"
      type: object
    v1ClusterGroupClusterRef:
      description: Cluster group cluster reference
      example:
        clusterUid: clusterUid
        clusterName: clusterName
      properties:
        clusterName:
          type: string
        clusterUid:
          type: string
      type: object
    v1ClusterGroupClustersConfig:
      description: Clusters config of cluster group
      example:
        endpointType: Ingress
        values: values
        hostClustersConfig:
        - clusterUid: clusterUid
          endpointConfig:
            ingressConfig:
              port: 6
              host: host
            loadBalancerConfig:
              externalIPs:
              - externalIPs
              - externalIPs
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              externalTrafficPolicy: externalTrafficPolicy
        - clusterUid: clusterUid
          endpointConfig:
            ingressConfig:
              port: 6
              host: host
            loadBalancerConfig:
              externalIPs:
              - externalIPs
              - externalIPs
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              externalTrafficPolicy: externalTrafficPolicy
        kubernetesDistroType: k3s
        limitConfig:
          cpuMilliCore: 5
          memory: 5
          cpu: 1
          memoryMiB: 2
          overSubscription: 7
          storageGiB: 9
      properties:
        endpointType:
          description: Host cluster endpoint type
          enum:
          - Ingress
          - LoadBalancer
          type: string
        hostClustersConfig:
          items:
            $ref: "#/components/schemas/v1ClusterGroupHostClusterConfig"
          type: array
          uniqueItems: true
        kubernetesDistroType:
          $ref: "#/components/schemas/v1ClusterKubernetesDistroType"
        limitConfig:
          $ref: "#/components/schemas/v1ClusterGroupLimitConfig"
        values:
          type: string
      type: object
    v1ClusterGroupEntity:
      description: Cluster group information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterGroupSpecEntity"
      type: object
    v1ClusterGroupHostClusterConfig:
      example:
        clusterUid: clusterUid
        endpointConfig:
          ingressConfig:
            port: 6
            host: host
          loadBalancerConfig:
            externalIPs:
            - externalIPs
            - externalIPs
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
      properties:
        clusterUid:
          type: string
        endpointConfig:
          $ref: "#/components/schemas/v1HostClusterEndpointConfig"
      type: object
    v1ClusterGroupHostClusterEntity:
      description: Clusters and clusters config of cluster group
      properties:
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1ClusterGroupClusterRef"
          type: array
          uniqueItems: true
        clustersConfig:
          $ref: "#/components/schemas/v1ClusterGroupClustersConfig"
      type: object
    v1ClusterGroupLimitConfig:
      description: Cluster group limit config
      example:
        cpuMilliCore: 5
        memory: 5
        cpu: 1
        memoryMiB: 2
        overSubscription: 7
        storageGiB: 9
      properties:
        cpu:
          description: Deprecated. Use field cpuMilliCore
          format: int32
          type: integer
        cpuMilliCore:
          description: CPU in milli cores
          format: int32
          type: integer
        memory:
          description: Deprecated. Use field memoryMiB
          format: int32
          type: integer
        memoryMiB:
          description: Memory in MiB
          format: int32
          type: integer
        overSubscription:
          description: Over subscription percentage
          format: int32
          type: integer
        storageGiB:
          description: Storage in GiB
          format: int32
          type: integer
      type: object
    v1ClusterGroupResource:
      description: Cluster group resource allocated and usage information
      example:
        used: 1.4658129805029452
        allocated: 6.027456183070403
      properties:
        allocated:
          format: float64
          type: number
          x-omitempty: false
        used:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ClusterGroupSpec:
      description: Cluster group specifications
      example:
        clusterProfileTemplates:
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        type: hostCluster
        clustersConfig:
          endpointType: Ingress
          values: values
          hostClustersConfig:
          - clusterUid: clusterUid
            endpointConfig:
              ingressConfig:
                port: 6
                host: host
              loadBalancerConfig:
                externalIPs:
                - externalIPs
                - externalIPs
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                externalTrafficPolicy: externalTrafficPolicy
          - clusterUid: clusterUid
            endpointConfig:
              ingressConfig:
                port: 6
                host: host
              loadBalancerConfig:
                externalIPs:
                - externalIPs
                - externalIPs
                loadBalancerSourceRanges:
                - loadBalancerSourceRanges
                - loadBalancerSourceRanges
                externalTrafficPolicy: externalTrafficPolicy
          kubernetesDistroType: k3s
          limitConfig:
            cpuMilliCore: 5
            memory: 5
            cpu: 1
            memoryMiB: 2
            overSubscription: 7
            storageGiB: 9
        clusterRefs:
        - clusterUid: clusterUid
          clusterName: clusterName
        - clusterUid: clusterUid
          clusterName: clusterName
      properties:
        clusterProfileTemplates:
          description: ClusterProfileTemplate is a copy of the draft version or latest
            published version of the clusterprofileSpec. It consists of list of add
            on profiles at a cluster group level which will be enforced on all virtual
            cluster. ClusterProfileTemplate will be updated from the clusterprofile
            pointed by ClusterProfileRef
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1ClusterGroupClusterRef"
          type: array
          uniqueItems: true
        clustersConfig:
          $ref: "#/components/schemas/v1ClusterGroupClustersConfig"
        type:
          enum:
          - hostCluster
          type: string
      type: object
    v1ClusterGroupSpecEntity:
      description: Cluster group specifications request entity
      properties:
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1ClusterGroupClusterRef"
          type: array
          uniqueItems: true
        clustersConfig:
          $ref: "#/components/schemas/v1ClusterGroupClustersConfig"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
        type:
          enum:
          - hostCluster
          type: string
      type: object
    v1ClusterGroupStatus:
      description: Cluster group status
      example:
        isActive: true
      properties:
        isActive:
          type: boolean
          x-omitempty: false
      type: object
    v1ClusterGroupSummary:
      description: Cluster group summay
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterProfileTemplates:
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          virtualClustersCount: 5
          endpointType: Ingress
          memory:
            used: 1.4658129805029452
            allocated: 6.027456183070403
          hostClusters:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          scope: scope
          cpu:
            used: 1.4658129805029452
            allocated: 6.027456183070403
          kubernetesDistroType: k3s
          hostClustersCount: 5
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterGroupSummarySpec"
      type: object
    v1ClusterGroupSummarySpec:
      description: Cluster group summay spec
      example:
        clusterProfileTemplates:
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        virtualClustersCount: 5
        endpointType: Ingress
        memory:
          used: 1.4658129805029452
          allocated: 6.027456183070403
        hostClusters:
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        scope: scope
        cpu:
          used: 1.4658129805029452
          allocated: 6.027456183070403
        kubernetesDistroType: k3s
        hostClustersCount: 5
      properties:
        clusterProfileTemplates:
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
          type: array
        cpu:
          $ref: "#/components/schemas/v1ClusterGroupResource"
        endpointType:
          enum:
          - Ingress
          - LoadBalancer
          type: string
        hostClusters:
          items:
            $ref: "#/components/schemas/v1ObjectResReference"
          type: array
          uniqueItems: true
        hostClustersCount:
          type: integer
          x-omitempty: false
        kubernetesDistroType:
          $ref: "#/components/schemas/v1ClusterKubernetesDistroType"
        memory:
          $ref: "#/components/schemas/v1ClusterGroupResource"
        scope:
          type: string
        virtualClustersCount:
          type: integer
          x-omitempty: false
      type: object
    v1ClusterGroupsDeveloperCreditUsage:
      description: Cluster group resource allocated and usage information
      example:
        allocatedCredit:
          virtualClustersLimit: 5.962133916683182
          memoryGiB: 6.027456183070403
          cpu: 0.8008281904610115
          storageGiB: 1
        usedCredit:
          virtualClustersLimit: 5.962133916683182
          memoryGiB: 6.027456183070403
          cpu: 0.8008281904610115
          storageGiB: 1
      properties:
        allocatedCredit:
          $ref: "#/components/schemas/v1DeveloperCredit"
        usedCredit:
          $ref: "#/components/schemas/v1DeveloperCredit"
      type: object
    v1ClusterGroupsHostClusterMetadata:
      example:
        items:
        - uid: uid
          scope: scope
          name: name
        - uid: uid
          scope: scope
          name: name
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ObjectScopeEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterGroupsHostClusterSummary:
      example:
        summaries:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            virtualClustersCount: 5
            endpointType: Ingress
            memory:
              used: 1.4658129805029452
              allocated: 6.027456183070403
            hostClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            scope: scope
            cpu:
              used: 1.4658129805029452
              allocated: 6.027456183070403
            kubernetesDistroType: k3s
            hostClustersCount: 5
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            virtualClustersCount: 5
            endpointType: Ingress
            memory:
              used: 1.4658129805029452
              allocated: 6.027456183070403
            hostClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            scope: scope
            cpu:
              used: 1.4658129805029452
              allocated: 6.027456183070403
            kubernetesDistroType: k3s
            hostClustersCount: 5
      properties:
        summaries:
          items:
            $ref: "#/components/schemas/v1ClusterGroupSummary"
          type: array
          uniqueItems: true
      required:
      - summaries
      type: object
    v1ClusterHelmChart:
      description: Cluster helm chart metadata
      example:
        localName: localName
        values: values
        name: name
        matchedRegistries:
        - uid: uid
          name: name
        - uid: uid
          name: name
        version: version
      properties:
        localName:
          type: string
        matchedRegistries:
          items:
            $ref: "#/components/schemas/v1ClusterHelmRegistry"
          type: array
          uniqueItems: true
        name:
          type: string
        values:
          type: string
        version:
          type: string
      type: object
    v1ClusterHelmCharts:
      description: Cluster helm charts metadata
      example:
        charts:
        - localName: localName
          values: values
          name: name
          matchedRegistries:
          - uid: uid
            name: name
          - uid: uid
            name: name
          version: version
        - localName: localName
          values: values
          name: name
          matchedRegistries:
          - uid: uid
            name: name
          - uid: uid
            name: name
          version: version
      properties:
        charts:
          items:
            $ref: "#/components/schemas/v1ClusterHelmChart"
          type: array
          uniqueItems: true
      type: object
    v1ClusterHelmRegistry:
      description: Cluster helm registry information
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1ClusterHybridSettingsEntity:
      properties:
        enable:
          description: Property which is used to enable a cluster to perform hybrid
            operations
          type: boolean
      type: object
    v1ClusterImport:
      example:
        isBrownfield: true
        importLink: importLink
        state: state
      properties:
        importLink:
          description: "import link to download and install ally-lite, palette-lite"
          type: string
        isBrownfield:
          description: Deprecated. Use the 'spec.clusterType'
          type: boolean
          x-omitempty: false
        state:
          description: cluster import status
          type: string
      type: object
    v1ClusterKubeBenchLogStatus:
      description: Cluster compliance scan KubeBench Log Status
      example:
        actor:
          uid: uid
          actorType: actorType
        reports:
          key:
            fail: 0
            warn: 5
            pass: 1
            name: name
            time: 2000-01-23T04:56:07.000+00:00
            type: type
            logs:
            - remediation: remediation
              expected: expected
              description: description
              testId: testId
              state: state
              value: value
            - remediation: remediation
              expected: expected
              description: description
              testId: testId
              state: state
              value: value
            info: 6
        scanTime:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        requestUid: requestUid
        state: state
        message: message
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        message:
          type: string
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1KubeBenchReport"
          type: object
        requestUid:
          type: string
        scanTime:
          $ref: "#/components/schemas/v1ClusterScanTime"
        state:
          type: string
      type: object
    v1ClusterKubeHunterLogStatus:
      description: Cluster compliance scan KubeHunter Log Status
      example:
        actor:
          uid: uid
          actorType: actorType
        reports:
          key:
            vulnerabilites:
              high: 5
              low: 2
              medium: 7
            time: 2000-01-23T04:56:07.000+00:00
            logs:
            - reference: reference
              severity: severity
              evidence: evidence
              description: description
              testId: testId
              vulnerability: vulnerability
            - reference: reference
              severity: severity
              evidence: evidence
              description: description
              testId: testId
              vulnerability: vulnerability
        scanTime:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        requestUid: requestUid
        state: state
        message: message
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        message:
          type: string
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1KubeHunterReport"
          type: object
        requestUid:
          type: string
        scanTime:
          $ref: "#/components/schemas/v1ClusterScanTime"
        state:
          type: string
      type: object
    v1ClusterKubernetesDistroType:
      default: k3s
      enum:
      - k3s
      - cncf_k8s
      - vcluster-generic
      type: string
    v1ClusterLocation:
      description: Cluster location information
      example:
        regionCode: regionCode
        countryCode: countryCode
        regionName: regionName
        geoLoc:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        countryName: countryName
      properties:
        countryCode:
          description: country code for cluster location
          type: string
        countryName:
          description: country name for cluster location
          type: string
        geoLoc:
          $ref: "#/components/schemas/v1GeolocationLatlong"
        regionCode:
          description: region code for cluster location
          type: string
        regionName:
          description: region name for cluster location
          type: string
      type: object
    v1ClusterLogFetcher:
      description: Cluster Log Fetcher
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          log: log
        status:
          state: state
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterLogFetcherSpec"
        status:
          $ref: "#/components/schemas/v1ClusterLogFetcherStatus"
      type: object
    v1ClusterLogFetcherK8sRequest:
      description: Cluster Log Fetcher K8s
      properties:
        labelSelector:
          items:
            type: string
          type: array
          uniqueItems: true
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ClusterLogFetcherNodeRequest:
      description: Cluster Log Fetcher Node Request
      properties:
        logs:
          description: Array of logs
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ClusterLogFetcherRequest:
      description: Cluster Log Fetcher Request
      properties:
        duration:
          default: 10
          description: Duration for which log is requested
          format: int64
          type: integer
        k8s:
          $ref: "#/components/schemas/v1ClusterLogFetcherK8sRequest"
        mode:
          default: cluster
          description: "Accepted Values - [\"cluster\", \"app\"]. if \"app\" then\
            \ logs will be fetched from the virtual cluster"
          enum:
          - cluster
          - app
          type: string
        noOfLines:
          default: 1000
          description: No of lines of logs requested
          format: int64
          type: integer
        node:
          $ref: "#/components/schemas/v1ClusterLogFetcherNodeRequest"
      type: object
    v1ClusterLogFetcherSpec:
      description: Cluster Log Fetcher Spec
      example:
        clusterUid: clusterUid
        log: log
      properties:
        clusterUid:
          type: string
        log:
          type: string
      type: object
    v1ClusterLogFetcherStatus:
      description: Cluster Log Fetcher Status
      example:
        state: state
      properties:
        state:
          type: string
      type: object
    v1ClusterManifest:
      description: Cluster manifest information
      example:
        name: name
        namespace: namespace
        type: type
        content: content
      properties:
        content:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
      type: object
    v1ClusterManifests:
      description: Cluster manifests information
      example:
        manifests:
        - name: name
          namespace: namespace
          type: type
          content: content
        - name: name
          namespace: namespace
          type: type
          content: content
      properties:
        manifests:
          items:
            $ref: "#/components/schemas/v1ClusterManifest"
          type: array
          uniqueItems: true
      type: object
    v1ClusterMeta:
      description: Active cluster meta
      properties:
        cloudType:
          type: string
        clusterType:
          type: string
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        duration:
          type: string
        name:
          type: string
        projectName:
          type: string
        state:
          $ref: "#/components/schemas/v1ClusterState"
        uid:
          type: string
      type: object
    v1ClusterMetaAttributeEntity:
      description: Cluster additional metadata entity
      properties:
        clusterMetaAttribute:
          type: string
      type: object
    v1ClusterMetaSpecLocation:
      description: Cluster location information
      example:
        regionCode: regionCode
        countryCode: countryCode
        regionName: regionName
        coordinates:
        - 5.637376656633329
        - 5.637376656633329
        countryName: countryName
      properties:
        coordinates:
          items:
            format: float64
            type: number
          type: array
        countryCode:
          type: string
        countryName:
          type: string
        regionCode:
          type: string
        regionName:
          type: string
      type: object
    v1ClusterMetaStatusCost:
      description: Cluster meta Cost information
      example:
        total: 0.8008281904610115
      properties:
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ClusterMetaStatusHealth:
      description: Cluster meta health information
      example:
        isHeartBeatFailed: true
        state: state
      properties:
        isHeartBeatFailed:
          type: boolean
          x-omitempty: false
        state:
          type: string
      type: object
    v1ClusterMetaStatusUpdates:
      description: Cluster meta updates information
      example:
        isUpdatesPending: true
      properties:
        isUpdatesPending:
          type: boolean
          x-omitempty: false
      type: object
    v1ClusterNamespace:
      description: Cluster's namespace
      example:
        pvcCount: 0.8008281904610115
        namespace: namespace
      properties:
        namespace:
          type: string
        pvcCount:
          format: int32
          type: number
      type: object
    v1ClusterNamespaceResource:
      description: Cluster Namespace resource defintion
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          resourceAllocation:
            cpuCores: 0.08008281904610115
            memoryMiB: 0.6027456183070403
          isRegex: true
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
        status:
          errors:
          - msg: msg
            name: name
            resourceType: resourceType
          - msg: msg
            name: name
            resourceType: resourceType
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterNamespaceSpec"
        status:
          $ref: "#/components/schemas/v1ClusterNamespaceStatus"
      type: object
    v1ClusterNamespaceResourceAllocation:
      description: Cluster namespace resource allocation
      example:
        cpuCores: 0.08008281904610115
        memoryMiB: 0.6027456183070403
      properties:
        cpuCores:
          exclusiveMinimum: true
          minimum: 0
          type: number
        memoryMiB:
          exclusiveMinimum: true
          minimum: 0
          type: number
      type: object
    v1ClusterNamespaceResourceInputEntity:
      description: Cluster Namespace resource defintion
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaUpdateEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterNamespaceSpec"
      type: object
    v1ClusterNamespaceResources:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            resourceAllocation:
              cpuCores: 0.08008281904610115
              memoryMiB: 0.6027456183070403
            isRegex: true
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            resourceAllocation:
              cpuCores: 0.08008281904610115
              memoryMiB: 0.6027456183070403
            isRegex: true
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ClusterNamespaceResource"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterNamespaceResourcesUpdateEntity:
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/v1ClusterNamespaceResourceInputEntity"
          type: array
          uniqueItems: true
      type: object
    v1ClusterNamespaceSpec:
      description: Cluster namespace spec
      example:
        resourceAllocation:
          cpuCores: 0.08008281904610115
          memoryMiB: 0.6027456183070403
        isRegex: true
        relatedObject:
          uid: uid
          kind: spectrocluster
          name: name
      properties:
        isRegex:
          type: boolean
          x-omitempty: false
        relatedObject:
          $ref: "#/components/schemas/v1RelatedObject"
        resourceAllocation:
          $ref: "#/components/schemas/v1ClusterNamespaceResourceAllocation"
      type: object
    v1ClusterNamespaceStatus:
      description: Cluster namespace status
      example:
        errors:
        - msg: msg
          name: name
          resourceType: resourceType
        - msg: msg
          name: name
          resourceType: resourceType
      properties:
        errors:
          items:
            $ref: "#/components/schemas/v1ClusterResourceError"
          type: array
          uniqueItems: true
      type: object
    v1ClusterNamespaces:
      description: Cluster's available namespaces
      example:
        namespaces:
        - pvcCount: 0.8008281904610115
          namespace: namespace
        - pvcCount: 0.8008281904610115
          namespace: namespace
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/v1ClusterNamespace"
          type: array
      type: object
    v1ClusterNotificationStatus:
      description: Cluster notifications status
      example:
        isAvailable: true
      properties:
        isAvailable:
          type: boolean
          x-omitempty: false
      type: object
    v1ClusterNotificationUpdateEntity:
      description: Cluster input for notification update
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1ClusterProfileNotificationUpdateEntity"
          type: array
          uniqueItems: true
        spcApplySettings:
          $ref: "#/components/schemas/v1SpcApplySettings"
      type: object
    v1ClusterPackManifestStatus:
      example:
        uid: uid
        condition:
          reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        name: name
      properties:
        condition:
          $ref: "#/components/schemas/v1ClusterCondition"
        name:
          type: string
        uid:
          type: string
      type: object
    v1ClusterPackStatus:
      example:
        profileUid: profileUid
        condition:
          reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        manifests:
        - uid: uid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          name: name
        - uid: uid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          name: name
        name: name
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        services:
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        type: type
        version: version
      properties:
        condition:
          $ref: "#/components/schemas/v1ClusterCondition"
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        manifests:
          items:
            $ref: "#/components/schemas/v1ClusterPackManifestStatus"
          type: array
        name:
          type: string
        profileUid:
          type: string
        services:
          items:
            $ref: "#/components/schemas/v1LoadBalancerService"
          type: array
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    v1ClusterPairMetadataFilter:
      description: Cluster pair metadata filter spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ClusterPairMetadataFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1ClusterPairMetadataSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1ClusterPairMetadataFilterSpec:
      description: Edge hosts pair metadata filter spec
      properties:
        localClusterUid:
          $ref: "#/components/schemas/v1FilterString"
        state:
          $ref: "#/components/schemas/v1FilterString"
      type: object
    v1ClusterPairMetadataSortFields:
      enum:
      - name
      - state
      - creationTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1ClusterPairMetadataSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1ClusterPairMetadataSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1ClusterPreference:
      description: cluster preference
      properties:
        archivalIntervalInHour:
          description: clusters cleanup interval post deletion
          type: integer
        deletePeriodInHour:
          description: clusters deleted before delete period are eligible for cleanup
          type: integer
        healthPollIntervalInMinutes:
          description: clusters health poll interval
          maximum: 60
          minimum: 3
          type: integer
        monitorIntervalInMinutes:
          description: clusters state and consistency monitor
          type: integer
      type: object
    v1ClusterProfile:
      description: ClusterProfile is the Schema for the clusterprofiles API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          versions:
          - uid: uid
            version: version
          - uid: uid
            version: version
          draft:
            packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          published:
            packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          version: version
        status:
          hasUserMacros: true
          isPublished: true
          inUseClusterUids:
          - inUseClusterUids
          - inUseClusterUids
          inUseClusters:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileSpec"
        status:
          $ref: "#/components/schemas/v1ClusterProfileStatus"
      type: object
    v1ClusterProfileCloneEntity:
      description: Cluster profile clone request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterProfileCloneMetaInputEntity"
      type: object
    v1ClusterProfileCloneMetaInputEntity:
      description: Cluster profile clone metadata
      properties:
        name:
          description: Cloned cluster profile name
          type: string
        target:
          $ref: "#/components/schemas/v1ClusterProfileCloneTarget"
        version:
          description: Cloned cluster profile version
          type: string
      required:
      - name
      type: object
    v1ClusterProfileCloneTarget:
      description: Cluster profile clone meta input entity
      properties:
        projectUid:
          description: Cloned cluster profile project uid
          type: string
        scope:
          $ref: "#/components/schemas/v1Scope"
      required:
      - scope
      type: object
    v1ClusterProfileEntity:
      description: Cluster profile request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileEntity_spec"
      type: object
    v1ClusterProfileFilterSpec:
      description: Cluster profile filter spec
      properties:
        environment:
          items:
            type: string
          type: array
          uniqueItems: true
        fips:
          $ref: "#/components/schemas/v1ClusterFipsMode"
        profileName:
          $ref: "#/components/schemas/v1FilterString"
        profileType:
          items:
            $ref: "#/components/schemas/v1ProfileType"
          type: array
          uniqueItems: true
        scope:
          $ref: "#/components/schemas/v1ClusterProfileScope"
        tags:
          $ref: "#/components/schemas/v1FilterArray"
        version:
          $ref: "#/components/schemas/v1FilterVersionString"
      type: object
    v1ClusterProfileFips:
      description: Cluster profile fips compliance status
      example:
        mode: none
      properties:
        mode:
          $ref: "#/components/schemas/v1ClusterFipsMode"
      type: object
    v1ClusterProfileImportEntity:
      description: Cluster profile import request payload
      example:
        metadata:
          name: name
          description: description
          labels:
            key: labels
        spec:
          template:
            cloudType: cloudType
            type: type
            packs:
            - registry:
                metadata:
                  uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
                matchingRegistries:
                - uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
                - uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
              values: values
              manifests:
              - name: name
                content: content
              - name: name
                content: content
              name: name
              tag: tag
              type: type
              version: version
              layer: layer
            - registry:
                metadata:
                  uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
                matchingRegistries:
                - uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
                - uid: uid
                  kind: kind
                  isSyncSupported: true
                  name: name
                  isPrivate: true
                  providerType: providerType
              values: values
              manifests:
              - name: name
                content: content
              - name: name
                content: content
              name: name
              tag: tag
              type: type
              version: version
              layer: layer
          variables:
          - immutable: true
            regex: regex
            hidden: true
            defaultValue: defaultValue
            displayName: displayName
            isSensitive: true
            format: string
            name: name
            description: description
            required: true
          - immutable: true
            regex: regex
            hidden: true
            defaultValue: defaultValue
            displayName: displayName
            isSensitive: true
            format: string
            name: name
            description: description
            required: true
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterProfileMetadataImportEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileSpecImportEntity"
      type: object
    v1ClusterProfileMetadata:
      description: Cluster profile filter spec
      example:
        metadata:
          uid: uid
          name: name
        spec:
          cloudType: cloudType
          version: version
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileMetadata_spec"
      type: object
    v1ClusterProfileMetadataImportEntity:
      description: Cluster profile import metadata
      example:
        name: name
        description: description
        labels:
          key: labels
      properties:
        description:
          description: Cluster profile description
          type: string
        labels:
          additionalProperties:
            type: string
          description: Cluster profile labels
          type: object
        name:
          description: Cluster profile name
          type: string
      type: object
    v1ClusterProfileNotificationUpdateEntity:
      description: Cluster profile notification update request payload
      properties:
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackManifestUpdateEntity"
          type: array
          uniqueItems: true
        uid:
          description: Cluster profile uid
          type: string
      type: object
    v1ClusterProfilePackConfigList:
      example:
        items:
        - spec:
            packUid: packUid
            scope: scope
            values: values
            manifests:
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            name: name
            tag: tag
            associatedObject: associatedObject
            type: type
            version: version
            isValuesOverridden: true
        - spec:
            packUid: packUid
            scope: scope
            values: values
            manifests:
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            name: name
            tag: tag
            associatedObject: associatedObject
            type: type
            version: version
            isValuesOverridden: true
      properties:
        items:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackConfig"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterProfilePackManifests:
      description: Cluster profile pack manifests
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          eol: eol
          displayName: displayName
          values: values
          addonType: addonType
          annotations:
            key: annotations
          type: spectro
          version: version
          layer: kernel
          logoUrl: logoUrl
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          digest: digest
          manifests:
          - uid: uid
            name: name
            content: content
          - uid: uid
            name: name
            content: content
          name: name
          cloudTypes:
          - cloudTypes
          - cloudTypes
          group: group
        status: "{}"
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackManifestsSpec"
        status:
          description: Pack status
          type: object
      type: object
    v1ClusterProfilePackSummary:
      description: "Cluster profile packs summary about the deprecated, disabled,\
        \ deleted packs count"
      example:
        deleted: 0.8008281904610115
        deprecated: 6.027456183070403
        disabled: 1.4658129805029452
      properties:
        deleted:
          description: Total count of deleted packs in a cluster profile
          type: number
          x-omitempty: false
        deprecated:
          description: Total count of deprecated packs in a cluster profile
          type: number
          x-omitempty: false
        disabled:
          description: Total count of disabled packs in a cluster profile
          type: number
          x-omitempty: false
      type: object
    v1ClusterProfilePacksEntities:
      description: List of cluster profile packs
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
      properties:
        items:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1ClusterProfilePacksEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterProfilePacksEntity:
      description: Cluster profile packs object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          template:
            manifest: manifest
            values: values
            parameters:
              inputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              outputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
          registryUid: registryUid
          eol: eol
          addonSubType: addonSubType
          displayName: displayName
          values: values
          addonType: addonType
          annotations:
            key: annotations
          type: spectro
          version: version
          layer: kernel
          logoUrl: logoUrl
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          cloudTypes:
          - cloudTypes
          - cloudTypes
          group: group
        status: "{}"
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackSummarySpec"
        status:
          description: Pack status
          type: object
      type: object
    v1ClusterProfilePacksManifests:
      description: Cluster profile pack manifests
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          packs:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              eol: eol
              displayName: displayName
              values: values
              addonType: addonType
              annotations:
                key: annotations
              type: spectro
              version: version
              layer: kernel
              logoUrl: logoUrl
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              digest: digest
              manifests:
              - uid: uid
                name: name
                content: content
              - uid: uid
                name: name
                content: content
              name: name
              cloudTypes:
              - cloudTypes
              - cloudTypes
              group: group
            status: "{}"
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              eol: eol
              displayName: displayName
              values: values
              addonType: addonType
              annotations:
                key: annotations
              type: spectro
              version: version
              layer: kernel
              logoUrl: logoUrl
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              digest: digest
              manifests:
              - uid: uid
                name: name
                content: content
              - uid: uid
                name: name
                content: content
              name: name
              cloudTypes:
              - cloudTypes
              - cloudTypes
              group: group
            status: "{}"
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterProfilePacksManifests_spec"
      type: object
    v1ClusterProfileScope:
      enum:
      - system
      - tenant
      - project
      type: string
    v1ClusterProfileSortFields:
      enum:
      - profileName
      - environment
      - profileType
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1ClusterProfileSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1ClusterProfileSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1ClusterProfileSpec:
      description: "ClusterProfileTemplate can be in draft mode, or published mode\
        \ User only see the latest published template, and (or) the draft template\
        \ User can apply either the draft version or the latest published version\
        \ to a cluster when user create a draft version, just copy the Published template,\
        \ increment the version, and keep changing the draft template without increment\
        \ the draft version when user publish a draft, the version is fixed, and won't\
        \ be able to make any modification on published template For each clusterprofile\
        \ that has a published version, there will be a ClusterProfileArchive automatically\
        \ created when user publish a draft, the published version will also be copied\
        \ over to the corresponding ClusterProfileArchive it is just in case in the\
        \ future for whatever reason we may want to expose earlier versions"
      example:
        versions:
        - uid: uid
          version: version
        - uid: uid
          version: version
        draft:
          packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        published:
          packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        version: version
      properties:
        draft:
          $ref: "#/components/schemas/v1ClusterProfileTemplate"
        published:
          $ref: "#/components/schemas/v1ClusterProfileTemplate"
        version:
          type: string
        versions:
          description: Cluster profile's list of all the versions
          items:
            $ref: "#/components/schemas/v1ClusterProfileVersion"
          type: array
      type: object
    v1ClusterProfileSpecEntity:
      description: Cluster profile update spec
      properties:
        version:
          description: Cluster profile version
          type: string
      type: object
    v1ClusterProfileSpecImportEntity:
      description: Cluster profile import spec
      example:
        template:
          cloudType: cloudType
          type: type
          packs:
          - registry:
              metadata:
                uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
              matchingRegistries:
              - uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
              - uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
            values: values
            manifests:
            - name: name
              content: content
            - name: name
              content: content
            name: name
            tag: tag
            type: type
            version: version
            layer: layer
          - registry:
              metadata:
                uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
              matchingRegistries:
              - uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
              - uid: uid
                kind: kind
                isSyncSupported: true
                name: name
                isPrivate: true
                providerType: providerType
            values: values
            manifests:
            - name: name
              content: content
            - name: name
              content: content
            name: name
            tag: tag
            type: type
            version: version
            layer: layer
        variables:
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          required: true
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          required: true
        version: version
      properties:
        template:
          $ref: "#/components/schemas/v1ClusterProfileTemplateImportEntity"
        variables:
          description: List of unique variable fields defined for a cluster profile
            with schema constraints
          items:
            $ref: "#/components/schemas/v1Variable"
          type: array
          uniqueItems: true
        version:
          description: Cluster profile version
          type: string
      type: object
    v1ClusterProfileStatus:
      description: ClusterProfileStatus defines the observed state of ClusterProfile
      example:
        hasUserMacros: true
        isPublished: true
        inUseClusterUids:
        - inUseClusterUids
        - inUseClusterUids
        inUseClusters:
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
      properties:
        hasUserMacros:
          description: If it is true then profile pack values has a reference to user
            defined macros
          type: boolean
          x-omitempty: false
        inUseClusterUids:
          description: Deprecated. Use inUseClusters
          items:
            type: string
          type: array
        inUseClusters:
          items:
            $ref: "#/components/schemas/v1ObjectResReference"
          type: array
        isPublished:
          type: boolean
          x-omitempty: false
      type: object
    v1ClusterProfileStatusSummary:
      description: ClusterProfileStatusSummary defines the observed state of ClusterProfile
      example:
        isPublished: true
        fips:
          mode: none
        inUseClusterUids:
        - inUseClusterUids
        - inUseClusterUids
        inUseClusters:
        - uid: uid
          name: name
        - uid: uid
          name: name
        pack:
          deleted: 0.8008281904610115
          deprecated: 6.027456183070403
          disabled: 1.4658129805029452
      properties:
        fips:
          $ref: "#/components/schemas/v1ClusterProfileFips"
        inUseClusterUids:
          description: Deprecated. Use inUseClusters
          items:
            type: string
          type: array
        inUseClusters:
          items:
            $ref: "#/components/schemas/v1ObjectEntity"
          type: array
        isPublished:
          type: boolean
          x-omitempty: false
        pack:
          $ref: "#/components/schemas/v1ClusterProfilePackSummary"
      type: object
    v1ClusterProfileSummary:
      description: Cluster profile summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        specSummary:
          versions:
          - uid: uid
            version: version
          - uid: uid
            version: version
          draft:
            cloudType: cloudType
            type: type
            packs:
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
          published:
            cloudType: cloudType
            type: type
            packs:
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
          version: version
        status:
          isPublished: true
          fips:
            mode: none
          inUseClusterUids:
          - inUseClusterUids
          - inUseClusterUids
          inUseClusters:
          - uid: uid
            name: name
          - uid: uid
            name: name
          pack:
            deleted: 0.8008281904610115
            deprecated: 6.027456183070403
            disabled: 1.4658129805029452
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        specSummary:
          $ref: "#/components/schemas/v1ClusterProfileSummary_specSummary"
        status:
          $ref: "#/components/schemas/v1ClusterProfileStatusSummary"
      type: object
    v1ClusterProfileTemplate:
      description: ClusterProfileTemplate contains details of a clusterprofile definition
      example:
        packServerSecret: packServerSecret
        uid: uid
        cloudType: cloudType
        profileVersion: profileVersion
        relatedObject:
          uid: uid
          kind: kind
          name: name
        name: name
        type: type
        packs:
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
        version: 0
        packServerRefs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
      properties:
        cloudType:
          type: string
        name:
          type: string
        packServerRefs:
          description: "PackServerRefs is only used on Hubble side it is reference\
            \ to pack registry servers which PackRef belongs to in hubble, pack server\
            \ is a top level object, so use a reference to point to it packs within\
            \ a clusterprofile can come from different pack servers, so this is an\
            \ array"
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
        packServerSecret:
          description: "This secret is used only on Palette side use case is similar\
            \  to k8s image pull secret this single secret internally should contains\
            \ all the pack servers in PackServerRefs if empty, means no credential\
            \ is needed to access the pack server For spectro saas, Ally will set\
            \ this field before pass to palette"
          type: string
        packs:
          description: "Packs definitions here are final definitions. If ClonedFrom\
            \ and ParamsOverwrite is present, then Packs are the final merge result\
            \ of ClonedFrom and ParamsOverwrite So orchestration engine will just\
            \ take the Packs and do the work, no need to worry about parameters merge"
          items:
            $ref: "#/components/schemas/v1PackRef"
          type: array
        profileVersion:
          description: "version start from 1.0.0, matching the index of ClusterProfileSpec.Versions[]\
            \ will be used by clusterSpec to identify which version is applied to\
            \ the cluster"
          type: string
        relatedObject:
          $ref: "#/components/schemas/v1ObjectReference"
        type:
          type: string
        uid:
          type: string
        version:
          description: Deprecated. Use profileVersion
          format: int32
          type: integer
      type: object
    v1ClusterProfileTemplateDraft:
      description: Cluster profile template spec
      properties:
        cloudType:
          type: string
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackManifestEntity"
          type: array
          uniqueItems: true
        type:
          $ref: "#/components/schemas/v1ProfileType"
      type: object
    v1ClusterProfileTemplateImportEntity:
      description: Cluster profile import template
      example:
        cloudType: cloudType
        type: type
        packs:
        - registry:
            metadata:
              uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
            matchingRegistries:
            - uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
            - uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
          values: values
          manifests:
          - name: name
            content: content
          - name: name
            content: content
          name: name
          tag: tag
          type: type
          version: version
          layer: layer
        - registry:
            metadata:
              uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
            matchingRegistries:
            - uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
            - uid: uid
              kind: kind
              isSyncSupported: true
              name: name
              isPrivate: true
              providerType: providerType
          values: values
          manifests:
          - name: name
            content: content
          - name: name
            content: content
          name: name
          tag: tag
          type: type
          version: version
          layer: layer
      properties:
        cloudType:
          description: Cluster profile cloud type
          type: string
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackImportEntity"
          type: array
          uniqueItems: true
        type:
          description: "Cluster profile type [ \"cluster\", \"infra\", \"add-on\"\
            , \"system\" ]"
          type: string
      type: object
    v1ClusterProfileTemplateMeta:
      description: Cluster profile template meta information
      example:
        uid: uid
        cloudType: cloudType
        scope: scope
        name: name
        type: type
        packs:
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
        version: 0
      properties:
        cloudType:
          type: string
        name:
          description: Cluster profile name
          type: string
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackRef"
          type: array
        scope:
          description: "scope or context(system, tenant or project)"
          type: string
        type:
          description: "Cluster profile type [ \"cluster\", \"infra\", \"add-on\"\
            , \"system\" ]"
          type: string
        uid:
          description: Cluster profile uid
          type: string
        version:
          format: int32
          type: integer
      type: object
    v1ClusterProfileTemplateSummary:
      description: Cluster profile template summary
      example:
        cloudType: cloudType
        type: type
        packs:
        - packUid: packUid
          displayName: displayName
          addonType: addonType
          name: name
          annotations:
            key: annotations
          tag: tag
          type: type
          version: version
          layer: kernel
          logoUrl: logoUrl
        - packUid: packUid
          displayName: displayName
          addonType: addonType
          name: name
          annotations:
            key: annotations
          tag: tag
          type: type
          version: version
          layer: kernel
          logoUrl: logoUrl
      properties:
        cloudType:
          type: string
        packs:
          items:
            $ref: "#/components/schemas/v1PackRefSummary"
          type: array
        type:
          type: string
      type: object
    v1ClusterProfileTemplateUpdate:
      description: Cluster profile template update spec
      properties:
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackManifestUpdateEntity"
          type: array
          uniqueItems: true
        type:
          $ref: "#/components/schemas/v1ProfileType"
      type: object
    v1ClusterProfileUpdateEntity:
      description: Cluster profile update request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileUpdateEntity_spec"
      type: object
    v1ClusterProfileValidatorResponse:
      description: Cluster profile validator response
      example:
        packs:
          results:
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
      properties:
        packs:
          $ref: "#/components/schemas/v1ConstraintValidatorResponse"
      type: object
    v1ClusterProfileVersion:
      description: Cluster profile with version
      example:
        uid: uid
        version: version
      properties:
        uid:
          type: string
        version:
          type: string
      type: object
    v1ClusterProfiles:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ClusterProfile"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1ClusterProfilesFilterSpec:
      description: Spectro cluster filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ClusterProfileFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1ClusterProfileSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1ClusterProfilesMetadata:
      example:
        items:
        - metadata:
            uid: uid
            name: name
          spec:
            cloudType: cloudType
            version: version
        - metadata:
            uid: uid
            name: name
          spec:
            cloudType: cloudType
            version: version
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ClusterProfileMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterProfilesSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            versions:
            - uid: uid
              version: version
            - uid: uid
              version: version
            draft:
              cloudType: cloudType
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
            published:
              cloudType: cloudType
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
            version: version
          status:
            isPublished: true
            fips:
              mode: none
            inUseClusterUids:
            - inUseClusterUids
            - inUseClusterUids
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            pack:
              deleted: 0.8008281904610115
              deprecated: 6.027456183070403
              disabled: 1.4658129805029452
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            versions:
            - uid: uid
              version: version
            - uid: uid
              version: version
            draft:
              cloudType: cloudType
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
            published:
              cloudType: cloudType
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
            version: version
          status:
            isPublished: true
            fips:
              mode: none
            inUseClusterUids:
            - inUseClusterUids
            - inUseClusterUids
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            pack:
              deleted: 0.8008281904610115
              deprecated: 6.027456183070403
              disabled: 1.4658129805029452
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ClusterProfileSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1ClusterProxySpec:
      description: cluster proxy config spec
      properties:
        caContainerMountPath:
          description: Location to mount Proxy CA cert inside container
          type: string
        caHostPath:
          description: Location for Proxy CA cert on host nodes
          type: string
        httpProxy:
          description: URL for HTTP requests unless overridden by NoProxy
          type: string
        httpsProxy:
          description: HTTPS requests unless overridden by NoProxy
          type: string
        noProxy:
          description: NoProxy represents the NO_PROXY or no_proxy environment
          type: string
      type: object
    v1ClusterRbac:
      description: Cluster RBAC role binding defintion
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          bindings:
          - role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
          - role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        status:
          errors:
          - msg: msg
            name: name
            resourceType: resourceType
          - msg: msg
            name: name
            resourceType: resourceType
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterRbacSpec"
        status:
          $ref: "#/components/schemas/v1ClusterRbacStatus"
      type: object
    v1ClusterRbacBinding:
      description: Cluster RBAC binding
      example:
        role:
          kind: Role
          name: name
        subjects:
        - name: name
          namespace: namespace
          type: User
        - name: name
          namespace: namespace
          type: User
        namespace: namespace
        type: RoleBinding
      properties:
        namespace:
          type: string
        role:
          $ref: "#/components/schemas/v1ClusterRoleRef"
        subjects:
          items:
            $ref: "#/components/schemas/v1ClusterRbacSubjects"
          type: array
          uniqueItems: true
        type:
          enum:
          - RoleBinding
          - ClusterRoleBinding
          type: string
      type: object
    v1ClusterRbacEntity:
      properties:
        clusterRbac:
          description: Cluster RBAC role bindings
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
      type: object
    v1ClusterRbacInputEntity:
      description: Cluster RBAC role binding defintion
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaUpdateEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterRbacSpec"
      type: object
    v1ClusterRbacResourcesUpdateEntity:
      properties:
        rbacs:
          items:
            $ref: "#/components/schemas/v1ClusterRbacInputEntity"
          type: array
          uniqueItems: true
      type: object
    v1ClusterRbacSpec:
      description: Cluster RBAC spec
      example:
        relatedObject:
          uid: uid
          kind: spectrocluster
          name: name
        bindings:
        - role:
            kind: Role
            name: name
          subjects:
          - name: name
            namespace: namespace
            type: User
          - name: name
            namespace: namespace
            type: User
          namespace: namespace
          type: RoleBinding
        - role:
            kind: Role
            name: name
          subjects:
          - name: name
            namespace: namespace
            type: User
          - name: name
            namespace: namespace
            type: User
          namespace: namespace
          type: RoleBinding
      properties:
        bindings:
          items:
            $ref: "#/components/schemas/v1ClusterRbacBinding"
          type: array
          uniqueItems: true
        relatedObject:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1ClusterRbacStatus:
      description: Cluster rbac status
      example:
        errors:
        - msg: msg
          name: name
          resourceType: resourceType
        - msg: msg
          name: name
          resourceType: resourceType
      properties:
        errors:
          items:
            $ref: "#/components/schemas/v1ClusterResourceError"
          type: array
          uniqueItems: true
      type: object
    v1ClusterRbacSubjects:
      description: Cluster role ref
      example:
        name: name
        namespace: namespace
        type: User
      properties:
        name:
          type: string
        namespace:
          type: string
        type:
          enum:
          - User
          - Group
          - ServiceAccount
          type: string
      type: object
    v1ClusterRbacs:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            bindings:
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            bindings:
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ClusterRbac"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ClusterRefs:
      description: Cluster Object References
      example:
        clusters:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
      type: object
    v1ClusterRepaveSource:
      enum:
      - user
      - hubble
      - palette
      - stylus
      type: string
    v1ClusterRepaveState:
      default: Pending
      enum:
      - Pending
      - Approved
      - Reverted
      type: string
    v1ClusterRepaveStatus:
      description: Cluster repave status
      example:
        state: Pending
      properties:
        state:
          $ref: "#/components/schemas/v1ClusterRepaveState"
      type: object
    v1ClusterResourceAllocation:
      description: Workspace resource allocation
      example:
        resourceAllocation:
          cpuCores: -0.9199171809538988
          memoryMiB: -0.3972543816929597
        clusterUid: clusterUid
      properties:
        clusterUid:
          type: string
        resourceAllocation:
          $ref: "#/components/schemas/v1WorkspaceResourceAllocation"
      type: object
    v1ClusterResourceError:
      description: Cluster resource error
      example:
        msg: msg
        name: name
        resourceType: resourceType
      properties:
        msg:
          type: string
        name:
          type: string
        resourceType:
          type: string
      type: object
    v1ClusterResources:
      example:
        rbacs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        namespaces:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
      properties:
        namespaces:
          description: Cluster namespaces
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
        rbacs:
          description: Cluster RBAC role bindings
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
      type: object
    v1ClusterResourcesEntity:
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/v1ClusterNamespaceResourceInputEntity"
          type: array
          uniqueItems: true
        rbacs:
          items:
            $ref: "#/components/schemas/v1ClusterRbacInputEntity"
          type: array
          uniqueItems: true
      type: object
    v1ClusterRestore:
      description: Cluster Restore
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
        status:
          clusterRestoreStatuses:
          - actor:
              uid: uid
              actorType: actorType
            restoreRequestUid: restoreRequestUid
            sourceClusterRef:
              uid: uid
              kind: kind
              name: name
            backupRequestUid: backupRequestUid
            restoreStatusMeta:
              msg: msg
              restoreTime: 2000-01-23T04:56:07.000+00:00
              isSucceeded: true
            state: state
            backupName: backupName
          - actor:
              uid: uid
              actorType: actorType
            restoreRequestUid: restoreRequestUid
            sourceClusterRef:
              uid: uid
              kind: kind
              name: name
            backupRequestUid: backupRequestUid
            restoreStatusMeta:
              msg: msg
              restoreTime: 2000-01-23T04:56:07.000+00:00
              isSucceeded: true
            state: state
            backupName: backupName
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterRestoreSpec"
        status:
          $ref: "#/components/schemas/v1ClusterRestoreStatus"
      type: object
    v1ClusterRestoreConfig:
      description: Cluster restore config
      properties:
        backupName:
          type: string
        backupRequestUid:
          type: string
        destinationClusterUid:
          type: string
        includeClusterResourceMode:
          $ref: "#/components/schemas/v1IncludeClusterResourceMode"
        includeClusterResources:
          description: Deprecated. Use includeClusterResourceMode
          type: boolean
        includeNamespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        preserveNodePorts:
          type: boolean
        restorePVs:
          type: boolean
      required:
      - backupName
      - backupRequestUid
      - destinationClusterUid
      type: object
    v1ClusterRestoreSpec:
      description: Cluster Restore Spec
      example:
        clusterUid: clusterUid
      properties:
        clusterUid:
          type: string
      type: object
    v1ClusterRestoreStatus:
      description: Cluster Restore Status
      example:
        clusterRestoreStatuses:
        - actor:
            uid: uid
            actorType: actorType
          restoreRequestUid: restoreRequestUid
          sourceClusterRef:
            uid: uid
            kind: kind
            name: name
          backupRequestUid: backupRequestUid
          restoreStatusMeta:
            msg: msg
            restoreTime: 2000-01-23T04:56:07.000+00:00
            isSucceeded: true
          state: state
          backupName: backupName
        - actor:
            uid: uid
            actorType: actorType
          restoreRequestUid: restoreRequestUid
          sourceClusterRef:
            uid: uid
            kind: kind
            name: name
          backupRequestUid: backupRequestUid
          restoreStatusMeta:
            msg: msg
            restoreTime: 2000-01-23T04:56:07.000+00:00
            isSucceeded: true
          state: state
          backupName: backupName
      properties:
        clusterRestoreStatuses:
          items:
            $ref: "#/components/schemas/v1ClusterRestoreStatusMeta"
          type: array
      type: object
    v1ClusterRestoreStatusMeta:
      description: Cluster Restore Status Meta
      example:
        actor:
          uid: uid
          actorType: actorType
        restoreRequestUid: restoreRequestUid
        sourceClusterRef:
          uid: uid
          kind: kind
          name: name
        backupRequestUid: backupRequestUid
        restoreStatusMeta:
          msg: msg
          restoreTime: 2000-01-23T04:56:07.000+00:00
          isSucceeded: true
        state: state
        backupName: backupName
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        backupName:
          type: string
        backupRequestUid:
          type: string
        restoreRequestUid:
          type: string
        restoreStatusMeta:
          $ref: "#/components/schemas/v1RestoreStatusMeta"
        sourceClusterRef:
          $ref: "#/components/schemas/v1ResourceReference"
        state:
          type: string
      type: object
    v1ClusterRoleRef:
      description: Cluster role ref
      example:
        kind: Role
        name: name
      properties:
        kind:
          enum:
          - Role
          - ClusterRole
          type: string
        name:
          type: string
      type: object
    v1ClusterScanLogKubeBench:
      description: Cluster compliance scan KubeBench Log
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          driverType: driverType
        status:
          actor:
            uid: uid
            actorType: actorType
          reports:
            key:
              fail: 0
              warn: 5
              pass: 1
              name: name
              time: 2000-01-23T04:56:07.000+00:00
              type: type
              logs:
              - remediation: remediation
                expected: expected
                description: description
                testId: testId
                state: state
                value: value
              - remediation: remediation
                expected: expected
                description: description
                testId: testId
                state: state
                value: value
              info: 6
          scanTime:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          requestUid: requestUid
          state: state
          message: message
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterComplianceScanLogSpec"
        status:
          $ref: "#/components/schemas/v1ClusterKubeBenchLogStatus"
      type: object
    v1ClusterScanLogKubeHunter:
      description: Cluster compliance scan KubeHunter Log
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          driverType: driverType
        status:
          actor:
            uid: uid
            actorType: actorType
          reports:
            key:
              vulnerabilites:
                high: 5
                low: 2
                medium: 7
              time: 2000-01-23T04:56:07.000+00:00
              logs:
              - reference: reference
                severity: severity
                evidence: evidence
                description: description
                testId: testId
                vulnerability: vulnerability
              - reference: reference
                severity: severity
                evidence: evidence
                description: description
                testId: testId
                vulnerability: vulnerability
          scanTime:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          requestUid: requestUid
          state: state
          message: message
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterComplianceScanLogSpec"
        status:
          $ref: "#/components/schemas/v1ClusterKubeHunterLogStatus"
      type: object
    v1ClusterScanLogSonobuoy:
      description: Cluster compliance scan Sonobuoy Log
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          driverType: driverType
        status:
          actor:
            uid: uid
            actorType: actorType
          reports:
            key:
              fail: 9
              node: node
              total: 2
              plugin: plugin
              pass: 3
              logs:
              - msg: msg
                output: output
                path: path
                description: description
                state: state
              - msg: msg
                output: output
                path: path
                description: description
                state: state
              status: status
          scanTime:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          requestUid: requestUid
          state: state
          message: message
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterComplianceScanLogSpec"
        status:
          $ref: "#/components/schemas/v1ClusterSonobuoyLogStatus"
      type: object
    v1ClusterScanLogSyft:
      description: Cluster Compliance Scan Syft Log
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterUid: clusterUid
          driverType: driverType
        status:
          actor:
            uid: uid
            actorType: actorType
          scanContext:
            scope: scope
            format: format
            labelSelector: labelSelector
            namespace: namespace
            podName: podName
          reports:
          - imageContexts:
            - containerName: containerName
              namespace: namespace
              podName: podName
            - containerName: containerName
              namespace: namespace
              podName: podName
            image: image
            vulnerabilitySummary:
              high: 7
              critical: 4
              low: 1
              medium: 1
              negligible: 1
              unknown: 6
            vulnerabilities:
            - severity: severity
              installed: installed
              name: name
              fixedIn: fixedIn
              vulnerability: vulnerability
              type: type
            - severity: severity
              installed: installed
              name: name
              fixedIn: fixedIn
              vulnerability: vulnerability
              type: type
            state: state
            time: 2000-01-23T04:56:07.000+00:00
            isSBOMExist: true
            dependencies:
            - name: name
              type: type
              version: version
            - name: name
              type: type
              version: version
          - imageContexts:
            - containerName: containerName
              namespace: namespace
              podName: podName
            - containerName: containerName
              namespace: namespace
              podName: podName
            image: image
            vulnerabilitySummary:
              high: 7
              critical: 4
              low: 1
              medium: 1
              negligible: 1
              unknown: 6
            vulnerabilities:
            - severity: severity
              installed: installed
              name: name
              fixedIn: fixedIn
              vulnerability: vulnerability
              type: type
            - severity: severity
              installed: installed
              name: name
              fixedIn: fixedIn
              vulnerability: vulnerability
              type: type
            state: state
            time: 2000-01-23T04:56:07.000+00:00
            isSBOMExist: true
            dependencies:
            - name: name
              type: type
              version: version
            - name: name
              type: type
              version: version
          scanTime:
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          requestUid: requestUid
          location:
            uid: uid
            name: name
          state: state
          message: message
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterComplianceScanLogSpec"
        status:
          $ref: "#/components/schemas/v1ClusterSyftLogStatus"
      type: object
    v1ClusterScanTime:
      description: Cluster compliance scan Time
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1ClusterSearchInputSpec:
      example:
        inputs:
          key:
            values:
            - uid: uid
              name: name
            - uid: uid
              name: name
      properties:
        inputs:
          additionalProperties:
            $ref: "#/components/schemas/v1ClusterSearchInputSpecProperty"
          type: object
      type: object
    v1ClusterSearchInputSpecProperty:
      example:
        values:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        values:
          items:
            $ref: "#/components/schemas/v1ObjectEntity"
          type: array
          x-omitempty: true
      type: object
    v1ClusterSonobuoyLogStatus:
      description: Cluster compliance scan Sonobuoy Log Status
      example:
        actor:
          uid: uid
          actorType: actorType
        reports:
          key:
            fail: 9
            node: node
            total: 2
            plugin: plugin
            pass: 3
            logs:
            - msg: msg
              output: output
              path: path
              description: description
              state: state
            - msg: msg
              output: output
              path: path
              description: description
              state: state
            status: status
        scanTime:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        requestUid: requestUid
        state: state
        message: message
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        message:
          type: string
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1SonobuoyReport"
          type: object
        requestUid:
          type: string
        scanTime:
          $ref: "#/components/schemas/v1ClusterScanTime"
        state:
          type: string
      type: object
    v1ClusterState:
      enum:
      - Pending
      - Provisioning
      - Running
      - Deleting
      - Deleted
      - Error
      - Importing
      type: string
    v1ClusterSyftLogStatus:
      description: Cluster compliance scan Syft Log Status
      example:
        actor:
          uid: uid
          actorType: actorType
        scanContext:
          scope: scope
          format: format
          labelSelector: labelSelector
          namespace: namespace
          podName: podName
        reports:
        - imageContexts:
          - containerName: containerName
            namespace: namespace
            podName: podName
          - containerName: containerName
            namespace: namespace
            podName: podName
          image: image
          vulnerabilitySummary:
            high: 7
            critical: 4
            low: 1
            medium: 1
            negligible: 1
            unknown: 6
          vulnerabilities:
          - severity: severity
            installed: installed
            name: name
            fixedIn: fixedIn
            vulnerability: vulnerability
            type: type
          - severity: severity
            installed: installed
            name: name
            fixedIn: fixedIn
            vulnerability: vulnerability
            type: type
          state: state
          time: 2000-01-23T04:56:07.000+00:00
          isSBOMExist: true
          dependencies:
          - name: name
            type: type
            version: version
          - name: name
            type: type
            version: version
        - imageContexts:
          - containerName: containerName
            namespace: namespace
            podName: podName
          - containerName: containerName
            namespace: namespace
            podName: podName
          image: image
          vulnerabilitySummary:
            high: 7
            critical: 4
            low: 1
            medium: 1
            negligible: 1
            unknown: 6
          vulnerabilities:
          - severity: severity
            installed: installed
            name: name
            fixedIn: fixedIn
            vulnerability: vulnerability
            type: type
          - severity: severity
            installed: installed
            name: name
            fixedIn: fixedIn
            vulnerability: vulnerability
            type: type
          state: state
          time: 2000-01-23T04:56:07.000+00:00
          isSBOMExist: true
          dependencies:
          - name: name
            type: type
            version: version
          - name: name
            type: type
            version: version
        scanTime:
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        requestUid: requestUid
        location:
          uid: uid
          name: name
        state: state
        message: message
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        location:
          $ref: "#/components/schemas/v1ObjectEntity"
        message:
          type: string
        reports:
          items:
            $ref: "#/components/schemas/v1SyftReport"
          type: array
        requestUid:
          type: string
        scanContext:
          $ref: "#/components/schemas/v1SyftScanContext"
        scanTime:
          $ref: "#/components/schemas/v1ClusterScanTime"
        state:
          type: string
      type: object
    v1ClusterType:
      default: PureManage
      enum:
      - PureManage
      - PureAttach
      type: string
    v1ClusterUpgradeSettingsEntity:
      example:
        spectroComponents: lock
      properties:
        spectroComponents:
          enum:
          - lock
          - unlock
          type: string
      type: object
    v1ClusterUsageSummary:
      description: Cluster usage summary
      example:
        uid: uid
        isAlloy: true
        cpuCores: 2.3021358869347655
        name: name
      properties:
        cpuCores:
          type: number
          x-omitempty: false
        isAlloy:
          type: boolean
          x-omitempty: false
        name:
          type: string
        uid:
          type: string
      type: object
    v1ClusterVirtualMachine:
      description: |-
        VirtualMachine handles the VirtualMachines that are not running
        or are in a stopped state
        The VirtualMachine contains the template to create the
        VirtualMachineInstance. It also mirrors the running state of the created
        VirtualMachineInstance in its status.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          managedFields:
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          running: true
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              managedFields:
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              dnsPolicy: dnsPolicy
              livenessProbe:
                failureThreshold: 7
                periodSeconds: 4
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                guestAgentPing: "{}"
                successThreshold: 5
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              terminationGracePeriodSeconds: 9
              dnsConfig:
                searches:
                - searches
                - searches
                nameservers:
                - nameservers
                - nameservers
                options:
                - name: name
                  value: value
                - name: name
                  value: value
              priorityClassName: priorityClassName
              topologySpreadConstraints:
              - whenUnsatisfiable: whenUnsatisfiable
                maxSkew: 8
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
              - whenUnsatisfiable: whenUnsatisfiable
                maxSkew: 8
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
              volumes:
              - downwardAPI:
                  volumeLabel: volumeLabel
                  fields:
                  - mode: 9
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 9
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                cloudInitConfigDrive:
                  networkDataSecretRef:
                    name: name
                  userData: userData
                  networkData: networkData
                  networkDataBase64: networkDataBase64
                  secretRef:
                    name: name
                  userDataBase64: userDataBase64
                downwardMetrics: "{}"
                ephemeral:
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                serviceAccount:
                  serviceAccountName: serviceAccountName
                sysprep:
                  configMap:
                    name: name
                  secret:
                    name: name
                containerDisk:
                  image: image
                  imagePullPolicy: imagePullPolicy
                  imagePullSecret: imagePullSecret
                  path: path
                hostDisk:
                  path: path
                  shared: true
                  type: type
                  capacity: capacity
                secret:
                  secretName: secretName
                  volumeLabel: volumeLabel
                  optional: true
                cloudInitNoCloud:
                  networkDataSecretRef:
                    name: name
                  userData: userData
                  networkData: networkData
                  networkDataBase64: networkDataBase64
                  secretRef:
                    name: name
                  userDataBase64: userDataBase64
                configMap:
                  volumeLabel: volumeLabel
                  name: name
                  optional: true
                dataVolume:
                  hotpluggable: true
                  name: name
                name: name
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
                memoryDump:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
                emptyDisk:
                  capacity: capacity
              - downwardAPI:
                  volumeLabel: volumeLabel
                  fields:
                  - mode: 9
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 9
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                cloudInitConfigDrive:
                  networkDataSecretRef:
                    name: name
                  userData: userData
                  networkData: networkData
                  networkDataBase64: networkDataBase64
                  secretRef:
                    name: name
                  userDataBase64: userDataBase64
                downwardMetrics: "{}"
                ephemeral:
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                serviceAccount:
                  serviceAccountName: serviceAccountName
                sysprep:
                  configMap:
                    name: name
                  secret:
                    name: name
                containerDisk:
                  image: image
                  imagePullPolicy: imagePullPolicy
                  imagePullSecret: imagePullSecret
                  path: path
                hostDisk:
                  path: path
                  shared: true
                  type: type
                  capacity: capacity
                secret:
                  secretName: secretName
                  volumeLabel: volumeLabel
                  optional: true
                cloudInitNoCloud:
                  networkDataSecretRef:
                    name: name
                  userData: userData
                  networkData: networkData
                  networkDataBase64: networkDataBase64
                  secretRef:
                    name: name
                  userDataBase64: userDataBase64
                configMap:
                  volumeLabel: volumeLabel
                  name: name
                  optional: true
                dataVolume:
                  hotpluggable: true
                  name: name
                name: name
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
                memoryDump:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
                emptyDisk:
                  capacity: capacity
              networks:
              - pod:
                  vmNetworkCIDR: vmNetworkCIDR
                  vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                name: name
                multus:
                  default: true
                  networkName: networkName
              - pod:
                  vmNetworkCIDR: vmNetworkCIDR
                  vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                name: name
                multus:
                  default: true
                  networkName: networkName
              nodeSelector:
                key: nodeSelector
              hostname: hostname
              tolerations:
              - effect: effect
                tolerationSeconds: 6
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 6
                value: value
                key: key
                operator: operator
              accessCredentials:
              - sshPublicKey:
                  propagationMethod:
                    configDrive: "{}"
                    qemuGuestAgent:
                      users:
                      - users
                      - users
                  source:
                    secret:
                      secretName: secretName
                userPassword:
                  propagationMethod:
                    qemuGuestAgent: "{}"
                  source:
                    secret:
                      secretName: secretName
              - sshPublicKey:
                  propagationMethod:
                    configDrive: "{}"
                    qemuGuestAgent:
                      users:
                      - users
                      - users
                  source:
                    secret:
                      secretName: secretName
                userPassword:
                  propagationMethod:
                    qemuGuestAgent: "{}"
                  source:
                    secret:
                      secretName: secretName
              startStrategy: startStrategy
              domain:
                features:
                  smm:
                    enabled: true
                  kvm:
                    hidden: true
                  apic:
                    endOfInterrupt: true
                    enabled: true
                  acpi:
                    enabled: true
                  pvspinlock:
                    enabled: true
                  hyperv:
                    vpindex:
                      enabled: true
                    ipi:
                      enabled: true
                    reenlightenment:
                      enabled: true
                    runtime:
                      enabled: true
                    vendorid:
                      vendorid: vendorid
                      enabled: true
                    evmcs:
                      enabled: true
                    synictimer:
                      direct:
                        enabled: true
                      enabled: true
                    spinlocks:
                      spinlocks: 6
                      enabled: true
                    tlbflush:
                      enabled: true
                    synic:
                      enabled: true
                    relaxed:
                      enabled: true
                    vapic:
                      enabled: true
                    reset:
                      enabled: true
                    frequencies:
                      enabled: true
                ioThreadsPolicy: ioThreadsPolicy
                memory:
                  hugepages:
                    pageSize: pageSize
                  guest: guest
                devices:
                  autoattachPodInterface: true
                  interfaces:
                  - dhcpOptions:
                      ntpServers:
                      - ntpServers
                      - ntpServers
                      tftpServerName: tftpServerName
                      bootFileName: bootFileName
                      privateOptions:
                      - value: value
                        option: 1
                      - value: value
                        option: 1
                    slirp: "{}"
                    macvtap: "{}"
                    ports:
                    - protocol: protocol
                      port: 1
                      name: name
                    - protocol: protocol
                      port: 1
                      name: name
                    macAddress: macAddress
                    masquerade: "{}"
                    bootOrder: 1
                    acpiIndex: 7
                    name: name
                    sriov: "{}"
                    model: model
                    pciAddress: pciAddress
                    bridge: "{}"
                    passt: "{}"
                    tag: tag
                  - dhcpOptions:
                      ntpServers:
                      - ntpServers
                      - ntpServers
                      tftpServerName: tftpServerName
                      bootFileName: bootFileName
                      privateOptions:
                      - value: value
                        option: 1
                      - value: value
                        option: 1
                    slirp: "{}"
                    macvtap: "{}"
                    ports:
                    - protocol: protocol
                      port: 1
                      name: name
                    - protocol: protocol
                      port: 1
                      name: name
                    macAddress: macAddress
                    masquerade: "{}"
                    bootOrder: 1
                    acpiIndex: 7
                    name: name
                    sriov: "{}"
                    model: model
                    pciAddress: pciAddress
                    bridge: "{}"
                    passt: "{}"
                    tag: tag
                  disks:
                  - shareable: true
                    cache: cache
                    dedicatedIOThread: true
                    disk:
                      bus: bus
                      readonly: true
                      pciAddress: pciAddress
                    lun:
                      bus: bus
                      readonly: true
                    bootOrder: 4
                    serial: serial
                    io: io
                    name: name
                    tag: tag
                    cdrom:
                      tray: tray
                      bus: bus
                      readonly: true
                    blockSize:
                      custom:
                        physical: 2
                        logical: 3
                      matchVolume:
                        enabled: true
                  - shareable: true
                    cache: cache
                    dedicatedIOThread: true
                    disk:
                      bus: bus
                      readonly: true
                      pciAddress: pciAddress
                    lun:
                      bus: bus
                      readonly: true
                    bootOrder: 4
                    serial: serial
                    io: io
                    name: name
                    tag: tag
                    cdrom:
                      tray: tray
                      bus: bus
                      readonly: true
                    blockSize:
                      custom:
                        physical: 2
                        logical: 3
                      matchVolume:
                        enabled: true
                  inputs:
                  - bus: bus
                    name: name
                    type: type
                  - bus: bus
                    name: name
                    type: type
                  sound:
                    name: name
                    model: model
                  autoattachInputDevice: true
                  useVirtioTransitional: true
                  rng: "{}"
                  autoattachSerialConsole: true
                  autoattachVSOCK: true
                  filesystems:
                  - name: name
                    virtiofs: "{}"
                  - name: name
                    virtiofs: "{}"
                  hostDevices:
                  - name: name
                    tag: tag
                    deviceName: deviceName
                  - name: name
                    tag: tag
                    deviceName: deviceName
                  networkInterfaceMultiqueue: true
                  autoattachMemBalloon: true
                  tpm: "{}"
                  clientPassthrough: "{}"
                  watchdog:
                    i6300esb:
                      action: action
                    name: name
                  blockMultiQueue: true
                  gpus:
                  - name: name
                    tag: tag
                    virtualGPUOptions:
                      display:
                        enabled: true
                        ramFB:
                          enabled: true
                    deviceName: deviceName
                  - name: name
                    tag: tag
                    virtualGPUOptions:
                      display:
                        enabled: true
                        ramFB:
                          enabled: true
                    deviceName: deviceName
                  disableHotplug: true
                  autoattachGraphicsDevice: true
                machine:
                  type: type
                cpu:
                  features:
                  - name: name
                    policy: policy
                  - name: name
                    policy: policy
                  realtime:
                    mask: mask
                  cores: 2
                  dedicatedCpuPlacement: true
                  numa:
                    guestMappingPassthrough: "{}"
                  threads: 9
                  model: model
                  sockets: 7
                  isolateEmulatorThread: true
                resources:
                  overcommitGuestOverhead: true
                  requests: "{}"
                  limits: "{}"
                chassis:
                  serial: serial
                  asset: asset
                  sku: sku
                  version: version
                  manufacturer: manufacturer
                clock:
                  timer:
                    rtc:
                      tickPolicy: tickPolicy
                      present: true
                      track: track
                    kvm:
                      present: true
                    hpet:
                      tickPolicy: tickPolicy
                      present: true
                    pit:
                      tickPolicy: tickPolicy
                      present: true
                    hyperv:
                      present: true
                  utc:
                    offsetSeconds: 5
                  timezone: timezone
                firmware:
                  serial: serial
                  bootloader:
                    bios:
                      useSerial: true
                    efi:
                      secureBoot: true
                  uuid: uuid
                  kernelBoot:
                    container:
                      image: image
                      imagePullPolicy: imagePullPolicy
                      imagePullSecret: imagePullSecret
                      initrdPath: initrdPath
                      kernelPath: kernelPath
                    kernelArgs: kernelArgs
                launchSecurity:
                  sev: "{}"
              readinessProbe:
                failureThreshold: 7
                periodSeconds: 4
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                guestAgentPing: "{}"
                successThreshold: 5
                initialDelaySeconds: 1
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              subdomain: subdomain
              evictionStrategy: evictionStrategy
              schedulerName: schedulerName
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 1
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 1
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 5
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 5
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 5
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 5
          dataVolumeTemplates:
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              managedFields:
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            spec:
              finalCheckpoint: true
              preallocation: true
              priorityClassName: priorityClassName
              checkpoints:
              - current: current
                previous: previous
              - current: current
                previous: previous
              source:
                s3:
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  url: url
                registry:
                  imageStream: imageStream
                  pullMethod: pullMethod
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  url: url
                vddk:
                  backingFile: backingFile
                  initImageURL: initImageURL
                  secretRef: secretRef
                  thumbprint: thumbprint
                  uuid: uuid
                  url: url
                blank: "{}"
                imageio:
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  diskId: diskId
                  url: url
                upload: "{}"
                http:
                  secretExtraHeaders:
                  - secretExtraHeaders
                  - secretExtraHeaders
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  extraHeaders:
                  - extraHeaders
                  - extraHeaders
                  url: url
                pvc:
                  name: name
                  namespace: namespace
              storage:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests:
                    key: null
                  limits:
                    key: null
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                accessModes:
                - accessModes
                - accessModes
                dataSource:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeMode: volumeMode
              pvc:
                storageClassName: storageClassName
                dataSourceRef:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeName: volumeName
                resources:
                  requests:
                    key: null
                  limits:
                    key: null
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                accessModes:
                - accessModes
                - accessModes
                dataSource:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeMode: volumeMode
              sourceRef:
                kind: kind
                name: name
                namespace: namespace
              contentType: contentType
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations:
                key: annotations
              generateName: generateName
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              managedFields:
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              - apiVersion: apiVersion
                fieldsV1:
                  Raw:
                  - Raw
                  - Raw
                manager: manager
                subresource: subresource
                time: 2000-01-23T04:56:07.000+00:00
                operation: operation
                fieldsType: fieldsType
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            spec:
              finalCheckpoint: true
              preallocation: true
              priorityClassName: priorityClassName
              checkpoints:
              - current: current
                previous: previous
              - current: current
                previous: previous
              source:
                s3:
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  url: url
                registry:
                  imageStream: imageStream
                  pullMethod: pullMethod
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  url: url
                vddk:
                  backingFile: backingFile
                  initImageURL: initImageURL
                  secretRef: secretRef
                  thumbprint: thumbprint
                  uuid: uuid
                  url: url
                blank: "{}"
                imageio:
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  diskId: diskId
                  url: url
                upload: "{}"
                http:
                  secretExtraHeaders:
                  - secretExtraHeaders
                  - secretExtraHeaders
                  secretRef: secretRef
                  certConfigMap: certConfigMap
                  extraHeaders:
                  - extraHeaders
                  - extraHeaders
                  url: url
                pvc:
                  name: name
                  namespace: namespace
              storage:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests:
                    key: null
                  limits:
                    key: null
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                accessModes:
                - accessModes
                - accessModes
                dataSource:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeMode: volumeMode
              pvc:
                storageClassName: storageClassName
                dataSourceRef:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeName: volumeName
                resources:
                  requests:
                    key: null
                  limits:
                    key: null
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                accessModes:
                - accessModes
                - accessModes
                dataSource:
                  apiGroup: apiGroup
                  kind: kind
                  name: name
                volumeMode: volumeMode
              sourceRef:
                kind: kind
                name: name
                namespace: namespace
              contentType: contentType
          runStrategy: runStrategy
          preference:
            revisionName: revisionName
            kind: kind
            inferFromVolume: inferFromVolume
            name: name
          instancetype:
            revisionName: revisionName
            kind: kind
            inferFromVolume: inferFromVolume
            name: name
        status:
          startFailure:
            consecutiveFailCount: 6
            retryAfterTimestamp: 2000-01-23T04:56:07.000+00:00
            lastFailedVMIUID: lastFailedVMIUID
          snapshotInProgress: snapshotInProgress
          created: true
          ready: true
          printableStatus: printableStatus
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          stateChangeRequests:
          - uid: uid
            data:
              key: data
            action: action
          - uid: uid
            data:
              key: data
            action: action
          volumeRequests:
          - removeVolumeOptions:
              dryRun:
              - dryRun
              - dryRun
              name: name
            addVolumeOptions:
              disk:
                shareable: true
                cache: cache
                dedicatedIOThread: true
                disk:
                  bus: bus
                  readonly: true
                  pciAddress: pciAddress
                lun:
                  bus: bus
                  readonly: true
                bootOrder: 4
                serial: serial
                io: io
                name: name
                tag: tag
                cdrom:
                  tray: tray
                  bus: bus
                  readonly: true
                blockSize:
                  custom:
                    physical: 2
                    logical: 3
                  matchVolume:
                    enabled: true
              dryRun:
              - dryRun
              - dryRun
              name: name
              volumeSource:
                dataVolume:
                  hotpluggable: true
                  name: name
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
          - removeVolumeOptions:
              dryRun:
              - dryRun
              - dryRun
              name: name
            addVolumeOptions:
              disk:
                shareable: true
                cache: cache
                dedicatedIOThread: true
                disk:
                  bus: bus
                  readonly: true
                  pciAddress: pciAddress
                lun:
                  bus: bus
                  readonly: true
                bootOrder: 4
                serial: serial
                io: io
                name: name
                tag: tag
                cdrom:
                  tray: tray
                  bus: bus
                  readonly: true
                blockSize:
                  custom:
                    physical: 2
                    logical: 3
                  matchVolume:
                    enabled: true
              dryRun:
              - dryRun
              - dryRun
              name: name
              volumeSource:
                dataVolume:
                  hotpluggable: true
                  name: name
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
          volumeSnapshotStatuses:
          - reason: reason
            name: name
            enabled: true
          - reason: reason
            name: name
            enabled: true
          memoryDumpRequest:
            phase: phase
            fileName: fileName
            claimName: claimName
            message: message
            endTimestamp: 2000-01-23T04:56:07.000+00:00
            remove: true
            startTimestamp: 2000-01-23T04:56:07.000+00:00
          restoreInProgress: restoreInProgress
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values."
          type: string
        kind:
          description: Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase.
          type: string
        metadata:
          $ref: "#/components/schemas/v1VmObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ClusterVirtualMachineSpec"
        status:
          $ref: "#/components/schemas/v1ClusterVirtualMachineStatus"
      required:
      - spec
      type: object
    v1ClusterVirtualMachineList:
      description: VirtualMachineList is a list of virtual machines
      example:
        metadata:
          remainingItemCount: 3
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            running: true
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                livenessProbe:
                  failureThreshold: 7
                  periodSeconds: 4
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  guestAgentPing: "{}"
                  successThreshold: 5
                  initialDelaySeconds: 1
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationGracePeriodSeconds: 9
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                priorityClassName: priorityClassName
                topologySpreadConstraints:
                - whenUnsatisfiable: whenUnsatisfiable
                  maxSkew: 8
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                - whenUnsatisfiable: whenUnsatisfiable
                  maxSkew: 8
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                volumes:
                - downwardAPI:
                    volumeLabel: volumeLabel
                    fields:
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  cloudInitConfigDrive:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  downwardMetrics: "{}"
                  ephemeral:
                    persistentVolumeClaim:
                      claimName: claimName
                      hotpluggable: true
                      readOnly: true
                  serviceAccount:
                    serviceAccountName: serviceAccountName
                  sysprep:
                    configMap:
                      name: name
                    secret:
                      name: name
                  containerDisk:
                    image: image
                    imagePullPolicy: imagePullPolicy
                    imagePullSecret: imagePullSecret
                    path: path
                  hostDisk:
                    path: path
                    shared: true
                    type: type
                    capacity: capacity
                  secret:
                    secretName: secretName
                    volumeLabel: volumeLabel
                    optional: true
                  cloudInitNoCloud:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  configMap:
                    volumeLabel: volumeLabel
                    name: name
                    optional: true
                  dataVolume:
                    hotpluggable: true
                    name: name
                  name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  memoryDump:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  emptyDisk:
                    capacity: capacity
                - downwardAPI:
                    volumeLabel: volumeLabel
                    fields:
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  cloudInitConfigDrive:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  downwardMetrics: "{}"
                  ephemeral:
                    persistentVolumeClaim:
                      claimName: claimName
                      hotpluggable: true
                      readOnly: true
                  serviceAccount:
                    serviceAccountName: serviceAccountName
                  sysprep:
                    configMap:
                      name: name
                    secret:
                      name: name
                  containerDisk:
                    image: image
                    imagePullPolicy: imagePullPolicy
                    imagePullSecret: imagePullSecret
                    path: path
                  hostDisk:
                    path: path
                    shared: true
                    type: type
                    capacity: capacity
                  secret:
                    secretName: secretName
                    volumeLabel: volumeLabel
                    optional: true
                  cloudInitNoCloud:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  configMap:
                    volumeLabel: volumeLabel
                    name: name
                    optional: true
                  dataVolume:
                    hotpluggable: true
                    name: name
                  name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  memoryDump:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  emptyDisk:
                    capacity: capacity
                networks:
                - pod:
                    vmNetworkCIDR: vmNetworkCIDR
                    vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                  name: name
                  multus:
                    default: true
                    networkName: networkName
                - pod:
                    vmNetworkCIDR: vmNetworkCIDR
                    vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                  name: name
                  multus:
                    default: true
                    networkName: networkName
                nodeSelector:
                  key: nodeSelector
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 6
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 6
                  value: value
                  key: key
                  operator: operator
                accessCredentials:
                - sshPublicKey:
                    propagationMethod:
                      configDrive: "{}"
                      qemuGuestAgent:
                        users:
                        - users
                        - users
                    source:
                      secret:
                        secretName: secretName
                  userPassword:
                    propagationMethod:
                      qemuGuestAgent: "{}"
                    source:
                      secret:
                        secretName: secretName
                - sshPublicKey:
                    propagationMethod:
                      configDrive: "{}"
                      qemuGuestAgent:
                        users:
                        - users
                        - users
                    source:
                      secret:
                        secretName: secretName
                  userPassword:
                    propagationMethod:
                      qemuGuestAgent: "{}"
                    source:
                      secret:
                        secretName: secretName
                startStrategy: startStrategy
                domain:
                  features:
                    smm:
                      enabled: true
                    kvm:
                      hidden: true
                    apic:
                      endOfInterrupt: true
                      enabled: true
                    acpi:
                      enabled: true
                    pvspinlock:
                      enabled: true
                    hyperv:
                      vpindex:
                        enabled: true
                      ipi:
                        enabled: true
                      reenlightenment:
                        enabled: true
                      runtime:
                        enabled: true
                      vendorid:
                        vendorid: vendorid
                        enabled: true
                      evmcs:
                        enabled: true
                      synictimer:
                        direct:
                          enabled: true
                        enabled: true
                      spinlocks:
                        spinlocks: 6
                        enabled: true
                      tlbflush:
                        enabled: true
                      synic:
                        enabled: true
                      relaxed:
                        enabled: true
                      vapic:
                        enabled: true
                      reset:
                        enabled: true
                      frequencies:
                        enabled: true
                  ioThreadsPolicy: ioThreadsPolicy
                  memory:
                    hugepages:
                      pageSize: pageSize
                    guest: guest
                  devices:
                    autoattachPodInterface: true
                    interfaces:
                    - dhcpOptions:
                        ntpServers:
                        - ntpServers
                        - ntpServers
                        tftpServerName: tftpServerName
                        bootFileName: bootFileName
                        privateOptions:
                        - value: value
                          option: 1
                        - value: value
                          option: 1
                      slirp: "{}"
                      macvtap: "{}"
                      ports:
                      - protocol: protocol
                        port: 1
                        name: name
                      - protocol: protocol
                        port: 1
                        name: name
                      macAddress: macAddress
                      masquerade: "{}"
                      bootOrder: 1
                      acpiIndex: 7
                      name: name
                      sriov: "{}"
                      model: model
                      pciAddress: pciAddress
                      bridge: "{}"
                      passt: "{}"
                      tag: tag
                    - dhcpOptions:
                        ntpServers:
                        - ntpServers
                        - ntpServers
                        tftpServerName: tftpServerName
                        bootFileName: bootFileName
                        privateOptions:
                        - value: value
                          option: 1
                        - value: value
                          option: 1
                      slirp: "{}"
                      macvtap: "{}"
                      ports:
                      - protocol: protocol
                        port: 1
                        name: name
                      - protocol: protocol
                        port: 1
                        name: name
                      macAddress: macAddress
                      masquerade: "{}"
                      bootOrder: 1
                      acpiIndex: 7
                      name: name
                      sriov: "{}"
                      model: model
                      pciAddress: pciAddress
                      bridge: "{}"
                      passt: "{}"
                      tag: tag
                    disks:
                    - shareable: true
                      cache: cache
                      dedicatedIOThread: true
                      disk:
                        bus: bus
                        readonly: true
                        pciAddress: pciAddress
                      lun:
                        bus: bus
                        readonly: true
                      bootOrder: 4
                      serial: serial
                      io: io
                      name: name
                      tag: tag
                      cdrom:
                        tray: tray
                        bus: bus
                        readonly: true
                      blockSize:
                        custom:
                          physical: 2
                          logical: 3
                        matchVolume:
                          enabled: true
                    - shareable: true
                      cache: cache
                      dedicatedIOThread: true
                      disk:
                        bus: bus
                        readonly: true
                        pciAddress: pciAddress
                      lun:
                        bus: bus
                        readonly: true
                      bootOrder: 4
                      serial: serial
                      io: io
                      name: name
                      tag: tag
                      cdrom:
                        tray: tray
                        bus: bus
                        readonly: true
                      blockSize:
                        custom:
                          physical: 2
                          logical: 3
                        matchVolume:
                          enabled: true
                    inputs:
                    - bus: bus
                      name: name
                      type: type
                    - bus: bus
                      name: name
                      type: type
                    sound:
                      name: name
                      model: model
                    autoattachInputDevice: true
                    useVirtioTransitional: true
                    rng: "{}"
                    autoattachSerialConsole: true
                    autoattachVSOCK: true
                    filesystems:
                    - name: name
                      virtiofs: "{}"
                    - name: name
                      virtiofs: "{}"
                    hostDevices:
                    - name: name
                      tag: tag
                      deviceName: deviceName
                    - name: name
                      tag: tag
                      deviceName: deviceName
                    networkInterfaceMultiqueue: true
                    autoattachMemBalloon: true
                    tpm: "{}"
                    clientPassthrough: "{}"
                    watchdog:
                      i6300esb:
                        action: action
                      name: name
                    blockMultiQueue: true
                    gpus:
                    - name: name
                      tag: tag
                      virtualGPUOptions:
                        display:
                          enabled: true
                          ramFB:
                            enabled: true
                      deviceName: deviceName
                    - name: name
                      tag: tag
                      virtualGPUOptions:
                        display:
                          enabled: true
                          ramFB:
                            enabled: true
                      deviceName: deviceName
                    disableHotplug: true
                    autoattachGraphicsDevice: true
                  machine:
                    type: type
                  cpu:
                    features:
                    - name: name
                      policy: policy
                    - name: name
                      policy: policy
                    realtime:
                      mask: mask
                    cores: 2
                    dedicatedCpuPlacement: true
                    numa:
                      guestMappingPassthrough: "{}"
                    threads: 9
                    model: model
                    sockets: 7
                    isolateEmulatorThread: true
                  resources:
                    overcommitGuestOverhead: true
                    requests: "{}"
                    limits: "{}"
                  chassis:
                    serial: serial
                    asset: asset
                    sku: sku
                    version: version
                    manufacturer: manufacturer
                  clock:
                    timer:
                      rtc:
                        tickPolicy: tickPolicy
                        present: true
                        track: track
                      kvm:
                        present: true
                      hpet:
                        tickPolicy: tickPolicy
                        present: true
                      pit:
                        tickPolicy: tickPolicy
                        present: true
                      hyperv:
                        present: true
                    utc:
                      offsetSeconds: 5
                    timezone: timezone
                  firmware:
                    serial: serial
                    bootloader:
                      bios:
                        useSerial: true
                      efi:
                        secureBoot: true
                    uuid: uuid
                    kernelBoot:
                      container:
                        image: image
                        imagePullPolicy: imagePullPolicy
                        imagePullSecret: imagePullSecret
                        initrdPath: initrdPath
                        kernelPath: kernelPath
                      kernelArgs: kernelArgs
                  launchSecurity:
                    sev: "{}"
                readinessProbe:
                  failureThreshold: 7
                  periodSeconds: 4
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  guestAgentPing: "{}"
                  successThreshold: 5
                  initialDelaySeconds: 1
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                subdomain: subdomain
                evictionStrategy: evictionStrategy
                schedulerName: schedulerName
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 1
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 1
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
            dataVolumeTemplates:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                finalCheckpoint: true
                preallocation: true
                priorityClassName: priorityClassName
                checkpoints:
                - current: current
                  previous: previous
                - current: current
                  previous: previous
                source:
                  s3:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  registry:
                    imageStream: imageStream
                    pullMethod: pullMethod
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  vddk:
                    backingFile: backingFile
                    initImageURL: initImageURL
                    secretRef: secretRef
                    thumbprint: thumbprint
                    uuid: uuid
                    url: url
                  blank: "{}"
                  imageio:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    diskId: diskId
                    url: url
                  upload: "{}"
                  http:
                    secretExtraHeaders:
                    - secretExtraHeaders
                    - secretExtraHeaders
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    extraHeaders:
                    - extraHeaders
                    - extraHeaders
                    url: url
                  pvc:
                    name: name
                    namespace: namespace
                storage:
                  storageClassName: storageClassName
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                pvc:
                  storageClassName: storageClassName
                  dataSourceRef:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                sourceRef:
                  kind: kind
                  name: name
                  namespace: namespace
                contentType: contentType
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                finalCheckpoint: true
                preallocation: true
                priorityClassName: priorityClassName
                checkpoints:
                - current: current
                  previous: previous
                - current: current
                  previous: previous
                source:
                  s3:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  registry:
                    imageStream: imageStream
                    pullMethod: pullMethod
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  vddk:
                    backingFile: backingFile
                    initImageURL: initImageURL
                    secretRef: secretRef
                    thumbprint: thumbprint
                    uuid: uuid
                    url: url
                  blank: "{}"
                  imageio:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    diskId: diskId
                    url: url
                  upload: "{}"
                  http:
                    secretExtraHeaders:
                    - secretExtraHeaders
                    - secretExtraHeaders
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    extraHeaders:
                    - extraHeaders
                    - extraHeaders
                    url: url
                  pvc:
                    name: name
                    namespace: namespace
                storage:
                  storageClassName: storageClassName
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                pvc:
                  storageClassName: storageClassName
                  dataSourceRef:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                sourceRef:
                  kind: kind
                  name: name
                  namespace: namespace
                contentType: contentType
            runStrategy: runStrategy
            preference:
              revisionName: revisionName
              kind: kind
              inferFromVolume: inferFromVolume
              name: name
            instancetype:
              revisionName: revisionName
              kind: kind
              inferFromVolume: inferFromVolume
              name: name
          status:
            startFailure:
              consecutiveFailCount: 6
              retryAfterTimestamp: 2000-01-23T04:56:07.000+00:00
              lastFailedVMIUID: lastFailedVMIUID
            snapshotInProgress: snapshotInProgress
            created: true
            ready: true
            printableStatus: printableStatus
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            stateChangeRequests:
            - uid: uid
              data:
                key: data
              action: action
            - uid: uid
              data:
                key: data
              action: action
            volumeRequests:
            - removeVolumeOptions:
                dryRun:
                - dryRun
                - dryRun
                name: name
              addVolumeOptions:
                disk:
                  shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                dryRun:
                - dryRun
                - dryRun
                name: name
                volumeSource:
                  dataVolume:
                    hotpluggable: true
                    name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
            - removeVolumeOptions:
                dryRun:
                - dryRun
                - dryRun
                name: name
              addVolumeOptions:
                disk:
                  shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                dryRun:
                - dryRun
                - dryRun
                name: name
                volumeSource:
                  dataVolume:
                    hotpluggable: true
                    name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
            volumeSnapshotStatuses:
            - reason: reason
              name: name
              enabled: true
            - reason: reason
              name: name
              enabled: true
            memoryDumpRequest:
              phase: phase
              fileName: fileName
              claimName: claimName
              message: message
              endTimestamp: 2000-01-23T04:56:07.000+00:00
              remove: true
              startTimestamp: 2000-01-23T04:56:07.000+00:00
            restoreInProgress: restoreInProgress
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            running: true
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                livenessProbe:
                  failureThreshold: 7
                  periodSeconds: 4
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  guestAgentPing: "{}"
                  successThreshold: 5
                  initialDelaySeconds: 1
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                terminationGracePeriodSeconds: 9
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                priorityClassName: priorityClassName
                topologySpreadConstraints:
                - whenUnsatisfiable: whenUnsatisfiable
                  maxSkew: 8
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                - whenUnsatisfiable: whenUnsatisfiable
                  maxSkew: 8
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                volumes:
                - downwardAPI:
                    volumeLabel: volumeLabel
                    fields:
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  cloudInitConfigDrive:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  downwardMetrics: "{}"
                  ephemeral:
                    persistentVolumeClaim:
                      claimName: claimName
                      hotpluggable: true
                      readOnly: true
                  serviceAccount:
                    serviceAccountName: serviceAccountName
                  sysprep:
                    configMap:
                      name: name
                    secret:
                      name: name
                  containerDisk:
                    image: image
                    imagePullPolicy: imagePullPolicy
                    imagePullSecret: imagePullSecret
                    path: path
                  hostDisk:
                    path: path
                    shared: true
                    type: type
                    capacity: capacity
                  secret:
                    secretName: secretName
                    volumeLabel: volumeLabel
                    optional: true
                  cloudInitNoCloud:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  configMap:
                    volumeLabel: volumeLabel
                    name: name
                    optional: true
                  dataVolume:
                    hotpluggable: true
                    name: name
                  name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  memoryDump:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  emptyDisk:
                    capacity: capacity
                - downwardAPI:
                    volumeLabel: volumeLabel
                    fields:
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 9
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  cloudInitConfigDrive:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  downwardMetrics: "{}"
                  ephemeral:
                    persistentVolumeClaim:
                      claimName: claimName
                      hotpluggable: true
                      readOnly: true
                  serviceAccount:
                    serviceAccountName: serviceAccountName
                  sysprep:
                    configMap:
                      name: name
                    secret:
                      name: name
                  containerDisk:
                    image: image
                    imagePullPolicy: imagePullPolicy
                    imagePullSecret: imagePullSecret
                    path: path
                  hostDisk:
                    path: path
                    shared: true
                    type: type
                    capacity: capacity
                  secret:
                    secretName: secretName
                    volumeLabel: volumeLabel
                    optional: true
                  cloudInitNoCloud:
                    networkDataSecretRef:
                      name: name
                    userData: userData
                    networkData: networkData
                    networkDataBase64: networkDataBase64
                    secretRef:
                      name: name
                    userDataBase64: userDataBase64
                  configMap:
                    volumeLabel: volumeLabel
                    name: name
                    optional: true
                  dataVolume:
                    hotpluggable: true
                    name: name
                  name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  memoryDump:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
                  emptyDisk:
                    capacity: capacity
                networks:
                - pod:
                    vmNetworkCIDR: vmNetworkCIDR
                    vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                  name: name
                  multus:
                    default: true
                    networkName: networkName
                - pod:
                    vmNetworkCIDR: vmNetworkCIDR
                    vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
                  name: name
                  multus:
                    default: true
                    networkName: networkName
                nodeSelector:
                  key: nodeSelector
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 6
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 6
                  value: value
                  key: key
                  operator: operator
                accessCredentials:
                - sshPublicKey:
                    propagationMethod:
                      configDrive: "{}"
                      qemuGuestAgent:
                        users:
                        - users
                        - users
                    source:
                      secret:
                        secretName: secretName
                  userPassword:
                    propagationMethod:
                      qemuGuestAgent: "{}"
                    source:
                      secret:
                        secretName: secretName
                - sshPublicKey:
                    propagationMethod:
                      configDrive: "{}"
                      qemuGuestAgent:
                        users:
                        - users
                        - users
                    source:
                      secret:
                        secretName: secretName
                  userPassword:
                    propagationMethod:
                      qemuGuestAgent: "{}"
                    source:
                      secret:
                        secretName: secretName
                startStrategy: startStrategy
                domain:
                  features:
                    smm:
                      enabled: true
                    kvm:
                      hidden: true
                    apic:
                      endOfInterrupt: true
                      enabled: true
                    acpi:
                      enabled: true
                    pvspinlock:
                      enabled: true
                    hyperv:
                      vpindex:
                        enabled: true
                      ipi:
                        enabled: true
                      reenlightenment:
                        enabled: true
                      runtime:
                        enabled: true
                      vendorid:
                        vendorid: vendorid
                        enabled: true
                      evmcs:
                        enabled: true
                      synictimer:
                        direct:
                          enabled: true
                        enabled: true
                      spinlocks:
                        spinlocks: 6
                        enabled: true
                      tlbflush:
                        enabled: true
                      synic:
                        enabled: true
                      relaxed:
                        enabled: true
                      vapic:
                        enabled: true
                      reset:
                        enabled: true
                      frequencies:
                        enabled: true
                  ioThreadsPolicy: ioThreadsPolicy
                  memory:
                    hugepages:
                      pageSize: pageSize
                    guest: guest
                  devices:
                    autoattachPodInterface: true
                    interfaces:
                    - dhcpOptions:
                        ntpServers:
                        - ntpServers
                        - ntpServers
                        tftpServerName: tftpServerName
                        bootFileName: bootFileName
                        privateOptions:
                        - value: value
                          option: 1
                        - value: value
                          option: 1
                      slirp: "{}"
                      macvtap: "{}"
                      ports:
                      - protocol: protocol
                        port: 1
                        name: name
                      - protocol: protocol
                        port: 1
                        name: name
                      macAddress: macAddress
                      masquerade: "{}"
                      bootOrder: 1
                      acpiIndex: 7
                      name: name
                      sriov: "{}"
                      model: model
                      pciAddress: pciAddress
                      bridge: "{}"
                      passt: "{}"
                      tag: tag
                    - dhcpOptions:
                        ntpServers:
                        - ntpServers
                        - ntpServers
                        tftpServerName: tftpServerName
                        bootFileName: bootFileName
                        privateOptions:
                        - value: value
                          option: 1
                        - value: value
                          option: 1
                      slirp: "{}"
                      macvtap: "{}"
                      ports:
                      - protocol: protocol
                        port: 1
                        name: name
                      - protocol: protocol
                        port: 1
                        name: name
                      macAddress: macAddress
                      masquerade: "{}"
                      bootOrder: 1
                      acpiIndex: 7
                      name: name
                      sriov: "{}"
                      model: model
                      pciAddress: pciAddress
                      bridge: "{}"
                      passt: "{}"
                      tag: tag
                    disks:
                    - shareable: true
                      cache: cache
                      dedicatedIOThread: true
                      disk:
                        bus: bus
                        readonly: true
                        pciAddress: pciAddress
                      lun:
                        bus: bus
                        readonly: true
                      bootOrder: 4
                      serial: serial
                      io: io
                      name: name
                      tag: tag
                      cdrom:
                        tray: tray
                        bus: bus
                        readonly: true
                      blockSize:
                        custom:
                          physical: 2
                          logical: 3
                        matchVolume:
                          enabled: true
                    - shareable: true
                      cache: cache
                      dedicatedIOThread: true
                      disk:
                        bus: bus
                        readonly: true
                        pciAddress: pciAddress
                      lun:
                        bus: bus
                        readonly: true
                      bootOrder: 4
                      serial: serial
                      io: io
                      name: name
                      tag: tag
                      cdrom:
                        tray: tray
                        bus: bus
                        readonly: true
                      blockSize:
                        custom:
                          physical: 2
                          logical: 3
                        matchVolume:
                          enabled: true
                    inputs:
                    - bus: bus
                      name: name
                      type: type
                    - bus: bus
                      name: name
                      type: type
                    sound:
                      name: name
                      model: model
                    autoattachInputDevice: true
                    useVirtioTransitional: true
                    rng: "{}"
                    autoattachSerialConsole: true
                    autoattachVSOCK: true
                    filesystems:
                    - name: name
                      virtiofs: "{}"
                    - name: name
                      virtiofs: "{}"
                    hostDevices:
                    - name: name
                      tag: tag
                      deviceName: deviceName
                    - name: name
                      tag: tag
                      deviceName: deviceName
                    networkInterfaceMultiqueue: true
                    autoattachMemBalloon: true
                    tpm: "{}"
                    clientPassthrough: "{}"
                    watchdog:
                      i6300esb:
                        action: action
                      name: name
                    blockMultiQueue: true
                    gpus:
                    - name: name
                      tag: tag
                      virtualGPUOptions:
                        display:
                          enabled: true
                          ramFB:
                            enabled: true
                      deviceName: deviceName
                    - name: name
                      tag: tag
                      virtualGPUOptions:
                        display:
                          enabled: true
                          ramFB:
                            enabled: true
                      deviceName: deviceName
                    disableHotplug: true
                    autoattachGraphicsDevice: true
                  machine:
                    type: type
                  cpu:
                    features:
                    - name: name
                      policy: policy
                    - name: name
                      policy: policy
                    realtime:
                      mask: mask
                    cores: 2
                    dedicatedCpuPlacement: true
                    numa:
                      guestMappingPassthrough: "{}"
                    threads: 9
                    model: model
                    sockets: 7
                    isolateEmulatorThread: true
                  resources:
                    overcommitGuestOverhead: true
                    requests: "{}"
                    limits: "{}"
                  chassis:
                    serial: serial
                    asset: asset
                    sku: sku
                    version: version
                    manufacturer: manufacturer
                  clock:
                    timer:
                      rtc:
                        tickPolicy: tickPolicy
                        present: true
                        track: track
                      kvm:
                        present: true
                      hpet:
                        tickPolicy: tickPolicy
                        present: true
                      pit:
                        tickPolicy: tickPolicy
                        present: true
                      hyperv:
                        present: true
                    utc:
                      offsetSeconds: 5
                    timezone: timezone
                  firmware:
                    serial: serial
                    bootloader:
                      bios:
                        useSerial: true
                      efi:
                        secureBoot: true
                    uuid: uuid
                    kernelBoot:
                      container:
                        image: image
                        imagePullPolicy: imagePullPolicy
                        imagePullSecret: imagePullSecret
                        initrdPath: initrdPath
                        kernelPath: kernelPath
                      kernelArgs: kernelArgs
                  launchSecurity:
                    sev: "{}"
                readinessProbe:
                  failureThreshold: 7
                  periodSeconds: 4
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  guestAgentPing: "{}"
                  successThreshold: 5
                  initialDelaySeconds: 1
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                subdomain: subdomain
                evictionStrategy: evictionStrategy
                schedulerName: schedulerName
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 1
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 1
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      namespaceSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels:
                          key: matchLabels
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        namespaceSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels:
                            key: matchLabels
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 5
            dataVolumeTemplates:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                finalCheckpoint: true
                preallocation: true
                priorityClassName: priorityClassName
                checkpoints:
                - current: current
                  previous: previous
                - current: current
                  previous: previous
                source:
                  s3:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  registry:
                    imageStream: imageStream
                    pullMethod: pullMethod
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  vddk:
                    backingFile: backingFile
                    initImageURL: initImageURL
                    secretRef: secretRef
                    thumbprint: thumbprint
                    uuid: uuid
                    url: url
                  blank: "{}"
                  imageio:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    diskId: diskId
                    url: url
                  upload: "{}"
                  http:
                    secretExtraHeaders:
                    - secretExtraHeaders
                    - secretExtraHeaders
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    extraHeaders:
                    - extraHeaders
                    - extraHeaders
                    url: url
                  pvc:
                    name: name
                    namespace: namespace
                storage:
                  storageClassName: storageClassName
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                pvc:
                  storageClassName: storageClassName
                  dataSourceRef:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                sourceRef:
                  kind: kind
                  name: name
                  namespace: namespace
                contentType: contentType
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations:
                  key: annotations
                generateName: generateName
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                managedFields:
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                - apiVersion: apiVersion
                  fieldsV1:
                    Raw:
                    - Raw
                    - Raw
                  manager: manager
                  subresource: subresource
                  time: 2000-01-23T04:56:07.000+00:00
                  operation: operation
                  fieldsType: fieldsType
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                finalCheckpoint: true
                preallocation: true
                priorityClassName: priorityClassName
                checkpoints:
                - current: current
                  previous: previous
                - current: current
                  previous: previous
                source:
                  s3:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  registry:
                    imageStream: imageStream
                    pullMethod: pullMethod
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    url: url
                  vddk:
                    backingFile: backingFile
                    initImageURL: initImageURL
                    secretRef: secretRef
                    thumbprint: thumbprint
                    uuid: uuid
                    url: url
                  blank: "{}"
                  imageio:
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    diskId: diskId
                    url: url
                  upload: "{}"
                  http:
                    secretExtraHeaders:
                    - secretExtraHeaders
                    - secretExtraHeaders
                    secretRef: secretRef
                    certConfigMap: certConfigMap
                    extraHeaders:
                    - extraHeaders
                    - extraHeaders
                    url: url
                  pvc:
                    name: name
                    namespace: namespace
                storage:
                  storageClassName: storageClassName
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                pvc:
                  storageClassName: storageClassName
                  dataSourceRef:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeName: volumeName
                  resources:
                    requests:
                      key: null
                    limits:
                      key: null
                  selector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  accessModes:
                  - accessModes
                  - accessModes
                  dataSource:
                    apiGroup: apiGroup
                    kind: kind
                    name: name
                  volumeMode: volumeMode
                sourceRef:
                  kind: kind
                  name: name
                  namespace: namespace
                contentType: contentType
            runStrategy: runStrategy
            preference:
              revisionName: revisionName
              kind: kind
              inferFromVolume: inferFromVolume
              name: name
            instancetype:
              revisionName: revisionName
              kind: kind
              inferFromVolume: inferFromVolume
              name: name
          status:
            startFailure:
              consecutiveFailCount: 6
              retryAfterTimestamp: 2000-01-23T04:56:07.000+00:00
              lastFailedVMIUID: lastFailedVMIUID
            snapshotInProgress: snapshotInProgress
            created: true
            ready: true
            printableStatus: printableStatus
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            stateChangeRequests:
            - uid: uid
              data:
                key: data
              action: action
            - uid: uid
              data:
                key: data
              action: action
            volumeRequests:
            - removeVolumeOptions:
                dryRun:
                - dryRun
                - dryRun
                name: name
              addVolumeOptions:
                disk:
                  shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                dryRun:
                - dryRun
                - dryRun
                name: name
                volumeSource:
                  dataVolume:
                    hotpluggable: true
                    name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
            - removeVolumeOptions:
                dryRun:
                - dryRun
                - dryRun
                name: name
              addVolumeOptions:
                disk:
                  shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                dryRun:
                - dryRun
                - dryRun
                name: name
                volumeSource:
                  dataVolume:
                    hotpluggable: true
                    name: name
                  persistentVolumeClaim:
                    claimName: claimName
                    hotpluggable: true
                    readOnly: true
            volumeSnapshotStatuses:
            - reason: reason
              name: name
              enabled: true
            - reason: reason
              name: name
              enabled: true
            memoryDumpRequest:
              phase: phase
              fileName: fileName
              claimName: claimName
              message: message
              endTimestamp: 2000-01-23T04:56:07.000+00:00
              remove: true
              startTimestamp: 2000-01-23T04:56:07.000+00:00
            restoreInProgress: restoreInProgress
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values."
          type: string
        items:
          items:
            $ref: "#/components/schemas/v1ClusterVirtualMachine"
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1VmListMeta"
      required:
      - items
      type: object
    v1ClusterVirtualMachineSpec:
      description: VirtualMachineSpec describes how the proper VirtualMachine should
        look like
      example:
        running: true
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            dnsPolicy: dnsPolicy
            livenessProbe:
              failureThreshold: 7
              periodSeconds: 4
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              guestAgentPing: "{}"
              successThreshold: 5
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            terminationGracePeriodSeconds: 9
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            priorityClassName: priorityClassName
            topologySpreadConstraints:
            - whenUnsatisfiable: whenUnsatisfiable
              maxSkew: 8
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
            - whenUnsatisfiable: whenUnsatisfiable
              maxSkew: 8
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
            volumes:
            - downwardAPI:
                volumeLabel: volumeLabel
                fields:
                - mode: 9
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 9
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              cloudInitConfigDrive:
                networkDataSecretRef:
                  name: name
                userData: userData
                networkData: networkData
                networkDataBase64: networkDataBase64
                secretRef:
                  name: name
                userDataBase64: userDataBase64
              downwardMetrics: "{}"
              ephemeral:
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
              serviceAccount:
                serviceAccountName: serviceAccountName
              sysprep:
                configMap:
                  name: name
                secret:
                  name: name
              containerDisk:
                image: image
                imagePullPolicy: imagePullPolicy
                imagePullSecret: imagePullSecret
                path: path
              hostDisk:
                path: path
                shared: true
                type: type
                capacity: capacity
              secret:
                secretName: secretName
                volumeLabel: volumeLabel
                optional: true
              cloudInitNoCloud:
                networkDataSecretRef:
                  name: name
                userData: userData
                networkData: networkData
                networkDataBase64: networkDataBase64
                secretRef:
                  name: name
                userDataBase64: userDataBase64
              configMap:
                volumeLabel: volumeLabel
                name: name
                optional: true
              dataVolume:
                hotpluggable: true
                name: name
              name: name
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
              memoryDump:
                claimName: claimName
                hotpluggable: true
                readOnly: true
              emptyDisk:
                capacity: capacity
            - downwardAPI:
                volumeLabel: volumeLabel
                fields:
                - mode: 9
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 9
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              cloudInitConfigDrive:
                networkDataSecretRef:
                  name: name
                userData: userData
                networkData: networkData
                networkDataBase64: networkDataBase64
                secretRef:
                  name: name
                userDataBase64: userDataBase64
              downwardMetrics: "{}"
              ephemeral:
                persistentVolumeClaim:
                  claimName: claimName
                  hotpluggable: true
                  readOnly: true
              serviceAccount:
                serviceAccountName: serviceAccountName
              sysprep:
                configMap:
                  name: name
                secret:
                  name: name
              containerDisk:
                image: image
                imagePullPolicy: imagePullPolicy
                imagePullSecret: imagePullSecret
                path: path
              hostDisk:
                path: path
                shared: true
                type: type
                capacity: capacity
              secret:
                secretName: secretName
                volumeLabel: volumeLabel
                optional: true
              cloudInitNoCloud:
                networkDataSecretRef:
                  name: name
                userData: userData
                networkData: networkData
                networkDataBase64: networkDataBase64
                secretRef:
                  name: name
                userDataBase64: userDataBase64
              configMap:
                volumeLabel: volumeLabel
                name: name
                optional: true
              dataVolume:
                hotpluggable: true
                name: name
              name: name
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
              memoryDump:
                claimName: claimName
                hotpluggable: true
                readOnly: true
              emptyDisk:
                capacity: capacity
            networks:
            - pod:
                vmNetworkCIDR: vmNetworkCIDR
                vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
              name: name
              multus:
                default: true
                networkName: networkName
            - pod:
                vmNetworkCIDR: vmNetworkCIDR
                vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
              name: name
              multus:
                default: true
                networkName: networkName
            nodeSelector:
              key: nodeSelector
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 6
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 6
              value: value
              key: key
              operator: operator
            accessCredentials:
            - sshPublicKey:
                propagationMethod:
                  configDrive: "{}"
                  qemuGuestAgent:
                    users:
                    - users
                    - users
                source:
                  secret:
                    secretName: secretName
              userPassword:
                propagationMethod:
                  qemuGuestAgent: "{}"
                source:
                  secret:
                    secretName: secretName
            - sshPublicKey:
                propagationMethod:
                  configDrive: "{}"
                  qemuGuestAgent:
                    users:
                    - users
                    - users
                source:
                  secret:
                    secretName: secretName
              userPassword:
                propagationMethod:
                  qemuGuestAgent: "{}"
                source:
                  secret:
                    secretName: secretName
            startStrategy: startStrategy
            domain:
              features:
                smm:
                  enabled: true
                kvm:
                  hidden: true
                apic:
                  endOfInterrupt: true
                  enabled: true
                acpi:
                  enabled: true
                pvspinlock:
                  enabled: true
                hyperv:
                  vpindex:
                    enabled: true
                  ipi:
                    enabled: true
                  reenlightenment:
                    enabled: true
                  runtime:
                    enabled: true
                  vendorid:
                    vendorid: vendorid
                    enabled: true
                  evmcs:
                    enabled: true
                  synictimer:
                    direct:
                      enabled: true
                    enabled: true
                  spinlocks:
                    spinlocks: 6
                    enabled: true
                  tlbflush:
                    enabled: true
                  synic:
                    enabled: true
                  relaxed:
                    enabled: true
                  vapic:
                    enabled: true
                  reset:
                    enabled: true
                  frequencies:
                    enabled: true
              ioThreadsPolicy: ioThreadsPolicy
              memory:
                hugepages:
                  pageSize: pageSize
                guest: guest
              devices:
                autoattachPodInterface: true
                interfaces:
                - dhcpOptions:
                    ntpServers:
                    - ntpServers
                    - ntpServers
                    tftpServerName: tftpServerName
                    bootFileName: bootFileName
                    privateOptions:
                    - value: value
                      option: 1
                    - value: value
                      option: 1
                  slirp: "{}"
                  macvtap: "{}"
                  ports:
                  - protocol: protocol
                    port: 1
                    name: name
                  - protocol: protocol
                    port: 1
                    name: name
                  macAddress: macAddress
                  masquerade: "{}"
                  bootOrder: 1
                  acpiIndex: 7
                  name: name
                  sriov: "{}"
                  model: model
                  pciAddress: pciAddress
                  bridge: "{}"
                  passt: "{}"
                  tag: tag
                - dhcpOptions:
                    ntpServers:
                    - ntpServers
                    - ntpServers
                    tftpServerName: tftpServerName
                    bootFileName: bootFileName
                    privateOptions:
                    - value: value
                      option: 1
                    - value: value
                      option: 1
                  slirp: "{}"
                  macvtap: "{}"
                  ports:
                  - protocol: protocol
                    port: 1
                    name: name
                  - protocol: protocol
                    port: 1
                    name: name
                  macAddress: macAddress
                  masquerade: "{}"
                  bootOrder: 1
                  acpiIndex: 7
                  name: name
                  sriov: "{}"
                  model: model
                  pciAddress: pciAddress
                  bridge: "{}"
                  passt: "{}"
                  tag: tag
                disks:
                - shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                - shareable: true
                  cache: cache
                  dedicatedIOThread: true
                  disk:
                    bus: bus
                    readonly: true
                    pciAddress: pciAddress
                  lun:
                    bus: bus
                    readonly: true
                  bootOrder: 4
                  serial: serial
                  io: io
                  name: name
                  tag: tag
                  cdrom:
                    tray: tray
                    bus: bus
                    readonly: true
                  blockSize:
                    custom:
                      physical: 2
                      logical: 3
                    matchVolume:
                      enabled: true
                inputs:
                - bus: bus
                  name: name
                  type: type
                - bus: bus
                  name: name
                  type: type
                sound:
                  name: name
                  model: model
                autoattachInputDevice: true
                useVirtioTransitional: true
                rng: "{}"
                autoattachSerialConsole: true
                autoattachVSOCK: true
                filesystems:
                - name: name
                  virtiofs: "{}"
                - name: name
                  virtiofs: "{}"
                hostDevices:
                - name: name
                  tag: tag
                  deviceName: deviceName
                - name: name
                  tag: tag
                  deviceName: deviceName
                networkInterfaceMultiqueue: true
                autoattachMemBalloon: true
                tpm: "{}"
                clientPassthrough: "{}"
                watchdog:
                  i6300esb:
                    action: action
                  name: name
                blockMultiQueue: true
                gpus:
                - name: name
                  tag: tag
                  virtualGPUOptions:
                    display:
                      enabled: true
                      ramFB:
                        enabled: true
                  deviceName: deviceName
                - name: name
                  tag: tag
                  virtualGPUOptions:
                    display:
                      enabled: true
                      ramFB:
                        enabled: true
                  deviceName: deviceName
                disableHotplug: true
                autoattachGraphicsDevice: true
              machine:
                type: type
              cpu:
                features:
                - name: name
                  policy: policy
                - name: name
                  policy: policy
                realtime:
                  mask: mask
                cores: 2
                dedicatedCpuPlacement: true
                numa:
                  guestMappingPassthrough: "{}"
                threads: 9
                model: model
                sockets: 7
                isolateEmulatorThread: true
              resources:
                overcommitGuestOverhead: true
                requests: "{}"
                limits: "{}"
              chassis:
                serial: serial
                asset: asset
                sku: sku
                version: version
                manufacturer: manufacturer
              clock:
                timer:
                  rtc:
                    tickPolicy: tickPolicy
                    present: true
                    track: track
                  kvm:
                    present: true
                  hpet:
                    tickPolicy: tickPolicy
                    present: true
                  pit:
                    tickPolicy: tickPolicy
                    present: true
                  hyperv:
                    present: true
                utc:
                  offsetSeconds: 5
                timezone: timezone
              firmware:
                serial: serial
                bootloader:
                  bios:
                    useSerial: true
                  efi:
                    secureBoot: true
                uuid: uuid
                kernelBoot:
                  container:
                    image: image
                    imagePullPolicy: imagePullPolicy
                    imagePullSecret: imagePullSecret
                    initrdPath: initrdPath
                    kernelPath: kernelPath
                  kernelArgs: kernelArgs
              launchSecurity:
                sev: "{}"
            readinessProbe:
              failureThreshold: 7
              periodSeconds: 4
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              guestAgentPing: "{}"
              successThreshold: 5
              initialDelaySeconds: 1
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            subdomain: subdomain
            evictionStrategy: evictionStrategy
            schedulerName: schedulerName
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 1
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 1
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 5
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 5
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 5
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    namespaceSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels:
                        key: matchLabels
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 5
        dataVolumeTemplates:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            finalCheckpoint: true
            preallocation: true
            priorityClassName: priorityClassName
            checkpoints:
            - current: current
              previous: previous
            - current: current
              previous: previous
            source:
              s3:
                secretRef: secretRef
                certConfigMap: certConfigMap
                url: url
              registry:
                imageStream: imageStream
                pullMethod: pullMethod
                secretRef: secretRef
                certConfigMap: certConfigMap
                url: url
              vddk:
                backingFile: backingFile
                initImageURL: initImageURL
                secretRef: secretRef
                thumbprint: thumbprint
                uuid: uuid
                url: url
              blank: "{}"
              imageio:
                secretRef: secretRef
                certConfigMap: certConfigMap
                diskId: diskId
                url: url
              upload: "{}"
              http:
                secretExtraHeaders:
                - secretExtraHeaders
                - secretExtraHeaders
                secretRef: secretRef
                certConfigMap: certConfigMap
                extraHeaders:
                - extraHeaders
                - extraHeaders
                url: url
              pvc:
                name: name
                namespace: namespace
            storage:
              storageClassName: storageClassName
              volumeName: volumeName
              resources:
                requests:
                  key: null
                limits:
                  key: null
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              accessModes:
              - accessModes
              - accessModes
              dataSource:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeMode: volumeMode
            pvc:
              storageClassName: storageClassName
              dataSourceRef:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeName: volumeName
              resources:
                requests:
                  key: null
                limits:
                  key: null
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              accessModes:
              - accessModes
              - accessModes
              dataSource:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeMode: volumeMode
            sourceRef:
              kind: kind
              name: name
              namespace: namespace
            contentType: contentType
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            finalCheckpoint: true
            preallocation: true
            priorityClassName: priorityClassName
            checkpoints:
            - current: current
              previous: previous
            - current: current
              previous: previous
            source:
              s3:
                secretRef: secretRef
                certConfigMap: certConfigMap
                url: url
              registry:
                imageStream: imageStream
                pullMethod: pullMethod
                secretRef: secretRef
                certConfigMap: certConfigMap
                url: url
              vddk:
                backingFile: backingFile
                initImageURL: initImageURL
                secretRef: secretRef
                thumbprint: thumbprint
                uuid: uuid
                url: url
              blank: "{}"
              imageio:
                secretRef: secretRef
                certConfigMap: certConfigMap
                diskId: diskId
                url: url
              upload: "{}"
              http:
                secretExtraHeaders:
                - secretExtraHeaders
                - secretExtraHeaders
                secretRef: secretRef
                certConfigMap: certConfigMap
                extraHeaders:
                - extraHeaders
                - extraHeaders
                url: url
              pvc:
                name: name
                namespace: namespace
            storage:
              storageClassName: storageClassName
              volumeName: volumeName
              resources:
                requests:
                  key: null
                limits:
                  key: null
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              accessModes:
              - accessModes
              - accessModes
              dataSource:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeMode: volumeMode
            pvc:
              storageClassName: storageClassName
              dataSourceRef:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeName: volumeName
              resources:
                requests:
                  key: null
                limits:
                  key: null
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              accessModes:
              - accessModes
              - accessModes
              dataSource:
                apiGroup: apiGroup
                kind: kind
                name: name
              volumeMode: volumeMode
            sourceRef:
              kind: kind
              name: name
              namespace: namespace
            contentType: contentType
        runStrategy: runStrategy
        preference:
          revisionName: revisionName
          kind: kind
          inferFromVolume: inferFromVolume
          name: name
        instancetype:
          revisionName: revisionName
          kind: kind
          inferFromVolume: inferFromVolume
          name: name
      properties:
        dataVolumeTemplates:
          description: dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance
            template can reference. DataVolumes in this list are dynamically created
            for the VirtualMachine and are tied to the VirtualMachine's life-cycle.
          items:
            $ref: "#/components/schemas/v1VmDataVolumeTemplateSpec"
          type: array
        instancetype:
          $ref: "#/components/schemas/v1VmInstancetypeMatcher"
        preference:
          $ref: "#/components/schemas/v1VmPreferenceMatcher"
        runStrategy:
          description: Running state indicates the requested running state of the
            VirtualMachineInstance mutually exclusive with Running
          type: string
        running:
          description: Running controls whether the associatied VirtualMachineInstance
            is created or not Mutually exclusive with RunStrategy
          type: boolean
        template:
          $ref: "#/components/schemas/v1VmVirtualMachineInstanceTemplateSpec"
      required:
      - template
      type: object
    v1ClusterVirtualMachineStatus:
      description: VirtualMachineStatus represents the status returned by the controller
        to describe how the VirtualMachine is doing
      example:
        startFailure:
          consecutiveFailCount: 6
          retryAfterTimestamp: 2000-01-23T04:56:07.000+00:00
          lastFailedVMIUID: lastFailedVMIUID
        snapshotInProgress: snapshotInProgress
        created: true
        ready: true
        printableStatus: printableStatus
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        stateChangeRequests:
        - uid: uid
          data:
            key: data
          action: action
        - uid: uid
          data:
            key: data
          action: action
        volumeRequests:
        - removeVolumeOptions:
            dryRun:
            - dryRun
            - dryRun
            name: name
          addVolumeOptions:
            disk:
              shareable: true
              cache: cache
              dedicatedIOThread: true
              disk:
                bus: bus
                readonly: true
                pciAddress: pciAddress
              lun:
                bus: bus
                readonly: true
              bootOrder: 4
              serial: serial
              io: io
              name: name
              tag: tag
              cdrom:
                tray: tray
                bus: bus
                readonly: true
              blockSize:
                custom:
                  physical: 2
                  logical: 3
                matchVolume:
                  enabled: true
            dryRun:
            - dryRun
            - dryRun
            name: name
            volumeSource:
              dataVolume:
                hotpluggable: true
                name: name
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
        - removeVolumeOptions:
            dryRun:
            - dryRun
            - dryRun
            name: name
          addVolumeOptions:
            disk:
              shareable: true
              cache: cache
              dedicatedIOThread: true
              disk:
                bus: bus
                readonly: true
                pciAddress: pciAddress
              lun:
                bus: bus
                readonly: true
              bootOrder: 4
              serial: serial
              io: io
              name: name
              tag: tag
              cdrom:
                tray: tray
                bus: bus
                readonly: true
              blockSize:
                custom:
                  physical: 2
                  logical: 3
                matchVolume:
                  enabled: true
            dryRun:
            - dryRun
            - dryRun
            name: name
            volumeSource:
              dataVolume:
                hotpluggable: true
                name: name
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
        volumeSnapshotStatuses:
        - reason: reason
          name: name
          enabled: true
        - reason: reason
          name: name
          enabled: true
        memoryDumpRequest:
          phase: phase
          fileName: fileName
          claimName: claimName
          message: message
          endTimestamp: 2000-01-23T04:56:07.000+00:00
          remove: true
          startTimestamp: 2000-01-23T04:56:07.000+00:00
        restoreInProgress: restoreInProgress
      nullable: true
      properties:
        conditions:
          description: Hold the state information of the VirtualMachine and its VirtualMachineInstance
          items:
            $ref: "#/components/schemas/v1VmVirtualMachineCondition"
          type: array
        created:
          description: Created indicates if the virtual machine is created in the
            cluster
          type: boolean
        memoryDumpRequest:
          $ref: "#/components/schemas/v1VmVirtualMachineMemoryDumpRequest"
        printableStatus:
          description: "PrintableStatus is a human readable, high-level representation\
            \ of the status of the virtual machine"
          type: string
        ready:
          description: Ready indicates if the virtual machine is running and ready
          type: boolean
        restoreInProgress:
          description: RestoreInProgress is the name of the VirtualMachineRestore
            currently executing
          type: string
        snapshotInProgress:
          description: SnapshotInProgress is the name of the VirtualMachineSnapshot
            currently executing
          type: string
        startFailure:
          $ref: "#/components/schemas/v1VmVirtualMachineStartFailure"
        stateChangeRequests:
          description: StateChangeRequests indicates a list of actions that should
            be taken on a VMI e.g. stop a specific VMI then start a new one.
          items:
            $ref: "#/components/schemas/v1VmVirtualMachineStateChangeRequest"
          type: array
        volumeRequests:
          description: VolumeRequests indicates a list of volumes add or remove from
            the VMI template and hotplug on an active running VMI.
          items:
            $ref: "#/components/schemas/v1VmVirtualMachineVolumeRequest"
          type: array
          x-kubernetes-list-type: atomic
        volumeSnapshotStatuses:
          description: VolumeSnapshotStatuses indicates a list of statuses whether
            snapshotting is supported by each volume.
          items:
            $ref: "#/components/schemas/v1VmVolumeSnapshotStatus"
          type: array
      type: object
      x-nullable: true
    v1ClusterVirtualPacksValue:
      description: Virtual cluster packs value
      example:
        distroType: distroType
        values: values
        layer: layer
      properties:
        distroType:
          type: string
        layer:
          type: string
        values:
          type: string
      type: object
    v1ClusterVirtualPacksValues:
      description: Virtual cluster packs values
      example:
        packs:
        - distroType: distroType
          values: values
          layer: layer
        - distroType: distroType
          values: values
          layer: layer
      properties:
        packs:
          items:
            $ref: "#/components/schemas/v1ClusterVirtualPacksValue"
          type: array
      type: object
    v1ClusterWorkload:
      description: Cluster workload summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        spec:
          roleBindings:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          cronJobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          deployments:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          jobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
          pods:
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
          statefulSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          clusterroleBindings:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          daemonSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterWorkloadSpec"
      type: object
    v1ClusterWorkloadCondition:
      description: Cluster workload condition
      example:
        reason: reason
        lastTransitionTime: 2000-01-23T04:56:07.000+00:00
        message: message
        type: type
        lastUpdateTime: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        lastTransitionTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastUpdateTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    v1ClusterWorkloadCronJob:
      description: Cluster workload cronjob summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        spec:
          schedule: schedule
        status:
          lastScheduleTime: 2000-01-23T04:56:07.000+00:00
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        spec:
          $ref: "#/components/schemas/v1ClusterWorkloadCronJobSpec"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadCronJobStatus"
      type: object
    v1ClusterWorkloadCronJobSpec:
      description: Cluster workload cronjob spec
      example:
        schedule: schedule
      properties:
        schedule:
          type: string
      type: object
    v1ClusterWorkloadCronJobStatus:
      description: Cluster workload cronjob status
      example:
        lastScheduleTime: 2000-01-23T04:56:07.000+00:00
      properties:
        lastScheduleTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1ClusterWorkloadCronJobs:
      description: Cluster workload cronjobs summary
      example:
        cronJobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
      properties:
        cronJobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadCronJob"
          type: array
      type: object
    v1ClusterWorkloadDaemonSet:
      description: Cluster workload daemonset summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        status:
          ready: 5
          available: 0
          currentScheduled: 6
          misScheduled: 5
          updatedScheduled: 2
          desiredScheduled: 1
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadDaemonSetStatus"
      type: object
    v1ClusterWorkloadDaemonSetStatus:
      description: Cluster workload daemonset status
      example:
        ready: 5
        available: 0
        currentScheduled: 6
        misScheduled: 5
        updatedScheduled: 2
        desiredScheduled: 1
      properties:
        available:
          format: int32
          type: integer
        currentScheduled:
          format: int32
          type: integer
        desiredScheduled:
          format: int32
          type: integer
        misScheduled:
          format: int32
          type: integer
        ready:
          format: int32
          type: integer
        updatedScheduled:
          format: int32
          type: integer
      type: object
    v1ClusterWorkloadDaemonSets:
      description: Cluster workload daemonset summary
      example:
        daemonSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
      properties:
        daemonSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDaemonSet"
          type: array
      type: object
    v1ClusterWorkloadDeployment:
      description: Cluster workload deployment summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        status:
          replicas:
            total: 3
            ready: 9
            available: 7
            updated: 2
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadDeploymentStatus"
      type: object
    v1ClusterWorkloadDeploymentStatus:
      description: Cluster workload deployment status
      example:
        replicas:
          total: 3
          ready: 9
          available: 7
          updated: 2
      properties:
        replicas:
          $ref: "#/components/schemas/v1ClusterWorkloadReplicaStatus"
      type: object
    v1ClusterWorkloadDeployments:
      description: Cluster workload deployments summary
      example:
        deployments:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
      properties:
        deployments:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDeployment"
          type: array
      type: object
    v1ClusterWorkloadJob:
      description: Cluster workload job summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        status:
          completionTime: 2000-01-23T04:56:07.000+00:00
          startTime: 2000-01-23T04:56:07.000+00:00
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastUpdateTime: 2000-01-23T04:56:07.000+00:00
            status: status
          succeeded: 4
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadJobStatus"
      type: object
    v1ClusterWorkloadJobStatus:
      description: Cluster workload job status
      example:
        completionTime: 2000-01-23T04:56:07.000+00:00
        startTime: 2000-01-23T04:56:07.000+00:00
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastUpdateTime: 2000-01-23T04:56:07.000+00:00
          status: status
        succeeded: 4
      properties:
        completionTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadCondition"
          type: array
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        succeeded:
          format: int32
          type: integer
      type: object
    v1ClusterWorkloadJobs:
      description: Cluster workload jobs summary
      example:
        jobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
      properties:
        jobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadJob"
          type: array
      type: object
    v1ClusterWorkloadMetadata:
      description: Cluster workload metadata
      example:
        creationTimestamp: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        entity:
          uid: uid
          kind: kind
          name: name
        labels:
          key: labels
      properties:
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        entity:
          $ref: "#/components/schemas/v1ClusterWorkloadRef"
        labels:
          additionalProperties:
            type: string
          type: object
        namespace:
          type: string
      type: object
    v1ClusterWorkloadNamespace:
      description: Cluster workload namespace summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        status:
          phase: phase
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadNamespaceStatus"
      type: object
    v1ClusterWorkloadNamespaceStatus:
      description: Cluster workload namespace status
      example:
        phase: phase
      properties:
        phase:
          type: string
      type: object
    v1ClusterWorkloadNamespaces:
      description: Cluster workload namespaces summary
      example:
        namespaces:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            phase: phase
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            phase: phase
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadNamespace"
          type: array
      type: object
    v1ClusterWorkloadPod:
      description: Cluster workload pod summary
      example:
        metadata:
          machineUid: machineUid
          nodename: nodename
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          associatedRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        spec:
          volumes:
          - name: name
          - name: name
          containers:
          - image: image
            name: name
            resources:
              requests:
                memory: 1
                memoryUnit: memoryUnit
                cpu: 7
                cpuUnit: cpuUnit
              limits:
                memory: 1
                memoryUnit: memoryUnit
                cpu: 7
                cpuUnit: cpuUnit
          - image: image
            name: name
            resources:
              requests:
                memory: 1
                memoryUnit: memoryUnit
                cpu: 7
                cpuUnit: cpuUnit
              limits:
                memory: 1
                memoryUnit: memoryUnit
                cpu: 7
                cpuUnit: cpuUnit
        status:
          phase: phase
          podIp: podIp
          containers:
          - image: image
            restartCount: 1
            ready: true
            name: name
            started: true
            state:
              reason: reason
              exitCode: 1
              startedAt: 2000-01-23T04:56:07.000+00:00
              state: state
              finishedAt: 2000-01-23T04:56:07.000+00:00
          - image: image
            restartCount: 1
            ready: true
            name: name
            started: true
            state:
              reason: reason
              exitCode: 1
              startedAt: 2000-01-23T04:56:07.000+00:00
              state: state
              finishedAt: 2000-01-23T04:56:07.000+00:00
          qosClass: qosClass
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadPodMetadata"
        spec:
          $ref: "#/components/schemas/v1ClusterWorkloadPodSpec"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadPodStatus"
      type: object
    v1ClusterWorkloadPodContainer:
      description: Cluster workload pod container
      example:
        image: image
        name: name
        resources:
          requests:
            memory: 1
            memoryUnit: memoryUnit
            cpu: 7
            cpuUnit: cpuUnit
          limits:
            memory: 1
            memoryUnit: memoryUnit
            cpu: 7
            cpuUnit: cpuUnit
      properties:
        image:
          type: string
        name:
          type: string
        resources:
          $ref: "#/components/schemas/v1ClusterWorkloadPodContainerResources"
      type: object
    v1ClusterWorkloadPodContainerResource:
      description: Cluster workload pod container resource
      example:
        memory: 1
        memoryUnit: memoryUnit
        cpu: 7
        cpuUnit: cpuUnit
      properties:
        cpu:
          format: int32
          type: integer
          x-omitempty: false
        cpuUnit:
          type: string
        memory:
          format: int64
          type: integer
          x-omitempty: false
        memoryUnit:
          type: string
      type: object
    v1ClusterWorkloadPodContainerResources:
      description: Cluster workload pod container resources
      example:
        requests:
          memory: 1
          memoryUnit: memoryUnit
          cpu: 7
          cpuUnit: cpuUnit
        limits:
          memory: 1
          memoryUnit: memoryUnit
          cpu: 7
          cpuUnit: cpuUnit
      properties:
        limits:
          $ref: "#/components/schemas/v1ClusterWorkloadPodContainerResource"
        requests:
          $ref: "#/components/schemas/v1ClusterWorkloadPodContainerResource"
      type: object
    v1ClusterWorkloadPodContainerState:
      description: Cluster workload pod container state
      example:
        reason: reason
        exitCode: 1
        startedAt: 2000-01-23T04:56:07.000+00:00
        state: state
        finishedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        exitCode:
          format: int32
          type: integer
          x-omitempty: false
        finishedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        reason:
          type: string
        startedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
      type: object
    v1ClusterWorkloadPodContainerStatus:
      description: Cluster workload pod container status
      example:
        image: image
        restartCount: 1
        ready: true
        name: name
        started: true
        state:
          reason: reason
          exitCode: 1
          startedAt: 2000-01-23T04:56:07.000+00:00
          state: state
          finishedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        image:
          type: string
        name:
          type: string
        ready:
          type: boolean
          x-omitempty: false
        restartCount:
          format: int32
          type: integer
          x-omitempty: false
        started:
          type: boolean
          x-omitempty: false
        state:
          $ref: "#/components/schemas/v1ClusterWorkloadPodContainerState"
      type: object
    v1ClusterWorkloadPodMetadata:
      description: Cluster workload pod metadata
      example:
        machineUid: machineUid
        nodename: nodename
        creationTimestamp: 2000-01-23T04:56:07.000+00:00
        namespace: namespace
        associatedRefs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        entity:
          uid: uid
          kind: kind
          name: name
        labels:
          key: labels
      properties:
        associatedRefs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadRef"
          type: array
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        entity:
          $ref: "#/components/schemas/v1ClusterWorkloadRef"
        labels:
          additionalProperties:
            type: string
          type: object
        machineUid:
          type: string
        namespace:
          type: string
        nodename:
          type: string
      type: object
    v1ClusterWorkloadPodSpec:
      description: Cluster workload pod spec
      example:
        volumes:
        - name: name
        - name: name
        containers:
        - image: image
          name: name
          resources:
            requests:
              memory: 1
              memoryUnit: memoryUnit
              cpu: 7
              cpuUnit: cpuUnit
            limits:
              memory: 1
              memoryUnit: memoryUnit
              cpu: 7
              cpuUnit: cpuUnit
        - image: image
          name: name
          resources:
            requests:
              memory: 1
              memoryUnit: memoryUnit
              cpu: 7
              cpuUnit: cpuUnit
            limits:
              memory: 1
              memoryUnit: memoryUnit
              cpu: 7
              cpuUnit: cpuUnit
      properties:
        containers:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPodContainer"
          type: array
        volumes:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPodVolume"
          type: array
      type: object
    v1ClusterWorkloadPodStatus:
      description: Cluster workload pod status
      example:
        phase: phase
        podIp: podIp
        containers:
        - image: image
          restartCount: 1
          ready: true
          name: name
          started: true
          state:
            reason: reason
            exitCode: 1
            startedAt: 2000-01-23T04:56:07.000+00:00
            state: state
            finishedAt: 2000-01-23T04:56:07.000+00:00
        - image: image
          restartCount: 1
          ready: true
          name: name
          started: true
          state:
            reason: reason
            exitCode: 1
            startedAt: 2000-01-23T04:56:07.000+00:00
            state: state
            finishedAt: 2000-01-23T04:56:07.000+00:00
        qosClass: qosClass
      properties:
        containers:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPodContainerStatus"
          type: array
        phase:
          type: string
        podIp:
          type: string
        qosClass:
          type: string
      type: object
    v1ClusterWorkloadPodVolume:
      description: Cluster workload pod volume
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    v1ClusterWorkloadPods:
      description: Cluster workload pods summary
      example:
        pods:
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
      properties:
        pods:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPod"
          type: array
      type: object
    v1ClusterWorkloadRef:
      description: Cluster workload ref
      example:
        uid: uid
        kind: kind
        name: name
      properties:
        kind:
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1ClusterWorkloadReplicaStatus:
      description: Cluster workload replica status
      example:
        total: 3
        ready: 9
        available: 7
        updated: 2
      properties:
        available:
          format: int32
          type: integer
          x-omitempty: false
        ready:
          format: int32
          type: integer
          x-omitempty: false
        total:
          format: int32
          type: integer
          x-omitempty: false
        updated:
          format: int32
          type: integer
          x-omitempty: false
      type: object
    v1ClusterWorkloadRoleBinding:
      description: Cluster workload rbac binding summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        spec:
          role:
            kind: Role
            name: name
          subjects:
          - name: name
            namespace: namespace
            type: User
          - name: name
            namespace: namespace
            type: User
          namespace: namespace
          type: RoleBinding
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        spec:
          $ref: "#/components/schemas/v1ClusterRbacBinding"
      type: object
    v1ClusterWorkloadRoleBindings:
      description: Cluster workload rbac bindings summary
      example:
        bindings:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
      properties:
        bindings:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadRoleBinding"
          type: array
      type: object
    v1ClusterWorkloadSpec:
      description: Cluster workload spec
      example:
        roleBindings:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        cronJobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
        deployments:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        jobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
        pods:
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
        statefulSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        clusterroleBindings:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        daemonSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
      properties:
        clusterroleBindings:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadRoleBinding"
          type: array
        cronJobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadCronJob"
          type: array
        daemonSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDaemonSet"
          type: array
        deployments:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDeployment"
          type: array
        jobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadJob"
          type: array
        pods:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPod"
          type: array
        roleBindings:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadRoleBinding"
          type: array
        statefulSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadStatefulSet"
          type: array
      type: object
    v1ClusterWorkloadStatefulSet:
      description: Cluster workload statefulset summary
      example:
        metadata:
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          namespace: namespace
          entity:
            uid: uid
            kind: kind
            name: name
          labels:
            key: labels
        status:
          replicas:
            total: 3
            ready: 9
            available: 7
            updated: 2
      properties:
        metadata:
          $ref: "#/components/schemas/v1ClusterWorkloadMetadata"
        status:
          $ref: "#/components/schemas/v1ClusterWorkloadStatefulSetStatus"
      type: object
    v1ClusterWorkloadStatefulSetStatus:
      description: Cluster workload statefulset status
      example:
        replicas:
          total: 3
          ready: 9
          available: 7
          updated: 2
      properties:
        replicas:
          $ref: "#/components/schemas/v1ClusterWorkloadReplicaStatus"
      type: object
    v1ClusterWorkloadStatefulSets:
      description: Cluster workload statefulsets summary
      example:
        statefulSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
      properties:
        statefulSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadStatefulSet"
          type: array
      type: object
    v1ClusterWorkloadsFilter:
      description: Cluster workloads filter
      properties:
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ClusterWorkloadsSpec:
      description: Cluster workloads spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ClusterWorkloadsFilter"
      type: object
    v1ClustersInfo:
      description: Active clusters information
      properties:
        clustersMeta:
          items:
            $ref: "#/components/schemas/v1ClusterMeta"
          type: array
          uniqueItems: true
        totalActiveClusters:
          format: int64
          type: number
        totalActiveGreenFieldClusters:
          format: int64
          type: number
        totalActiveImportedClusters:
          format: int64
          type: number
        totalClustersDeleted:
          format: int64
          type: number
        totalClustersDeployed:
          format: int64
          type: number
      type: object
    v1ComplianceScanConfig:
      description: Compliance Scan config
      example:
        schedule:
          scheduledRunTime: scheduledRunTime
      properties:
        schedule:
          $ref: "#/components/schemas/v1ClusterFeatureSchedule"
      type: object
    v1ComplianceScanDriverSpec:
      description: Compliance Scan driver spec
      example:
        isClusterConfig: true
        config:
          schedule:
            scheduledRunTime: scheduledRunTime
      properties:
        config:
          $ref: "#/components/schemas/v1ComplianceScanConfig"
        isClusterConfig:
          type: boolean
      type: object
    v1ComputeMetrics:
      description: Compute metrics
      example:
        request: 7.061401241503109
        total: 9.301444243932576
        unit: unit
        usage: 3.616076749251911
        limit: 2.3021358869347655
        lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        lastUpdatedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        limit:
          type: number
          x-omitempty: false
        request:
          type: number
          x-omitempty: false
        total:
          type: number
          x-omitempty: false
        unit:
          type: string
        usage:
          type: number
          x-omitempty: false
      type: object
    v1ComputeRate:
      description: Compute estimated rate information
      example:
        rate: 6.027456183070403
        type: type
      properties:
        rate:
          format: float64
          type: number
          x-omitempty: false
        type:
          type: string
      type: object
    v1ConfigReverseProxy:
      description: Describes the reverse proxy configuration
      properties:
        caCert:
          description: Describes the ca certificate for system's reverse proxy
          type: string
        clientCert:
          description: Describes the client certificate for system's reverse proxy
          type: string
        clientKey:
          description: Describes the client certificate key for system's reverse proxy
          type: string
        port:
          description: Describes the system's reverse proxy server port
          type: integer
        protocol:
          description: "Describes the system's reverse proxy server protocol. Possible\
            \ values [https, http]"
          enum:
          - http
          - https
          type: string
        server:
          description: Describes the system's reverse proxy server
          type: string
      type: object
    v1ConstraintError:
      example:
        code: code
        message: message
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    v1ConstraintValidatorResponse:
      description: Constraint validator response
      example:
        results:
        - displayName: displayName
          name: name
          errors:
          - code: code
            message: message
          - code: code
            message: message
        - displayName: displayName
          name: name
          errors:
          - code: code
            message: message
          - code: code
            message: message
      properties:
        results:
          items:
            $ref: "#/components/schemas/v1ConstraintValidatorResult"
          type: array
          uniqueItems: true
      type: object
    v1ConstraintValidatorResult:
      description: Constraint validator result
      example:
        displayName: displayName
        name: name
        errors:
        - code: code
          message: message
        - code: code
          message: message
      properties:
        displayName:
          type: string
        errors:
          items:
            $ref: "#/components/schemas/v1ConstraintError"
          type: array
          uniqueItems: true
        name:
          type: string
      type: object
    v1ControlPlaneEndPoint:
      example:
        host: host
        type: VIP
        ddnsSearchDomain: ddnsSearchDomain
      properties:
        ddnsSearchDomain:
          description: "DDNSSearchDomain is the search domain used for resolving IP\
            \ addresses when the EndpointType is DDNS. This search domain is appended\
            \ to the generated Hostname to obtain the complete DNS name for the endpoint.\
            \ If Host is already a DDNS FQDN, DDNSSearchDomain is not required"
          type: string
        host:
          description: IP or FQDN(External/DDNS)
          type: string
        type:
          description: VIP or External
          enum:
          - VIP
          - External
          - DDNS
          type: string
      type: object
    v1ControlPlaneHealthCheckTimeoutEntity:
      properties:
        controlPlaneHealthCheckTimeout:
          description: ControlPlaneHealthCheckTimeout is the timeout to check for
            ready state of the control plane nodes
          type: string
      type: object
    v1CustomAccount:
      description: Custom account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          credentials:
            key: credentials
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1CustomCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1CustomAccountEntity:
      description: Custom account information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1CustomCloudAccount"
      type: object
    v1CustomAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            credentials:
              key: credentials
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            credentials:
              key: credentials
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1CustomAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1CustomCloudAccount:
      example:
        credentials:
          key: credentials
      properties:
        credentials:
          additionalProperties:
            type: string
          description: Cloud account credentials
          type: object
      required:
      - credentials
      type: object
    v1CustomCloudClusterConfigEntity:
      description: Custom cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1CustomClusterConfig"
      type: object
    v1CustomCloudConfig:
      description: CustomCloudConfig is the Schema for the custom cloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          machinePoolConfig:
          - isControlPlane: true
            size: 0
            values: values
            name: name
            additionalLabels:
              key: additionalLabels
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
          - isControlPlane: true
            size: 0
            values: values
            name: name
            additionalLabels:
              key: additionalLabels
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
          clusterConfig:
            values: values
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
      properties:
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1CustomCloudConfigSpec"
      type: object
    v1CustomCloudConfigSpec:
      description: CustomCloudConfigSpec defines the cloud configuration input by
        user This will translate to clusterspec/machinespec for cluster-api
      example:
        machinePoolConfig:
        - isControlPlane: true
          size: 0
          values: values
          name: name
          additionalLabels:
            key: additionalLabels
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
        - isControlPlane: true
          size: 0
          values: values
          name: name
          additionalLabels:
            key: additionalLabels
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
        clusterConfig:
          values: values
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1CustomClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1CustomMachinePoolConfig"
          type: array
      type: object
    v1CustomCloudMetaEntity:
      description: Custom cloud meta entity
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          displayName: displayName
          logo: logo
          cloudCategory: cloud
          isManaged: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1CustomCloudMetaSpecEntity"
      type: object
    v1CustomCloudMetaSpecEntity:
      description: Custom cloud spec response entity
      example:
        displayName: displayName
        logo: logo
        cloudCategory: cloud
        isManaged: true
      properties:
        cloudCategory:
          $ref: "#/components/schemas/v1CloudCategory"
        displayName:
          description: Custom cloud displayName
          type: string
        isManaged:
          description: If the custom cloud is a managed cluster
          type: boolean
        logo:
          description: Custom cloud logo
          type: string
      type: object
    v1CustomCloudRateConfig:
      description: Private cloud rate config
      example:
        cloudType: cloudType
        rateConfig:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
      properties:
        cloudType:
          type: string
        rateConfig:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
      type: object
    v1CustomCloudRequestEntity:
      description: Custom cloud request entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1CustomCloudSpecEntity"
      type: object
    v1CustomCloudSpecEntity:
      description: Custom cloud request entity spec
      properties:
        cloudCategory:
          $ref: "#/components/schemas/v1CloudCategory"
        displayName:
          description: Custom cloud displayName
          type: string
        isControlPlaneManaged:
          description: If the custom cloud is a managed cluster
          type: boolean
        logo:
          description: Custom cloud logo
          type: string
      type: object
    v1CustomCloudType:
      example:
        isVertex: true
        displayName: displayName
        cloudFamily: cloudFamily
        isCustom: true
        name: name
        logo: logo
        cloudCategory: cloud
        isManaged: true
      properties:
        cloudCategory:
          $ref: "#/components/schemas/v1CloudCategory"
        cloudFamily:
          description: Cloud grouping as family
          type: string
        displayName:
          description: Custom cloudtype displayName
          type: string
        isCustom:
          description: If it is a custom cloudtype
          type: boolean
          x-omitempty: false
        isManaged:
          description: If custom cloudtype is managed
          type: boolean
          x-omitempty: false
        isVertex:
          description: If cloud is support for Vertex env
          type: boolean
          x-omitempty: false
        logo:
          description: Custom cloudtype logo
          type: string
        name:
          description: Custom cloudtype name
          type: string
      type: object
    v1CustomCloudTypeCloudAccountKeys:
      description: Custom cloudType custom cloud account keys
      example:
        keys:
        - keys
        - keys
      properties:
        keys:
          description: Array of custom cloud type cloud account keys
          items:
            type: string
          type: array
      type: object
    v1CustomCloudTypeContentResponse:
      description: Custom cloudType content response
      example:
        yaml: yaml
      properties:
        yaml:
          description: custom cloud type content
          type: string
      type: object
    v1CustomCloudTypes:
      description: Custom cloudType content response
      example:
        cloudTypes:
        - isVertex: true
          displayName: displayName
          cloudFamily: cloudFamily
          isCustom: true
          name: name
          logo: logo
          cloudCategory: cloud
          isManaged: true
        - isVertex: true
          displayName: displayName
          cloudFamily: cloudFamily
          isCustom: true
          name: name
          logo: logo
          cloudCategory: cloud
          isManaged: true
      properties:
        cloudTypes:
          description: Array of custom cloud types
          items:
            $ref: "#/components/schemas/v1CustomCloudType"
          type: array
      type: object
    v1CustomClusterConfig:
      description: Cluster level configuration for Custom cloud and applicable for
        all the machine pools
      example:
        values: values
      properties:
        values:
          description: YAML string for Cluster and CloudCluster
          type: string
      required:
      - values
      type: object
    v1CustomClusterConfigEntity:
      properties:
        location:
          $ref: "#/components/schemas/v1ClusterLocation"
        machineManagementConfig:
          $ref: "#/components/schemas/v1MachineManagementConfig"
        resources:
          $ref: "#/components/schemas/v1ClusterResourcesEntity"
      type: object
    v1CustomInstanceType:
      example:
        diskGiB: 0
        numCPUs: 1
        name: name
        memoryMiB: 6
      properties:
        diskGiB:
          description: "DiskGiB is the size of a custom machine's disk, in GiB"
          format: int32
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a custom machine's memory, in MiB"
          format: int64
          type: integer
        name:
          type: string
        numCPUs:
          description: NumCPUs is the number in a custom machine
          format: int32
          type: integer
      type: object
    v1CustomMachine:
      description: Custom cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          hostName: hostName
          sshKeyName: sshKeyName
          imageId: imageId
          cloudType: cloudType
          instanceType:
            diskGiB: 0
            numCPUs: 1
            name: name
            memoryMiB: 6
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 5
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 5
            publicIp: publicIp
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1CustomMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1CustomMachinePoolBaseConfigEntity:
      description: Machine pool configuration for the custom cluster
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: Additional labels to be part of the machine pool
          type: object
        isControlPlane:
          description: Whether this pool is for control plane
          type: boolean
          x-omitempty: false
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        useControlPlaneAsWorker:
          description: "If IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      type: object
    v1CustomMachinePoolCloudConfigEntity:
      properties:
        values:
          description: Machine pool configuration as yaml content
          type: string
      type: object
    v1CustomMachinePoolConfig:
      example:
        isControlPlane: true
        size: 0
        values: values
        name: name
        additionalLabels:
          key: additionalLabels
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        name:
          type: string
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
        values:
          description: YAML string for machine
          type: string
      required:
      - isControlPlane
      type: object
    v1CustomMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1CustomMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1CustomMachinePoolBaseConfigEntity"
      required:
      - cloudConfig
      type: object
    v1CustomMachineSpec:
      description: Custom cloud VM definition spec
      example:
        hostName: hostName
        sshKeyName: sshKeyName
        imageId: imageId
        cloudType: cloudType
        instanceType:
          diskGiB: 0
          numCPUs: 1
          name: name
          memoryMiB: 6
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 5
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 5
          publicIp: publicIp
      properties:
        cloudType:
          type: string
        hostName:
          type: string
        imageId:
          type: string
        instanceType:
          $ref: "#/components/schemas/v1CustomInstanceType"
        nics:
          items:
            $ref: "#/components/schemas/v1CustomNic"
          type: array
        sshKeyName:
          type: string
      type: object
    v1CustomMachines:
      description: List of Custom machines
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostName: hostName
            sshKeyName: sshKeyName
            imageId: imageId
            cloudType: cloudType
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostName: hostName
            sshKeyName: sshKeyName
            imageId: imageId
            cloudType: cloudType
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1CustomMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1CustomNic:
      description: Custom network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 5
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1DashboardWorkspace:
      description: Workspace information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        meta:
          uid: uid
          clusterNames:
          - clusterNames
          - clusterNames
          creationTime: 2000-01-23T04:56:07.000+00:00
          name: name
          clusterRefs:
          - uid: uid
            name: name
          - uid: uid
            name: name
          namespaces:
          - namespaces
          - namespaces
        spec:
          quota:
            resourceAllocation:
              memory: 0.6027456183070403
              cpu: 0.08008281904610115
          clusterRefs:
          - uid: uid
            name: name
          - uid: uid
            name: name
          namespaces:
          - namespaces
          - namespaces
        status:
          total:
            memory:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
            cpu:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
          namespaces:
          - total:
              memory:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
              cpu:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
            name: name
          - total:
              memory:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
              cpu:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
            name: name
      properties:
        meta:
          $ref: "#/components/schemas/v1DashboardWorkspaceMeta"
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1DashboardWorkspaceSpec"
        status:
          $ref: "#/components/schemas/v1DashboardWorkspaceStatus"
      type: object
    v1DashboardWorkspaceAllocation:
      description: Workspace allocation
      example:
        memory:
          usage: 5.962133916683182
          allocated: 1.4658129805029452
        cpu:
          usage: 5.962133916683182
          allocated: 1.4658129805029452
      properties:
        cpu:
          $ref: "#/components/schemas/v1DashboardWorkspaceResourceAllocation"
        memory:
          $ref: "#/components/schemas/v1DashboardWorkspaceResourceAllocation"
      type: object
    v1DashboardWorkspaceClusterRef:
      description: Workspace cluster reference
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1DashboardWorkspaceMeta:
      description: Deprecated. Workspace meta data
      example:
        uid: uid
        clusterNames:
        - clusterNames
        - clusterNames
        creationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        clusterRefs:
        - uid: uid
          name: name
        - uid: uid
          name: name
        namespaces:
        - namespaces
        - namespaces
      properties:
        clusterNames:
          description: Deprecated. Use clusterRefs
          items:
            type: string
          type: array
          uniqueItems: true
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1DashboardWorkspaceClusterRef"
          type: array
          uniqueItems: true
        creationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        uid:
          type: string
      type: object
    v1DashboardWorkspaceNamespaceAllocation:
      description: Workspace namespace allocation
      example:
        total:
          memory:
            usage: 5.962133916683182
            allocated: 1.4658129805029452
          cpu:
            usage: 5.962133916683182
            allocated: 1.4658129805029452
        name: name
      properties:
        name:
          type: string
        total:
          $ref: "#/components/schemas/v1DashboardWorkspaceAllocation"
      type: object
    v1DashboardWorkspaceQuota:
      description: Workspace resource quota
      example:
        resourceAllocation:
          memory: 0.6027456183070403
          cpu: 0.08008281904610115
      properties:
        resourceAllocation:
          $ref: "#/components/schemas/v1DashboardWorkspaceQuotaResourceAllocation"
      type: object
    v1DashboardWorkspaceQuotaResourceAllocation:
      description: Workspace quota resource allocation
      example:
        memory: 0.6027456183070403
        cpu: 0.08008281904610115
      properties:
        cpu:
          exclusiveMinimum: true
          minimum: 0
          type: number
        memory:
          exclusiveMinimum: true
          minimum: 0
          type: number
      type: object
    v1DashboardWorkspaceResourceAllocation:
      description: Workspace resource allocation
      example:
        usage: 5.962133916683182
        allocated: 1.4658129805029452
      properties:
        allocated:
          format: float64
          type: number
          x-omitempty: false
        usage:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1DashboardWorkspaceSpec:
      description: Workspace spec summary
      example:
        quota:
          resourceAllocation:
            memory: 0.6027456183070403
            cpu: 0.08008281904610115
        clusterRefs:
        - uid: uid
          name: name
        - uid: uid
          name: name
        namespaces:
        - namespaces
        - namespaces
      properties:
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1DashboardWorkspaceClusterRef"
          type: array
          uniqueItems: true
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        quota:
          $ref: "#/components/schemas/v1DashboardWorkspaceQuota"
      type: object
    v1DashboardWorkspaceStatus:
      description: Workspace status
      example:
        total:
          memory:
            usage: 5.962133916683182
            allocated: 1.4658129805029452
          cpu:
            usage: 5.962133916683182
            allocated: 1.4658129805029452
        namespaces:
        - total:
            memory:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
            cpu:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
          name: name
        - total:
            memory:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
            cpu:
              usage: 5.962133916683182
              allocated: 1.4658129805029452
          name: name
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/v1DashboardWorkspaceNamespaceAllocation"
          type: array
          uniqueItems: true
        total:
          $ref: "#/components/schemas/v1DashboardWorkspaceAllocation"
      type: object
    v1DashboardWorkspaces:
      example:
        memoryUnit: memoryUnit
        cpuUnit: cpuUnit
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          meta:
            uid: uid
            clusterNames:
            - clusterNames
            - clusterNames
            creationTime: 2000-01-23T04:56:07.000+00:00
            name: name
            clusterRefs:
            - uid: uid
              name: name
            - uid: uid
              name: name
            namespaces:
            - namespaces
            - namespaces
          spec:
            quota:
              resourceAllocation:
                memory: 0.6027456183070403
                cpu: 0.08008281904610115
            clusterRefs:
            - uid: uid
              name: name
            - uid: uid
              name: name
            namespaces:
            - namespaces
            - namespaces
          status:
            total:
              memory:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
              cpu:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
            namespaces:
            - total:
                memory:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
                cpu:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
              name: name
            - total:
                memory:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
                cpu:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
              name: name
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          meta:
            uid: uid
            clusterNames:
            - clusterNames
            - clusterNames
            creationTime: 2000-01-23T04:56:07.000+00:00
            name: name
            clusterRefs:
            - uid: uid
              name: name
            - uid: uid
              name: name
            namespaces:
            - namespaces
            - namespaces
          spec:
            quota:
              resourceAllocation:
                memory: 0.6027456183070403
                cpu: 0.08008281904610115
            clusterRefs:
            - uid: uid
              name: name
            - uid: uid
              name: name
            namespaces:
            - namespaces
            - namespaces
          status:
            total:
              memory:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
              cpu:
                usage: 5.962133916683182
                allocated: 1.4658129805029452
            namespaces:
            - total:
                memory:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
                cpu:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
              name: name
            - total:
                memory:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
                cpu:
                  usage: 5.962133916683182
                  allocated: 1.4658129805029452
              name: name
      properties:
        cpuUnit:
          type: string
        items:
          items:
            $ref: "#/components/schemas/v1DashboardWorkspace"
          type: array
          uniqueItems: true
        memoryUnit:
          type: string
      required:
      - items
      type: object
    v1DataSinkConfig:
      description: Data sink
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          auditDataSinks:
          - cloudWatch:
              credentials:
                credentialType: secret
                secretSpec:
                  mission: mission
                  permissionBoundary: permissionBoundary
                  role: role
                  agency: agency
                  accountName: accountName
                  namePrefix: namePrefix
                  tls:
                    cert: cert
                    ca: ca
                    key: key
                  isCapValidationEnabled: true
                  policy: policy
                partition: aws
                sts:
                  externalId: externalId
                  arn: arn
                secretKey: secretKey
                accessKey: accessKey
                secretToken: secretToken
                policyARNs:
                - policyARNs
                - policyARNs
              stream: stream
              region: region
              group: group
            type: cloudwatch
          - cloudWatch:
              credentials:
                credentialType: secret
                secretSpec:
                  mission: mission
                  permissionBoundary: permissionBoundary
                  role: role
                  agency: agency
                  accountName: accountName
                  namePrefix: namePrefix
                  tls:
                    cert: cert
                    ca: ca
                    key: key
                  isCapValidationEnabled: true
                  policy: policy
                partition: aws
                sts:
                  externalId: externalId
                  arn: arn
                secretKey: secretKey
                accessKey: accessKey
                secretToken: secretToken
                policyARNs:
                - policyARNs
                - policyARNs
              stream: stream
              region: region
              group: group
            type: cloudwatch
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1DataSinkSpec"
      type: object
    v1DataSinkSpec:
      example:
        auditDataSinks:
        - cloudWatch:
            credentials:
              credentialType: secret
              secretSpec:
                mission: mission
                permissionBoundary: permissionBoundary
                role: role
                agency: agency
                accountName: accountName
                namePrefix: namePrefix
                tls:
                  cert: cert
                  ca: ca
                  key: key
                isCapValidationEnabled: true
                policy: policy
              partition: aws
              sts:
                externalId: externalId
                arn: arn
              secretKey: secretKey
              accessKey: accessKey
              secretToken: secretToken
              policyARNs:
              - policyARNs
              - policyARNs
            stream: stream
            region: region
            group: group
          type: cloudwatch
        - cloudWatch:
            credentials:
              credentialType: secret
              secretSpec:
                mission: mission
                permissionBoundary: permissionBoundary
                role: role
                agency: agency
                accountName: accountName
                namePrefix: namePrefix
                tls:
                  cert: cert
                  ca: ca
                  key: key
                isCapValidationEnabled: true
                policy: policy
              partition: aws
              sts:
                externalId: externalId
                arn: arn
              secretKey: secretKey
              accessKey: accessKey
              secretToken: secretToken
              policyARNs:
              - policyARNs
              - policyARNs
            stream: stream
            region: region
            group: group
          type: cloudwatch
      properties:
        auditDataSinks:
          items:
            $ref: "#/components/schemas/v1DataSinkableSpec"
          type: array
          uniqueItems: true
      type: object
    v1DataSinkableSpec:
      example:
        cloudWatch:
          credentials:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
          stream: stream
          region: region
          group: group
        type: cloudwatch
      properties:
        cloudWatch:
          $ref: "#/components/schemas/v1CloudWatch"
        type:
          enum:
          - cloudwatch
          type: string
      type: object
    v1DatabaseTransferJob:
      description: database transfer job details
      properties:
        backupStatus:
          $ref: "#/components/schemas/v1TransferJob"
        backupUid:
          type: string
        mode:
          enum:
          - FileSystem
          - Ftp
          type: string
      type: object
    v1DatabaseTransferStatus:
      description: database transfer status
      properties:
        backups:
          items:
            $ref: "#/components/schemas/v1DatabaseTransferJob"
          type: array
        isActive:
          type: boolean
      type: object
    v1DeletedMsg:
      description: Deleted response with message
      example:
        msg: msg
      properties:
        msg:
          type: string
      type: object
    v1DeveloperCredit:
      description: Credits allocated for each tenant/user
      example:
        virtualClustersLimit: 5.962133916683182
        memoryGiB: 6.027456183070403
        cpu: 0.8008281904610115
        storageGiB: 1
      properties:
        cpu:
          description: cpu in cores
          format: int32
          type: number
          x-omitempty: false
        memoryGiB:
          description: memory in GiB
          format: int32
          type: number
          x-omitempty: false
        storageGiB:
          description: storage in GiB
          format: int32
          type: integer
          x-omitempty: false
        virtualClustersLimit:
          description: number of active virtual clusters
          format: int32
          type: number
          x-omitempty: false
      type: object
    v1DeviceSpec:
      description: DeviceSpec defines the desired state of Device
      example:
        memory:
          sizeInMB: 2
        disks:
        - partitions:
          - mountPoint: mountPoint
            usedSpace: 5
            freeSpace: 6
            totalSpace: 1
            fileSystemType: fileSystemType
          - mountPoint: mountPoint
            usedSpace: 5
            freeSpace: 6
            totalSpace: 1
            fileSystemType: fileSystemType
          controller: controller
          size: 5
          vendor: vendor
        - partitions:
          - mountPoint: mountPoint
            usedSpace: 5
            freeSpace: 6
            totalSpace: 1
            fileSystemType: fileSystemType
          - mountPoint: mountPoint
            usedSpace: 5
            freeSpace: 6
            totalSpace: 1
            fileSystemType: fileSystemType
          controller: controller
          size: 5
          vendor: vendor
        os:
          kernel: kernel
          kernelVersion: kernelVersion
          family: family
          version: version
        gpus:
        - addresses:
            key: addresses
          vendor: vendor
          model: model
        - addresses:
            key: addresses
          vendor: vendor
          model: model
        hostType: appliance
        nics:
        - nicName: nicName
          subnet: subnet
          isDefault: true
          ip: ip
          dns:
          - dns
          - dns
          gateway: gateway
          macAddr: macAddr
        - nicName: nicName
          subnet: subnet
          isDefault: true
          ip: ip
          dns:
          - dns
          - dns
          gateway: gateway
          macAddr: macAddr
        archType: amd64
        cpu:
          cores: 0
        secureBoot: false
        hostState: registration
      properties:
        archType:
          default: amd64
          description: Architecture type of the edge host
          enum:
          - arm64
          - amd64
          type: string
        cpu:
          $ref: "#/components/schemas/v1CPU"
        disks:
          items:
            $ref: "#/components/schemas/v1Disk"
          type: array
        gpus:
          items:
            $ref: "#/components/schemas/v1GPUDeviceSpec"
          type: array
        hostState:
          default: registration
          description: State of edge host device
          enum:
          - registration
          - cluster
          - recovery
          type: string
        hostType:
          default: appliance
          description: Type of the edge host device
          enum:
          - appliance
          - agent-mode
          type: string
        memory:
          $ref: "#/components/schemas/v1Memory"
        nics:
          items:
            $ref: "#/components/schemas/v1Nic"
          type: array
        os:
          $ref: "#/components/schemas/v1OS"
        secureBoot:
          default: false
          description: Secure boot configuration
          type: boolean
      type: object
    v1Disk:
      example:
        partitions:
        - mountPoint: mountPoint
          usedSpace: 5
          freeSpace: 6
          totalSpace: 1
          fileSystemType: fileSystemType
        - mountPoint: mountPoint
          usedSpace: 5
          freeSpace: 6
          totalSpace: 1
          fileSystemType: fileSystemType
        controller: controller
        size: 5
        vendor: vendor
      properties:
        controller:
          type: string
        partitions:
          items:
            $ref: "#/components/schemas/v1Partition"
          type: array
        size:
          description: Size in GB
          format: int32
          type: integer
        vendor:
          type: string
      type: object
    v1DomainHost:
      description: update domain host for application. RootDomain gets dervied from
        domain host url
      properties:
        host:
          type: string
      type: object
    v1EcrAuthorizationRequestEntity:
      description: Ecr registry credentials entity
      properties:
        awsCloudAccount:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        endpoint:
          description: Endpoint url to make the request
          type: string
        isPrivate:
          description: If it is public or private
          type: boolean
        region:
          description: Name of the region
          type: string
      type: object
    v1EcrImageEntity:
      properties:
        name:
          description: Image name
          type: string
        tag:
          description: Image tag
          type: string
      type: object
    v1EcrImageValidateEntity:
      description: Ecr registry image meta
      properties:
        authEntity:
          $ref: "#/components/schemas/v1EcrAuthorizationRequestEntity"
        imageTag:
          description: Name of the image tag
          type: string
        images:
          description: Ecr Image Entity
          items:
            $ref: "#/components/schemas/v1EcrImageEntity"
          type: array
        repoName:
          description: Name of the repo
          type: string
      type: object
    v1EcrRegistry:
      description: Ecr registry information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          containsSpectroManifest: true
          registryUid: registryUid
          endpoint: endpoint
          credentials:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
          scope: scope
          defaultRegion: defaultRegion
          isSyncSupported: true
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          isPrivate: true
          baseContentPath: baseContentPath
          providerType: helm
        status:
          syncStatus:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EcrRegistrySpec"
        status:
          $ref: "#/components/schemas/v1OciRegistryStatus"
      type: object
    v1EcrRegistrySpec:
      description: Ecr registry spec
      example:
        containsSpectroManifest: true
        registryUid: registryUid
        endpoint: endpoint
        credentials:
          credentialType: secret
          secretSpec:
            mission: mission
            permissionBoundary: permissionBoundary
            role: role
            agency: agency
            accountName: accountName
            namePrefix: namePrefix
            tls:
              cert: cert
              ca: ca
              key: key
            isCapValidationEnabled: true
            policy: policy
          partition: aws
          sts:
            externalId: externalId
            arn: arn
          secretKey: secretKey
          accessKey: accessKey
          secretToken: secretToken
          policyARNs:
          - policyARNs
          - policyARNs
        scope: scope
        defaultRegion: defaultRegion
        isSyncSupported: true
        tls:
          certificate: certificate
          insecureSkipVerify: true
          ca: ca
          enabled: true
          key: key
        isPrivate: true
        baseContentPath: baseContentPath
        providerType: helm
      properties:
        baseContentPath:
          description: OCI ecr registry content base path
          type: string
        containsSpectroManifest:
          type: boolean
          x-omitempty: false
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        defaultRegion:
          type: string
        endpoint:
          type: string
        isPrivate:
          type: boolean
        isSyncSupported:
          type: boolean
        providerType:
          default: helm
          enum:
          - helm
          - pack
          type: string
        registryUid:
          description: Ecr registry uid
          type: string
        scope:
          type: string
        tls:
          $ref: "#/components/schemas/v1TlsConfiguration"
      required:
      - endpoint
      - isPrivate
      type: object
    v1EdgeClusterObjectEntity:
      description: Object identity meta of the cluster
      example:
        uid: uid
        hybridCluster:
          uid: uid
          name: name
        name: name
      properties:
        hybridCluster:
          $ref: "#/components/schemas/v1HybridClusterMeta"
        name:
          description: Name of the cluster
          type: string
        uid:
          description: Uid of the cluster
          type: string
      type: object
    v1EdgeHost:
      description: EdgeHost is the underlying appliance
      example:
        hostChecksum: hostChecksum
        hostIdentity:
          mode: mode
          socketPath: socketPath
          caCert: caCert
          sshSecret:
            privateKey: privateKey
            name: name
        macAddress: macAddress
        hostAuthToken: hostAuthToken
        hostUid: hostUid
        disableAutoRegister: true
        hostPairingKey: hostPairingKey
        project:
          uid: uid
          name: name
        hostAddress: hostAddress
      properties:
        disableAutoRegister:
          description: Set to true if auto register is disabled for the device
          type: boolean
          x-omitempty: false
        hostAddress:
          description: HostAddress is a FQDN or IP address of the Host
          type: string
        hostAuthToken:
          description: HostAuthToken to authorize auto registration
          type: string
          x-omitempty: false
        hostChecksum:
          description: "HostChecksum is the checksum provided by the edge host, to\
            \ be persisted in SaaS"
          type: string
          x-omitempty: false
        hostIdentity:
          $ref: "#/components/schemas/v1EdgeHostIdentity"
        hostPairingKey:
          description: HostPairingKey is the one-time pairing key to pair the edge
            host with the device registered in SaaS
          format: password
          type: string
          x-omitempty: false
        hostUid:
          description: HostUid is the ID of the EdgeHost
          type: string
        macAddress:
          description: Mac address of edgehost
          type: string
          x-omitempty: false
        project:
          $ref: "#/components/schemas/v1ObjectEntity"
      required:
      - hostAddress
      - hostUid
      type: object
    v1EdgeHostCloudProperties:
      description: Additional cloud properties of the edge host (applicable based
        on the cloud type)
      example:
        vsphere:
          datacenters:
          - folders:
            - folders
            - folders
            computeClusters:
            - resourcePools:
              - resourcePools
              - resourcePools
              name: name
              datastores:
              - datastores
              - datastores
              networks:
              - networks
              - networks
            - resourcePools:
              - resourcePools
              - resourcePools
              name: name
              datastores:
              - datastores
              - datastores
              networks:
              - networks
              - networks
            name: name
          - folders:
            - folders
            - folders
            computeClusters:
            - resourcePools:
              - resourcePools
              - resourcePools
              name: name
              datastores:
              - datastores
              - datastores
              networks:
              - networks
              - networks
            - resourcePools:
              - resourcePools
              - resourcePools
              name: name
              datastores:
              - datastores
              - datastores
              networks:
              - networks
              - networks
            name: name
      properties:
        vsphere:
          $ref: "#/components/schemas/v1EdgeHostVsphereCloudProperties"
      type: object
    v1EdgeHostClusterEntity:
      properties:
        clusterUid:
          type: string
      type: object
    v1EdgeHostConfig:
      example:
        clusterUids:
        - clusterUids
        - clusterUids
        tunnelConfig:
          remoteSsh: disabled
          remoteSshTempUser: disabled
      properties:
        clusterUids:
          items:
            type: string
          type: array
        tunnelConfig:
          $ref: "#/components/schemas/v1SpectroTunnelConfig"
      type: object
    v1EdgeHostDevice:
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        aclmeta:
          projectUid: projectUid
          tenantUid: tenantUid
          ownerUid: ownerUid
        spec:
          clusterProfileTemplates:
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          service:
            name: name
            version: version
          cloudProperties:
            vsphere:
              datacenters:
              - folders:
                - folders
                - folders
                computeClusters:
                - resourcePools:
                  - resourcePools
                  - resourcePools
                  name: name
                  datastores:
                  - datastores
                  - datastores
                  networks:
                  - networks
                  - networks
                - resourcePools:
                  - resourcePools
                  - resourcePools
                  name: name
                  datastores:
                  - datastores
                  - datastores
                  networks:
                  - networks
                  - networks
                name: name
              - folders:
                - folders
                - folders
                computeClusters:
                - resourcePools:
                  - resourcePools
                  - resourcePools
                  name: name
                  datastores:
                  - datastores
                  - datastores
                  networks:
                  - networks
                  - networks
                - resourcePools:
                  - resourcePools
                  - resourcePools
                  name: name
                  datastores:
                  - datastores
                  - datastores
                  networks:
                  - networks
                  - networks
                name: name
          host:
            hostChecksum: hostChecksum
            hostIdentity:
              mode: mode
              socketPath: socketPath
              caCert: caCert
              sshSecret:
                privateKey: privateKey
                name: name
            macAddress: macAddress
            hostAuthToken: hostAuthToken
            hostUid: hostUid
            disableAutoRegister: true
            hostPairingKey: hostPairingKey
            project:
              uid: uid
              name: name
            hostAddress: hostAddress
          type: vsphere
          device:
            memory:
              sizeInMB: 2
            disks:
            - partitions:
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              controller: controller
              size: 5
              vendor: vendor
            - partitions:
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              controller: controller
              size: 5
              vendor: vendor
            os:
              kernel: kernel
              kernelVersion: kernelVersion
              family: family
              version: version
            gpus:
            - addresses:
                key: addresses
              vendor: vendor
              model: model
            - addresses:
                key: addresses
              vendor: vendor
              model: model
            hostType: appliance
            nics:
            - nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            - nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            archType: amd64
            cpu:
              cores: 0
            secureBoot: false
            hostState: registration
          tunnelConfig:
            remoteSsh: disabled
            remoteSshTempUser: disabled
          version: version
          properties:
            storagePools:
            - name: name
            - name: name
            networks:
            - networkName: networkName
              networkType: default
            - networkName: networkName
              networkType: default
        status:
          inUseClustersRef:
          - uid: uid
            hybridCluster:
              uid: uid
              name: name
            name: name
          - uid: uid
            hybridCluster:
              uid: uid
              name: name
            name: name
          profileStatus:
            hasUserMacros: true
          health:
            agentVersion: agentVersion
            state: healthy
            message: message
          inUseClusters:
          - uid: uid
            name: name
          - uid: uid
            name: name
          state: ready
          serviceAuthToken: serviceAuthToken
          packs:
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          tunnelStatus:
            ssh:
              lastModifiedTime: 2000-01-23T04:56:07.000+00:00
              state: Initiating
              message: message
              user:
                lastModifiedTime: 2000-01-23T04:56:07.000+00:00
                credentials:
                  password: password
                  sshKey: sshKey
                  username: username
                state: Created
                message: message
      properties:
        aclmeta:
          $ref: "#/components/schemas/v1AclMeta"
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeHostDeviceSpec"
        status:
          $ref: "#/components/schemas/v1EdgeHostDeviceStatus"
      type: object
    v1EdgeHostDeviceEntity:
      description: Edge host device information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectTagsEntity"
        spec:
          $ref: "#/components/schemas/v1EdgeHostDeviceSpecEntity"
      type: object
    v1EdgeHostDeviceHostCheckSum:
      properties:
        hostCheckSum:
          type: string
      type: object
    v1EdgeHostDeviceHostPairingKey:
      properties:
        hostPairingKey:
          format: password
          type: string
      type: object
    v1EdgeHostDeviceMetaUpdateEntity:
      description: Edge host device uid and name
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectTagsEntity"
      type: object
    v1EdgeHostDeviceSpec:
      description: EdgeHostDeviceSpec defines the desired state of EdgeHostDevice
      example:
        clusterProfileTemplates:
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        service:
          name: name
          version: version
        cloudProperties:
          vsphere:
            datacenters:
            - folders:
              - folders
              - folders
              computeClusters:
              - resourcePools:
                - resourcePools
                - resourcePools
                name: name
                datastores:
                - datastores
                - datastores
                networks:
                - networks
                - networks
              - resourcePools:
                - resourcePools
                - resourcePools
                name: name
                datastores:
                - datastores
                - datastores
                networks:
                - networks
                - networks
              name: name
            - folders:
              - folders
              - folders
              computeClusters:
              - resourcePools:
                - resourcePools
                - resourcePools
                name: name
                datastores:
                - datastores
                - datastores
                networks:
                - networks
                - networks
              - resourcePools:
                - resourcePools
                - resourcePools
                name: name
                datastores:
                - datastores
                - datastores
                networks:
                - networks
                - networks
              name: name
        host:
          hostChecksum: hostChecksum
          hostIdentity:
            mode: mode
            socketPath: socketPath
            caCert: caCert
            sshSecret:
              privateKey: privateKey
              name: name
          macAddress: macAddress
          hostAuthToken: hostAuthToken
          hostUid: hostUid
          disableAutoRegister: true
          hostPairingKey: hostPairingKey
          project:
            uid: uid
            name: name
          hostAddress: hostAddress
        type: vsphere
        device:
          memory:
            sizeInMB: 2
          disks:
          - partitions:
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            controller: controller
            size: 5
            vendor: vendor
          - partitions:
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            controller: controller
            size: 5
            vendor: vendor
          os:
            kernel: kernel
            kernelVersion: kernelVersion
            family: family
            version: version
          gpus:
          - addresses:
              key: addresses
            vendor: vendor
            model: model
          - addresses:
              key: addresses
            vendor: vendor
            model: model
          hostType: appliance
          nics:
          - nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          - nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          archType: amd64
          cpu:
            cores: 0
          secureBoot: false
          hostState: registration
        tunnelConfig:
          remoteSsh: disabled
          remoteSshTempUser: disabled
        version: version
        properties:
          storagePools:
          - name: name
          - name: name
          networks:
          - networkName: networkName
            networkType: default
          - networkName: networkName
            networkType: default
      properties:
        cloudProperties:
          $ref: "#/components/schemas/v1EdgeHostCloudProperties"
        clusterProfileTemplates:
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
        device:
          $ref: "#/components/schemas/v1DeviceSpec"
        host:
          $ref: "#/components/schemas/v1EdgeHost"
        properties:
          $ref: "#/components/schemas/v1EdgeHostProperties"
        service:
          $ref: "#/components/schemas/v1ServiceSpec"
        tunnelConfig:
          $ref: "#/components/schemas/v1SpectroTunnelConfig"
        type:
          description: Deprecated. Cloudtype of the provisioned edge host
          enum:
          - vsphere
          - edge-native
          type: string
        version:
          type: string
      type: object
    v1EdgeHostDeviceSpecEntity:
      description: Edge host device spec
      properties:
        archType:
          $ref: "#/components/schemas/v1ArchType"
        hostPairingKey:
          format: password
          type: string
        tunnelConfig:
          $ref: "#/components/schemas/v1SpectroTunnelConfig"
      type: object
    v1EdgeHostDeviceStatus:
      description: EdgeHostDeviceStatus defines the observed state of EdgeHostDevice
      example:
        inUseClustersRef:
        - uid: uid
          hybridCluster:
            uid: uid
            name: name
          name: name
        - uid: uid
          hybridCluster:
            uid: uid
            name: name
          name: name
        profileStatus:
          hasUserMacros: true
        health:
          agentVersion: agentVersion
          state: healthy
          message: message
        inUseClusters:
        - uid: uid
          name: name
        - uid: uid
          name: name
        state: ready
        serviceAuthToken: serviceAuthToken
        packs:
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        tunnelStatus:
          ssh:
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            state: Initiating
            message: message
            user:
              lastModifiedTime: 2000-01-23T04:56:07.000+00:00
              credentials:
                password: password
                sshKey: sshKey
                username: username
              state: Created
              message: message
      properties:
        health:
          $ref: "#/components/schemas/v1EdgeHostHealth"
        inUseClusters:
          description: Deprecated. Use inUseClustersRef
          items:
            $ref: "#/components/schemas/v1ObjectEntity"
          type: array
        inUseClustersRef:
          items:
            $ref: "#/components/schemas/v1EdgeClusterObjectEntity"
          type: array
        packs:
          items:
            $ref: "#/components/schemas/v1ClusterPackStatus"
          type: array
        profileStatus:
          $ref: "#/components/schemas/v1ProfileStatus"
        serviceAuthToken:
          type: string
        state:
          enum:
          - ready
          - unpaired
          - in-use
          type: string
        tunnelStatus:
          $ref: "#/components/schemas/v1SpectroTunnelStatus"
      type: object
    v1EdgeHostDevices:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          aclmeta:
            projectUid: projectUid
            tenantUid: tenantUid
            ownerUid: ownerUid
          spec:
            clusterProfileTemplates:
            - packServerSecret: packServerSecret
              uid: uid
              cloudType: cloudType
              profileVersion: profileVersion
              relatedObject:
                uid: uid
                kind: kind
                name: name
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
              packServerRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            - packServerSecret: packServerSecret
              uid: uid
              cloudType: cloudType
              profileVersion: profileVersion
              relatedObject:
                uid: uid
                kind: kind
                name: name
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
              packServerRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            service:
              name: name
              version: version
            cloudProperties:
              vsphere:
                datacenters:
                - folders:
                  - folders
                  - folders
                  computeClusters:
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  name: name
                - folders:
                  - folders
                  - folders
                  computeClusters:
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  name: name
            host:
              hostChecksum: hostChecksum
              hostIdentity:
                mode: mode
                socketPath: socketPath
                caCert: caCert
                sshSecret:
                  privateKey: privateKey
                  name: name
              macAddress: macAddress
              hostAuthToken: hostAuthToken
              hostUid: hostUid
              disableAutoRegister: true
              hostPairingKey: hostPairingKey
              project:
                uid: uid
                name: name
              hostAddress: hostAddress
            type: vsphere
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
            tunnelConfig:
              remoteSsh: disabled
              remoteSshTempUser: disabled
            version: version
            properties:
              storagePools:
              - name: name
              - name: name
              networks:
              - networkName: networkName
                networkType: default
              - networkName: networkName
                networkType: default
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            profileStatus:
              hasUserMacros: true
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
            serviceAuthToken: serviceAuthToken
            packs:
            - profileUid: profileUid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              manifests:
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              name: name
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              services:
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              type: type
              version: version
            - profileUid: profileUid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              manifests:
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              name: name
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              services:
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              type: type
              version: version
            tunnelStatus:
              ssh:
                lastModifiedTime: 2000-01-23T04:56:07.000+00:00
                state: Initiating
                message: message
                user:
                  lastModifiedTime: 2000-01-23T04:56:07.000+00:00
                  credentials:
                    password: password
                    sshKey: sshKey
                    username: username
                  state: Created
                  message: message
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          aclmeta:
            projectUid: projectUid
            tenantUid: tenantUid
            ownerUid: ownerUid
          spec:
            clusterProfileTemplates:
            - packServerSecret: packServerSecret
              uid: uid
              cloudType: cloudType
              profileVersion: profileVersion
              relatedObject:
                uid: uid
                kind: kind
                name: name
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
              packServerRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            - packServerSecret: packServerSecret
              uid: uid
              cloudType: cloudType
              profileVersion: profileVersion
              relatedObject:
                uid: uid
                kind: kind
                name: name
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
              packServerRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            service:
              name: name
              version: version
            cloudProperties:
              vsphere:
                datacenters:
                - folders:
                  - folders
                  - folders
                  computeClusters:
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  name: name
                - folders:
                  - folders
                  - folders
                  computeClusters:
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  - resourcePools:
                    - resourcePools
                    - resourcePools
                    name: name
                    datastores:
                    - datastores
                    - datastores
                    networks:
                    - networks
                    - networks
                  name: name
            host:
              hostChecksum: hostChecksum
              hostIdentity:
                mode: mode
                socketPath: socketPath
                caCert: caCert
                sshSecret:
                  privateKey: privateKey
                  name: name
              macAddress: macAddress
              hostAuthToken: hostAuthToken
              hostUid: hostUid
              disableAutoRegister: true
              hostPairingKey: hostPairingKey
              project:
                uid: uid
                name: name
              hostAddress: hostAddress
            type: vsphere
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
            tunnelConfig:
              remoteSsh: disabled
              remoteSshTempUser: disabled
            version: version
            properties:
              storagePools:
              - name: name
              - name: name
              networks:
              - networkName: networkName
                networkType: default
              - networkName: networkName
                networkType: default
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            profileStatus:
              hasUserMacros: true
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
            serviceAuthToken: serviceAuthToken
            packs:
            - profileUid: profileUid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              manifests:
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              name: name
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              services:
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              type: type
              version: version
            - profileUid: profileUid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              manifests:
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              - uid: uid
                condition:
                  reason: reason
                  lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                  message: message
                  type: type
                  lastProbeTime: 2000-01-23T04:56:07.000+00:00
                  status: status
                name: name
              name: name
              startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
              services:
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              - host: host
                name: name
                ports:
                - protocol: protocol
                  port: 0
                - protocol: protocol
                  port: 0
              type: type
              version: version
            tunnelStatus:
              ssh:
                lastModifiedTime: 2000-01-23T04:56:07.000+00:00
                state: Initiating
                message: message
                user:
                  lastModifiedTime: 2000-01-23T04:56:07.000+00:00
                  credentials:
                    password: password
                    sshKey: sshKey
                    username: username
                  state: Created
                  message: message
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1EdgeHostDevice"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1EdgeHostHealth:
      description: EdgeHostHealth defines the desired health state of EdgeHostDevice
      example:
        agentVersion: agentVersion
        state: healthy
        message: message
      properties:
        agentVersion:
          type: string
        message:
          type: string
        state:
          enum:
          - healthy
          - unhealthy
          type: string
      type: object
    v1EdgeHostIdentity:
      example:
        mode: mode
        socketPath: socketPath
        caCert: caCert
        sshSecret:
          privateKey: privateKey
          name: name
      properties:
        caCert:
          description: CACert is the client CA certificate
          type: string
        mode:
          description: Mode indicates a system or session connection to the host
          type: string
        socketPath:
          description: "SocketPath is an optional path to the socket on the host,\
            \ if not using defaults"
          type: string
        sshSecret:
          $ref: "#/components/schemas/v1EdgeHostSSHSecret"
      type: object
    v1EdgeHostMeta:
      example:
        uid: uid
        healthState: healthState
        edgeHostType: edge-native
        name: name
        archType: amd64
        state: state
      properties:
        archType:
          $ref: "#/components/schemas/v1ArchType"
        edgeHostType:
          enum:
          - edge-native
          - vsphere
          type: string
        healthState:
          type: string
        name:
          type: string
        state:
          type: string
        uid:
          type: string
      type: object
    v1EdgeHostNetwork:
      description: Network defines the network configuration for a virtual machine
      example:
        networkName: networkName
        networkType: default
      properties:
        networkName:
          description: NetworkName of the network where this machine will be connected
          type: string
        networkType:
          description: NetworkType  specifies the type of network
          enum:
          - default
          - bridge
          type: string
      required:
      - networkName
      - networkType
      type: object
    v1EdgeHostProperties:
      description: Additional properties of edge host
      example:
        storagePools:
        - name: name
        - name: name
        networks:
        - networkName: networkName
          networkType: default
        - networkName: networkName
          networkType: default
      properties:
        networks:
          items:
            $ref: "#/components/schemas/v1EdgeHostNetwork"
          type: array
        storagePools:
          items:
            $ref: "#/components/schemas/v1EdgeHostStoragePool"
          type: array
      type: object
    v1EdgeHostSSHSecret:
      example:
        privateKey: privateKey
        name: name
      properties:
        name:
          description: SSH secret name
          type: string
        privateKey:
          description: Private Key to access the host
          type: string
      type: object
    v1EdgeHostSpecHost:
      description: Host specifications
      example:
        macAddress: macAddress
        hostAddress: hostAddress
      properties:
        hostAddress:
          description: HostAddress is a FQDN or IP address of the Host
          type: string
        macAddress:
          type: string
      type: object
    v1EdgeHostState:
      enum:
      - ready
      - unpaired
      - in-use
      type: string
    v1EdgeHostStoragePool:
      description: StoragePool is the storage pool for the vm image
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    v1EdgeHostVsphereCloudProperties:
      description: Vsphere cloud properties of edge host
      example:
        datacenters:
        - folders:
          - folders
          - folders
          computeClusters:
          - resourcePools:
            - resourcePools
            - resourcePools
            name: name
            datastores:
            - datastores
            - datastores
            networks:
            - networks
            - networks
          - resourcePools:
            - resourcePools
            - resourcePools
            name: name
            datastores:
            - datastores
            - datastores
            networks:
            - networks
            - networks
          name: name
        - folders:
          - folders
          - folders
          computeClusters:
          - resourcePools:
            - resourcePools
            - resourcePools
            name: name
            datastores:
            - datastores
            - datastores
            networks:
            - networks
            - networks
          - resourcePools:
            - resourcePools
            - resourcePools
            name: name
            datastores:
            - datastores
            - datastores
            networks:
            - networks
            - networks
          name: name
      properties:
        datacenters:
          items:
            $ref: "#/components/schemas/v1VsphereCloudDatacenter"
          type: array
      type: object
    v1EdgeHostsMeta:
      example:
        edgeHosts:
        - uid: uid
          healthState: healthState
          edgeHostType: edge-native
          name: name
          archType: amd64
          state: state
        - uid: uid
          healthState: healthState
          edgeHostType: edge-native
          name: name
          archType: amd64
          state: state
      properties:
        edgeHosts:
          items:
            $ref: "#/components/schemas/v1EdgeHostMeta"
          type: array
      type: object
    v1EdgeHostsMetadata:
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterProfileTemplates:
          - uid: uid
            cloudType: cloudType
            name: name
            type: type
            packs:
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            version: version
          - uid: uid
            cloudType: cloudType
            name: name
            type: type
            packs:
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            - packUid: packUid
              displayName: displayName
              addonType: addonType
              name: name
              annotations:
                key: annotations
              tag: tag
              type: type
              version: version
              layer: kernel
              logoUrl: logoUrl
            version: version
          host:
            macAddress: macAddress
            hostAddress: hostAddress
          projectMeta:
            uid: uid
            name: name
          type: type
          device:
            memory:
              sizeInMB: 2
            disks:
            - partitions:
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              controller: controller
              size: 5
              vendor: vendor
            - partitions:
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              - mountPoint: mountPoint
                usedSpace: 5
                freeSpace: 6
                totalSpace: 1
                fileSystemType: fileSystemType
              controller: controller
              size: 5
              vendor: vendor
            os:
              kernel: kernel
              kernelVersion: kernelVersion
              family: family
              version: version
            gpus:
            - addresses:
                key: addresses
              vendor: vendor
              model: model
            - addresses:
                key: addresses
              vendor: vendor
              model: model
            hostType: appliance
            nics:
            - nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            - nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            archType: amd64
            cpu:
              cores: 0
            secureBoot: false
            hostState: registration
        status:
          inUseClustersRef:
          - uid: uid
            hybridCluster:
              uid: uid
              name: name
            name: name
          - uid: uid
            hybridCluster:
              uid: uid
              name: name
            name: name
          health:
            agentVersion: agentVersion
            state: healthy
            message: message
          inUseClusters:
          - uid: uid
            name: name
          - uid: uid
            name: name
          state: ready
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeHostsMetadataSpec"
        status:
          $ref: "#/components/schemas/v1EdgeHostsMetadataStatus"
      type: object
    v1EdgeHostsMetadataFilter:
      description: Edge host metadata spec
      properties:
        filter:
          $ref: "#/components/schemas/v1EdgeHostsMetadataFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1EdgeHostsMetadataSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1EdgeHostsMetadataFilterSpec:
      description: Edge hosts metadata filter spec
      properties:
        name:
          $ref: "#/components/schemas/v1FilterString"
        states:
          items:
            $ref: "#/components/schemas/v1EdgeHostState"
          type: array
          uniqueItems: true
      type: object
    v1EdgeHostsMetadataSortFields:
      enum:
      - name
      - state
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1EdgeHostsMetadataSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1EdgeHostsMetadataSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1EdgeHostsMetadataSpec:
      example:
        clusterProfileTemplates:
        - uid: uid
          cloudType: cloudType
          name: name
          type: type
          packs:
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          version: version
        - uid: uid
          cloudType: cloudType
          name: name
          type: type
          packs:
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          version: version
        host:
          macAddress: macAddress
          hostAddress: hostAddress
        projectMeta:
          uid: uid
          name: name
        type: type
        device:
          memory:
            sizeInMB: 2
          disks:
          - partitions:
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            controller: controller
            size: 5
            vendor: vendor
          - partitions:
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            - mountPoint: mountPoint
              usedSpace: 5
              freeSpace: 6
              totalSpace: 1
              fileSystemType: fileSystemType
            controller: controller
            size: 5
            vendor: vendor
          os:
            kernel: kernel
            kernelVersion: kernelVersion
            family: family
            version: version
          gpus:
          - addresses:
              key: addresses
            vendor: vendor
            model: model
          - addresses:
              key: addresses
            vendor: vendor
            model: model
          hostType: appliance
          nics:
          - nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          - nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          archType: amd64
          cpu:
            cores: 0
          secureBoot: false
          hostState: registration
      properties:
        clusterProfileTemplates:
          items:
            $ref: "#/components/schemas/v1ProfileTemplateSummary"
          type: array
        device:
          $ref: "#/components/schemas/v1DeviceSpec"
        host:
          $ref: "#/components/schemas/v1EdgeHostSpecHost"
        projectMeta:
          $ref: "#/components/schemas/v1ProjectMeta"
        type:
          type: string
      type: object
    v1EdgeHostsMetadataStatus:
      example:
        inUseClustersRef:
        - uid: uid
          hybridCluster:
            uid: uid
            name: name
          name: name
        - uid: uid
          hybridCluster:
            uid: uid
            name: name
          name: name
        health:
          agentVersion: agentVersion
          state: healthy
          message: message
        inUseClusters:
        - uid: uid
          name: name
        - uid: uid
          name: name
        state: ready
      properties:
        health:
          $ref: "#/components/schemas/v1EdgeHostHealth"
        inUseClusters:
          description: Deprecated. Use inUseClustersRef
          items:
            $ref: "#/components/schemas/v1ObjectEntity"
          type: array
        inUseClustersRef:
          items:
            $ref: "#/components/schemas/v1EdgeClusterObjectEntity"
          type: array
        state:
          $ref: "#/components/schemas/v1EdgeHostState"
      type: object
    v1EdgeHostsMetadataSummary:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            host:
              macAddress: macAddress
              hostAddress: hostAddress
            projectMeta:
              uid: uid
              name: name
            type: type
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            host:
              macAddress: macAddress
              hostAddress: hostAddress
            projectMeta:
              uid: uid
              name: name
            type: type
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1EdgeHostsMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1EdgeHostsSearchSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            host:
              macAddress: macAddress
              hostAddress: hostAddress
            projectMeta:
              uid: uid
              name: name
            type: type
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            - uid: uid
              cloudType: cloudType
              name: name
              type: type
              packs:
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              - packUid: packUid
                displayName: displayName
                addonType: addonType
                name: name
                annotations:
                  key: annotations
                tag: tag
                type: type
                version: version
                layer: kernel
                logoUrl: logoUrl
              version: version
            host:
              macAddress: macAddress
              hostAddress: hostAddress
            projectMeta:
              uid: uid
              name: name
            type: type
            device:
              memory:
                sizeInMB: 2
              disks:
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              - partitions:
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                - mountPoint: mountPoint
                  usedSpace: 5
                  freeSpace: 6
                  totalSpace: 1
                  fileSystemType: fileSystemType
                controller: controller
                size: 5
                vendor: vendor
              os:
                kernel: kernel
                kernelVersion: kernelVersion
                family: family
                version: version
              gpus:
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              - addresses:
                  key: addresses
                vendor: vendor
                model: model
              hostType: appliance
              nics:
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              - nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              archType: amd64
              cpu:
                cores: 0
              secureBoot: false
              hostState: registration
          status:
            inUseClustersRef:
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            - uid: uid
              hybridCluster:
                uid: uid
                name: name
              name: name
            health:
              agentVersion: agentVersion
              state: healthy
              message: message
            inUseClusters:
            - uid: uid
              name: name
            - uid: uid
              name: name
            state: ready
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1EdgeHostsMetadata"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1EdgeHostsTags:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    v1EdgeNativeCloudClusterConfigEntity:
      description: EdgeNative cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
      type: object
    v1EdgeNativeCloudConfig:
      description: EdgeNativeCloudConfig is the Schema for the edgenativecloudconfigs
        API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          machinePoolConfig:
          - isControlPlane: true
            hosts:
            - hostName: ""
              nicName: nicName
              twoNodeCandidatePriority: primary
              caCert: caCert
              hostUid: ""
              IsCandidateCaption: false
              staticIP: staticIP
              nic:
                nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              hostAddress: ""
            - hostName: ""
              nicName: nicName
              twoNodeCandidatePriority: primary
              caCert: caCert
              hostUid: ""
              IsCandidateCaption: false
              staticIP: staticIP
              nic:
                nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              hostAddress: ""
            nodeRepaveInterval: 1
            additionalLabels:
              key: ""
            maxSize: 0
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - ""
            - ""
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: ""
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            osType: osType
            minSize: 6
          - isControlPlane: true
            hosts:
            - hostName: ""
              nicName: nicName
              twoNodeCandidatePriority: primary
              caCert: caCert
              hostUid: ""
              IsCandidateCaption: false
              staticIP: staticIP
              nic:
                nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              hostAddress: ""
            - hostName: ""
              nicName: nicName
              twoNodeCandidatePriority: primary
              caCert: caCert
              hostUid: ""
              IsCandidateCaption: false
              staticIP: staticIP
              nic:
                nicName: nicName
                subnet: subnet
                isDefault: true
                ip: ip
                dns:
                - dns
                - dns
                gateway: gateway
                macAddr: macAddr
              hostAddress: ""
            nodeRepaveInterval: 1
            additionalLabels:
              key: ""
            maxSize: 0
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - ""
            - ""
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: ""
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            osType: osType
            minSize: 6
          clusterConfig:
            overlayNetworkConfiguration:
              enable: true
              cidr: cidr
            isTwoNodeCluster: true
            controlPlaneEndpoint:
              host: host
              type: VIP
              ddnsSearchDomain: ddnsSearchDomain
            ntpServers:
            - ""
            - ""
            staticIp: true
            sshKeys:
            - ""
            - ""
        status:
          nodeImage: nodeImage
          sourceImageId: sourceImageId
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeNativeCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1EdgeNativeCloudConfigStatus"
      type: object
    v1EdgeNativeCloudConfigSpec:
      description: EdgeNativeCloudConfigSpec defines the desired state of EdgeNativeCloudConfig
      example:
        machinePoolConfig:
        - isControlPlane: true
          hosts:
          - hostName: ""
            nicName: nicName
            twoNodeCandidatePriority: primary
            caCert: caCert
            hostUid: ""
            IsCandidateCaption: false
            staticIP: staticIP
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            hostAddress: ""
          - hostName: ""
            nicName: nicName
            twoNodeCandidatePriority: primary
            caCert: caCert
            hostUid: ""
            IsCandidateCaption: false
            staticIP: staticIP
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            hostAddress: ""
          nodeRepaveInterval: 1
          additionalLabels:
            key: ""
          maxSize: 0
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - ""
          - ""
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: ""
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          osType: osType
          minSize: 6
        - isControlPlane: true
          hosts:
          - hostName: ""
            nicName: nicName
            twoNodeCandidatePriority: primary
            caCert: caCert
            hostUid: ""
            IsCandidateCaption: false
            staticIP: staticIP
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            hostAddress: ""
          - hostName: ""
            nicName: nicName
            twoNodeCandidatePriority: primary
            caCert: caCert
            hostUid: ""
            IsCandidateCaption: false
            staticIP: staticIP
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            hostAddress: ""
          nodeRepaveInterval: 1
          additionalLabels:
            key: ""
          maxSize: 0
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - ""
          - ""
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: ""
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          osType: osType
          minSize: 6
        clusterConfig:
          overlayNetworkConfiguration:
            enable: true
            cidr: cidr
          isTwoNodeCluster: true
          controlPlaneEndpoint:
            host: host
            type: VIP
            ddnsSearchDomain: ddnsSearchDomain
          ntpServers:
          - ""
          - ""
          staticIp: true
          sshKeys:
          - ""
          - ""
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfig"
          type: array
      required:
      - clusterConfig
      - machinePoolConfig
      type: object
    v1EdgeNativeCloudConfigStatus:
      description: EdgeNativeCloudConfigStatus defines the observed state of EdgeNativeCloudConfig
      example:
        nodeImage: nodeImage
        sourceImageId: sourceImageId
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        nodeImage:
          type: string
        sourceImageId:
          description: SourceImageId can be from packref's annotations or from pack.json
          type: string
      type: object
    v1EdgeNativeClusterConfig:
      description: EdgeNativeClusterConfig definnes Edge Native Cluster specific Spec
      example:
        overlayNetworkConfiguration:
          enable: true
          cidr: cidr
        isTwoNodeCluster: true
        controlPlaneEndpoint:
          host: host
          type: VIP
          ddnsSearchDomain: ddnsSearchDomain
        ntpServers:
        - ""
        - ""
        staticIp: true
        sshKeys:
        - ""
        - ""
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1EdgeNativeControlPlaneEndPoint"
        isTwoNodeCluster:
          description: IsTwoNodeCluster is to enable two node cluster support in the
            control-plane
          type: boolean
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list
          items:
            default: ""
            type: string
          type: array
        overlayNetworkConfiguration:
          $ref: "#/components/schemas/v1EdgeNativeOverlayNetworkConfiguration"
        sshKeys:
          description: SSHKeys specifies a list of ssh authorized keys to access the
            vms as a 'spectro' user
          items:
            default: ""
            type: string
          type: array
        staticIp:
          description: StaticIP indicates if IP allocation type is static IP. DHCP
            is the default allocation type
          type: boolean
      type: object
    v1EdgeNativeClusterConfigPairEntity:
      properties:
        controlPlaneHealthCheckTimeout:
          type: string
        lifecycleConfig:
          $ref: "#/components/schemas/v1LifecycleConfig"
        machineManagementConfig:
          $ref: "#/components/schemas/v1MachineManagementConfig"
        resources:
          $ref: "#/components/schemas/v1ClusterResourcesEntity"
        updateWorkerPoolsInParallel:
          type: boolean
      type: object
    v1EdgeNativeClusterPairSpcEntity:
      description: EdgeNative cluster pair payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1EdgeNativeClusterPairSpcEntity_spec"
      type: object
    v1EdgeNativeControlPlaneEndPoint:
      example:
        host: host
        type: VIP
        ddnsSearchDomain: ddnsSearchDomain
      properties:
        ddnsSearchDomain:
          description: "DDNSSearchDomain is the search domain used for resolving IP\
            \ addresses when the EndpointType is DDNS. This search domain is appended\
            \ to the generated Hostname to obtain the complete DNS name for the endpoint.\
            \ If Host is already a DDNS FQDN, DDNSSearchDomain is not required"
          type: string
        host:
          description: Host is FQDN(DDNS) or IP
          type: string
        type:
          description: Type indicates DDNS or VIP
          enum:
          - VIP
          - External
          - DDNS
          - IP
          type: string
      type: object
    v1EdgeNativeHost:
      description: EdgeNativeHost is the underlying appliance
      example:
        hostName: ""
        nicName: nicName
        twoNodeCandidatePriority: primary
        caCert: caCert
        hostUid: ""
        IsCandidateCaption: false
        staticIP: staticIP
        nic:
          nicName: nicName
          subnet: subnet
          isDefault: true
          ip: ip
          dns:
          - dns
          - dns
          gateway: gateway
          macAddr: macAddr
        hostAddress: ""
      properties:
        IsCandidateCaption:
          default: false
          description: Is Edge host nominated as candidate
          type: boolean
          x-omitempty: false
        caCert:
          description: CACert for TLS connections
          type: string
        hostAddress:
          default: ""
          description: HostAddress is a FQDN or IP address of the Host
          type: string
        hostName:
          default: ""
          description: Qualified name of host
          type: string
        hostUid:
          default: ""
          description: HostUid is the ID of the EdgeHost
          type: string
        nic:
          $ref: "#/components/schemas/v1Nic"
        nicName:
          description: Deprecated. Edge host nic name
          type: string
        staticIP:
          description: Deprecated. Edge host static IP
          type: string
        twoNodeCandidatePriority:
          description: "Set the edgehost candidate priority as primary or secondary,\
            \ if the edgehost is nominated as two node candidate"
          enum:
          - primary
          - secondary
          type: string
      required:
      - hostAddress
      - hostUid
      type: object
    v1EdgeNativeHybridClusterConfig:
      description: EdgeNativeHybridClusterConfig defines Edge Native Cluster specific
        specification
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1EdgeNativeControlPlaneEndPoint"
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list
          items:
            default: ""
            type: string
          type: array
        sshKeys:
          description: SSHKeys specifies a list of ssh authorized keys to access the
            vms as a 'spectro' user
          items:
            default: ""
            type: string
          type: array
      type: object
    v1EdgeNativeHybridConfigEntity:
      description: EdgeNativeHybridMachineConfigEntity defines Edge Native machine
        configuration
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeHybridClusterConfig"
        machineCloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeHybridMachineConfigEntity"
        profiles:
          description: Cluster profile templates for edge-native machine pool
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      type: object
    v1EdgeNativeHybridMachineConfigEntity:
      description: EdgeNativeHybridMachineConfigEntity defines Edge Native machine
        configuration
      properties:
        archType:
          $ref: "#/components/schemas/v1ArchType"
        edgeHosts:
          description: Edge hosts configurations
          items:
            $ref: "#/components/schemas/v1EdgeNativeHybridMachinePoolHost"
          type: array
      required:
      - archType
      - edgeHosts
      type: object
    v1EdgeNativeHybridMachinePoolHost:
      description: v1EdgeNativeHybridMachinePoolHostEntity defines Edge Native machine
        pool's host configuration
      example:
        hostName: hostName
        twoNodeCandidatePriority: primary
        hostUid: hostUid
        nic:
          nicName: nicName
          subnet: subnet
          isDefault: true
          ip: ip
          dns:
          - dns
          - dns
          gateway: gateway
          macAddr: macAddr
        vpnServerIp: vpnServerIp
      properties:
        hostName:
          description: Edge host name
          type: string
        hostUid:
          description: Edge host id
          type: string
        nic:
          $ref: "#/components/schemas/v1Nic"
        twoNodeCandidatePriority:
          description: "Set the Edge Host candidate priority as primary or secondary,\
            \ if the Edge Host is nominated as two node candidate"
          enum:
          - primary
          - secondary
          type: string
        vpnServerIp:
          description: Vpn server IP
          type: string
      required:
      - hostUid
      type: object
    v1EdgeNativeInstanceType:
      description: EdgeNativeInstanceType defines the instance configuration for a
        docker container node
      example:
        diskGiB: 0
        numCPUs: 1
        name: name
        memoryMiB: 6
      properties:
        diskGiB:
          description: DiskGiB is the size of a virtual machine's disk
          format: int32
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a virtual machine's memory, in MiB"
          format: int32
          type: integer
        name:
          description: Name is the instance name
          type: string
        numCPUs:
          description: NumCPUs is the number of CPUs
          format: int32
          type: integer
      type: object
    v1EdgeNativeMachine:
      description: EdgeNative cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          edgeHostUid: edgeHostUid
          instanceType:
            diskGiB: 0
            numCPUs: 1
            name: name
            memoryMiB: 6
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 5
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 5
            publicIp: publicIp
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeNativeMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1EdgeNativeMachinePoolCloudConfigEntity:
      properties:
        edgeHosts:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolHostEntity"
          type: array
          uniqueItems: true
      required:
      - edgeHosts
      type: object
    v1EdgeNativeMachinePoolConfig:
      example:
        isControlPlane: true
        hosts:
        - hostName: ""
          nicName: nicName
          twoNodeCandidatePriority: primary
          caCert: caCert
          hostUid: ""
          IsCandidateCaption: false
          staticIP: staticIP
          nic:
            nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          hostAddress: ""
        - hostName: ""
          nicName: nicName
          twoNodeCandidatePriority: primary
          caCert: caCert
          hostUid: ""
          IsCandidateCaption: false
          staticIP: staticIP
          nic:
            nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          hostAddress: ""
        nodeRepaveInterval: 1
        additionalLabels:
          key: ""
        maxSize: 0
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - ""
        - ""
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: ""
        machinePoolProperties:
          archType: amd64
        size: 5
        name: name
        osType: osType
        minSize: 6
      properties:
        additionalLabels:
          additionalProperties:
            default: ""
            type: string
          description: AdditionalLabels
          type: object
        additionalTags:
          additionalProperties:
            default: ""
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        hosts:
          items:
            $ref: "#/components/schemas/v1EdgeNativeHost"
          type: array
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            default: ""
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        osType:
          description: "the os type for the pool, must be supported by the provider"
          type: string
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - hosts
      type: object
    v1EdgeNativeMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1EdgeNativeMachinePoolHostEntity:
      properties:
        hostName:
          description: Edge host name
          type: string
        hostUid:
          description: Edge host id
          type: string
        nic:
          $ref: "#/components/schemas/v1Nic"
        nicName:
          description: Deprecated - Edge host nic name
          type: string
        staticIP:
          description: Deprecated - Edge host static IP
          type: string
        twoNodeCandidatePriority:
          description: "Set the edgehost candidate priority as primary or secondary,\
            \ if the edgehost is nominated as two node candidate"
          enum:
          - primary
          - secondary
          type: string
      required:
      - hostUid
      type: object
    v1EdgeNativeMachineSpec:
      description: EdgeNative cloud VM definition spec
      example:
        edgeHostUid: edgeHostUid
        instanceType:
          diskGiB: 0
          numCPUs: 1
          name: name
          memoryMiB: 6
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 5
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 5
          publicIp: publicIp
      properties:
        edgeHostUid:
          type: string
        instanceType:
          $ref: "#/components/schemas/v1EdgeNativeInstanceType"
        nics:
          items:
            $ref: "#/components/schemas/v1EdgeNativeNic"
          type: array
          uniqueItems: true
      type: object
    v1EdgeNativeMachines:
      description: EdgeNative machine list
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            edgeHostUid: edgeHostUid
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            edgeHostUid: edgeHostUid
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 5
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachine"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1EdgeNativeNic:
      description: Generic network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 5
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1EdgeNativeOverlayNetworkConfiguration:
      example:
        enable: true
        cidr: cidr
      properties:
        cidr:
          description: CIDR is the CIDR of the overlay network
          type: string
        enable:
          description: Enable is a flag to enable overlay network
          type: boolean
          x-omitempty: false
      type: object
    v1EdgeNativeTwoNodeCandidateEntity:
      properties:
        primaryEdgeHost:
          type: string
        secondaryEdgeHost:
          type: string
      type: object
    v1EdgeServiceLogin:
      description: System service login input
      properties:
        authToken:
          description: authToken helps in two step verification for the authorization.
          type: string
        edgeHostUid:
          type: string
        serviceName:
          type: string
        serviceVersion:
          type: string
        spectroClusterUid:
          type: string
        tenantUid:
          type: string
      type: object
    v1EdgeToken:
      description: Edge token information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          expiry: 2000-01-23T04:56:07.000+00:00
          defaultProject:
            uid: uid
            name: name
          token: token
        status:
          isActive: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeTokenSpec"
        status:
          $ref: "#/components/schemas/v1EdgeTokenStatus"
      type: object
    v1EdgeTokenActiveState:
      description: Edge token active state
      properties:
        isActive:
          description: "Set to 'true', if the token is active"
          type: boolean
      type: object
    v1EdgeTokenEntity:
      description: Edge token request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeTokenSpecEntity"
      type: object
    v1EdgeTokenProject:
      description: Edge token project information
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Project name
          type: string
        uid:
          description: Project uid
          type: string
      type: object
    v1EdgeTokenSpec:
      description: Edge token specification
      example:
        expiry: 2000-01-23T04:56:07.000+00:00
        defaultProject:
          uid: uid
          name: name
        token: token
      properties:
        defaultProject:
          $ref: "#/components/schemas/v1EdgeTokenProject"
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        token:
          description: Edge token
          type: string
      type: object
    v1EdgeTokenSpecEntity:
      description: Edge token specification
      properties:
        defaultProjectUid:
          description: Default project where the edgehost will be placed on the token
            authorization
          type: string
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1EdgeTokenSpecUpdate:
      description: Edge token spec to be updated
      properties:
        defaultProjectUid:
          description: Default project where the edgehost will be placed on the token
            authorization
          type: string
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1EdgeTokenStatus:
      description: Edge token status
      example:
        isActive: true
      properties:
        isActive:
          description: "Set to 'true', if the token is active"
          type: boolean
          x-omitempty: false
      type: object
    v1EdgeTokenUpdate:
      description: Edge token update request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EdgeTokenSpecUpdate"
      type: object
    v1EdgeTokens:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            expiry: 2000-01-23T04:56:07.000+00:00
            defaultProject:
              uid: uid
              name: name
            token: token
          status:
            isActive: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            expiry: 2000-01-23T04:56:07.000+00:00
            defaultProject:
              uid: uid
              name: name
            token: token
          status:
            isActive: true
      properties:
        items:
          description: List of edge tokens
          items:
            $ref: "#/components/schemas/v1EdgeToken"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1EksAddon:
      description: EksAddon represents a EKS addon
      example:
        name: name
        serviceAccountRoleARN: serviceAccountRoleARN
        version: version
        conflictResolution: conflictResolution
      properties:
        conflictResolution:
          description: ConflictResolution is used to declare what should happen if
            there are parameter conflicts.
          type: string
        name:
          description: Name is the name of the addon
          type: string
        serviceAccountRoleARN:
          description: ServiceAccountRoleArn is the ARN of an IAM role to bind to
            the addons service account
          type: string
        version:
          description: Version is the version of the addon to use
          type: string
      required:
      - name
      - version
      type: object
    v1EksCloudClusterConfigEntity:
      description: EKS cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1EksClusterConfig"
      type: object
    v1EksCloudConfig:
      description: EksCloudConfig is the Schema for the ekscloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          machinePoolConfig:
          - isControlPlane: true
            capacityType: on-demand
            rootDeviceSize: 2
            instanceType: instanceType
            nodeRepaveInterval: 5
            additionalLabels:
              key: additionalLabels
            maxSize: 1
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            spotMarketOptions:
              maxPrice: maxPrice
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 7
            name: name
            minSize: 5
            amiType: amiType
            azs:
            - azs
            - azs
            enableAwsLaunchTemplate: true
            awsLaunchTemplate:
              imageLookupFormat: imageLookupFormat
              rootVolume:
                encrypted: true
                iops: 0
                encryptionKey: encryptionKey
                throughput: 6
                type: type
                deviceName: deviceName
              additionalSecurityGroups:
              - filters:
                - values:
                  - values
                  - values
                  name: name
                - values:
                  - values
                  - values
                  name: name
                id: id
                arn: arn
              - filters:
                - values:
                  - values
                  - values
                  name: name
                - values:
                  - values
                  - values
                  name: name
                id: id
                arn: arn
              imageLookupBaseOS: imageLookupBaseOS
              ami:
                eksOptimizedLookupType: AmazonLinux
                id: id
              imageLookupOrg: imageLookupOrg
            subnetIds:
              key: subnetIds
          - isControlPlane: true
            capacityType: on-demand
            rootDeviceSize: 2
            instanceType: instanceType
            nodeRepaveInterval: 5
            additionalLabels:
              key: additionalLabels
            maxSize: 1
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            spotMarketOptions:
              maxPrice: maxPrice
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 7
            name: name
            minSize: 5
            amiType: amiType
            azs:
            - azs
            - azs
            enableAwsLaunchTemplate: true
            awsLaunchTemplate:
              imageLookupFormat: imageLookupFormat
              rootVolume:
                encrypted: true
                iops: 0
                encryptionKey: encryptionKey
                throughput: 6
                type: type
                deviceName: deviceName
              additionalSecurityGroups:
              - filters:
                - values:
                  - values
                  - values
                  name: name
                - values:
                  - values
                  - values
                  name: name
                id: id
                arn: arn
              - filters:
                - values:
                  - values
                  - values
                  name: name
                - values:
                  - values
                  - values
                  name: name
                id: id
                arn: arn
              imageLookupBaseOS: imageLookupBaseOS
              ami:
                eksOptimizedLookupType: AmazonLinux
                id: id
              imageLookupOrg: imageLookupOrg
            subnetIds:
              key: subnetIds
          clusterConfig:
            encryptionConfig:
              provider: provider
              isEnabled: true
              resources:
              - resources
              - resources
            sshKeyName: sshKeyName
            endpointAccess:
              private: true
              public: true
              publicCIDRs:
              - publicCIDRs
              - publicCIDRs
              privateCIDRs:
              - privateCIDRs
              - privateCIDRs
            bastionDisabled: true
            addons:
            - name: name
              serviceAccountRoleARN: serviceAccountRoleARN
              version: version
              conflictResolution: conflictResolution
            - name: name
              serviceAccountRoleARN: serviceAccountRoleARN
              version: version
              conflictResolution: conflictResolution
            vpcId: vpcId
            region: region
            controlPlaneLoadBalancer: controlPlaneLoadBalancer
          fargateProfiles:
          - additionalTags:
              key: additionalTags
            name: name
            selectors:
            - namespace: namespace
              labels:
                key: labels
            - namespace: namespace
              labels:
                key: labels
            subnetIds:
            - subnetIds
            - subnetIds
          - additionalTags:
              key: additionalTags
            name: name
            selectors:
            - namespace: namespace
              labels:
                key: labels
            - namespace: namespace
              labels:
                key: labels
            subnetIds:
            - subnetIds
            - subnetIds
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1EksCloudConfigSpec"
      type: object
    v1EksCloudConfigSpec:
      description: EksCloudConfigSpec defines the cloud configuration input by user
      example:
        machinePoolConfig:
        - isControlPlane: true
          capacityType: on-demand
          rootDeviceSize: 2
          instanceType: instanceType
          nodeRepaveInterval: 5
          additionalLabels:
            key: additionalLabels
          maxSize: 1
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          spotMarketOptions:
            maxPrice: maxPrice
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 7
          name: name
          minSize: 5
          amiType: amiType
          azs:
          - azs
          - azs
          enableAwsLaunchTemplate: true
          awsLaunchTemplate:
            imageLookupFormat: imageLookupFormat
            rootVolume:
              encrypted: true
              iops: 0
              encryptionKey: encryptionKey
              throughput: 6
              type: type
              deviceName: deviceName
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            imageLookupBaseOS: imageLookupBaseOS
            ami:
              eksOptimizedLookupType: AmazonLinux
              id: id
            imageLookupOrg: imageLookupOrg
          subnetIds:
            key: subnetIds
        - isControlPlane: true
          capacityType: on-demand
          rootDeviceSize: 2
          instanceType: instanceType
          nodeRepaveInterval: 5
          additionalLabels:
            key: additionalLabels
          maxSize: 1
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          spotMarketOptions:
            maxPrice: maxPrice
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 7
          name: name
          minSize: 5
          amiType: amiType
          azs:
          - azs
          - azs
          enableAwsLaunchTemplate: true
          awsLaunchTemplate:
            imageLookupFormat: imageLookupFormat
            rootVolume:
              encrypted: true
              iops: 0
              encryptionKey: encryptionKey
              throughput: 6
              type: type
              deviceName: deviceName
            additionalSecurityGroups:
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            - filters:
              - values:
                - values
                - values
                name: name
              - values:
                - values
                - values
                name: name
              id: id
              arn: arn
            imageLookupBaseOS: imageLookupBaseOS
            ami:
              eksOptimizedLookupType: AmazonLinux
              id: id
            imageLookupOrg: imageLookupOrg
          subnetIds:
            key: subnetIds
        clusterConfig:
          encryptionConfig:
            provider: provider
            isEnabled: true
            resources:
            - resources
            - resources
          sshKeyName: sshKeyName
          endpointAccess:
            private: true
            public: true
            publicCIDRs:
            - publicCIDRs
            - publicCIDRs
            privateCIDRs:
            - privateCIDRs
            - privateCIDRs
          bastionDisabled: true
          addons:
          - name: name
            serviceAccountRoleARN: serviceAccountRoleARN
            version: version
            conflictResolution: conflictResolution
          - name: name
            serviceAccountRoleARN: serviceAccountRoleARN
            version: version
            conflictResolution: conflictResolution
          vpcId: vpcId
          region: region
          controlPlaneLoadBalancer: controlPlaneLoadBalancer
        fargateProfiles:
        - additionalTags:
            key: additionalTags
          name: name
          selectors:
          - namespace: namespace
            labels:
              key: labels
          - namespace: namespace
            labels:
              key: labels
          subnetIds:
          - subnetIds
          - subnetIds
        - additionalTags:
            key: additionalTags
          name: name
          selectors:
          - namespace: namespace
            labels:
              key: labels
          - namespace: namespace
            labels:
              key: labels
          subnetIds:
          - subnetIds
          - subnetIds
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1EksClusterConfig"
        fargateProfiles:
          items:
            $ref: "#/components/schemas/v1FargateProfile"
          type: array
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1EksMachinePoolConfig"
          type: array
      type: object
    v1EksClusterConfig:
      description: EksClusterConfig defines EKS specific config
      example:
        encryptionConfig:
          provider: provider
          isEnabled: true
          resources:
          - resources
          - resources
        sshKeyName: sshKeyName
        endpointAccess:
          private: true
          public: true
          publicCIDRs:
          - publicCIDRs
          - publicCIDRs
          privateCIDRs:
          - privateCIDRs
          - privateCIDRs
        bastionDisabled: true
        addons:
        - name: name
          serviceAccountRoleARN: serviceAccountRoleARN
          version: version
          conflictResolution: conflictResolution
        - name: name
          serviceAccountRoleARN: serviceAccountRoleARN
          version: version
          conflictResolution: conflictResolution
        vpcId: vpcId
        region: region
        controlPlaneLoadBalancer: controlPlaneLoadBalancer
      properties:
        addons:
          description: Addons defines the EKS addons to enable with the EKS cluster.
            This may be required for brownfield clusters
          items:
            $ref: "#/components/schemas/v1EksAddon"
          type: array
        bastionDisabled:
          description: BastionDisabled is the option to disable bastion node
          type: boolean
        controlPlaneLoadBalancer:
          description: "ControlPlaneLoadBalancer specifies how API server elb will\
            \ be configured, this field is optional, not provided, \"\", default =>\
            \ \"Internet-facing\" \"Internet-facing\" => \"Internet-facing\" \"internal\"\
            \ => \"internal\" For spectro saas setup we require to talk to the apiserver\
            \ from our cluster so ControlPlaneLoadBalancer should be \"\", not provided\
            \ or \"Internet-facing\""
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/v1EncryptionConfig"
        endpointAccess:
          $ref: "#/components/schemas/v1EksClusterConfigEndpointAccess"
        region:
          description: The AWS Region the cluster lives in.
          type: string
        sshKeyName:
          description: SSHKeyName specifies which EC2 SSH key can be used to access
            machines.
          type: string
        vpcId:
          description: "VPC Id to deploy cluster into should have one public and one\
            \ private subnet for the the cluster creation, this field is optional,\
            \ If VPC Id is not provided a fully managed VPC will be created"
          type: string
      required:
      - region
      type: object
    v1EksClusterConfigEndpointAccess:
      description: EndpointAccess specifies how control plane endpoints are accessible
      example:
        private: true
        public: true
        publicCIDRs:
        - publicCIDRs
        - publicCIDRs
        privateCIDRs:
        - privateCIDRs
        - privateCIDRs
      properties:
        private:
          description: Private points VPC-internal control plane access to the private
            endpoint
          type: boolean
        privateCIDRs:
          description: PrivateCIDRs specifies which blocks can access the private
            endpoint
          items:
            type: string
          type: array
        public:
          description: Public controls whether control plane endpoints are publicly
            accessible
          type: boolean
        publicCIDRs:
          description: PublicCIDRs specifies which blocks can access the public endpoint
          items:
            type: string
          type: array
      type: object
    v1EksFargateProfiles:
      description: Fargate profiles
      properties:
        fargateProfiles:
          items:
            $ref: "#/components/schemas/v1FargateProfile"
          type: array
      type: object
    v1EksMachineCloudConfigEntity:
      properties:
        amiType:
          description: ami type
          type: string
        awsLaunchTemplate:
          $ref: "#/components/schemas/v1AwsLaunchTemplate"
        azs:
          items:
            type: string
          type: array
        capacityType:
          default: on-demand
          description: EC2 instance capacity type
          enum:
          - on-demand
          - spot
          type: string
        enableAwsLaunchTemplate:
          description: flag to know if aws launch template is enabled
          type: boolean
        instanceType:
          description: instance type
          type: string
        rootDeviceSize:
          description: rootDeviceSize in GBs
          format: int64
          maximum: 2000
          minimum: 1
          type: integer
        spotMarketOptions:
          $ref: "#/components/schemas/v1SpotMarketOptions"
        subnets:
          items:
            $ref: "#/components/schemas/v1EksSubnetEntity"
          type: array
      type: object
    v1EksMachinePoolConfig:
      example:
        isControlPlane: true
        capacityType: on-demand
        rootDeviceSize: 2
        instanceType: instanceType
        nodeRepaveInterval: 5
        additionalLabels:
          key: additionalLabels
        maxSize: 1
        instanceConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          cpuSet: 0
          category: category
          memoryMiB: 1
        spotMarketOptions:
          maxPrice: maxPrice
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 7
        name: name
        minSize: 5
        amiType: amiType
        azs:
        - azs
        - azs
        enableAwsLaunchTemplate: true
        awsLaunchTemplate:
          imageLookupFormat: imageLookupFormat
          rootVolume:
            encrypted: true
            iops: 0
            encryptionKey: encryptionKey
            throughput: 6
            type: type
            deviceName: deviceName
          additionalSecurityGroups:
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          - filters:
            - values:
              - values
              - values
              name: name
            - values:
              - values
              - values
              name: name
            id: id
            arn: arn
          imageLookupBaseOS: imageLookupBaseOS
          ami:
            eksOptimizedLookupType: AmazonLinux
            id: id
          imageLookupOrg: imageLookupOrg
        subnetIds:
          key: subnetIds
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        amiType:
          description: ami type
          type: string
        awsLaunchTemplate:
          $ref: "#/components/schemas/v1AwsLaunchTemplate"
        azs:
          description: AZs is only used for dynamic placement
          items:
            type: string
          type: array
        capacityType:
          default: on-demand
          description: EC2 instance capacity type
          enum:
          - on-demand
          - spot
          type: string
        enableAwsLaunchTemplate:
          description: flag to know if aws launch template is enabled
          type: boolean
        instanceConfig:
          $ref: "#/components/schemas/v1InstanceConfig"
        instanceType:
          description: instance type
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        rootDeviceSize:
          description: rootDeviceSize in GBs
          format: int64
          type: integer
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        spotMarketOptions:
          $ref: "#/components/schemas/v1SpotMarketOptions"
        subnetIds:
          additionalProperties:
            type: string
          description: "AZ to subnet mapping filled by ally from hubble SubnetIDs\
            \ [\"us-west-2d\"] = \"subnet-079b6061\" This field is optional If we\
            \ don't provide a subnetId then by default the first private subnet from\
            \ the AZ will be picked up for deployment"
          type: object
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      required:
      - isControlPlane
      type: object
    v1EksMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EksMachineCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1EksSubnetEntity:
      properties:
        az:
          type: string
        id:
          type: string
      type: object
    v1EncryptionConfig:
      description: EncryptionConfig specifies the encryption configuration for the
        EKS clsuter.
      example:
        provider: provider
        isEnabled: true
        resources:
        - resources
        - resources
      properties:
        isEnabled:
          description: Is encryption configuration enabled for the cluster
          type: boolean
        provider:
          description: Provider specifies the ARN or alias of the CMK (in AWS KMS)
          type: string
        resources:
          description: Resources specifies the resources to be encrypted
          items:
            type: string
          type: array
      type: object
    v1Error:
      properties:
        code:
          type: string
        details:
          properties: {}
          type: object
        message:
          type: string
        ref:
          type: string
      type: object
    v1Event:
      description: Describes the component event details
      example:
        severity: severity
        reason: reason
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        involvedObject:
          uid: uid
          kind: kind
          name: name
        relatedObject:
          uid: uid
          kind: spectrocluster
          name: name
        source:
          component: component
          host: host
        message: message
      properties:
        involvedObject:
          $ref: "#/components/schemas/v1ObjectReference"
        message:
          description: Describes message associated with the event
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        reason:
          description: Describes the reason for the event
          type: string
        relatedObject:
          $ref: "#/components/schemas/v1EventRelatedObject"
        severity:
          description: Describes the gravitas for the event
          type: string
        source:
          $ref: "#/components/schemas/v1EventSource"
      type: object
    v1EventRelatedObject:
      description: Object for which the event is related
      example:
        uid: uid
        kind: spectrocluster
        name: name
      properties:
        kind:
          enum:
          - spectrocluster
          - edgehost
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1EventSource:
      description: Describes the origin for the event
      example:
        component: component
        host: host
      properties:
        component:
          description: Describes the component where event originated
          type: string
        host:
          description: Describes the host where event originated
          type: string
      type: object
    v1Events:
      description: An array of component events items
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - severity: severity
          reason: reason
          metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          involvedObject:
            uid: uid
            kind: kind
            name: name
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          source:
            component: component
            host: host
          message: message
        - severity: severity
          reason: reason
          metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          involvedObject:
            uid: uid
            kind: kind
            name: name
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          source:
            component: component
            host: host
          message: message
      properties:
        items:
          description: Describes a list of returned component events
          items:
            $ref: "#/components/schemas/v1Event"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1EventsObjectsEntity:
      properties:
        resourceType:
          type: string
        resourceUid:
          type: string
      required:
      - resourceType
      - resourceUid
      type: object
    v1EventsRelatedObjectsEntity:
      properties:
        relatedObjectUids:
          description: List of uids of the related object
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - relatedObjectUids
      type: object
    v1FargateProfile:
      description: FargateProfile defines the desired state of FargateProfile
      example:
        additionalTags:
          key: additionalTags
        name: name
        selectors:
        - namespace: namespace
          labels:
            key: labels
        - namespace: namespace
          labels:
            key: labels
        subnetIds:
        - subnetIds
        - subnetIds
      properties:
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to AWS resources\
            \ managed by the AWS provider, in addition to the ones added by default."
          type: object
        name:
          description: name specifies the profile name.
          type: string
        selectors:
          description: Selectors specify fargate pod selectors.
          items:
            $ref: "#/components/schemas/v1FargateSelector"
          type: array
        subnetIds:
          description: SubnetIDs specifies which subnets are used for the auto scaling
            group of this nodegroup.
          items:
            type: string
          type: array
      required:
      - name
      type: object
    v1FargateSelector:
      description: FargateSelector specifies a selector for pods that should run on
        this fargate pool
      example:
        namespace: namespace
        labels:
          key: labels
      properties:
        labels:
          additionalProperties:
            type: string
          description: Labels specifies which pod labels this selector should match.
          type: object
        namespace:
          description: Namespace specifies which namespace this selector should match.
          type: string
      required:
      - namespace
      type: object
    v1Feature:
      description: Feature response
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          docLink: docLink
          description: description
          key: key
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1FeatureSpec"
      type: object
    v1FeatureSpec:
      description: Feature spec
      example:
        docLink: docLink
        description: description
        key: key
      properties:
        description:
          description: Feature description
          type: string
        docLink:
          description: Feature doc link
          type: string
        key:
          description: Feature key
          type: string
      type: object
    v1FeatureUpdate:
      description: Feature update spec
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1FeatureUpdateSpec"
      type: object
    v1FeatureUpdateSpec:
      description: Feature update spec
      properties:
        description:
          description: Feature description
          type: string
        docLink:
          description: Feature doc link
          type: string
      type: object
    v1Features:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            docLink: docLink
            description: description
            key: key
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            docLink: docLink
            description: description
            key: key
      properties:
        items:
          description: List of features
          items:
            $ref: "#/components/schemas/v1Feature"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1FilterArray:
      properties:
        beginsWith:
          items:
            type: string
          nullable: true
          type: array
        eq:
          items:
            type: string
          nullable: true
          type: array
        ignoreCase:
          default: true
          type: boolean
        ne:
          items:
            type: string
          nullable: true
          type: array
      type: object
    v1FilterIntRange:
      properties:
        eq:
          format: int32
          nullable: true
          type: integer
        gt:
          format: int32
          nullable: true
          type: integer
        gte:
          format: int32
          nullable: true
          type: integer
        lt:
          format: int32
          nullable: true
          type: integer
        lte:
          format: int32
          nullable: true
          type: integer
        ne:
          format: int32
          nullable: true
          type: integer
      type: object
    v1FilterMetadata:
      description: Filter metadata object
      example:
        uid: uid
        name: name
        filterType: filterType
      properties:
        filterType:
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1FilterNumberRange:
      properties:
        eq:
          nullable: true
          type: number
        gt:
          nullable: true
          type: number
        gte:
          nullable: true
          type: number
        lt:
          nullable: true
          type: number
        lte:
          nullable: true
          type: number
        ne:
          nullable: true
          type: number
      type: object
    v1FilterString:
      properties:
        beginsWith:
          nullable: true
          type: string
        contains:
          nullable: true
          type: string
        eq:
          nullable: true
          type: string
        ignoreCase:
          default: true
          type: boolean
        ne:
          nullable: true
          type: string
      type: object
    v1FilterSummary:
      description: Filter summary object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          filterType: filterType
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1FilterSummarySpec"
      type: object
    v1FilterSummarySpec:
      example:
        filterType: filterType
      properties:
        filterType:
          type: string
      type: object
    v1FilterVersionString:
      properties:
        beginsWith:
          nullable: true
          type: string
        eq:
          nullable: true
          type: string
        gt:
          nullable: true
          type: string
        lt:
          nullable: true
          type: string
        ne:
          nullable: true
          type: string
      type: object
    v1FiltersMetadata:
      example:
        items:
        - uid: uid
          name: name
          filterType: filterType
        - uid: uid
          name: name
          filterType: filterType
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1FilterMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1FiltersSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            filterType: filterType
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            filterType: filterType
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1FilterSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1FipsSettings:
      description: FIPS configuration
      example:
        fipsPackConfig:
          mode: nonFipsDisabled
        fipsClusterFeatureConfig:
          mode: nonFipsDisabled
        fipsClusterImportConfig:
          mode: nonFipsDisabled
      properties:
        fipsClusterFeatureConfig:
          $ref: "#/components/schemas/v1NonFipsConfig"
        fipsClusterImportConfig:
          $ref: "#/components/schemas/v1NonFipsConfig"
        fipsPackConfig:
          $ref: "#/components/schemas/v1NonFipsConfig"
      type: object
    v1FreemiumUsage:
      example:
        usage: 5.962133916683182
      properties:
        usage:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1FreemiumUsageLimit:
      example:
        activeClusters: 0
        overageUsage: 6.027456183070403
        usage: 1.4658129805029452
      properties:
        activeClusters:
          type: integer
          x-omitempty: false
        overageUsage:
          type: number
          x-omitempty: false
        usage:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1GPUDeviceSpec:
      example:
        addresses:
          key: addresses
        vendor: vendor
        model: model
      properties:
        addresses:
          additionalProperties:
            type: string
          description: |
            Addresses is a map of PCI device entry name to its addresses.
            Example entry would be "11:00.0 VGA compatible controller [0300]: NVIDIA
            Corporation Device [10de:1eb1] (rev a1)"- > 0000_11_00_0" The address is
            BDF (Bus Device Function) identifier format seperated by underscores. The
            first 4 bits are almost always 0000. In the above example 11 is Bus, 00
            is Device,0 is function. The values of these addreses are expected in hexadecimal
            format
          type: object
        model:
          description: "Model is the model of GPU, for a given vendor, for eg., TU104GL\
            \ [Tesla T4]"
          type: string
        vendor:
          description: "Vendor is the GPU vendor, for eg., NVIDIA or AMD"
          type: string
      type: object
    v1GcpAccount:
      description: GCP account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          jsonCredentials: jsonCredentials
          jsonCredentialsFileName: jsonCredentialsFileName
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GcpAccountSpec"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1GcpAccountEntity:
      description: GCP account information
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GcpAccountEntitySpec"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1GcpAccountEntitySpec:
      example:
        jsonCredentialsFileUid: jsonCredentialsFileUid
        jsonCredentials: jsonCredentials
      properties:
        jsonCredentials:
          description: Gcp cloud account json credentials
          type: string
        jsonCredentialsFileUid:
          description: Deprecated - Use jsonCredentials for Gcp account credentials;
            Reference of the credentials stored in the file
          type: string
      type: object
    v1GcpAccountNameValidateSpec:
      description: Gcp cloud account name validate spec
      properties:
        bucketName:
          description: Bucket name in the GCP
          type: string
        credentials:
          $ref: "#/components/schemas/v1GcpAccountValidateSpec"
        projectId:
          description: ProjectId in the GCP
          type: string
      required:
      - bucketName
      - credentials
      type: object
    v1GcpAccountSpec:
      example:
        jsonCredentials: jsonCredentials
        jsonCredentialsFileName: jsonCredentialsFileName
      properties:
        jsonCredentials:
          description: Gcp cloud account json credentials
          type: string
        jsonCredentialsFileName:
          description: Reference of the credentials stored in the file
          type: string
      type: object
    v1GcpAccountValidateSpec:
      description: Gcp cloud account entity which takes json credentials or reference
        to the file where credentials are stored
      properties:
        jsonCredentials:
          description: Gcp cloud account json credentials
          type: string
        jsonCredentialsFileUid:
          description: Deprecated - Use jsonCredentials for Gcp account credentials;
            Reference of the credentials stored in the file
          type: string
      type: object
    v1GcpAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            jsonCredentials: jsonCredentials
            jsonCredentialsFileName: jsonCredentialsFileName
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            jsonCredentials: jsonCredentials
            jsonCredentialsFileName: jsonCredentialsFileName
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1GcpAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1GcpCloudAccountValidateEntity:
      description: Gcp cloud account spec
      properties:
        spec:
          $ref: "#/components/schemas/v1GcpAccountValidateSpec"
      type: object
    v1GcpCloudClusterConfigEntity:
      description: Gcp cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1GcpClusterConfig"
      type: object
    v1GcpCloudConfig:
      description: GcpCloudConfig is the Schema for the gcpcloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          machinePoolConfig:
          - subnet: subnet
            isControlPlane: true
            rootDeviceSize: 5
            instanceType: instanceType
            nodeRepaveInterval: 1
            additionalLabels:
              key: additionalLabels
            maxSize: 0
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            minSize: 6
            azs:
            - azs
            - azs
            subnetIds:
              key: subnetIds
          - subnet: subnet
            isControlPlane: true
            rootDeviceSize: 5
            instanceType: instanceType
            nodeRepaveInterval: 1
            additionalLabels:
              key: additionalLabels
            maxSize: 0
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 5
            name: name
            minSize: 6
            azs:
            - azs
            - azs
            subnetIds:
              key: subnetIds
          clusterConfig:
            managedClusterConfig:
              location: location
              enableAutoPilot: true
            project: project
            region: region
            network: network
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          images:
            os: os
            name: name
            state: state
            region: region
          sourceImageId: sourceImageId
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          roleDigest:
            key: roleDigest
          ansibleRoleDigest: ansibleRoleDigest
          useCapiImage: true
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GcpCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1GcpCloudConfigStatus"
      type: object
    v1GcpCloudConfigSpec:
      description: GcpCloudConfigSpec defines the cloud configuration input by user
        This will translate to clusterspec/machinespec for cluster-api
      example:
        machinePoolConfig:
        - subnet: subnet
          isControlPlane: true
          rootDeviceSize: 5
          instanceType: instanceType
          nodeRepaveInterval: 1
          additionalLabels:
            key: additionalLabels
          maxSize: 0
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          minSize: 6
          azs:
          - azs
          - azs
          subnetIds:
            key: subnetIds
        - subnet: subnet
          isControlPlane: true
          rootDeviceSize: 5
          instanceType: instanceType
          nodeRepaveInterval: 1
          additionalLabels:
            key: additionalLabels
          maxSize: 0
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          minSize: 6
          azs:
          - azs
          - azs
          subnetIds:
            key: subnetIds
        clusterConfig:
          managedClusterConfig:
            location: location
            enableAutoPilot: true
          project: project
          region: region
          network: network
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1GcpClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1GcpMachinePoolConfig"
          type: array
      type: object
    v1GcpCloudConfigStatus:
      description: GcpCloudConfigStatus defines the observed state of GcpCloudConfig
        The cloudimage info built by Mold is stored here image should be mapped to
        a specific machinepool
      example:
        images:
          os: os
          name: name
          state: state
          region: region
        sourceImageId: sourceImageId
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        roleDigest:
          key: roleDigest
        ansibleRoleDigest: ansibleRoleDigest
        useCapiImage: true
        isAddonLayer: true
      properties:
        ansibleRoleDigest:
          description: For mold controller to identify if is there any changes in
            Pack
          type: string
        conditions:
          description: "spectroAnsibleProvisioner: should be added only once, subsequent\
            \ recocile will use the same provisioner SpectroAnsiblePacker bool `json:\"\
            spectroAnsiblePacker,omitempty\"`"
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        images:
          $ref: "#/components/schemas/v1GcpImage"
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
        roleDigest:
          additionalProperties:
            type: string
          description: this map will be for ansible roles present in each pack
          type: object
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        useCapiImage:
          description: "PackerVariableDigest string `json:\"packerDigest,omitempty\"\
            ` If no ansible roles found in Packs then Mold should tell Drive to use\
            \ capi image and not create custom image, because there is nothing to\
            \ add"
          type: boolean
      type: object
    v1GcpClusterConfig:
      description: Cluster level configuration for gcp cloud and applicable for all
        the machine pools
      example:
        managedClusterConfig:
          location: location
          enableAutoPilot: true
        project: project
        region: region
        network: network
      properties:
        managedClusterConfig:
          $ref: "#/components/schemas/v1GcpManagedClusterConfig"
        network:
          description: "NetworkName if empty would create VPC Network in auto mode.\
            \ If provided, custom VPC network will be used"
          type: string
        project:
          description: Name of the project in which cluster is to be deployed
          type: string
        region:
          description: GCP region for the cluster
          type: string
      required:
      - project
      - region
      type: object
    v1GcpImage:
      description: Refers to GCP image
      example:
        os: os
        name: name
        state: state
        region: region
      properties:
        name:
          type: string
        os:
          type: string
        region:
          type: string
        state:
          type: string
      type: object
    v1GcpImageUrlEntity:
      description: Gcp image url entity
      example:
        imageFamily: imageFamily
        imageUrl: imageUrl
        name: name
      properties:
        imageFamily:
          description: The name of the image family to which this image belongs
          type: string
        imageUrl:
          description: Server-defined URL for the resource
          type: string
        name:
          description: Name of the resource
          type: string
      type: object
    v1GcpInstanceTypes:
      description: Retrieves a list of GCP instance types
      example:
        instanceTypes:
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
        - cost:
            price:
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
            - onDemand: 0.8008281904610115
              os: linux
              spot: 6.027456183070403
          memory: 5.637376656633329
          price: 2.3021358869347655
          nonSupportedZones:
          - nonSupportedZones
          - nonSupportedZones
          supportedArchitectures:
          - supportedArchitectures
          - supportedArchitectures
          cpu: 1.4658129805029452
          category: category
          type: type
          gpu: 5.962133916683182
      properties:
        instanceTypes:
          description: List of GCP instance types
          items:
            $ref: "#/components/schemas/v1InstanceType"
          type: array
      type: object
    v1GcpMachine:
      description: GCP cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          image: image
          rootDeviceSize: 6
          zone: zone
          instanceType: instanceType
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
            publicIp: publicIp
          project: project
          instanceConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            cpuSet: 0
            category: category
            memoryMiB: 1
          region: region
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GcpMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1GcpMachinePoolCloudConfigEntity:
      properties:
        azs:
          items:
            type: string
          type: array
        instanceType:
          type: string
        rootDeviceSize:
          description: Size of root volume in GB. Default is 30GB
          format: int64
          type: integer
        subnet:
          description: "Subnet specifies the subnetwork to use for given instance.\
            \ If not specified, the first subnet from the cluster region and network\
            \ is used"
          type: string
        subnets:
          items:
            $ref: "#/components/schemas/v1GcpSubnetEntity"
          type: array
      required:
      - instanceType
      type: object
    v1GcpMachinePoolConfig:
      example:
        subnet: subnet
        isControlPlane: true
        rootDeviceSize: 5
        instanceType: instanceType
        nodeRepaveInterval: 1
        additionalLabels:
          key: additionalLabels
        maxSize: 0
        instanceConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          cpuSet: 0
          category: category
          memoryMiB: 1
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 5
        name: name
        minSize: 6
        azs:
        - azs
        - azs
        subnetIds:
          key: subnetIds
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          items:
            type: string
          type: array
        instanceConfig:
          $ref: "#/components/schemas/v1InstanceConfig"
        instanceType:
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        rootDeviceSize:
          description: Size of root volume in GB. Default is 30GB
          format: int64
          type: integer
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        subnet:
          description: "Subnet specifies the subnetwork to use for given instance.\
            \ If not specified, the first subnet from the cluster region and network\
            \ is used"
          type: string
        subnetIds:
          additionalProperties:
            type: string
          description: "AZ to subnet mapping filled by ally from hubble SubnetIDs\
            \ [\"us-west-2d\"] = \"subnet-079b6061\" This field is optional If we\
            \ don't provide a subnetId then by default the first private subnet from\
            \ the AZ will be picked up for deployment"
          type: object
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - instanceType
      - isControlPlane
      type: object
    v1GcpMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1GcpMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1GcpMachineSpec:
      description: GCP cloud VM definition spec
      example:
        image: image
        rootDeviceSize: 6
        zone: zone
        instanceType: instanceType
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
          publicIp: publicIp
        project: project
        instanceConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          cpuSet: 0
          category: category
          memoryMiB: 1
        region: region
      properties:
        image:
          type: string
        instanceConfig:
          $ref: "#/components/schemas/v1InstanceConfig"
        instanceType:
          type: string
        nics:
          items:
            $ref: "#/components/schemas/v1GcpNic"
          type: array
        project:
          type: string
        region:
          type: string
        rootDeviceSize:
          format: int64
          type: integer
        zone:
          type: string
      required:
      - instanceType
      type: object
    v1GcpMachines:
      description: GCP machine list
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            image: image
            rootDeviceSize: 6
            zone: zone
            instanceType: instanceType
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            project: project
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            region: region
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            image: image
            rootDeviceSize: 6
            zone: zone
            instanceType: instanceType
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            project: project
            instanceConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              cpuSet: 0
              category: category
              memoryMiB: 1
            region: region
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1GcpMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1GcpManagedClusterConfig:
      description: GCP managed cluster config
      example:
        location: location
        enableAutoPilot: true
      properties:
        enableAutoPilot:
          description: EnableAutopilot indicates whether to enable autopilot for this
            GKE cluster
          type: boolean
        location:
          description: Can be Region or Zone
          type: string
      type: object
    v1GcpNetwork:
      description: GCP network enity is a virtual version of a physical network
      example:
        name: name
        subnets:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        name:
          description: GCP network name
          type: string
        subnets:
          description: List of GCP subnet
          items:
            $ref: "#/components/schemas/v1GcpSubnet"
          type: array
      type: object
    v1GcpNetworks:
      description: List of GCP networks
      example:
        networks:
        - name: name
          subnets:
          - name: name
            id: id
          - name: name
            id: id
        - name: name
          subnets:
          - name: name
            id: id
          - name: name
            id: id
      properties:
        networks:
          items:
            $ref: "#/components/schemas/v1GcpNetwork"
          type: array
      type: object
    v1GcpNic:
      description: GCP network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 0
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1GcpProject:
      description: GCP project organizes all Google Cloud resources
      example:
        name: name
        id: id
      properties:
        id:
          description: GCP project id
          type: string
        name:
          description: GCP project name
          type: string
      type: object
    v1GcpProjects:
      description: List of GCP Projects
      example:
        projects:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        projects:
          description: List of GCP Projects
          items:
            $ref: "#/components/schemas/v1GcpProject"
          type: array
      type: object
    v1GcpRegion:
      description: Geographical region made up of zones where you can host your GCP
        resources
      example:
        name: name
        status: status
      properties:
        name:
          description: GCP region name
          type: string
        status:
          description: GCP region status
          type: string
      type: object
    v1GcpRegions:
      description: List of GCP Regions
      example:
        regions:
        - name: name
          status: status
        - name: name
          status: status
      properties:
        regions:
          items:
            $ref: "#/components/schemas/v1GcpRegion"
          type: array
      type: object
    v1GcpStorageConfig:
      description: GCP storage config object
      example:
        bucketName: bucketName
        credentials:
          jsonCredentialsFileUid: jsonCredentialsFileUid
          jsonCredentials: jsonCredentials
        projectId: projectId
      properties:
        bucketName:
          description: GCP storage bucket name
          type: string
        credentials:
          $ref: "#/components/schemas/v1GcpAccountEntitySpec"
        projectId:
          description: GCP project id
          type: string
      required:
      - bucketName
      - credentials
      type: object
    v1GcpStorageTypes:
      description: List of GCP storage types
      example:
        storageTypes:
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
        - throughputCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          cost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          iopsCost:
            discountedUsage: discountedUsage
            price:
            - price: price
              limit: limit
            - price: price
              limit: limit
          kind: kind
          name: name
      properties:
        storageTypes:
          items:
            $ref: "#/components/schemas/v1StorageType"
          type: array
      type: object
    v1GcpSubnet:
      description: "Subnets are regional resources, and have IP address ranges associated\
        \ with them"
      example:
        name: name
        id: id
      properties:
        id:
          description: GCP subnet id
          type: string
        name:
          description: GCP subnet name
          type: string
      type: object
    v1GcpSubnetEntity:
      properties:
        az:
          type: string
        id:
          type: string
      type: object
    v1GcpZone:
      description: A zone is a deployment area for Google Cloud resources within a
        region
      example:
        name: name
      properties:
        name:
          description: GCP zone name
          type: string
      type: object
    v1GcpZones:
      description: List of GCP zones
      example:
        zones:
        - name: name
        - name: name
      properties:
        zones:
          items:
            $ref: "#/components/schemas/v1GcpZone"
          type: array
      type: object
    v1GenericCloudClusterConfigEntity:
      description: Generic cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1GenericClusterConfig"
      type: object
    v1GenericCloudConfig:
      description: Generic CloudConfig for all cloud types
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          edgeHostRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          machinePoolConfig:
          - isControlPlane: true
            size: 5
            rootDeviceSize: 5
            instanceType: instanceType
            name: name
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
          - isControlPlane: true
            size: 5
            rootDeviceSize: 5
            instanceType: instanceType
            name: name
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
          clusterConfig:
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            region: region
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GenericCloudConfigSpec"
      type: object
    v1GenericCloudConfigSpec:
      description: Generic CloudConfig spec for all cloud types
      example:
        edgeHostRefs:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        machinePoolConfig:
        - isControlPlane: true
          size: 5
          rootDeviceSize: 5
          instanceType: instanceType
          name: name
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
        - isControlPlane: true
          size: 5
          rootDeviceSize: 5
          instanceType: instanceType
          name: name
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
        clusterConfig:
          instanceType:
            diskGiB: 0
            numCPUs: 1
            name: name
            memoryMiB: 6
          region: region
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1GenericClusterConfig"
        edgeHostRefs:
          description: Appliances (Edge Host) uids
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1GenericMachinePoolConfig"
          type: array
      type: object
    v1GenericClusterConfig:
      description: Generic cluster config
      example:
        instanceType:
          diskGiB: 0
          numCPUs: 1
          name: name
          memoryMiB: 6
        region: region
      properties:
        instanceType:
          $ref: "#/components/schemas/v1GenericInstanceType"
        region:
          description: cluster region information
          type: string
      type: object
    v1GenericInstanceType:
      example:
        diskGiB: 0
        numCPUs: 1
        name: name
        memoryMiB: 6
      properties:
        diskGiB:
          description: "DiskGiB is the size of a virtual machine's disk, in GiB"
          format: int32
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a virtual machine's memory, in MiB"
          format: int64
          type: integer
        name:
          type: string
        numCPUs:
          description: NumCPUs is the number of virtual processors in a virtual machine
          format: int32
          type: integer
      type: object
    v1GenericMachine:
      description: Generic cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          hostName: hostName
          sshKeyName: sshKeyName
          imageId: imageId
          instanceType:
            diskGiB: 0
            numCPUs: 1
            name: name
            memoryMiB: 6
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
            publicIp: publicIp
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1GenericMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1GenericMachinePoolConfig:
      example:
        isControlPlane: true
        size: 5
        rootDeviceSize: 5
        instanceType: instanceType
        name: name
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
      properties:
        instanceType:
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        name:
          type: string
        rootDeviceSize:
          description: Size of root volume in GB. Default is 30GB
          format: int64
          type: integer
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - isControlPlane
      type: object
    v1GenericMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1GenericClusterConfig"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1GenericMachineSpec:
      description: Generic cloud VM definition spec
      example:
        hostName: hostName
        sshKeyName: sshKeyName
        imageId: imageId
        instanceType:
          diskGiB: 0
          numCPUs: 1
          name: name
          memoryMiB: 6
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
          publicIp: publicIp
      properties:
        hostName:
          type: string
        imageId:
          type: string
        instanceType:
          $ref: "#/components/schemas/v1GenericInstanceType"
        nics:
          items:
            $ref: "#/components/schemas/v1GenericNic"
          type: array
        sshKeyName:
          type: string
      type: object
    v1GenericMachines:
      description: Generic machine list
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostName: hostName
            sshKeyName: sshKeyName
            imageId: imageId
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostName: hostName
            sshKeyName: sshKeyName
            imageId: imageId
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
              publicIp: publicIp
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1GenericMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1GenericNic:
      description: Generic network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 0
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1GeolocationLatlong:
      description: Geolocation Latlong entity
      example:
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
      properties:
        latitude:
          description: Latitude of a resource
          format: float64
          type: number
          x-omitempty: false
        longitude:
          description: Longitude of a resource
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1GitRepoFileContent:
      example:
        path: path
        repoName: repoName
        name: name
        sha: sha
        content: content
      properties:
        content:
          type: string
        name:
          type: string
        path:
          type: string
        repoName:
          type: string
        sha:
          type: string
      type: object
    v1GrpcClientMonitoringData:
      properties:
        clientUid:
          type: string
        receivedBroadcastCount:
          type: integer
        receivedPublishedCount:
          type: integer
        sentBroadcastCount:
          type: integer
        sentPublishedCount:
          type: integer
        subjects:
          items:
            type: string
          type: array
      type: object
    v1GrpcConfiguration:
      description: Describes the response that contains the grpc configuration to
        establish connection
      properties:
        preferredServer:
          $ref: "#/components/schemas/v1GrpcEndpoint"
        servers:
          items:
            $ref: "#/components/schemas/v1GrpcEndpoint"
          type: array
          uniqueItems: true
      type: object
    v1GrpcEndpoint:
      properties:
        endpoint:
          description: Describes the URL where the client has to connect to the grpc
            server
          type: string
        tls:
          $ref: "#/components/schemas/v1GrpcEndpoint_tls"
      type: object
    v1GrpcServerMonitoringData:
      properties:
        clients:
          additionalProperties:
            $ref: "#/components/schemas/v1GrpcClientMonitoringData"
          type: object
        isError:
          type: boolean
        messageLogs:
          items:
            type: string
          type: array
        subjects:
          additionalProperties:
            $ref: "#/components/schemas/v1GrpcSubjectMonitoringData"
          type: object
        totalClients:
          type: integer
        totalSubjects:
          type: integer
      type: object
    v1GrpcServersMonitoringData:
      properties:
        servers:
          additionalProperties:
            $ref: "#/components/schemas/v1GrpcServerMonitoringData"
          type: object
      type: object
    v1GrpcSubjectMonitoringData:
      properties:
        broadcastCount:
          type: integer
        clients:
          items:
            type: string
          type: array
        publishedCount:
          type: integer
        subject:
          type: string
      type: object
    v1HealthCheck:
      properties:
        isHealthy:
          type: boolean
          x-omitempty: false
        message:
          type: string
        name:
          type: string
      type: object
    v1HealthLocks:
      properties:
        expiredLocks:
          items:
            $ref: "#/components/schemas/v1Lock"
          type: array
          uniqueItems: true
      type: object
    v1HealthPing:
      properties:
        msg:
          type: string
      type: object
    v1HelmChartOption:
      description: If chart options are provided then the specified chart is validated
        first and synced immediately. If the specified chart is not found in the specified
        registry then creation is cancelled.
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    v1HelmRegistries:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registryUid: registryUid
            endpoint: endpoint
            auth:
              password: password
              tls:
                certificate: certificate
                insecureSkipVerify: true
                ca: ca
                enabled: true
                key: key
              type: noAuth
              token: token
              username: username
            scope: scope
            name: name
            isPrivate: true
          status:
            helmSyncStatus:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registryUid: registryUid
            endpoint: endpoint
            auth:
              password: password
              tls:
                certificate: certificate
                insecureSkipVerify: true
                ca: ca
                enabled: true
                key: key
              type: noAuth
              token: token
              username: username
            scope: scope
            name: name
            isPrivate: true
          status:
            helmSyncStatus:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1HelmRegistry"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1HelmRegistriesSummary:
      description: Helm Registries Summary
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            endpoint: endpoint
            scope: scope
            isPrivate: true
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            endpoint: endpoint
            scope: scope
            isPrivate: true
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1HelmRegistrySummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1HelmRegistry:
      description: Helm registry information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          registryUid: registryUid
          endpoint: endpoint
          auth:
            password: password
            tls:
              certificate: certificate
              insecureSkipVerify: true
              ca: ca
              enabled: true
              key: key
            type: noAuth
            token: token
            username: username
          scope: scope
          name: name
          isPrivate: true
        status:
          helmSyncStatus:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1HelmRegistrySpec"
        status:
          $ref: "#/components/schemas/v1HelmRegistryStatus"
      type: object
    v1HelmRegistryCreateOption:
      description: Helm registry create options
      properties:
        charts:
          items:
            $ref: "#/components/schemas/v1HelmChartOption"
          type: array
          uniqueItems: true
        skipSync:
          type: boolean
      type: object
    v1HelmRegistryEntity:
      description: Helm registry information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1HelmRegistrySpecEntity"
      type: object
    v1HelmRegistrySpec:
      description: Helm registry credentials spec
      example:
        registryUid: registryUid
        endpoint: endpoint
        auth:
          password: password
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          type: noAuth
          token: token
          username: username
        scope: scope
        name: name
        isPrivate: true
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        endpoint:
          type: string
        isPrivate:
          type: boolean
          x-omitempty: false
        name:
          type: string
        registryUid:
          description: Helm registry uid
          type: string
        scope:
          type: string
      required:
      - auth
      - endpoint
      type: object
    v1HelmRegistrySpecEntity:
      description: Helm registry credentials spec
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        createOption:
          $ref: "#/components/schemas/v1HelmRegistryCreateOption"
        endpoint:
          type: string
        isPrivate:
          type: boolean
        name:
          type: string
        scope:
          type: string
      required:
      - auth
      - endpoint
      type: object
    v1HelmRegistrySpecSummary:
      description: Helm Registry spec summary
      example:
        endpoint: endpoint
        scope: scope
        isPrivate: true
      properties:
        endpoint:
          type: string
        isPrivate:
          type: boolean
          x-omitempty: false
        scope:
          type: string
      type: object
    v1HelmRegistryStatus:
      description: Status of the helm registry
      example:
        helmSyncStatus:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        helmSyncStatus:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1HelmRegistryStatusSummary:
      description: Helm registry status summary
      example:
        sync:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        sync:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1HelmRegistrySummary:
      description: Helm Registry summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          endpoint: endpoint
          scope: scope
          isPrivate: true
        status:
          sync:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1HelmRegistrySpecSummary"
        status:
          $ref: "#/components/schemas/v1HelmRegistryStatusSummary"
      type: object
    v1HostClusterConfig:
      example:
        clusterEndpoint:
          type: Ingress
          config:
            ingressConfig:
              port: 6
              host: host
            loadBalancerConfig:
              externalIPs:
              - externalIPs
              - externalIPs
              loadBalancerSourceRanges:
              - loadBalancerSourceRanges
              - loadBalancerSourceRanges
              externalTrafficPolicy: externalTrafficPolicy
        clusterGroup:
          uid: uid
          kind: kind
          name: name
        isHostCluster: false
        hostCluster:
          uid: uid
          kind: kind
          name: name
      properties:
        clusterEndpoint:
          $ref: "#/components/schemas/v1HostClusterEndpoint"
        clusterGroup:
          $ref: "#/components/schemas/v1ObjectReference"
        hostCluster:
          $ref: "#/components/schemas/v1ObjectReference"
        isHostCluster:
          default: false
          description: is enabled as host cluster
          type: boolean
          x-omitempty: false
      type: object
    v1HostClusterConfigEntity:
      properties:
        hostClusterConfig:
          $ref: "#/components/schemas/v1HostClusterConfig"
      type: object
    v1HostClusterConfigResponse:
      example:
        clusterGroup:
          uid: uid
          kind: kind
          name: name
      properties:
        clusterGroup:
          $ref: "#/components/schemas/v1ObjectReference"
      type: object
    v1HostClusterEndpoint:
      example:
        type: Ingress
        config:
          ingressConfig:
            port: 6
            host: host
          loadBalancerConfig:
            externalIPs:
            - externalIPs
            - externalIPs
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
      properties:
        config:
          $ref: "#/components/schemas/v1HostClusterEndpointConfig"
        type:
          description: is enabled as host cluster
          enum:
          - Ingress
          - LoadBalancer
          type: string
      type: object
    v1HostClusterEndpointConfig:
      example:
        ingressConfig:
          port: 6
          host: host
        loadBalancerConfig:
          externalIPs:
          - externalIPs
          - externalIPs
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          externalTrafficPolicy: externalTrafficPolicy
      properties:
        ingressConfig:
          $ref: "#/components/schemas/v1IngressConfig"
        loadBalancerConfig:
          $ref: "#/components/schemas/v1LoadBalancerConfig"
      type: object
    v1HttpPatch:
      example:
        op: add
        path: path
        from: from
        value: "{}"
      properties:
        from:
          description: A path to the pointer from which reference will be taken
          type: string
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          type: string
        path:
          description: A path to the pointer on which operation will be done
          type: string
        value:
          description: The value to be used within the operations.
          properties: {}
          type: object
      required:
      - op
      - path
      type: object
    v1HubbleInfo:
      properties:
        apiEndpoint:
          type: string
        apiPort:
          type: string
        uiEndpoint:
          type: string
        uiPort:
          type: string
      type: object
    v1HybridCluster:
      example:
        uid: uid
        name: name
        cloudConfigUid: cloudConfigUid
      properties:
        cloudConfigUid:
          description: Cloud config uid
          type: string
        name:
          description: Cluster name
          type: string
        uid:
          description: Cluster uid
          type: string
      type: object
    v1HybridClusterConfig:
      example:
        clusterUid: clusterUid
        enable: true
        hybridMachinePoolClusterRefs:
        - uid: uid
          cloudType: edge-native
        - uid: uid
          cloudType: edge-native
      properties:
        clusterUid:
          description: Parent cluster uid. Provided for hybrid (child) clusters only.
          type: string
        enable:
          description: "Flag differentiating if the cluster is an hybrid cluster or\
            \ not. True for a cluster with hybrid mode enabled, false for the actual\
            \ hybrid (child) clusters"
          type: boolean
        hybridMachinePoolClusterRefs:
          description: References to hybrid (child) clusters deployed within the hybrid
            cluster
          items:
            $ref: "#/components/schemas/v1HybridPoolClusterRef"
          type: array
      type: object
    v1HybridClusterMeta:
      description: Object identity meta of hybrid cluster
      example:
        uid: uid
        name: name
      properties:
        name:
          description: Name of the hybrid cluster
          type: string
        uid:
          description: Uid of the hybrid cluster
          type: string
      type: object
    v1HybridEdgeNativeMachineCloudConfig:
      description: HybridEdgeNativeMachineCloudConfig defines hybrid Edge-Native cluster's
        machine configurations
      example:
        hybridCluster:
          uid: uid
          name: name
          cloudConfigUid: cloudConfigUid
        edgeHosts:
        - hostName: hostName
          twoNodeCandidatePriority: primary
          hostUid: hostUid
          nic:
            nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          vpnServerIp: vpnServerIp
        - hostName: hostName
          twoNodeCandidatePriority: primary
          hostUid: hostUid
          nic:
            nicName: nicName
            subnet: subnet
            isDefault: true
            ip: ip
            dns:
            - dns
            - dns
            gateway: gateway
            macAddr: macAddr
          vpnServerIp: vpnServerIp
        archType: amd64
      properties:
        archType:
          $ref: "#/components/schemas/v1ArchType"
        edgeHosts:
          description: Edge host's configuration
          items:
            $ref: "#/components/schemas/v1EdgeNativeHybridMachinePoolHost"
          type: array
        hybridCluster:
          $ref: "#/components/schemas/v1HybridCluster"
      required:
      - archType
      - edgeHosts
      type: object
    v1HybridEdgeNativeMachinePoolConfig:
      description: HybridEdgeNativeMachinePoolConfig defines hybrid Edge-Native cluster's
        machine-pool configurations
      example:
        cloudConfig:
          hybridCluster:
            uid: uid
            name: name
            cloudConfigUid: cloudConfigUid
          edgeHosts:
          - hostName: hostName
            twoNodeCandidatePriority: primary
            hostUid: hostUid
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            vpnServerIp: vpnServerIp
          - hostName: hostName
            twoNodeCandidatePriority: primary
            hostUid: hostUid
            nic:
              nicName: nicName
              subnet: subnet
              isDefault: true
              ip: ip
              dns:
              - dns
              - dns
              gateway: gateway
              macAddr: macAddr
            vpnServerIp: vpnServerIp
          archType: amd64
        poolConfig:
          isControlPlane: true
          nodeRepaveInterval: 1
          additionalLabels:
            key: additionalLabels
          maxSize: 0
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 5
          name: name
          minSize: 6
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1HybridEdgeNativeMachineCloudConfig"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1HybridEdgeNativeMachinePoolConfigEntity:
      description: Hybrid Edge-Native cluster's machine-pool configuration request
        payload
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeHybridConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1HybridEdgeNativeMachinePoolConfigUpdateEntity:
      description: Hybrid Edge-Native cluster's machine-pool configuration update
        request payload
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeHybridMachineConfigEntity"
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeHybridClusterConfig"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      type: object
    v1HybridMachinePool:
      description: Metadata information related to a hybrid machine pool launched
        as part of an hybrid cluster
      example:
        uid: uid
        clusterUid: clusterUid
        cloudType: cloudType
        name: name
        cloudConfigUid: cloudConfigUid
        status:
          health:
            isHeartBeatFailed: true
            state: state
          state: state
      properties:
        cloudConfigUid:
          description: Cloud config uid associated with the hybrid machine pool
          type: string
        cloudType:
          description: Cloud type of the hybrid machine pool
          type: string
        clusterUid:
          description: Uid of the hybrid machine pool cluster
          type: string
        name:
          description: Name of the hybrid machine pool
          type: string
        status:
          $ref: "#/components/schemas/v1HybridMachinePoolStatus"
        uid:
          description: Uid of the hybrid machine pool
          type: string
      type: object
    v1HybridMachinePoolClusterHealth:
      description: Machine pool cluster meta health information
      example:
        isHeartBeatFailed: true
        state: state
      properties:
        isHeartBeatFailed:
          type: boolean
          x-omitempty: false
        state:
          type: string
      type: object
    v1HybridMachinePoolStatus:
      description: Get the hybrid machine pool's cluster status
      example:
        health:
          isHeartBeatFailed: true
          state: state
        state: state
      properties:
        health:
          $ref: "#/components/schemas/v1HybridMachinePoolClusterHealth"
        state:
          description: State of the hybrid machine pool
          type: string
      type: object
    v1HybridPoolClusterCloudType:
      default: edge-native
      description: Flag to indicate whether the pool is deployed in any cloud or an
        edge environment
      enum:
      - edge-native
      type: string
    v1HybridPoolClusterRef:
      example:
        uid: uid
        cloudType: edge-native
      properties:
        cloudType:
          $ref: "#/components/schemas/v1HybridPoolClusterCloudType"
        uid:
          description: Cluster uid
          type: string
      type: object
    v1IPPool:
      description: "IPPool defines static IPs available. Gateway, Prefix, Nameserver,\
        \ if defined, will be default values for all Pools"
      example:
        uid: uid
        prefix: 6
        pools:
        - subnet: subnet
          prefix: 0
          start: start
          end: end
          nameserver:
            addresses:
            - addresses
            - addresses
            search:
            - search
            - search
          gateway: gateway
        - subnet: subnet
          prefix: 0
          start: start
          end: end
          nameserver:
            addresses:
            - addresses
            - addresses
            search:
            - search
            - search
          gateway: gateway
        nameserver:
          addresses:
          - addresses
          - addresses
          search:
          - search
          - search
        gateway: gateway
      properties:
        gateway:
          description: Gateway is the gateway ip address
          type: string
        nameserver:
          $ref: "#/components/schemas/v1Nameserver"
        pools:
          description: Pools contains the list of IP addresses pools
          items:
            $ref: "#/components/schemas/v1Pool"
          type: array
        prefix:
          description: Prefix is the mask of the network as integer (max 128)
          format: int32
          type: integer
        uid:
          description: "UID is the UID of this IPPool, used by Hubble"
          type: string
      type: object
    v1IamRolesAnywhere:
      description: IamRolesAnywhere specifies the IAM Roles Anywhere configuration
        for the AWS/EKS cluster
      example:
        profileArn: profileArn
        roleArn: roleArn
        rootCaPrivateKey: rootCaPrivateKey
        rootCaCertificate: rootCaCertificate
        trustAnchorArn: trustAnchorArn
      properties:
        profileArn:
          description: ProfileARN specifies the IAM profile ARN
          type: string
        roleArn:
          description: RoleARN specifies the IAM role ARN to use
          type: string
        rootCaCertificate:
          description: RootCACertificate specifies the root CA certificate
          type: string
        rootCaPrivateKey:
          description: RootCAPrivateKey specifies the root CA private key
          type: string
        trustAnchorArn:
          description: TrustAnchorARN specifies the trust anchor ARN
          type: string
      type: object
    v1IdentityProvider:
      description: Describes a predefined Identity Provider (IDP)
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    v1IdentityProviders:
      description: Describes a list of predefined Identity Provider (IDP)
      items:
        $ref: "#/components/schemas/v1IdentityProvider"
      type: array
      uniqueItems: true
    v1ImportClusterConfig:
      properties:
        importMode:
          description: If the importMode is empty then cluster is imported with full
            permission mode. By default importMode is empty and cluster is imported
            in full permission mode.
          enum:
          - read-only
          type: string
        proxy:
          $ref: "#/components/schemas/v1ClusterProxySpec"
      type: object
    v1ImportEdgeHostConfig:
      properties:
        edgeHostUid:
          description: Deprecated. Use 'edgeHostUids' field
          type: string
        edgeHostUids:
          items:
            type: string
          type: array
      type: object
    v1IncludeClusterResourceMode:
      description: |
        Specifies the scope of cluster-wide resources to include in the backup based on the flag'--include-cluster-resources':
        - "Always": --include-cluster-resources=true, which includes all cluster-wide resources; restores only on the original cluster.
        - "Auto": don't specify --include-cluster-resources, which exclude general cluster-wide resources, but includes PersistentVolumes linked to selected namespaces.
        - "Never": --include-cluster-resources=false, exclude all cluster-wide resources, including PersistentVolumes.
      enum:
      - Always
      - Auto
      - Never
      type: string
    v1InfraLBConfig:
      example:
        apiServerLB:
          ipAllocationMethod: Dynamic
          apiServerLBStaticIP: apiServerLBStaticIP
          privateDNSZoneResourceGroup: privateDNSZoneResourceGroup
          privateDNSName: privateDNSName
          type: Public
      properties:
        apiServerLB:
          $ref: "#/components/schemas/v1LoadBalancerSpec"
      type: object
    v1IngressConfig:
      description: Ingress configuration for exposing the virtual cluster's kube-apiserver
      example:
        port: 6
        host: host
      properties:
        host:
          type: string
        port:
          format: int64
          type: integer
      type: object
    v1InstallerStatus:
      description: Spectro cluster installer status
      properties:
        clusterMigration:
          $ref: "#/components/schemas/v1SpectroClusterMigration"
        clusterState:
          type: string
        endpoint:
          type: string
          x-omitempty: false
      type: object
    v1InstanceConfig:
      example:
        diskGiB: 6
        numCPUs: 5
        name: name
        cpuSet: 0
        category: category
        memoryMiB: 1
      properties:
        category:
          type: string
        cpuSet:
          format: int64
          type: integer
        diskGiB:
          format: int64
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a virtual machine's memory, in MiB"
          format: int64
          type: integer
        name:
          type: string
        numCPUs:
          description: NumCPUs is the number of virtual processors in a virtual machine
          format: int32
          type: integer
      type: object
    v1InstanceCost:
      description: Instance cost entity
      example:
        price:
        - onDemand: 0.8008281904610115
          os: linux
          spot: 6.027456183070403
        - onDemand: 0.8008281904610115
          os: linux
          spot: 6.027456183070403
      properties:
        price:
          description: Array of cloud instance price
          items:
            $ref: "#/components/schemas/v1InstancePrice"
          type: array
      type: object
    v1InstancePrice:
      description: Cloud instance price
      example:
        onDemand: 0.8008281904610115
        os: linux
        spot: 6.027456183070403
      properties:
        onDemand:
          description: OnDemand price of instance
          format: double
          type: number
        os:
          description: "Os associated with instance price. Allowed values - [linux,\
            \ windows]"
          enum:
          - linux
          - windows
          type: string
        spot:
          description: Spot price of instance
          format: double
          type: number
      type: object
    v1InstanceType:
      description: Cloud Instance type details
      example:
        cost:
          price:
          - onDemand: 0.8008281904610115
            os: linux
            spot: 6.027456183070403
          - onDemand: 0.8008281904610115
            os: linux
            spot: 6.027456183070403
        memory: 5.637376656633329
        price: 2.3021358869347655
        nonSupportedZones:
        - nonSupportedZones
        - nonSupportedZones
        supportedArchitectures:
        - supportedArchitectures
        - supportedArchitectures
        cpu: 1.4658129805029452
        category: category
        type: type
        gpu: 5.962133916683182
      properties:
        category:
          description: Category of instance type
          type: string
          x-go-name: Category
        cost:
          $ref: "#/components/schemas/v1InstanceCost"
        cpu:
          description: Cpu of instance type
          format: double
          type: number
          x-go-name: Cpu
        gpu:
          description: Gpu of instance type
          format: double
          type: number
          x-go-name: Gpu
        memory:
          description: Memory of instance type
          format: double
          type: number
          x-go-name: Memory
        nonSupportedZones:
          description: Non supported zones of the instance in a particular region
          items:
            type: string
          type: array
        price:
          description: Price of instance type
          format: double
          type: number
          x-go-name: Price
        supportedArchitectures:
          description: Supported architecture of the instance
          items:
            type: string
          type: array
        type:
          description: Type of instance type
          type: string
          x-go-name: Type
      type: object
    v1Invoice:
      description: Invoice object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          address:
            country: country
            pincode: pincode
            city: city
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          month: 2000-01-23T04:56:07.000+00:00
          billingPeriod:
            start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
          credits:
            pureFreeCredits: 6.027456183070403
            alloyFreeCredits: 0.8008281904610115
          envType: envType
          paymentUnit: usd
          plan:
            slaCredits:
            - planCredit:
                cpuCoreHours: 1.4658129805029452
                creditUid: creditUid
                name: name
                start: 2000-01-23T04:56:07.000+00:00
                expiry: 2000-01-23T04:56:07.000+00:00
                type: Pure
              totalCpuCoreHours: 5.962133916683182
            - planCredit:
                cpuCoreHours: 1.4658129805029452
                creditUid: creditUid
                name: name
                start: 2000-01-23T04:56:07.000+00:00
                expiry: 2000-01-23T04:56:07.000+00:00
                type: Pure
              totalCpuCoreHours: 5.962133916683182
            freeCredits:
            - planCredit:
                cpuCoreHours: 1.4658129805029452
                creditUid: creditUid
                name: name
                start: 2000-01-23T04:56:07.000+00:00
                expiry: 2000-01-23T04:56:07.000+00:00
                type: Pure
              totalCpuCoreHours: 5.962133916683182
            - planCredit:
                cpuCoreHours: 1.4658129805029452
                creditUid: creditUid
                name: name
                start: 2000-01-23T04:56:07.000+00:00
                expiry: 2000-01-23T04:56:07.000+00:00
                type: Pure
              totalCpuCoreHours: 5.962133916683182
            plantype: Trial
        status:
          billableAmount: 5.637376656633329
          productInvoice:
            alloy:
              amount: 7.061401241503109
              breachedCredits: 3.616076749251911
              allocatedCredits: 2.3021358869347655
              totalUsedCredits: 1.0246457001441578
              tierName: tierName
              billableCredits: 9.301444243932576
              discount: 2.027123023002322
              freeCredits: 4.145608029883936
              usedCredits: 1.4894159098541704
              overageLimitPercentage: 7.386281948385884
              tierPrice: 1.2315135367772556
            pure:
              amount: 7.061401241503109
              breachedCredits: 3.616076749251911
              allocatedCredits: 2.3021358869347655
              totalUsedCredits: 1.0246457001441578
              tierName: tierName
              billableCredits: 9.301444243932576
              discount: 2.027123023002322
              freeCredits: 4.145608029883936
              usedCredits: 1.4894159098541704
              overageLimitPercentage: 7.386281948385884
              tierPrice: 1.2315135367772556
          projects:
          - amount: 6.84685269835264
            projectUid: projectUid
            usage:
              alloy:
                amount: 7.457744773683766
                usedCredits: 4.965218492984954
                tierPrice: 1.1730742509559433
              pure:
                amount: 7.457744773683766
                usedCredits: 4.965218492984954
                tierPrice: 1.1730742509559433
            projectName: projectName
          - amount: 6.84685269835264
            projectUid: projectUid
            usage:
              alloy:
                amount: 7.457744773683766
                usedCredits: 4.965218492984954
                tierPrice: 1.1730742509559433
              pure:
                amount: 7.457744773683766
                usedCredits: 4.965218492984954
                tierPrice: 1.1730742509559433
            projectName: projectName
          stripeInvoiceId: stripeInvoiceId
          states:
          - paymentMsg: paymentMsg
            state: Paid
            timestamp: 2000-01-23T04:56:07.000+00:00
          - paymentMsg: paymentMsg
            state: Paid
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1InvoiceSpec"
        status:
          $ref: "#/components/schemas/v1InvoiceStatus"
      type: object
    v1InvoiceBillingPeriod:
      description: Invoice billing period object
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        end:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1InvoiceCredits:
      description: Invoice credits object
      example:
        pureFreeCredits: 6.027456183070403
        alloyFreeCredits: 0.8008281904610115
      properties:
        alloyFreeCredits:
          description: Credits allocated for import clusters
          format: int64
          type: number
        pureFreeCredits:
          description: Credits allocated for managed clusters
          format: int64
          type: number
      type: object
    v1InvoicePlan:
      description: Invoice plan object
      example:
        slaCredits:
        - planCredit:
            cpuCoreHours: 1.4658129805029452
            creditUid: creditUid
            name: name
            start: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
            type: Pure
          totalCpuCoreHours: 5.962133916683182
        - planCredit:
            cpuCoreHours: 1.4658129805029452
            creditUid: creditUid
            name: name
            start: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
            type: Pure
          totalCpuCoreHours: 5.962133916683182
        freeCredits:
        - planCredit:
            cpuCoreHours: 1.4658129805029452
            creditUid: creditUid
            name: name
            start: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
            type: Pure
          totalCpuCoreHours: 5.962133916683182
        - planCredit:
            cpuCoreHours: 1.4658129805029452
            creditUid: creditUid
            name: name
            start: 2000-01-23T04:56:07.000+00:00
            expiry: 2000-01-23T04:56:07.000+00:00
            type: Pure
          totalCpuCoreHours: 5.962133916683182
        plantype: Trial
      properties:
        freeCredits:
          description: List of free credits
          items:
            $ref: "#/components/schemas/v1InvoicePlanCredit"
          type: array
        plantype:
          enum:
          - Trial
          - MonthlyOnDemand
          - AnnualSubscription
          type: string
        slaCredits:
          description: List of SLA credits
          items:
            $ref: "#/components/schemas/v1InvoicePlanCredit"
          type: array
      type: object
    v1InvoicePlanCredit:
      description: Invoice plan credit object
      example:
        planCredit:
          cpuCoreHours: 1.4658129805029452
          creditUid: creditUid
          name: name
          start: 2000-01-23T04:56:07.000+00:00
          expiry: 2000-01-23T04:56:07.000+00:00
          type: Pure
        totalCpuCoreHours: 5.962133916683182
      properties:
        planCredit:
          $ref: "#/components/schemas/v1PlanCredit"
        totalCpuCoreHours:
          description: Total used cpu core hours
          format: int64
          type: number
      type: object
    v1InvoiceProduct:
      description: Product invoice object
      example:
        alloy:
          amount: 7.061401241503109
          breachedCredits: 3.616076749251911
          allocatedCredits: 2.3021358869347655
          totalUsedCredits: 1.0246457001441578
          tierName: tierName
          billableCredits: 9.301444243932576
          discount: 2.027123023002322
          freeCredits: 4.145608029883936
          usedCredits: 1.4894159098541704
          overageLimitPercentage: 7.386281948385884
          tierPrice: 1.2315135367772556
        pure:
          amount: 7.061401241503109
          breachedCredits: 3.616076749251911
          allocatedCredits: 2.3021358869347655
          totalUsedCredits: 1.0246457001441578
          tierName: tierName
          billableCredits: 9.301444243932576
          discount: 2.027123023002322
          freeCredits: 4.145608029883936
          usedCredits: 1.4894159098541704
          overageLimitPercentage: 7.386281948385884
          tierPrice: 1.2315135367772556
      properties:
        alloy:
          $ref: "#/components/schemas/v1InvoiceProductData"
        pure:
          $ref: "#/components/schemas/v1InvoiceProductData"
      type: object
    v1InvoiceProductData:
      description: Product invoice data
      example:
        amount: 7.061401241503109
        breachedCredits: 3.616076749251911
        allocatedCredits: 2.3021358869347655
        totalUsedCredits: 1.0246457001441578
        tierName: tierName
        billableCredits: 9.301444243932576
        discount: 2.027123023002322
        freeCredits: 4.145608029883936
        usedCredits: 1.4894159098541704
        overageLimitPercentage: 7.386281948385884
        tierPrice: 1.2315135367772556
      properties:
        allocatedCredits:
          description: Allocated credits
          format: int64
          type: number
        amount:
          description: Total amount
          format: float64
          type: number
        billableCredits:
          description: Credits to be billed
          format: float64
          type: number
        breachedCredits:
          description: Credits that are exceeds the allocated credits
          format: float64
          type: number
        discount:
          description: Applied discount
          format: int64
          type: number
        freeCredits:
          description: Allocated free credits
          format: int64
          type: number
        overageLimitPercentage:
          description: Allowed overage limit in percentage
          format: int8
          type: number
        tierName:
          description: Tier name
          type: string
        tierPrice:
          description: Tier price
          format: float64
          type: number
        totalUsedCredits:
          description: Total used credits
          format: float64
          type: number
        usedCredits:
          description: Used credits
          format: float64
          type: number
      type: object
    v1InvoiceProject:
      description: Invoice project object
      example:
        amount: 6.84685269835264
        projectUid: projectUid
        usage:
          alloy:
            amount: 7.457744773683766
            usedCredits: 4.965218492984954
            tierPrice: 1.1730742509559433
          pure:
            amount: 7.457744773683766
            usedCredits: 4.965218492984954
            tierPrice: 1.1730742509559433
        projectName: projectName
      properties:
        amount:
          description: Billing amount for the project
          format: float64
          type: number
        projectName:
          description: Name of the project
          type: string
        projectUid:
          description: Project identifier
          type: string
        usage:
          $ref: "#/components/schemas/v1ProjectUsage"
      type: object
    v1InvoiceRetryRequest:
      description: Retry invoice request object
      properties:
        customerId:
          description: Customer invoice uid
          type: string
        invoiceUid:
          description: Invoice uid
          type: string
        paymentMethodId:
          description: Payment method uid
          type: string
      type: object
    v1InvoiceSpec:
      description: Invoice specification
      example:
        address:
          country: country
          pincode: pincode
          city: city
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        month: 2000-01-23T04:56:07.000+00:00
        billingPeriod:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        credits:
          pureFreeCredits: 6.027456183070403
          alloyFreeCredits: 0.8008281904610115
        envType: envType
        paymentUnit: usd
        plan:
          slaCredits:
          - planCredit:
              cpuCoreHours: 1.4658129805029452
              creditUid: creditUid
              name: name
              start: 2000-01-23T04:56:07.000+00:00
              expiry: 2000-01-23T04:56:07.000+00:00
              type: Pure
            totalCpuCoreHours: 5.962133916683182
          - planCredit:
              cpuCoreHours: 1.4658129805029452
              creditUid: creditUid
              name: name
              start: 2000-01-23T04:56:07.000+00:00
              expiry: 2000-01-23T04:56:07.000+00:00
              type: Pure
            totalCpuCoreHours: 5.962133916683182
          freeCredits:
          - planCredit:
              cpuCoreHours: 1.4658129805029452
              creditUid: creditUid
              name: name
              start: 2000-01-23T04:56:07.000+00:00
              expiry: 2000-01-23T04:56:07.000+00:00
              type: Pure
            totalCpuCoreHours: 5.962133916683182
          - planCredit:
              cpuCoreHours: 1.4658129805029452
              creditUid: creditUid
              name: name
              start: 2000-01-23T04:56:07.000+00:00
              expiry: 2000-01-23T04:56:07.000+00:00
              type: Pure
            totalCpuCoreHours: 5.962133916683182
          plantype: Trial
      properties:
        address:
          $ref: "#/components/schemas/v1Address"
        billingPeriod:
          $ref: "#/components/schemas/v1InvoiceBillingPeriod"
        credits:
          $ref: "#/components/schemas/v1InvoiceCredits"
        envType:
          description: "Environment type [Trial,MonthlyOnDemand,AnnualSubscription,OnPrem]"
          type: string
        month:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        paymentUnit:
          enum:
          - usd
          type: string
        plan:
          $ref: "#/components/schemas/v1InvoicePlan"
      type: object
    v1InvoiceState:
      description: Invoice state object
      example:
        paymentMsg: paymentMsg
        state: Paid
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        paymentMsg:
          description: Payment status message
          type: string
        state:
          enum:
          - Paid
          - PaymentPending
          - PaymentInProgress
          - PaymentFailed
          type: string
        timestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1InvoiceStatus:
      description: Invoice Status
      example:
        billableAmount: 5.637376656633329
        productInvoice:
          alloy:
            amount: 7.061401241503109
            breachedCredits: 3.616076749251911
            allocatedCredits: 2.3021358869347655
            totalUsedCredits: 1.0246457001441578
            tierName: tierName
            billableCredits: 9.301444243932576
            discount: 2.027123023002322
            freeCredits: 4.145608029883936
            usedCredits: 1.4894159098541704
            overageLimitPercentage: 7.386281948385884
            tierPrice: 1.2315135367772556
          pure:
            amount: 7.061401241503109
            breachedCredits: 3.616076749251911
            allocatedCredits: 2.3021358869347655
            totalUsedCredits: 1.0246457001441578
            tierName: tierName
            billableCredits: 9.301444243932576
            discount: 2.027123023002322
            freeCredits: 4.145608029883936
            usedCredits: 1.4894159098541704
            overageLimitPercentage: 7.386281948385884
            tierPrice: 1.2315135367772556
        projects:
        - amount: 6.84685269835264
          projectUid: projectUid
          usage:
            alloy:
              amount: 7.457744773683766
              usedCredits: 4.965218492984954
              tierPrice: 1.1730742509559433
            pure:
              amount: 7.457744773683766
              usedCredits: 4.965218492984954
              tierPrice: 1.1730742509559433
          projectName: projectName
        - amount: 6.84685269835264
          projectUid: projectUid
          usage:
            alloy:
              amount: 7.457744773683766
              usedCredits: 4.965218492984954
              tierPrice: 1.1730742509559433
            pure:
              amount: 7.457744773683766
              usedCredits: 4.965218492984954
              tierPrice: 1.1730742509559433
          projectName: projectName
        stripeInvoiceId: stripeInvoiceId
        states:
        - paymentMsg: paymentMsg
          state: Paid
          timestamp: 2000-01-23T04:56:07.000+00:00
        - paymentMsg: paymentMsg
          state: Paid
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        billableAmount:
          description: Total billable amount
          format: float64
          type: number
        productInvoice:
          $ref: "#/components/schemas/v1InvoiceProduct"
        projects:
          description: List of project invoices
          items:
            $ref: "#/components/schemas/v1InvoiceProject"
          type: array
        states:
          description: List of invoice states
          items:
            $ref: "#/components/schemas/v1InvoiceState"
          type: array
          uniqueItems: true
        stripeInvoiceId:
          description: Stripe invoice uid
          type: string
      type: object
    v1Invoices:
      description: List of invoices
      properties:
        invoices:
          items:
            $ref: "#/components/schemas/v1Invoice"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - invoices
      type: object
    v1IpPoolEntity:
      description: IP Pool entity definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          priavetGatewayUid: priavetGatewayUid
          restrictToSingleCluster: true
          pool:
            subnet: subnet
            prefix: 0
            start: start
            end: end
            nameserver:
              addresses:
              - addresses
              - addresses
              search:
              - search
              - search
            gateway: gateway
        status:
          associatedClusters:
          - associatedClusters
          - associatedClusters
          allottedIps:
          - allottedIps
          - allottedIps
          inUse: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1IpPoolEntity_spec"
        status:
          $ref: "#/components/schemas/v1IpPoolStatus"
      type: object
    v1IpPoolInputEntity:
      description: IP Pool input entity definition
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1IpPoolInputEntity_spec"
      type: object
    v1IpPoolStatus:
      description: IP Pool status
      example:
        associatedClusters:
        - associatedClusters
        - associatedClusters
        allottedIps:
        - allottedIps
        - allottedIps
        inUse: true
      properties:
        allottedIps:
          items:
            type: string
          type: array
          uniqueItems: true
        associatedClusters:
          items:
            type: string
          type: array
          uniqueItems: true
        inUse:
          type: boolean
          x-omitempty: false
      type: object
    v1IpPools:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            priavetGatewayUid: priavetGatewayUid
            restrictToSingleCluster: true
            pool:
              subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          status:
            associatedClusters:
            - associatedClusters
            - associatedClusters
            allottedIps:
            - allottedIps
            - allottedIps
            inUse: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            priavetGatewayUid: priavetGatewayUid
            restrictToSingleCluster: true
            pool:
              subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          status:
            associatedClusters:
            - associatedClusters
            - associatedClusters
            allottedIps:
            - allottedIps
            - allottedIps
            inUse: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1IpPoolEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1JWKResponse:
      properties:
        alg:
          description: The "alg" (algorithm) parameter identifies the algorithm intended
            for use with the key
          type: string
        e:
          type: string
        key_ops:
          description: The "key_ops" (key operations) parameter identifies the operation(s)
            for which the key is intended to be used
          type: string
        kid:
          description: The "kid" (key ID) parameter is used to match a specific key
          type: string
        kty:
          description: "The \"kty\" (key type) parameter identifies the cryptographic\
            \ algorithm family used with the key, such as \"RSA\" or \"EC\""
          type: string
        "n":
          type: string
        use:
          description: The "use" (public key use) parameter identifies the intended
            use of the public key
          type: string
      type: object
    v1JWKSetResponse:
      properties:
        keys:
          description: The value of the "keys" parameter is an array of JWK values
          items:
            $ref: "#/components/schemas/v1JWKResponse"
          type: array
      type: object
    v1JetAuthKey:
      properties:
        authKey:
          type: string
      type: object
    v1JetAuthKeyResponse:
      properties:
        authKey:
          type: string
      type: object
    v1JetServiceLogin:
      description: jet service login input
      properties:
        authKey:
          description: authToken helps in two step verification for the authorization.
          type: string
        edgeHostUid:
          type: string
        hostClusterUid:
          type: string
        isSystem:
          type: boolean
        jetUid:
          type: string
        overlordUid:
          type: string
        serviceVersion:
          type: string
        spectroClusterUid:
          type: string
        tenantUid:
          type: string
      type: object
    v1K8MachineCertificate:
      description: K8 Certificates for control plane nodes
      properties:
        certificateAuthorities:
          description: Applicable certificate authorities
          items:
            $ref: "#/components/schemas/v1k8CertificateAuthority"
          type: array
        name:
          type: string
      type: object
    v1KubeBenchEntity:
      description: KubeBench response
      properties:
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1KubeBenchReportEntity"
          type: object
        requestUid:
          type: string
        status:
          enum:
          - Completed
          - InProgress
          - Failed
          - Initiated
          type: string
      required:
      - reports
      - requestUid
      - status
      type: object
    v1KubeBenchLog:
      description: Compliance Scan KubeBench Log
      example:
        remediation: remediation
        expected: expected
        description: description
        testId: testId
        state: state
        value: value
      properties:
        description:
          type: string
        expected:
          type: string
        remediation:
          type: string
        state:
          type: string
        testId:
          type: string
        value:
          type: string
      type: object
    v1KubeBenchLogEntity:
      description: KubeBench log
      properties:
        description:
          type: string
        expected:
          type: string
        remediation:
          type: string
        state:
          type: string
        testId:
          type: string
        value:
          type: string
      type: object
    v1KubeBenchReport:
      description: Compliance Scan KubeBench Report
      example:
        fail: 0
        warn: 5
        pass: 1
        name: name
        time: 2000-01-23T04:56:07.000+00:00
        type: type
        logs:
        - remediation: remediation
          expected: expected
          description: description
          testId: testId
          state: state
          value: value
        - remediation: remediation
          expected: expected
          description: description
          testId: testId
          state: state
          value: value
        info: 6
      properties:
        fail:
          format: int32
          type: integer
        info:
          format: int32
          type: integer
        logs:
          items:
            $ref: "#/components/schemas/v1KubeBenchLog"
          type: array
        name:
          type: string
        pass:
          format: int32
          type: integer
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          type: string
        warn:
          format: int32
          type: integer
      type: object
    v1KubeBenchReportEntity:
      description: KubeBench report
      properties:
        fail:
          format: int32
          type: integer
        info:
          format: int32
          type: integer
        logs:
          items:
            $ref: "#/components/schemas/v1KubeBenchLogEntity"
          type: array
        name:
          type: string
        pass:
          format: int32
          type: integer
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          type: string
        warn:
          format: int32
          type: integer
      type: object
    v1KubeHunterEntity:
      description: KubeHunter response
      properties:
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1KubeHunterReportEntity"
          type: object
        requestUid:
          type: string
        status:
          enum:
          - Completed
          - InProgress
          - Failed
          - Initiated
          type: string
      required:
      - reports
      - requestUid
      - status
      type: object
    v1KubeHunterLog:
      description: Compliance Scan KubeHunter Log
      example:
        reference: reference
        severity: severity
        evidence: evidence
        description: description
        testId: testId
        vulnerability: vulnerability
      properties:
        description:
          type: string
        evidence:
          type: string
        reference:
          type: string
        severity:
          type: string
        testId:
          type: string
        vulnerability:
          type: string
      type: object
    v1KubeHunterLogEntity:
      description: KubeHunter log
      properties:
        description:
          type: string
        evidence:
          type: string
        reference:
          type: string
        severity:
          type: string
        testId:
          type: string
        vulnerability:
          type: string
      type: object
    v1KubeHunterReport:
      description: Compliance Scan KubeHunter Report
      example:
        vulnerabilites:
          high: 5
          low: 2
          medium: 7
        time: 2000-01-23T04:56:07.000+00:00
        logs:
        - reference: reference
          severity: severity
          evidence: evidence
          description: description
          testId: testId
          vulnerability: vulnerability
        - reference: reference
          severity: severity
          evidence: evidence
          description: description
          testId: testId
          vulnerability: vulnerability
      properties:
        logs:
          items:
            $ref: "#/components/schemas/v1KubeHunterLog"
          type: array
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        vulnerabilites:
          $ref: "#/components/schemas/v1KubeHunterVulnerabilities"
      type: object
    v1KubeHunterReportEntity:
      description: KubeHunter report
      properties:
        logs:
          items:
            $ref: "#/components/schemas/v1KubeHunterLogEntity"
          type: array
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        vulnerabilities:
          $ref: "#/components/schemas/v1KubeHunterVulnerabilityDataEntity"
      type: object
    v1KubeHunterVulnerabilities:
      description: Compliance Scan KubeHunter Vulnerabilities
      example:
        high: 5
        low: 2
        medium: 7
      properties:
        high:
          format: int32
          type: integer
        low:
          format: int32
          type: integer
        medium:
          format: int32
          type: integer
      type: object
    v1KubeHunterVulnerabilityDataEntity:
      description: KubeHunter vulnerability data
      properties:
        high:
          format: int32
          type: integer
        low:
          format: int32
          type: integer
        medium:
          format: int32
          type: integer
      type: object
    v1KubeMeta:
      description: Spectro cluster kube meta
      example:
        hasManifest: true
        hasKubeConfig: true
        hasKubeConfigClient: true
        kubernetesVersion: kubernetesVersion
      properties:
        hasKubeConfig:
          type: boolean
          x-omitempty: false
        hasKubeConfigClient:
          type: boolean
          x-omitempty: false
        hasManifest:
          type: boolean
          x-omitempty: false
        kubernetesVersion:
          type: string
      type: object
    v1LifecycleConfig:
      example:
        pause: false
      properties:
        pause:
          default: false
          description: enable pause life cycle config
          type: boolean
          x-omitempty: false
      type: object
    v1LifecycleConfigEntity:
      properties:
        lifecycleConfig:
          $ref: "#/components/schemas/v1LifecycleConfig"
      type: object
    v1LifecycleStatus:
      example:
        msg: msg
        status: Pausing
      properties:
        msg:
          description: error or success msg of lifecycle
          type: string
        status:
          description: lifecycle status
          enum:
          - Pausing
          - Paused
          - Resuming
          - Running
          - Error
          type: string
      type: object
    v1ListMetaData:
      description: ListMeta describes metadata for the resource listing
      example:
        offset: 1
        continue: continue
        count: 0
        limit: 6
      properties:
        continue:
          description: Next token for the pagination. Next token is equal to empty
            string indicates end of result set.
          type: string
          x-omitempty: false
        count:
          description: Total count of the resources which might change during pagination
            based on the resources addition or deletion
          type: integer
          x-omitempty: false
        limit:
          description: Number of records feteched
          type: integer
          x-omitempty: false
        offset:
          description: The next offset for the pagination. Starting index for which
            next request will be placed.
          type: integer
          x-omitempty: false
      type: object
    v1LoadBalancerConfig:
      description: Load balancer configuration for exposing the virtual cluster's
        kube-apiserver
      example:
        externalIPs:
        - externalIPs
        - externalIPs
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        externalTrafficPolicy: externalTrafficPolicy
      properties:
        externalIPs:
          items:
            type: string
          type: array
        externalTrafficPolicy:
          type: string
        loadBalancerSourceRanges:
          items:
            type: string
          type: array
      type: object
    v1LoadBalancerService:
      example:
        host: host
        name: name
        ports:
        - protocol: protocol
          port: 0
        - protocol: protocol
          port: 0
      properties:
        host:
          description: IP or Host from svc.Status.LoadBalancerStatus.Ingress
          type: string
        name:
          description: name of the loadbalancer service
          type: string
        ports:
          description: port this service exposed
          items:
            $ref: "#/components/schemas/v1ServicePort"
          type: array
      type: object
    v1LoadBalancerSpec:
      description: LoadBalancerSpec defines an Azure load balancer.
      example:
        ipAllocationMethod: Dynamic
        apiServerLBStaticIP: apiServerLBStaticIP
        privateDNSZoneResourceGroup: privateDNSZoneResourceGroup
        privateDNSName: privateDNSName
        type: Public
      properties:
        apiServerLBStaticIP:
          type: string
        ipAllocationMethod:
          default: Dynamic
          enum:
          - Static
          - Dynamic
          type: string
        privateDNSName:
          type: string
        privateDNSZoneResourceGroup:
          description: |-
            PrivateDNSZoneResourceGroup defines the resource group to be used for Azure Private DNS Zone.
            If not specified, the resource group of the cluster will be used to create the Azure Private DNS Zone.
          type: string
        type:
          default: Public
          description: Load Balancer type
          enum:
          - Internal
          - Public
          type: string
      type: object
    v1LocationType:
      default: s3
      description: Location type
      enum:
      - s3
      - gcp
      - minio
      type: string
    v1Lock:
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1Lock_spec"
      type: object
    v1Locks:
      items:
        $ref: "#/components/schemas/v1Lock"
      type: array
      uniqueItems: true
    v1Login:
      description: Login input
      properties:
        emailId:
          type: string
      type: object
    v1LoginBannerSettings:
      example:
        Message: Message
        isEnabled: true
        title: title
      properties:
        Message:
          description: Login banner message displayed to the user
          type: string
          x-omitempty: false
        isEnabled:
          description: Set to 'true' if login banner has to be displayed for user
          type: boolean
          x-omitempty: false
        title:
          description: Banner title displayed to the user
          type: string
          x-omitempty: false
      type: object
    v1LoginResponse:
      description: Returns the allowed login method and information with the organization
        details
      example:
        orgName: orgName
        redirectUrl: redirectUrl
        appEnv: appEnv
        rootDomain: rootDomain
        totalTenants: 0.8008281904610115
        securityMode: securityMode
        authType: password
        ssoLogins:
        - redirectUri: redirectUri
          displayName: displayName
          name: name
          logo: logo
        - redirectUri: redirectUri
          displayName: displayName
          name: name
          logo: logo
      properties:
        appEnv:
          description: "Describes the env type. Possible values [ saas, self-hosted,\
            \ quick-start, enterprise, airgap]"
          type: string
        authType:
          description: "Describes the default mode of authentication. Possible values\
            \ [password, sso]"
          enum:
          - password
          - sso
          type: string
        orgName:
          description: Organization name.
          type: string
        redirectUrl:
          description: "Describes the default redirect Url for authentication. If\
            \ authType is sso, it will have tenant configured saml/oidc idp url else\
            \ it will be users organization url"
          type: string
          x-omitempty: false
        rootDomain:
          description: Describes the domain url on which the saas is available
          type: string
        securityMode:
          description: Describes which security mode is enabled
          type: string
        ssoLogins:
          description: Describes the allowed sso logins
          items:
            $ref: "#/components/schemas/v1SsoLogin"
          type: array
          uniqueItems: true
        totalTenants:
          description: Describes the total number of tenant present in the system
          format: int64
          type: number
      type: object
    v1LogoutResponse:
      description: Logout response specifying the redirect url
      properties:
        redirectUrl:
          type: string
          x-omitempty: false
      type: object
    v1MaasAccount:
      description: Maas cloud account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          preferredSubnets:
          - ""
          - ""
          apiEndpoint: apiEndpoint
          apiKey: apiKey
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1MaasCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1MaasAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            preferredSubnets:
            - ""
            - ""
            apiEndpoint: apiEndpoint
            apiKey: apiKey
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            preferredSubnets:
            - ""
            - ""
            apiEndpoint: apiEndpoint
            apiKey: apiKey
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1MaasCloudAccount:
      example:
        preferredSubnets:
        - ""
        - ""
        apiEndpoint: apiEndpoint
        apiKey: apiKey
      properties:
        apiEndpoint:
          type: string
        apiKey:
          type: string
        preferredSubnets:
          description: "list of preferred subnets order in the list reflects order\
            \ in which subnets will be selected for ip address selection in apiserver\
            \ dns endpoint this way user can specify external or preferable subnet\
            \ \"10.11.130.0/24,10.10.10.0/24\""
          items:
            default: ""
            type: string
          type: array
      required:
      - apiEndpoint
      - apiKey
      type: object
    v1MaasCloudClusterConfigEntity:
      description: Maas cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1MaasClusterConfig"
      type: object
    v1MaasCloudConfig:
      description: MaasCloudConfig is the Schema for the maascloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          machinePoolConfig:
          - isControlPlane: true
            instanceType:
              minMemInMB: 6
              minCPU: 0
            nodeRepaveInterval: 5
            additionalLabels:
              key: additionalLabels
            maxSize: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            tags:
            - tags
            - tags
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 2
            name: name
            minSize: 5
            azs:
            - azs
            - azs
            resourcePool: resourcePool
          - isControlPlane: true
            instanceType:
              minMemInMB: 6
              minCPU: 0
            nodeRepaveInterval: 5
            additionalLabels:
              key: additionalLabels
            maxSize: 1
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            tags:
            - tags
            - tags
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 2
            name: name
            minSize: 5
            azs:
            - azs
            - azs
            resourcePool: resourcePool
          clusterConfig:
            domain: domain
            sshKeys:
            - sshKeys
            - sshKeys
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          nodeImage:
            name: name
            state: state
          sourceImageId: sourceImageId
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          roleDigest:
            key: roleDigest
          ansibleRoleDigest: ansibleRoleDigest
          useCapiImage: true
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1MaasCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1MaasCloudConfigStatus"
      type: object
    v1MaasCloudConfigSpec:
      description: MaasCloudConfigSpec defines the cloud configuration input by user
        This will translate to clusterspec/machinespec for cluster-api
      example:
        machinePoolConfig:
        - isControlPlane: true
          instanceType:
            minMemInMB: 6
            minCPU: 0
          nodeRepaveInterval: 5
          additionalLabels:
            key: additionalLabels
          maxSize: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          tags:
          - tags
          - tags
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 2
          name: name
          minSize: 5
          azs:
          - azs
          - azs
          resourcePool: resourcePool
        - isControlPlane: true
          instanceType:
            minMemInMB: 6
            minCPU: 0
          nodeRepaveInterval: 5
          additionalLabels:
            key: additionalLabels
          maxSize: 1
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          tags:
          - tags
          - tags
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 2
          name: name
          minSize: 5
          azs:
          - azs
          - azs
          resourcePool: resourcePool
        clusterConfig:
          domain: domain
          sshKeys:
          - sshKeys
          - sshKeys
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1MaasClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1MaasMachinePoolConfig"
          type: array
      type: object
    v1MaasCloudConfigStatus:
      description: MaasCloudConfigStatus defines the observed state of MaasCloudConfig
        The cloudimage info built by Mold is stored here image should be mapped to
        a specific machinepool
      example:
        nodeImage:
          name: name
          state: state
        sourceImageId: sourceImageId
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        roleDigest:
          key: roleDigest
        ansibleRoleDigest: ansibleRoleDigest
        useCapiImage: true
        isAddonLayer: true
      properties:
        ansibleRoleDigest:
          description: For mold controller to identify if is there any changes in
            Pack
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
        nodeImage:
          $ref: "#/components/schemas/v1MaasImage"
        roleDigest:
          additionalProperties:
            type: string
          description: this map will be for ansible roles present in eack pack
          type: object
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        useCapiImage:
          description: "PackerVariableDigest string `json:\"packerDigest,omitempty\"\
            ` If no ansible roles found in Packs then Mold should tell Drive to use\
            \ capi image and not create custom image, because there is nothing to\
            \ add"
          type: boolean
      type: object
    v1MaasClusterConfig:
      description: Cluster level configuration for MAAS cloud and applicable for all
        the machine pools
      example:
        domain: domain
        sshKeys:
        - sshKeys
        - sshKeys
      properties:
        domain:
          description: Domain name of the cluster to be provisioned
          type: string
        sshKeys:
          description: SSH keys specifies a list of ssh authorized keys for the 'spectro'
            user
          items:
            type: string
          type: array
      required:
      - domain
      type: object
    v1MaasDomain:
      description: Maas domain
      example:
        name: name
      properties:
        name:
          description: Name of Maas domain
          type: string
      type: object
    v1MaasDomains:
      description: List of Maas domains
      example:
        items:
        - name: name
        - name: name
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasDomain"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MaasImage:
      description: Name of the image
      example:
        name: name
        state: state
      properties:
        name:
          description: "full path of the image template location it contains datacenter/folder/templatename\
            \ etc eg: /mydc/vm/template/spectro/workerpool-1-centos"
          type: string
        state:
          type: string
      type: object
    v1MaasInstanceType:
      example:
        minMemInMB: 6
        minCPU: 0
      properties:
        minCPU:
          description: Minimum CPU cores
          format: int32
          type: integer
        minMemInMB:
          description: Minimum memory in MiB
          format: int32
          type: integer
      type: object
    v1MaasMachine:
      description: Maas cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          hostname: hostname
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          - privateIPs:
            - privateIPs
            - privateIPs
            index: 0
            publicIp: publicIp
          az: az
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1MaasMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1MaasMachineConfigEntity:
      properties:
        azs:
          description: "for control plane pool, this will be the failure domains for\
            \ kcp"
          items:
            type: string
          type: array
        instanceType:
          $ref: "#/components/schemas/v1MaasInstanceType"
        resourcePool:
          type: string
      type: object
    v1MaasMachinePoolCloudConfigEntity:
      properties:
        azs:
          items:
            type: string
          type: array
        instanceType:
          $ref: "#/components/schemas/v1MaasInstanceType"
        resourcePool:
          description: the resource pool
          type: string
        tags:
          description: Tags in maas environment
          items:
            type: string
          type: array
      required:
      - instanceType
      - resourcePool
      type: object
    v1MaasMachinePoolConfig:
      example:
        isControlPlane: true
        instanceType:
          minMemInMB: 6
          minCPU: 0
        nodeRepaveInterval: 5
        additionalLabels:
          key: additionalLabels
        maxSize: 1
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        tags:
        - tags
        - tags
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 2
        name: name
        minSize: 5
        azs:
        - azs
        - azs
        resourcePool: resourcePool
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          items:
            type: string
          type: array
        instanceType:
          $ref: "#/components/schemas/v1MaasInstanceType"
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        resourcePool:
          type: string
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        tags:
          description: Tags in maas environment
          items:
            type: string
          type: array
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - instanceType
      type: object
    v1MaasMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1MaasMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1MaasMachineSpec:
      description: Maas cloud VM definition spec
      example:
        hostname: hostname
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        - privateIPs:
          - privateIPs
          - privateIPs
          index: 0
          publicIp: publicIp
        az: az
      properties:
        az:
          type: string
        hostname:
          type: string
        nics:
          items:
            $ref: "#/components/schemas/v1MaasNic"
          type: array
      type: object
    v1MaasMachines:
      description: List of MAAS machines
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostname: hostname
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            az: az
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            hostname: hostname
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            - privateIPs:
              - privateIPs
              - privateIPs
              index: 0
              publicIp: publicIp
            az: az
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1MaasNic:
      description: Maas network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        index: 0
        publicIp: publicIp
      properties:
        index:
          format: int8
          type: integer
        privateIPs:
          items:
            type: string
          type: array
        publicIp:
          type: string
      type: object
    v1MaasPool:
      description: Maas pool
      example:
        name: name
        description: description
      properties:
        description:
          description: Description of Maas domain
          type: string
        name:
          description: Name of Maas pool
          type: string
      type: object
    v1MaasPools:
      description: List of Maas pools
      example:
        items:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasPool"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MaasSubnet:
      description: Maas subnet
      example:
        vlans:
          fabric: fabric
          name: name
          id: 6
        name: name
        id: 0
        space: space
      properties:
        id:
          description: Id of Maas subnet
          type: integer
        name:
          description: Name of Maas subnet
          type: string
        space:
          description: Space associated with Maas subnet
          type: string
        vlans:
          $ref: "#/components/schemas/v1MaasVlan"
      type: object
    v1MaasSubnets:
      description: List of Maas subnets
      example:
        items:
        - vlans:
            fabric: fabric
            name: name
            id: 6
          name: name
          id: 0
          space: space
        - vlans:
            fabric: fabric
            name: name
            id: 6
          name: name
          id: 0
          space: space
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasSubnet"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MaasTag:
      description: Maas tag
      example:
        name: name
        comment: comment
        definition: definition
        kernelOpts: kernelOpts
        resourceUri: resourceUri
      properties:
        comment:
          description: Comment on Maas tag
          type: string
        definition:
          description: Definition of Maas tag
          type: string
        kernelOpts:
          description: Kernel Opts on Maas tag
          type: string
        name:
          description: Name of Maas tag
          type: string
        resourceUri:
          description: Description of Maas tag
          type: string
      type: object
    v1MaasTags:
      description: List of Maas tags
      example:
        items:
        - name: name
          comment: comment
          definition: definition
          kernelOpts: kernelOpts
          resourceUri: resourceUri
        - name: name
          comment: comment
          definition: definition
          kernelOpts: kernelOpts
          resourceUri: resourceUri
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasTag"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MaasVlan:
      description: Maas vlan entity
      example:
        fabric: fabric
        name: name
        id: 6
      properties:
        fabric:
          description: Fabric associated with Maas Vlan
          type: string
        id:
          description: Id of Maas Vlan
          type: integer
        name:
          description: Name of Maas Vlan
          type: string
      type: object
    v1MaasZone:
      description: Maas zone
      example:
        name: name
        description: description
      properties:
        description:
          description: Description of Maas domain
          type: string
        name:
          description: Name of Maas zone
          type: string
      type: object
    v1MaasZones:
      description: List of Maas zones
      example:
        items:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MaasZone"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MachineCertificate:
      description: K8 Certificates for control plane nodes
      example:
        certificateAuthorities:
        - certificates:
          - name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          - name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          name: name
          expiry: 2000-01-23T04:56:07.000+00:00
        - certificates:
          - name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          - name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          name: name
          expiry: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        certificateAuthorities:
          description: Applicable certificate authorities
          items:
            $ref: "#/components/schemas/v1CertificateAuthority"
          type: array
        name:
          type: string
      type: object
    v1MachineCertificates:
      description: K8 Certificates for all the cluster's control plane nodes
      example:
        machineCertificates:
        - certificateAuthorities:
          - certificates:
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          - certificates:
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          name: name
        - certificateAuthorities:
          - certificates:
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          - certificates:
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            - name: name
              expiry: 2000-01-23T04:56:07.000+00:00
            name: name
            expiry: 2000-01-23T04:56:07.000+00:00
          name: name
      properties:
        machineCertificates:
          items:
            $ref: "#/components/schemas/v1MachineCertificate"
          type: array
      type: object
    v1MachineHealth:
      description: Machine health state
      example:
        lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
        state: state
        conditions:
        - reason: reason
          message: message
          type: type
          status: status
        - reason: reason
          message: message
          type: type
          status: status
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/v1MachineHealthCondition"
          type: array
        lastHeartBeatTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
      type: object
    v1MachineHealthCheckConfig:
      example:
        nodeReadyHealthCheckDuration: nodeReadyHealthCheckDuration
        networkReadyHealthCheckDuration: networkReadyHealthCheckDuration
        healthCheckMaxUnhealthy: healthCheckMaxUnhealthy
      properties:
        healthCheckMaxUnhealthy:
          description: "HealthCheckMaxUnhealthy is the value above which, if current\
            \ nodes are unhealthy remediation will not be triggered Can be an absolute\
            \ int64 number or a percentage string Default value is 100%, i.e by default\
            \ it is disabled"
          type: string
        networkReadyHealthCheckDuration:
          description: "NetworkReadyHealthCheckDuration is the timeout to check for\
            \ the network availability. If the network is not available in the given\
            \ available time, beyond the timeout check a node will be killed and a\
            \ new node will be created. Default time is 10m"
          type: string
        nodeReadyHealthCheckDuration:
          description: "NodeReadyHealthCheckDuration is the timeout to check for the\
            \ node ready state. If the node is not ready within the time out set,\
            \ the node will be deleted and a new node will be launched. Default time\
            \ is 10m"
          type: string
      type: object
    v1MachineHealthCondition:
      description: Machine health condition
      example:
        reason: reason
        message: message
        type: type
        status: status
      properties:
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    v1MachineMaintenance:
      properties:
        action:
          description: Machine maintenance mode action
          enum:
          - cordon
          - uncordon
          type: string
      type: object
    v1MachineMaintenanceStatus:
      description: Machine maintenance status
      example:
        action: action
        state: state
        message: message
      properties:
        action:
          type: string
        message:
          type: string
        state:
          type: string
      type: object
    v1MachineManagementConfig:
      example:
        osPatchConfig:
          schedule: schedule
          onDemandPatchAfter: 2000-01-23T04:56:07.000+00:00
          patchOnBoot: true
          rebootIfRequired: true
      properties:
        osPatchConfig:
          $ref: "#/components/schemas/v1OsPatchConfig"
      type: object
    v1MachinePoolConfigEntity:
      description: Machine pool configuration for the cluster
      example:
        isControlPlane: true
        nodeRepaveInterval: 1
        additionalLabels:
          key: additionalLabels
        maxSize: 0
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 5
        name: name
        minSize: 6
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: Additional labels to be part of the machine pool
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        isControlPlane:
          description: Whether this pool is for control plane
          type: boolean
          x-omitempty: false
        labels:
          description: "Labels for this machine pool, example: control-plane/worker,\
            \ gpu, windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "Max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "Min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        size:
          description: "Size of the pool, number of nodes/machines"
          format: int32
          type: integer
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "If IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      required:
      - labels
      - name
      - size
      type: object
    v1MachinePoolMeta:
      example:
        isControlPlane: true
        size: 1
        cloudType: cloudType
        healthy: 0
        infraProfileTemplate:
          uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        maintenanceMode: 6
        labels:
        - labels
        - labels
      properties:
        cloudType:
          type: string
        healthy:
          description: number of healthy machines
          format: int32
          type: integer
          x-omitempty: false
        infraProfileTemplate:
          $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        maintenanceMode:
          description: number of machines under maintenance
          format: int32
          type: integer
          x-omitempty: false
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
          x-omitempty: false
      type: object
    v1MachinePoolProperties:
      description: Machine pool specific properties
      example:
        archType: amd64
      properties:
        archType:
          $ref: "#/components/schemas/v1ArchType"
      type: object
    v1MachinePoolRate:
      description: Machine pool estimated rate information
      example:
        rate:
          compute:
            rate: 6.027456183070403
            type: type
          total: 7.061401241503109
          storage:
          - sizeGB: 5.637376656633329
            rate: 5.962133916683182
            iops: 1.4658129805029452
            throughput: 2.3021358869347655
            type: type
          - sizeGB: 5.637376656633329
            rate: 5.962133916683182
            iops: 1.4658129805029452
            throughput: 2.3021358869347655
            type: type
        name: name
        nodesCount: 0
      properties:
        name:
          type: string
        nodesCount:
          format: int32
          type: integer
        rate:
          $ref: "#/components/schemas/v1CloudRate"
      type: object
    v1MachinePoolsMachineUids:
      example:
        machinePools:
          key:
            machineUids:
            - machineUids
            - machineUids
      properties:
        machinePools:
          additionalProperties:
            $ref: "#/components/schemas/v1MachineUids"
          type: object
      type: object
    v1MachineUids:
      example:
        machineUids:
        - machineUids
        - machineUids
      properties:
        machineUids:
          items:
            type: string
          type: array
      type: object
    v1Macro:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    v1Macros:
      example:
        macros:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        macros:
          items:
            $ref: "#/components/schemas/v1Macro"
          type: array
          uniqueItems: true
      type: object
    v1ManagedDisk:
      example:
        storageAccountType: storageAccountType
      properties:
        storageAccountType:
          type: string
      type: object
    v1Manifest:
      description: Manifest object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          published:
            digest: digest
            content: content
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ManifestPublishedSpec"
      type: object
    v1ManifestData:
      description: Published manifest object
      example:
        digest: digest
        content: content
      properties:
        content:
          description: Manifest content in yaml
          type: string
        digest:
          description: Manifest digest
          type: string
      type: object
    v1ManifestEntities:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            draft:
              digest: digest
              content: content
            published:
              digest: digest
              content: content
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            draft:
              digest: digest
              content: content
            published:
              digest: digest
              content: content
      properties:
        items:
          description: Manifests array
          items:
            $ref: "#/components/schemas/v1ManifestEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ManifestEntity:
      description: Manifest object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          draft:
            digest: digest
            content: content
          published:
            digest: digest
            content: content
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ManifestSpec"
      type: object
    v1ManifestInputEntity:
      description: Manifest request payload
      properties:
        content:
          description: Manifest content
          type: string
        name:
          description: Manifest name
          type: string
      type: object
    v1ManifestPublishedSpec:
      description: Manifest spec
      example:
        published:
          digest: digest
          content: content
      properties:
        published:
          $ref: "#/components/schemas/v1ManifestData"
      type: object
    v1ManifestRefInputEntities:
      description: Pack manifests input params
      properties:
        manifests:
          description: Pack manifests array
          items:
            $ref: "#/components/schemas/v1ManifestRefInputEntity"
          type: array
          uniqueItems: true
      type: object
    v1ManifestRefInputEntity:
      description: Manifest request payload
      properties:
        content:
          description: Manifest content in yaml
          type: string
        uid:
          description: Manifest uid
          type: string
      type: object
    v1ManifestRefUpdateEntity:
      description: Manifest update request payload
      properties:
        content:
          description: Manifest content in yaml
          type: string
        name:
          description: Manifest name
          type: string
        uid:
          description: Manifest uid
          type: string
      required:
      - name
      type: object
    v1ManifestSpec:
      description: Manifest spec
      example:
        draft:
          digest: digest
          content: content
        published:
          digest: digest
          content: content
      properties:
        draft:
          $ref: "#/components/schemas/v1ManifestData"
        published:
          $ref: "#/components/schemas/v1ManifestData"
      type: object
    v1ManifestSummary:
      description: Manifest object
      example:
        uid: uid
        name: name
        content: content
      properties:
        content:
          description: Manifest content in yaml
          type: string
        name:
          description: Manifest name
          type: string
        uid:
          description: Manifest uid
          type: string
      type: object
    v1Memory:
      example:
        sizeInMB: 2
      properties:
        sizeInMB:
          description: memory size in bytes
          format: int64
          type: integer
      type: object
    v1MetricAggregation:
      description: Aggregation values
      example:
        avg: 0.8008281904610115
        min: 5.962133916683182
        max: 1.4658129805029452
        count: 6.027456183070403
        sum: 5.637376656633329
      properties:
        avg:
          type: number
          x-omitempty: false
        count:
          format: int64
          type: number
          x-omitempty: false
        max:
          type: number
          x-omitempty: false
        min:
          type: number
          x-omitempty: false
        sum:
          type: number
          x-omitempty: false
      type: object
    v1MetricMetadata:
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1MetricPoint:
      description: Metric Info
      example:
        avg: 2.3021358869347655
        min: 3.616076749251911
        max: 9.301444243932576
        count: 7.061401241503109
        sum: 2.027123023002322
        value: 7.386281948385884
        timestamp: 4.145608029883936
      properties:
        avg:
          type: number
        count:
          format: int64
          type: number
        max:
          type: number
        min:
          type: number
        sum:
          type: number
        timestamp:
          format: int64
          type: number
        value:
          type: number
          x-omitempty: false
      type: object
    v1MetricTimeSeries:
      example:
        items:
        - unit: unit
          kind: kind
          aggregation:
            avg: 0.8008281904610115
            min: 5.962133916683182
            max: 1.4658129805029452
            count: 6.027456183070403
            sum: 5.637376656633329
          points:
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
        - unit: unit
          kind: kind
          aggregation:
            avg: 0.8008281904610115
            min: 5.962133916683182
            max: 1.4658129805029452
            count: 6.027456183070403
            sum: 5.637376656633329
          points:
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Metrics"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1MetricTimeSeriesList:
      example:
        items:
        - metadata:
            uid: uid
            name: name
          metrics:
          - unit: unit
            kind: kind
            aggregation:
              avg: 0.8008281904610115
              min: 5.962133916683182
              max: 1.4658129805029452
              count: 6.027456183070403
              sum: 5.637376656633329
            points:
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
          - unit: unit
            kind: kind
            aggregation:
              avg: 0.8008281904610115
              min: 5.962133916683182
              max: 1.4658129805029452
              count: 6.027456183070403
              sum: 5.637376656633329
            points:
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
        - metadata:
            uid: uid
            name: name
          metrics:
          - unit: unit
            kind: kind
            aggregation:
              avg: 0.8008281904610115
              min: 5.962133916683182
              max: 1.4658129805029452
              count: 6.027456183070403
              sum: 5.637376656633329
            points:
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
          - unit: unit
            kind: kind
            aggregation:
              avg: 0.8008281904610115
              min: 5.962133916683182
              max: 1.4658129805029452
              count: 6.027456183070403
              sum: 5.637376656633329
            points:
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
            - avg: 2.3021358869347655
              min: 3.616076749251911
              max: 9.301444243932576
              count: 7.061401241503109
              sum: 2.027123023002322
              value: 7.386281948385884
              timestamp: 4.145608029883936
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1MetricsList"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1Metrics:
      example:
        unit: unit
        kind: kind
        aggregation:
          avg: 0.8008281904610115
          min: 5.962133916683182
          max: 1.4658129805029452
          count: 6.027456183070403
          sum: 5.637376656633329
        points:
        - avg: 2.3021358869347655
          min: 3.616076749251911
          max: 9.301444243932576
          count: 7.061401241503109
          sum: 2.027123023002322
          value: 7.386281948385884
          timestamp: 4.145608029883936
        - avg: 2.3021358869347655
          min: 3.616076749251911
          max: 9.301444243932576
          count: 7.061401241503109
          sum: 2.027123023002322
          value: 7.386281948385884
          timestamp: 4.145608029883936
      properties:
        aggregation:
          $ref: "#/components/schemas/v1MetricAggregation"
        kind:
          type: string
        points:
          items:
            $ref: "#/components/schemas/v1MetricPoint"
          type: array
          uniqueItems: true
        unit:
          type: string
      type: object
    v1MetricsList:
      example:
        metadata:
          uid: uid
          name: name
        metrics:
        - unit: unit
          kind: kind
          aggregation:
            avg: 0.8008281904610115
            min: 5.962133916683182
            max: 1.4658129805029452
            count: 6.027456183070403
            sum: 5.637376656633329
          points:
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
        - unit: unit
          kind: kind
          aggregation:
            avg: 0.8008281904610115
            min: 5.962133916683182
            max: 1.4658129805029452
            count: 6.027456183070403
            sum: 5.637376656633329
          points:
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
          - avg: 2.3021358869347655
            min: 3.616076749251911
            max: 9.301444243932576
            count: 7.061401241503109
            sum: 2.027123023002322
            value: 7.386281948385884
            timestamp: 4.145608029883936
      properties:
        metadata:
          $ref: "#/components/schemas/v1MetricMetadata"
        metrics:
          items:
            $ref: "#/components/schemas/v1Metrics"
          type: array
          uniqueItems: true
      type: object
    v1MfaAuthenticationExtensions:
      additionalProperties:
        properties: {}
        type: object
      type: object
    v1MfaAuthenticatorSelection:
      properties:
        authenticatorAttachment:
          type: string
        requireResidentKey:
          type: boolean
        residentKey:
          type: string
        userVerification:
          type: string
      type: object
    v1MfaConveyancePreference:
      enum:
      - none
      - indirect
      - direct
      - enterprise
      type: string
    v1MfaCredentialCreationRequest:
      properties:
        _type:
          type: string
        authenticatorAttachment:
          type: string
        clientExtensionResults:
          additionalProperties:
            properties: {}
            type: object
          type: object
        deviceName:
          type: string
        id:
          type: string
        rawId:
          format: url-encoded-base64
          type: string
        response:
          $ref: "#/components/schemas/v1MfaCredentialCreationRequest_response"
        transports:
          items:
            type: string
          type: array
      type: object
    v1MfaCredentialDescriptor:
      properties:
        attestationType:
          type: string
        id:
          format: url-encoded-base64
          type: string
        transports:
          items:
            type: string
          type: array
        type:
          type: string
      type: object
    v1MfaCredentialParameter:
      properties:
        alg:
          type: integer
        type:
          type: string
      type: object
    v1MfaDeviceMeta:
      properties:
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        deviceName:
          type: string
      type: object
    v1MfaDeviceName:
      properties:
        deviceName:
          type: string
      type: object
    v1MfaDevices:
      items:
        $ref: "#/components/schemas/v1MfaDeviceMeta"
      type: array
    v1MfaLoginStart:
      properties:
        publicKey:
          $ref: "#/components/schemas/v1MfaPublicKeyCredentialRequestOptions"
      type: object
    v1MfaPublicKeyCredentialCreationOptions:
      properties:
        attestation:
          $ref: "#/components/schemas/v1MfaConveyancePreference"
        authenticatorSelection:
          $ref: "#/components/schemas/v1MfaAuthenticatorSelection"
        challenge:
          format: url-encoded-base64
          type: string
        excludeCredentials:
          items:
            $ref: "#/components/schemas/v1MfaCredentialDescriptor"
          type: array
        extensions:
          additionalProperties:
            properties: {}
            type: object
          type: object
        pubKeyCredParams:
          items:
            $ref: "#/components/schemas/v1MfaCredentialParameter"
          type: array
        rp:
          $ref: "#/components/schemas/v1MfaRelyingPartyEntity"
        timeout:
          type: integer
        user:
          $ref: "#/components/schemas/v1MfaUserEntity"
      type: object
    v1MfaPublicKeyCredentialRequestOptions:
      properties:
        allowCredentials:
          items:
            $ref: "#/components/schemas/v1MfaCredentialDescriptor"
          type: array
        challenge:
          format: url-encoded-base64
          type: string
        extensions:
          additionalProperties:
            properties: {}
            type: object
          type: object
        rpId:
          type: string
        timeout:
          type: integer
        userVerification:
          type: string
      type: object
    v1MfaRegistrationStart:
      properties:
        publicKey:
          $ref: "#/components/schemas/v1MfaPublicKeyCredentialCreationOptions"
      type: object
    v1MfaRelyingPartyEntity:
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    v1MfaUserEntity:
      properties:
        displayName:
          type: string
        id:
          properties: {}
          type: object
        name:
          type: string
      type: object
    v1MgmtApp:
      description: Spectro application management data
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1MgmtAppSpec"
        status:
          $ref: "#/components/schemas/v1MgmtAppStatus"
      type: object
    v1MgmtAppContainersState:
      properties:
        running:
          $ref: "#/components/schemas/v1MgmtAppContainersState_running"
        terminated:
          $ref: "#/components/schemas/v1MgmtAppContainersState_terminated"
        waiting:
          $ref: "#/components/schemas/v1MgmtAppContainersState_waiting"
      type: object
    v1MgmtAppContainersStatus:
      properties:
        isHealthy:
          type: boolean
          x-omitempty: false
        message:
          type: string
        name:
          type: string
        numberOfRestarts:
          type: integer
        state:
          $ref: "#/components/schemas/v1MgmtAppContainersState"
      type: object
    v1MgmtAppCronJobStatus:
      properties:
        isHealthy:
          type: boolean
          x-omitempty: false
        lastScheduleTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastSuccessfulRunTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        messages:
          items:
            type: string
          type: array
        name:
          type: string
        pods:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppPodsStatus"
          type: object
      type: object
    v1MgmtAppEnvHealthStatus:
      properties:
        isHealthy:
          type: boolean
          x-omitempty: false
        messages:
          items:
            type: string
          type: array
        namespaces:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppNameSpaceStatus"
          type: object
      type: object
    v1MgmtAppHealth:
      properties:
        isHealthy:
          type: boolean
        podHealth:
          items:
            $ref: "#/components/schemas/v1MgmtPodHealth"
          type: array
      type: object
    v1MgmtAppNameSpaceStatus:
      properties:
        cronJobs:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppCronJobStatus"
          type: object
        deployments:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppObjectStatus"
          type: object
        isHealthy:
          type: boolean
          x-omitempty: false
        messages:
          items:
            type: string
          type: array
        statefulSets:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppObjectStatus"
          type: object
      type: object
    v1MgmtAppObjectStatus:
      properties:
        availableReplicas:
          type: integer
        creationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        desiredReplicaCount:
          type: integer
        isHealthy:
          type: boolean
          x-omitempty: false
        messages:
          items:
            type: string
          type: array
        name:
          type: string
        pods:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppPodsStatus"
          type: object
      type: object
    v1MgmtAppPodsStatus:
      properties:
        containers:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppContainersStatus"
          type: object
        isHealthy:
          type: boolean
          x-omitempty: false
        messages:
          items:
            type: string
          type: array
        name:
          type: string
        phase:
          type: string
        pvcs:
          additionalProperties:
            $ref: "#/components/schemas/v1MgmtAppPvcStatus"
          type: object
        reason:
          type: string
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1MgmtAppPvcStatus:
      properties:
        claimName:
          type: string
        creationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        isHealthy:
          type: boolean
          x-omitempty: false
        message:
          type: string
        name:
          type: string
        state:
          type: string
      type: object
    v1MgmtAppSpec:
      description: spectro application management specifications
      properties:
        appEnv:
          type: string
        cloudType:
          type: string
        installedVersion:
          type: string
        latestVersion:
          type: string
        spectroClusterUid:
          type: string
      type: object
    v1MgmtAppStatus:
      description: spectro application management status
      properties:
        appVersions:
          items:
            $ref: "#/components/schemas/v1AppVersion"
          type: array
          uniqueItems: true
        isFailed:
          type: boolean
          x-omitempty: false
        message:
          type: string
        messageLogs:
          items:
            type: string
          type: array
        state:
          type: string
        upgradeHistory:
          items:
            $ref: "#/components/schemas/v1SpectroMgmtUpgrade"
          type: array
          uniqueItems: true
      type: object
    v1MgmtAppUpgrade:
      properties:
        spec:
          $ref: "#/components/schemas/v1MgmtAppUpgrade_spec"
        status:
          $ref: "#/components/schemas/v1MgmtAppUpgrade_status"
      type: object
    v1MgmtAppVersion:
      description: spectro application management version
      properties:
        version:
          $ref: "#/components/schemas/v1MgmtAppVersion_version"
      type: object
    v1MgmtBackupSpec:
      description: backup spec
      properties:
        backupUid:
          type: string
        mode:
          type: string
        modeUid:
          type: string
        proxy:
          description: proxy information if applicable
          type: string
        scheduleTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        scheduleType:
          default: Automated
          enum:
          - OnDemand
          - Automated
          type: string
      type: object
    v1MgmtDbCollectionIndexInfo:
      description: Database info
      properties:
        key:
          type: object
        name:
          type: string
        size:
          type: integer
        version:
          type: string
      type: object
    v1MgmtDbCollectionInfo:
      description: Database info
      properties:
        count:
          type: integer
        indexes:
          items:
            $ref: "#/components/schemas/v1MgmtDbCollectionIndexInfo"
          type: array
        isCapped:
          type: boolean
        isReadOnly:
          type: boolean
        name:
          type: string
        size:
          type: integer
        storageSize:
          type: integer
        totalIndexSize:
          type: integer
      type: object
    v1MgmtDbHealth:
      properties:
        databases:
          items:
            $ref: "#/components/schemas/v1MgmtDbInfo"
          type: array
        totalIndexSize:
          type: integer
        totalSize:
          type: integer
      type: object
    v1MgmtDbInfo:
      description: Database info
      properties:
        collections:
          items:
            $ref: "#/components/schemas/v1MgmtDbCollectionInfo"
          type: array
        isEmpty:
          type: boolean
        name:
          type: string
        size:
          type: integer
        totalIndexSize:
          type: integer
      type: object
    v1MgmtDeleteBackupFtpEntity:
      description: delete backups based on retention period
      properties:
        fileTransferConfig:
          $ref: "#/components/schemas/v1MgmtFileTransferFtpEntity"
        retentionPeriod:
          type: integer
      type: object
    v1MgmtDeleteBackupS3Entity:
      description: delete backups based on retention period
      properties:
        fileTransferConfig:
          $ref: "#/components/schemas/v1MgmtFileTransferS3Entity"
        retentionPeriod:
          type: integer
      type: object
    v1MgmtErrLog:
      properties:
        ref:
          type: string
        spec:
          $ref: "#/components/schemas/v1MgmtErrSpec"
      type: object
    v1MgmtErrLogs:
      items:
        $ref: "#/components/schemas/v1MgmtErrLog"
      type: array
      uniqueItems: true
    v1MgmtErrSpec:
      properties:
        causes:
          items:
            type: string
          type: array
        data:
          type: string
        debug:
          additionalProperties:
            properties: {}
            type: object
          type: object
        errCode:
          type: string
        errMsg:
          type: string
        stackTraces:
          items:
            type: string
          type: array
        userCtx:
          $ref: "#/components/schemas/v1MgmtErrSpec_userCtx"
      type: object
    v1MgmtFileTransferFtpEntity:
      description: file transfer details
      properties:
        backupSpec:
          $ref: "#/components/schemas/v1MgmtBackupSpec"
        ftp:
          $ref: "#/components/schemas/v1MgmtFtpConfig"
      type: object
    v1MgmtFileTransferS3Entity:
      description: file transfer details
      properties:
        backupSpec:
          $ref: "#/components/schemas/v1MgmtBackupSpec"
        s3:
          $ref: "#/components/schemas/v1MgmtS3Config"
      type: object
    v1MgmtFtpConfig:
      description: ftp config
      properties:
        directory:
          type: string
        password:
          type: string
        server:
          type: string
        username:
          type: string
      type: object
    v1MgmtHash:
      properties:
        hash:
          type: string
      required:
      - hash
      type: object
    v1MgmtListBackupFtpEntity:
      description: list ftp backups
      properties:
        fileTransferConfig:
          $ref: "#/components/schemas/v1MgmtFileTransferFtpEntity"
      type: object
    v1MgmtListBackupS3Entity:
      description: list s3 backups
      properties:
        fileTransferConfig:
          $ref: "#/components/schemas/v1MgmtFileTransferS3Entity"
      type: object
    v1MgmtMigrateEntity:
      description: SystemAdmin
      properties:
        db:
          type: string
        host:
          type: string
        isServiceRecord:
          type: boolean
        password:
          type: string
        port:
          type: integer
        uri:
          type: string
        username:
          type: string
      type: object
    v1MgmtMigrationStatuses:
      description: SystemAdmin
      properties:
        finishTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        folderName:
          type: string
        isCompleted:
          type: boolean
        message:
          items:
            type: string
          type: array
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
          x-omitempty: false
        status:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1MgmtPodHealth:
      description: SystemAdmin
      properties:
        isHealthy:
          type: boolean
        name:
          type: string
      type: object
    v1MgmtS3Config:
      description: s3 config
      properties:
        accessKey:
          type: string
        bucket:
          type: string
        directory:
          type: string
        region:
          type: string
        secretKey:
          type: string
      type: object
    v1MgmtUpgradeState:
      properties:
        description:
          type: string
          x-omitempty: false
        details:
          items:
            type: string
          type: array
          x-omitempty: false
        endTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        isCompleted:
          type: boolean
          x-omitempty: false
        message:
          type: string
          x-omitempty: false
        startTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1MonthlyUsage:
      description: Monthly usage object
      properties:
        month:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        tenantUsages:
          description: List of tenants usage
          items:
            $ref: "#/components/schemas/v1TenantUsage"
          type: array
          uniqueItems: true
        usedAlloyCredits:
          description: Credits used by imported clusters
          format: float64
          type: number
        usedPureCredits:
          description: Credits used by managed clusters
          format: float64
          type: number
      type: object
    v1MsgSubscriber:
      description: Message subscriber request
      properties:
        accountId:
          type: string
        publisher:
          type: string
        service:
          type: string
        userId:
          type: string
      type: object
    v1Nameserver:
      description: Nameserver define search domains and nameserver addresses
      example:
        addresses:
        - addresses
        - addresses
        search:
        - search
        - search
      properties:
        addresses:
          items:
            type: string
          type: array
        search:
          items:
            type: string
          type: array
      type: object
    v1NestedCloudConfigStatus:
      description: Defines the status of virtual cloud config
      example:
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        isAddonLayer: true
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: type
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
      type: object
    v1Nic:
      example:
        nicName: nicName
        subnet: subnet
        isDefault: true
        ip: ip
        dns:
        - dns
        - dns
        gateway: gateway
        macAddr: macAddr
      properties:
        dns:
          items:
            type: string
          type: array
        gateway:
          type: string
        ip:
          type: string
        isDefault:
          type: boolean
        macAddr:
          type: string
        nicName:
          type: string
        subnet:
          type: string
      type: object
    v1NodesAutoRemediationSettings:
      example:
        isEnabled: true
        disableNodesAutoRemediation: true
      properties:
        disableNodesAutoRemediation:
          type: boolean
          x-omitempty: false
        isEnabled:
          type: boolean
          x-omitempty: false
      type: object
    v1NonFipsConfig:
      description: Non-FIPS configuration
      example:
        mode: nonFipsDisabled
      properties:
        mode:
          default: nonFipsDisabled
          description: enable or disable the non FIPS complaint
          enum:
          - nonFipsEnabled
          - nonFipsDisabled
          type: string
      type: object
    v1Notification:
      description: Describes event notification and action definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        relatedObject:
          uid: uid
          kind: spectrocluster
          name: name
        action:
          actionType: NotifyActionPacksUpdate
          ack: true
          actionMessage: actionMessage
          link: link
          isInfo: true
          isDone: true
          events:
            key:
              key: events
        source:
          component: component
        type: NotificationPackUpdate
      properties:
        action:
          $ref: "#/components/schemas/v1NotificationAction"
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        relatedObject:
          $ref: "#/components/schemas/v1RelatedObject"
        source:
          $ref: "#/components/schemas/v1NotificationSource"
        type:
          description: "Describes type of notification. Possible values [NotificationPackUpdate,\
            \ NotificationPackRegistryUpdate, NotificationNone]"
          enum:
          - NotificationPackUpdate
          - NotificationPackRegistryUpdate
          - NotificationNone
          type: string
      type: object
    v1NotificationAction:
      description: Describes actions for the notification
      example:
        actionType: NotifyActionPacksUpdate
        ack: true
        actionMessage: actionMessage
        link: link
        isInfo: true
        isDone: true
        events:
          key:
            key: events
      properties:
        ack:
          description: Describes the acknowledgement status for the notification
          type: boolean
          x-omitempty: false
        actionMessage:
          description: Describes information related to notification action
          type: string
        actionType:
          description: "Describes action type for the notification. Possible Values\
            \ [NotifyActionPacksUpdate, NotifyActionClusterProfileUpdate, NotifyActionPackRegistryUpdate,\
            \ NotifyActionClusterUpdate, NotifyActionNone]"
          enum:
          - NotifyActionPacksUpdate
          - NotifyActionClusterProfileUpdate
          - NotifyActionPackRegistryUpdate
          - NotifyActionClusterUpdate
          - NotifyActionNone
          type: string
        events:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Describes the events happened for the notifications
          type: object
        isDone:
          description: Describes the "Done" status for the notification
          type: boolean
          x-omitempty: false
        isInfo:
          description: Describes the notification as a information
          type: boolean
          x-omitempty: false
        link:
          type: string
      type: object
    v1NotificationEvent:
      description: Describes notification event details
      properties:
        component:
          description: Describes component of notification event
          type: string
        digest:
          description: Describes notification event digest
          type: string
        message:
          description: Describes a information for the notification event
          type: string
        meta:
          additionalProperties:
            type: string
          description: Describes a event messages with meta digest as the key
          type: object
        type:
          description: Describes notification event type
          enum:
          - NotificationPackSync
          - NotificationClusterProfileSync
          type: string
      type: object
    v1NotificationSource:
      description: Describes origin info for the notification
      example:
        component: component
      properties:
        component:
          description: Describes component where notification originated
          type: string
      type: object
    v1Notifications:
      description: Describe a list of generated notifications
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          action:
            actionType: NotifyActionPacksUpdate
            ack: true
            actionMessage: actionMessage
            link: link
            isInfo: true
            isDone: true
            events:
              key:
                key: events
          source:
            component: component
          type: NotificationPackUpdate
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          action:
            actionType: NotifyActionPacksUpdate
            ack: true
            actionMessage: actionMessage
            link: link
            isInfo: true
            isDone: true
            events:
              key:
                key: events
          source:
            component: component
          type: NotificationPackUpdate
      properties:
        items:
          description: Describe a list of generated notifications
          items:
            $ref: "#/components/schemas/v1Notification"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1OS:
      example:
        kernel: kernel
        kernelVersion: kernelVersion
        family: family
        version: version
      properties:
        family:
          type: string
        kernel:
          type: string
        kernelVersion:
          type: string
        version:
          type: string
      type: object
    v1ObjectEntity:
      description: Object identity meta
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1ObjectMeta:
      description: "ObjectMeta is metadata that all persisted resources must have,\
        \ which includes all objects users must create."
      example:
        uid: uid
        creationTimestamp: 2000-01-23T04:56:07.000+00:00
        name: name
        annotations:
          key: annotations
        lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
        deletionTimestamp: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: http://kubernetes.io/docs/user-guide/annotations"
          type: object
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        deletionTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
          type: object
        lastModifiedTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
        uid:
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

            Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          type: string
      type: object
    v1ObjectMetaInputEntity:
      description: ObjectMeta input entity for object creation
      example:
        name: name
        annotations:
          key: annotations
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: http://kubernetes.io/docs/user-guide/annotations"
          type: object
        labels:
          additionalProperties:
            type: string
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
          type: object
        name:
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
      type: object
    v1ObjectMetaInputEntitySchema:
      description: Resource metadata
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      required:
      - metadata
      type: object
    v1ObjectMetaUpdateEntity:
      description: ObjectMeta update entity with uid as input
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        uid:
          type: string
      type: object
    v1ObjectReference:
      description: ObjectReference contains enough information to let you inspect
        or modify the referred object.
      example:
        uid: uid
        kind: kind
        name: name
      properties:
        kind:
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        uid:
          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
          type: string
      type: object
    v1ObjectResReference:
      description: Object resource reference
      example:
        uid: uid
        projectUid: projectUid
        kind: kind
        tenantUid: tenantUid
        name: name
      properties:
        kind:
          type: string
        name:
          type: string
        projectUid:
          type: string
        tenantUid:
          type: string
        uid:
          type: string
      type: object
    v1ObjectScopeEntity:
      description: Object scope identity meta
      example:
        uid: uid
        scope: scope
        name: name
      properties:
        name:
          type: string
        scope:
          type: string
        uid:
          type: string
      type: object
    v1ObjectTagsEntity:
      description: Object identity meta with tags
      properties:
        labels:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        uid:
          type: string
      type: object
    v1OciImageRegistry:
      description: Oci Image Registry
      example:
        endpoint: endpoint
        password: password
        caCert: caCert
        insecureSkipVerify: true
        name: name
        baseContentPath: baseContentPath
        mirrorRegistries: mirrorRegistries
        username: username
      properties:
        baseContentPath:
          description: baseContentPath is the root path for the registry content
          type: string
        caCert:
          type: string
        endpoint:
          type: string
        insecureSkipVerify:
          type: boolean
        mirrorRegistries:
          description: "mirrorRegistries contains the array of image sources like\
            \ gcr.io, ghcr.io, docker.io"
          type: string
        name:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    v1OciRegistries:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            containsSpectroManifest: true
            registryType: registryType
            endpoint: endpoint
            scope: scope
            defaultRegion: defaultRegion
            isPrivate: true
            providerType: providerType
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            containsSpectroManifest: true
            registryType: registryType
            endpoint: endpoint
            scope: scope
            defaultRegion: defaultRegion
            isPrivate: true
            providerType: providerType
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OciRegistry"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OciRegistry:
      description: Oci registry information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          containsSpectroManifest: true
          registryType: registryType
          endpoint: endpoint
          scope: scope
          defaultRegion: defaultRegion
          isPrivate: true
          providerType: providerType
        status:
          sync:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1OciRegistrySpec"
        status:
          $ref: "#/components/schemas/v1OciRegistryStatusSummary"
      type: object
    v1OciRegistryAuth:
      description: Auth credentials of the oci registry
      properties:
        password:
          description: Password in the credentials
          format: password
          type: string
        username:
          description: Username in the credentials
          type: string
      type: object
    v1OciRegistryEntity:
      description: Oci registry credentials
      example:
        endpoint: endpoint
        auth:
          password: password
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          type: noAuth
          token: token
          username: username
        scope: scope
        defaultRegion: defaultRegion
        type: type
        providerType: providerType
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        defaultRegion:
          type: string
        endpoint:
          type: string
        providerType:
          type: string
        scope:
          type: string
        type:
          type: string
      type: object
    v1OciRegistrySpec:
      description: Image registry spec
      example:
        containsSpectroManifest: true
        registryType: registryType
        endpoint: endpoint
        scope: scope
        defaultRegion: defaultRegion
        isPrivate: true
        providerType: providerType
      properties:
        containsSpectroManifest:
          type: boolean
          x-omitempty: false
        defaultRegion:
          type: string
        endpoint:
          type: string
        isPrivate:
          type: boolean
        providerType:
          type: string
        registryType:
          type: string
        scope:
          type: string
      type: object
    v1OciRegistryStatus:
      description: Status of the oci registry
      example:
        syncStatus:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        syncStatus:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1OciRegistryStatusSummary:
      description: OCI registry status summary
      example:
        sync:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        sync:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1OidcAuth:
      properties:
        oidcToken:
          type: string
        org:
          type: string
      type: object
    v1OidcAuthLogin:
      properties:
        emailId:
          type: string
        password:
          format: password
          type: string
      type: object
    v1OidcAuthorizationTokenResponse:
      properties:
        access_token:
          type: string
        error:
          type: string
        error_description:
          type: string
        expires_in:
          type: integer
        id_token:
          type: string
        raw:
          properties: {}
          type: object
        refresh_token:
          type: string
        scope:
          type: string
      type: object
    v1OidcIssuerTls:
      example:
        insecureSkipVerify: false
        caCertificateBase64: caCertificateBase64
      properties:
        caCertificateBase64:
          type: string
          x-omitempty: false
        insecureSkipVerify:
          default: false
          type: boolean
          x-omitempty: false
      type: object
    v1OidcLogins:
      description: loginsDetails
      properties:
        systemLogins:
          items:
            $ref: "#/components/schemas/v1SsoLogin"
          type: array
          uniqueItems: true
        tenantLogin:
          $ref: "#/components/schemas/v1OidcLogins_tenantLogin"
      type: object
    v1OidcRefreshToken:
      description: oidc request with token
      properties:
        token:
          type: string
      type: object
    v1OidcUserInfo:
      example:
        useUserInfo: false
        claims:
          Email: Email
          FirstName: FirstName
          SpectroTeam: SpectroTeam
          LastName: LastName
      properties:
        claims:
          $ref: "#/components/schemas/v1TenantOidcClaims"
        useUserInfo:
          default: false
          type: boolean
          x-omitempty: false
      type: object
    v1OpenIDProviderMetadataResponse:
      properties:
        authorization_endpoint:
          description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint
          type: string
        claims_supported:
          description: RECOMMENDED. JSON array containing a list of the Claim Names
            of the Claims that the OpenID Provider MAY be able to supply values for
          type: string
        id_token_signing_alg_values_supported:
          description: REQUIRED. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for the ID Token to encode the Claims
            in a JWT
          properties: {}
          type: object
        issuer:
          description: REQUIRED. URL using the https scheme with no query or fragment
            component that the OP asserts as its Issuer Identifier
          type: string
        jwks_uri:
          description: "REQUIRED. URL of the OP's JSON Web Key Set [JWK] document."
          type: string
        registration_endpoint:
          description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint
          type: string
        response_types_supported:
          description: REQUIRED. JSON array containing a list of the OAuth 2.0 response_type
            values that this OP supports
          type: string
        scopes_supported:
          description: "RECOMMENDED. JSON array containing a list of the OAuth 2.0\
            \ [RFC6749] scope values that this server supports"
          type: string
        subject_types_supported:
          description: REQUIRED. JSON array containing a list of the Subject Identifier
            types that this OP supports
          type: string
        token_endpoint:
          description: URL of the OP's OAuth 2.0 Token Endpoint
          type: string
        userinfo_endpoint:
          description: RECOMMENDED. URL of the OP's UserInfo Endpoint
          type: string
      type: object
    v1OpenStackAccount:
      description: OpenStack account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          password: password
          caCert: caCert
          identityEndpoint: identityEndpoint
          insecure: true
          parentRegion: parentRegion
          defaultDomain: defaultDomain
          defaultProject: defaultProject
          username: username
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1OpenStackCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1OpenStackAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            password: password
            caCert: caCert
            identityEndpoint: identityEndpoint
            insecure: true
            parentRegion: parentRegion
            defaultDomain: defaultDomain
            defaultProject: defaultProject
            username: username
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            password: password
            caCert: caCert
            identityEndpoint: identityEndpoint
            insecure: true
            parentRegion: parentRegion
            defaultDomain: defaultDomain
            defaultProject: defaultProject
            username: username
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1OpenStackAz:
      description: OpenStack az entity
      example:
        name: name
      properties:
        name:
          description: Name of OpenStack az
          type: string
      type: object
    v1OpenStackAzs:
      description: List of OpenStack azs
      example:
        azs:
        - name: name
        - name: name
      properties:
        azs:
          items:
            $ref: "#/components/schemas/v1OpenStackAz"
          type: array
          uniqueItems: true
      required:
      - azs
      type: object
    v1OpenStackCloudAccount:
      description: "auth-url,project,username,password,domain,cacert etc"
      example:
        password: password
        caCert: caCert
        identityEndpoint: identityEndpoint
        insecure: true
        parentRegion: parentRegion
        defaultDomain: defaultDomain
        defaultProject: defaultProject
        username: username
      properties:
        caCert:
          description: Ca cert for OpenStack
          type: string
        defaultDomain:
          description: Default Domain name
          type: string
        defaultProject:
          description: Default Project name
          type: string
        identityEndpoint:
          description: Identity endpoint for OpenStack
          type: string
        insecure:
          description: For self signed certs in IdentityEndpoint
          type: boolean
        parentRegion:
          description: Parent region of OpenStack
          type: string
        password:
          description: Password of OpenStack account
          type: string
        username:
          description: Username of OpenStack account
          type: string
      required:
      - identityEndpoint
      - password
      - username
      type: object
    v1OpenStackCloudClusterConfigEntity:
      description: Openstack cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1OpenStackClusterConfig"
      type: object
    v1OpenStackCloudConfig:
      description: OpenStackCloudConfig is the Schema for the OpenStackcloudconfigs
        API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          machinePoolConfig:
          - diskGiB: 0
            image: image
            subnet:
              name: name
              id: id
            isControlPlane: true
            nodeRepaveInterval: 7
            additionalLabels:
              key: additionalLabels
            maxSize: 5
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            flavorConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              memoryMiB: 1
            labels:
            - labels
            - labels
            flavor: flavor
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 9
            name: name
            minSize: 2
            azs:
            - azs
            - azs
          - diskGiB: 0
            image: image
            subnet:
              name: name
              id: id
            isControlPlane: true
            nodeRepaveInterval: 7
            additionalLabels:
              key: additionalLabels
            maxSize: 5
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            flavorConfig:
              diskGiB: 6
              numCPUs: 5
              name: name
              memoryMiB: 1
            labels:
            - labels
            - labels
            flavor: flavor
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 9
            name: name
            minSize: 2
            azs:
            - azs
            - azs
          clusterConfig:
            dnsNameservers:
            - dnsNameservers
            - dnsNameservers
            subnet:
              name: name
              id: id
            sshKeyName: sshKeyName
            bastionDisabled: true
            domain:
              name: name
              id: id
            project:
              name: name
              id: id
            region: region
            nodeCidr: nodeCidr
            network:
              name: name
              id: id
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          nodeImage: nodeImage
          sourceImageId: sourceImageId
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          useCapiImage: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1OpenStackCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1OpenStackCloudConfigStatus"
      type: object
    v1OpenStackCloudConfigSpec:
      description: OpenStackCloudConfigSpec defines the cloud configuration input
        by user This will translate to clusterspec/machinespec for cluster-api
      example:
        machinePoolConfig:
        - diskGiB: 0
          image: image
          subnet:
            name: name
            id: id
          isControlPlane: true
          nodeRepaveInterval: 7
          additionalLabels:
            key: additionalLabels
          maxSize: 5
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          flavorConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            memoryMiB: 1
          labels:
          - labels
          - labels
          flavor: flavor
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 9
          name: name
          minSize: 2
          azs:
          - azs
          - azs
        - diskGiB: 0
          image: image
          subnet:
            name: name
            id: id
          isControlPlane: true
          nodeRepaveInterval: 7
          additionalLabels:
            key: additionalLabels
          maxSize: 5
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          flavorConfig:
            diskGiB: 6
            numCPUs: 5
            name: name
            memoryMiB: 1
          labels:
          - labels
          - labels
          flavor: flavor
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 9
          name: name
          minSize: 2
          azs:
          - azs
          - azs
        clusterConfig:
          dnsNameservers:
          - dnsNameservers
          - dnsNameservers
          subnet:
            name: name
            id: id
          sshKeyName: sshKeyName
          bastionDisabled: true
          domain:
            name: name
            id: id
          project:
            name: name
            id: id
          region: region
          nodeCidr: nodeCidr
          network:
            name: name
            id: id
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1OpenStackClusterConfig"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1OpenStackMachinePoolConfig"
          type: array
      type: object
    v1OpenStackCloudConfigStatus:
      description: OpenStackCloudConfigStatus defines the observed state of OpenStackCloudConfig
        The cloudimage info built by Mold is stored here image should be mapped to
        a specific machinepool
      example:
        nodeImage: nodeImage
        sourceImageId: sourceImageId
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        useCapiImage: true
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        nodeImage:
          type: string
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        useCapiImage:
          type: boolean
      type: object
    v1OpenStackClusterConfig:
      description: Cluster level configuration for OpenStack cloud and applicable
        for all the machine pools
      example:
        dnsNameservers:
        - dnsNameservers
        - dnsNameservers
        subnet:
          name: name
          id: id
        sshKeyName: sshKeyName
        bastionDisabled: true
        domain:
          name: name
          id: id
        project:
          name: name
          id: id
        region: region
        nodeCidr: nodeCidr
        network:
          name: name
          id: id
      properties:
        bastionDisabled:
          description: Create bastion node option we have earlier supported creation
            of bastion by default
          type: boolean
        dnsNameservers:
          description: DNSNameservers is the list of nameservers for OpenStack Subnet
            being created. Set this value when you need create a new network/subnet
            while the access through DNS is required.
          items:
            type: string
          type: array
        domain:
          $ref: "#/components/schemas/v1OpenStackResource"
        network:
          $ref: "#/components/schemas/v1OpenStackResource"
        nodeCidr:
          description: "For dynamic provision NodeCIDR is the OpenStack Subnet to\
            \ be created. Cluster actuator will create a network, a subnet with NodeCIDR,\
            \ and a router connected to this subnet. If you leave this empty, no network\
            \ will be created."
          type: string
        project:
          $ref: "#/components/schemas/v1OpenStackResource"
        region:
          type: string
        sshKeyName:
          type: string
        subnet:
          $ref: "#/components/schemas/v1OpenStackResource"
      type: object
    v1OpenStackDomain:
      description: "OpenStack domain. A Domain is a collection of projects, users,\
        \ and roles"
      example:
        name: name
        description: description
        id: id
      properties:
        description:
          description: Description is the description of the Domain
          type: string
        id:
          description: ID is the unique ID of the domain
          type: string
        name:
          description: Name is the name of the domain
          type: string
      type: object
    v1OpenStackFlavor:
      description: OpenStack flavor entity. Flavor represent (virtual) hardware configurations
        for server resources
      example:
        disk: 0
        memory: 1
        name: name
        ephemeral: 6
        id: id
        vcpus: 5
      properties:
        disk:
          description: "Disk is the amount of root disk, measured in GB"
          type: integer
        ephemeral:
          description: "Ephemeral is the amount of ephemeral disk space, measured\
            \ in GB"
          type: integer
        id:
          description: ID is the flavor's unique ID
          type: string
        memory:
          description: "Amount of memory, measured in MB"
          type: integer
        name:
          description: Name is the name of the flavor
          type: string
        vcpus:
          description: VCPUs indicates how many (virtual) CPUs are available for this
            flavor
          type: integer
      type: object
    v1OpenStackFlavors:
      description: List of OpenStack flavours
      example:
        items:
        - disk: 0
          memory: 1
          name: name
          ephemeral: 6
          id: id
          vcpus: 5
        - disk: 0
          memory: 1
          name: name
          ephemeral: 6
          id: id
          vcpus: 5
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackFlavor"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OpenStackKeypair:
      description: OpenStack keypair. KeyPair is an SSH key known to the OpenStack
        Cloud that is available to be injected into servers
      example:
        name: name
        publicKey: publicKey
      properties:
        name:
          description: Name is used to refer to this keypair from other services within
            this region
          type: string
        publicKey:
          description: "PublicKey is the public key from this pair, in OpenSSH format"
          type: string
      type: object
    v1OpenStackKeypairs:
      description: List of OpenStack keypairs
      example:
        items:
        - name: name
          publicKey: publicKey
        - name: name
          publicKey: publicKey
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackKeypair"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OpenStackMachine:
      description: OpenStack cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          image: image
          sshKeyName: sshKeyName
          instanceType:
            diskGiB: 0
            numCPUs: 1
            name: name
            memoryMiB: 6
          nics:
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
          - privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
          az: az
          securityGroups:
          - securityGroups
          - securityGroups
          projectId: projectId
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1OpenStackMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1OpenStackMachineConfigEntity:
      properties:
        azs:
          description: "for control plane pool, this will be the failure domains for\
            \ kcp"
          items:
            type: string
          type: array
        flavorConfig:
          $ref: "#/components/schemas/v1OpenstackFlavorConfig"
      required:
      - flavorConfig
      type: object
    v1OpenStackMachinePoolCloudConfigEntity:
      properties:
        azs:
          description: "for control plane pool, this will be the failure domains for\
            \ kcp"
          items:
            type: string
          type: array
        diskGiB:
          description: Root disk size
          format: int32
          type: integer
        flavorConfig:
          $ref: "#/components/schemas/v1OpenstackFlavorConfig"
        subnet:
          $ref: "#/components/schemas/v1OpenStackResource"
      required:
      - flavorConfig
      type: object
    v1OpenStackMachinePoolConfig:
      example:
        diskGiB: 0
        image: image
        subnet:
          name: name
          id: id
        isControlPlane: true
        nodeRepaveInterval: 7
        additionalLabels:
          key: additionalLabels
        maxSize: 5
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        flavorConfig:
          diskGiB: 6
          numCPUs: 5
          name: name
          memoryMiB: 1
        labels:
        - labels
        - labels
        flavor: flavor
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 9
        name: name
        minSize: 2
        azs:
        - azs
        - azs
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          description: "for control plane pool, this will be the failure domains for\
            \ kcp"
          items:
            type: string
          type: array
        diskGiB:
          description: "DiskGiB is used to configure rootVolume, the volume metadata\
            \ to boot from"
          format: int32
          type: integer
        flavor:
          description: "Openstack flavor name, only return argument"
          type: string
        flavorConfig:
          $ref: "#/components/schemas/v1OpenstackFlavorConfig"
        image:
          type: string
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        subnet:
          $ref: "#/components/schemas/v1OpenStackResource"
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - flavorConfig
      type: object
    v1OpenStackMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1OpenStackMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1OpenStackMachineSpec:
      description: OpenStack cloud VM definition spec
      example:
        image: image
        sshKeyName: sshKeyName
        instanceType:
          diskGiB: 0
          numCPUs: 1
          name: name
          memoryMiB: 6
        nics:
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
        - privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
        az: az
        securityGroups:
        - securityGroups
        - securityGroups
        projectId: projectId
      properties:
        az:
          type: string
        image:
          type: string
        instanceType:
          $ref: "#/components/schemas/v1GenericInstanceType"
        nics:
          items:
            $ref: "#/components/schemas/v1OpenStackNic"
          type: array
        projectId:
          type: string
        securityGroups:
          items:
            type: string
          type: array
        sshKeyName:
          type: string
      required:
      - instanceType
      - nics
      type: object
    v1OpenStackMachines:
      description: OpenStack machine list
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            image: image
            sshKeyName: sshKeyName
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            az: az
            securityGroups:
            - securityGroups
            - securityGroups
            projectId: projectId
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            image: image
            sshKeyName: sshKeyName
            instanceType:
              diskGiB: 0
              numCPUs: 1
              name: name
              memoryMiB: 6
            nics:
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            - privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            az: az
            securityGroups:
            - securityGroups
            - securityGroups
            projectId: projectId
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackMachine"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OpenStackNetwork:
      description: OpenStack network
      example:
        name: name
        description: description
        subnets:
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
        id: id
      properties:
        description:
          description: Description of OpenStack network
          type: string
        id:
          description: Id of OpenStack network
          type: string
        name:
          description: Name of OpenStack network
          type: string
        subnets:
          description: Subnets associated with OpenStack network
          items:
            $ref: "#/components/schemas/v1OpenStackSubnet"
          type: array
          uniqueItems: true
      type: object
    v1OpenStackNetworks:
      description: List of OpenStack networks
      example:
        items:
        - name: name
          description: description
          subnets:
          - name: name
            description: description
            id: id
          - name: name
            description: description
            id: id
          id: id
        - name: name
          description: description
          subnets:
          - name: name
            description: description
            id: id
          - name: name
            description: description
            id: id
          id: id
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackNetwork"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OpenStackNic:
      description: OpenStack network interface
      example:
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 0
      properties:
        index:
          format: int8
          type: integer
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
      required:
      - networkName
      type: object
    v1OpenStackProject:
      description: Project represents an OpenStack Identity Project
      example:
        parentProjectId: parentProjectId
        name: name
        description: description
        id: id
        domainId: domainId
      properties:
        description:
          description: Description is the description of the project
          type: string
        domainId:
          description: DomainID is the domain ID the project belongs to
          type: string
        id:
          description: ID is the unique ID of the project
          type: string
        name:
          description: Name is the name of the project
          type: string
        parentProjectId:
          description: ParentID is the parent_id of the project
          type: string
      type: object
    v1OpenStackProjects:
      description: Array of OpenStack projects
      example:
        items:
        - parentProjectId: parentProjectId
          name: name
          description: description
          id: id
          domainId: domainId
        - parentProjectId: parentProjectId
          name: name
          description: description
          id: id
          domainId: domainId
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1OpenStackProject"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1OpenStackRegion:
      description: OpenStack region entity
      example:
        parentRegionId: parentRegionId
        description: description
        id: id
      properties:
        description:
          description: Description of OpenStack region
          type: string
        id:
          description: Id of OpenStack region
          type: string
        parentRegionId:
          description: Parent region id of OpenStack region
          type: string
      type: object
    v1OpenStackRegions:
      description: List of OpenStack regions and domains
      example:
        regions:
        - parentRegionId: parentRegionId
          description: description
          id: id
        - parentRegionId: parentRegionId
          description: description
          id: id
        domains:
        - name: name
          description: description
          id: id
        - name: name
          description: description
          id: id
      properties:
        domains:
          description: List of OpenStack domains
          items:
            $ref: "#/components/schemas/v1OpenStackDomain"
          type: array
          uniqueItems: true
        regions:
          description: List of OpenStack regions
          items:
            $ref: "#/components/schemas/v1OpenStackRegion"
          type: array
          uniqueItems: true
      required:
      - domains
      - regions
      type: object
    v1OpenStackResource:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    v1OpenStackSubnet:
      description: OpenStack subnet entity
      example:
        name: name
        description: description
        id: id
      properties:
        description:
          description: Description for the network
          type: string
        id:
          description: UUID for the network
          type: string
        name:
          description: Human-readable name for the network. Might not be unique
          type: string
      type: object
    v1OpenstackFlavorConfig:
      example:
        diskGiB: 6
        numCPUs: 5
        name: name
        memoryMiB: 1
      properties:
        diskGiB:
          description: "DiskGiB is the size of a virtual machine's disk, in GiB."
          format: int32
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a virtual machine's memory, in MiB."
          format: int64
          type: integer
        name:
          description: Openstack flavor name
          type: string
        numCPUs:
          description: NumCPUs is the number of virtual processors in a virtual machine.
          format: int32
          type: integer
      required:
      - name
      type: object
    v1OrgState:
      description: Org state
      properties:
        state:
          type: string
      type: object
    v1Organization:
      description: Describes user's organization details
      example:
        redirectUrl: redirectUrl
        name: name
        authType: authType
        ssoLogins:
        - redirectUri: redirectUri
          displayName: displayName
          name: name
          logo: logo
        - redirectUri: redirectUri
          displayName: displayName
          name: name
          logo: logo
      properties:
        authType:
          description: Describes user's enabled authorization mode
          type: string
        name:
          description: Describes user's organization name
          type: string
        redirectUrl:
          description: Describes user's organization authentication url
          type: string
        ssoLogins:
          description: Describes the allowed sso logins
          items:
            $ref: "#/components/schemas/v1SsoLogin"
          type: array
          uniqueItems: true
      type: object
    v1Organizations:
      description: Returns a list of user's organizations details and login methods
      example:
        organizations:
        - redirectUrl: redirectUrl
          name: name
          authType: authType
          ssoLogins:
          - redirectUri: redirectUri
            displayName: displayName
            name: name
            logo: logo
          - redirectUri: redirectUri
            displayName: displayName
            name: name
            logo: logo
        - redirectUrl: redirectUrl
          name: name
          authType: authType
          ssoLogins:
          - redirectUri: redirectUri
            displayName: displayName
            name: name
            logo: logo
          - redirectUri: redirectUri
            displayName: displayName
            name: name
            logo: logo
      properties:
        organizations:
          description: Describes a list of user's organization
          items:
            $ref: "#/components/schemas/v1Organization"
          type: array
          uniqueItems: true
      type: object
    v1OsPatchConfig:
      example:
        schedule: schedule
        onDemandPatchAfter: 2000-01-23T04:56:07.000+00:00
        patchOnBoot: true
        rebootIfRequired: true
      properties:
        onDemandPatchAfter:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        patchOnBoot:
          description: "PatchOnBoot indicates need to do patch when node first boot\
            \ up, only once"
          type: boolean
          x-omitempty: false
        rebootIfRequired:
          description: Reboot once the OS patch is applied
          type: boolean
          x-omitempty: false
        schedule:
          description: "The schedule at which security patches will be applied to\
            \ OS. Schedule should be in Cron format, see https://en.wikipedia.org/wiki/Cron\
            \ for more help."
          type: string
      type: object
    v1OsPatchEntity:
      properties:
        osPatchConfig:
          $ref: "#/components/schemas/v1OsPatchConfig"
      type: object
    v1OsType:
      default: Linux
      enum:
      - Linux
      - Windows
      type: string
    v1OverloadSpec:
      description: Overload spec
      example:
        isSystem: true
        spectroClusterUid: spectroClusterUid
        tenantUid: tenantUid
        ipAddress: ipAddress
        ipPools:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            priavetGatewayUid: priavetGatewayUid
            restrictToSingleCluster: true
            pool:
              subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          status:
            associatedClusters:
            - associatedClusters
            - associatedClusters
            allottedIps:
            - allottedIps
            - allottedIps
            inUse: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            priavetGatewayUid: priavetGatewayUid
            restrictToSingleCluster: true
            pool:
              subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          status:
            associatedClusters:
            - associatedClusters
            - associatedClusters
            allottedIps:
            - allottedIps
            - allottedIps
            inUse: true
        cloudAccountUid: cloudAccountUid
        isSelfHosted: true
      properties:
        cloudAccountUid:
          type: string
          x-omitempty: false
        ipAddress:
          type: string
        ipPools:
          items:
            $ref: "#/components/schemas/v1IpPoolEntity"
          type: array
        isSelfHosted:
          type: boolean
        isSystem:
          type: boolean
        spectroClusterUid:
          type: string
          x-omitempty: false
        tenantUid:
          type: string
      type: object
    v1OverloadStatus:
      description: Overload status
      example:
        isReady: true
        health:
          lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
          agentVersion: agentVersion
          state: state
          conditions:
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
        state: state
        isActive: true
        kubectlCommands:
        - kubectlCommands
        - kubectlCommands
        notifications:
          isAvailable: true
      properties:
        health:
          $ref: "#/components/schemas/v1SpectroClusterHealthStatus"
        isActive:
          type: boolean
          x-omitempty: false
        isReady:
          type: boolean
          x-omitempty: false
        kubectlCommands:
          items:
            type: string
          type: array
          uniqueItems: true
        notifications:
          $ref: "#/components/schemas/v1ClusterNotificationStatus"
        state:
          type: string
      type: object
    v1OverloadVsphereOva:
      description: Overload ova details
      example:
        location: location
      properties:
        location:
          type: string
          x-omitempty: false
      type: object
    v1Overlord:
      description: Overlord defintiion
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          isSystem: true
          spectroClusterUid: spectroClusterUid
          tenantUid: tenantUid
          ipAddress: ipAddress
          ipPools:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              priavetGatewayUid: priavetGatewayUid
              restrictToSingleCluster: true
              pool:
                subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            status:
              associatedClusters:
              - associatedClusters
              - associatedClusters
              allottedIps:
              - allottedIps
              - allottedIps
              inUse: true
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              priavetGatewayUid: priavetGatewayUid
              restrictToSingleCluster: true
              pool:
                subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            status:
              associatedClusters:
              - associatedClusters
              - associatedClusters
              allottedIps:
              - allottedIps
              - allottedIps
              inUse: true
          cloudAccountUid: cloudAccountUid
          isSelfHosted: true
        status:
          isReady: true
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            agentVersion: agentVersion
            state: state
            conditions:
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
          state: state
          isActive: true
          kubectlCommands:
          - kubectlCommands
          - kubectlCommands
          notifications:
            isAvailable: true
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1OverloadSpec"
        status:
          $ref: "#/components/schemas/v1OverloadStatus"
      type: object
    v1OverlordMaasAccountCreate:
      properties:
        account:
          $ref: "#/components/schemas/v1MaasCloudAccount"
        name:
          description: Name for the private gateway & cloud account
          type: string
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordMaasAccountEntity:
      properties:
        account:
          $ref: "#/components/schemas/v1MaasCloudAccount"
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordMaasCloudConfig:
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1MaasClusterConfig"
        clusterProfiles:
          description: Cluster profiles pack configuration for private gateway cluster
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
        clusterSettings:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machineConfig:
          $ref: "#/components/schemas/v1MaasMachineConfigEntity"
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
      type: object
    v1OverlordManifest:
      description: overlord manifest
      example:
        manifest: manifest
      properties:
        manifest:
          type: string
      type: object
    v1OverlordMigrateEntity:
      properties:
        sourceUid:
          type: string
        targetUid:
          type: string
      type: object
    v1OverlordOpenStackAccountCreate:
      properties:
        account:
          $ref: "#/components/schemas/v1OpenStackCloudAccount"
        name:
          description: Name for the private gateway & cloud account
          type: string
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordOpenStackAccountEntity:
      properties:
        account:
          $ref: "#/components/schemas/v1OpenStackCloudAccount"
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordOpenStackCloudConfig:
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1OpenStackClusterConfig"
        clusterProfiles:
          description: Cluster profiles pack configuration for private gateway cluster
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
        clusterSettings:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machineConfig:
          $ref: "#/components/schemas/v1OpenStackMachineConfigEntity"
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
      type: object
    v1OverlordVsphereAccountCreate:
      properties:
        account:
          $ref: "#/components/schemas/v1VsphereCloudAccount"
        name:
          description: Name for the private gateway & cloud account
          type: string
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordVsphereAccountEntity:
      properties:
        account:
          $ref: "#/components/schemas/v1VsphereCloudAccount"
        shareWithProjects:
          type: boolean
          x-omitempty: false
      type: object
    v1OverlordVsphereCloudConfig:
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1VsphereOverlordClusterConfigEntity"
        clusterProfiles:
          description: Cluster profiles pack configuration for private gateway cluster
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
        clusterSettings:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
      type: object
    v1Overlords:
      description: Array of Overlords
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            isSystem: true
            spectroClusterUid: spectroClusterUid
            tenantUid: tenantUid
            ipAddress: ipAddress
            ipPools:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            cloudAccountUid: cloudAccountUid
            isSelfHosted: true
          status:
            isReady: true
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            state: state
            isActive: true
            kubectlCommands:
            - kubectlCommands
            - kubectlCommands
            notifications:
              isAvailable: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            isSystem: true
            spectroClusterUid: spectroClusterUid
            tenantUid: tenantUid
            ipAddress: ipAddress
            ipPools:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            cloudAccountUid: cloudAccountUid
            isSelfHosted: true
          status:
            isReady: true
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            state: state
            isActive: true
            kubectlCommands:
            - kubectlCommands
            - kubectlCommands
            notifications:
              isAvailable: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Overlord"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1PackConfig:
      description: Pack configuration
      example:
        spec:
          packUid: packUid
          scope: scope
          values: values
          manifests:
          - parentUid: parentUid
            uid: uid
            isOverridden: true
            digest: digest
            name: name
          - parentUid: parentUid
            uid: uid
            isOverridden: true
            digest: digest
            name: name
          name: name
          tag: tag
          associatedObject: associatedObject
          type: type
          version: version
          isValuesOverridden: true
      properties:
        spec:
          $ref: "#/components/schemas/v1PackConfigSpec"
      type: object
    v1PackConfigSpec:
      example:
        packUid: packUid
        scope: scope
        values: values
        manifests:
        - parentUid: parentUid
          uid: uid
          isOverridden: true
          digest: digest
          name: name
        - parentUid: parentUid
          uid: uid
          isOverridden: true
          digest: digest
          name: name
        name: name
        tag: tag
        associatedObject: associatedObject
        type: type
        version: version
        isValuesOverridden: true
      properties:
        associatedObject:
          type: string
        isValuesOverridden:
          type: boolean
          x-omitempty: false
        manifests:
          items:
            $ref: "#/components/schemas/v1PackManifestRef"
          type: array
        name:
          type: string
        packUid:
          type: string
        scope:
          type: string
        tag:
          type: string
        type:
          type: string
        values:
          type: string
        version:
          type: string
      type: object
    v1PackDependency:
      description: Pack template dependency
      example:
        name: name
        readOnly: true
        layer: layer
      properties:
        layer:
          description: Pack template dependency pack layer
          type: string
        name:
          description: Pack template dependency pack name
          type: string
        readOnly:
          description: If true then dependency pack values can't be overridden
          type: boolean
      type: object
    v1PackDependencyMeta:
      description: Pack dependency metadata
      example:
        registryUid: registryUid
        uid: uid
        displayName: displayName
        name: name
        version: version
        logoUrl: logoUrl
      properties:
        displayName:
          description: Pack display name
          type: string
        logoUrl:
          description: Pack logo url
          type: string
        name:
          description: Pack name
          type: string
        registryUid:
          description: Pack registry uid
          type: string
        uid:
          description: Pack uid
          type: string
        version:
          description: Pack version
          type: string
      type: object
    v1PackEntity:
      description: Pack object
      properties:
        layer:
          description: Pack layer
          type: string
        name:
          description: Pack name
          type: string
        tag:
          description: Pack tag
          type: string
        type:
          $ref: "#/components/schemas/v1PackType"
        uid:
          description: Pack uid
          type: string
        values:
          description: "values represents the values.yaml used as input parameters\
            \ either Params OR Values should be used, not both If both applied at\
            \ the same time, will only use Values"
          type: string
      required:
      - name
      - uid
      type: object
    v1PackFilterSpec:
      description: Packs filter spec
      properties:
        addOnSubType:
          description: "Pack add-on sub type such as monitoring, db etc"
          items:
            type: string
          type: array
          uniqueItems: true
        addOnType:
          description: "Pack add-on type such as logging, monitoring, security etc"
          items:
            type: string
          type: array
          uniqueItems: true
        displayName:
          $ref: "#/components/schemas/v1FilterString"
        environment:
          description: Pack supported cloud types
          items:
            type: string
          type: array
          uniqueItems: true
        isFips:
          description: isFips compliant
          type: boolean
        layer:
          description: Pack layer
          items:
            $ref: "#/components/schemas/v1PackLayer"
          type: array
          uniqueItems: true
        name:
          $ref: "#/components/schemas/v1FilterString"
        registryUid:
          description: Pack registry uid
          items:
            type: string
          type: array
          uniqueItems: true
        source:
          description: The source filter describes the creation origin/source of the
            pack. Ex. source can be "spectrocloud" or "community"
          items:
            type: string
          type: array
          uniqueItems: true
        state:
          description: Pack state such as deprecated or disabled
          items:
            type: string
          type: array
          uniqueItems: true
        type:
          description: Pack type
          items:
            $ref: "#/components/schemas/v1PackType"
          type: array
          uniqueItems: true
      type: object
    v1PackImportEntity:
      description: Pack import request payload
      example:
        registry:
          metadata:
            uid: uid
            kind: kind
            isSyncSupported: true
            name: name
            isPrivate: true
            providerType: providerType
          matchingRegistries:
          - uid: uid
            kind: kind
            isSyncSupported: true
            name: name
            isPrivate: true
            providerType: providerType
          - uid: uid
            kind: kind
            isSyncSupported: true
            name: name
            isPrivate: true
            providerType: providerType
        values: values
        manifests:
        - name: name
          content: content
        - name: name
          content: content
        name: name
        tag: tag
        type: type
        version: version
        layer: layer
      properties:
        layer:
          description: "Pack layer [ \"os\", \"k8s\", \"cni\", \"csi\", \"addon\"\
            \ ]"
          type: string
        manifests:
          description: Pack manifests array
          items:
            $ref: "#/components/schemas/v1PackManifestImportEntity"
          type: array
        name:
          description: Pack name
          type: string
        registry:
          $ref: "#/components/schemas/v1PackRegistryImportEntity"
        tag:
          description: Pack version tag
          type: string
        type:
          description: "Pack type [ \"spectro\", \"helm\", \"manifest\", \"oci\" ]"
          type: string
        values:
          description: Pack values are the customizable configurations for the pack
          type: string
        version:
          description: Pack version
          type: string
      type: object
    v1PackInputEntity:
      description: Pack request payload
      properties:
        pack:
          $ref: "#/components/schemas/v1PackManifestEntity"
      type: object
    v1PackLayer:
      enum:
      - kernel
      - os
      - k8s
      - cni
      - csi
      - addon
      type: string
    v1PackManifestEntity:
      description: Pack request payload
      properties:
        layer:
          description: Pack layer
          type: string
        manifests:
          description: Pack manifests are additional content as part of the profile
          items:
            $ref: "#/components/schemas/v1ManifestInputEntity"
          type: array
        name:
          description: Pack name
          type: string
        registryUid:
          description: Pack registry uid
          type: string
        tag:
          description: Pack tag
          type: string
        type:
          $ref: "#/components/schemas/v1PackType"
        uid:
          description: Pack uid
          type: string
        values:
          description: "Pack values represents the values.yaml used as input parameters\
            \ either Params OR Values should be used, not both If both applied at\
            \ the same time, will only use Values"
          type: string
      required:
      - name
      type: object
    v1PackManifestImportEntity:
      description: Pack manifest import objct
      example:
        name: name
        content: content
      properties:
        content:
          description: Pack manifest content in yaml
          type: string
        name:
          description: Pack manifest name
          type: string
      type: object
    v1PackManifestRef:
      example:
        parentUid: parentUid
        uid: uid
        isOverridden: true
        digest: digest
        name: name
      properties:
        digest:
          type: string
        isOverridden:
          type: boolean
          x-omitempty: false
        name:
          type: string
        parentUid:
          type: string
        uid:
          type: string
      type: object
    v1PackManifestUpdateEntity:
      description: Pack input entity with values to overwrite and manifests for the
        intial creation
      properties:
        layer:
          description: Pack layer
          type: string
        manifests:
          description: Pack manifests are additional content as part of the profile
          items:
            $ref: "#/components/schemas/v1ManifestRefUpdateEntity"
          type: array
        name:
          description: Pack name
          type: string
        registryUid:
          description: Pack registry uid
          type: string
        tag:
          description: Pack tag
          type: string
        type:
          $ref: "#/components/schemas/v1PackType"
        uid:
          description: Pack uid
          type: string
        values:
          description: "Pack values represents the values.yaml used as input parameters\
            \ either Params OR Values should be used, not both If both applied at\
            \ the same time, will only use Values"
          type: string
      required:
      - name
      type: object
    v1PackManifests:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            published:
              digest: digest
              content: content
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            published:
              digest: digest
              content: content
      properties:
        items:
          description: Manifests array
          items:
            $ref: "#/components/schemas/v1Manifest"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1PackManifestsSpec:
      description: Pack manifests spec
      example:
        schema:
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        registryUid: registryUid
        eol: eol
        displayName: displayName
        values: values
        addonType: addonType
        annotations:
          key: annotations
        type: spectro
        version: version
        layer: kernel
        logoUrl: logoUrl
        presets:
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        digest: digest
        manifests:
        - uid: uid
          name: name
          content: content
        - uid: uid
          name: name
          content: content
        name: name
        cloudTypes:
        - cloudTypes
        - cloudTypes
        group: group
      properties:
        addonType:
          description: "Pack add-on type such as logging, monitoring, security etc"
          type: string
        annotations:
          additionalProperties:
            type: string
          description: Pack annotations is used to allow pack to add more arbitrary
            configurations
          type: object
        cloudTypes:
          description: Pack supported cloud types
          items:
            type: string
          type: array
        digest:
          description: Pack digest
          type: string
        displayName:
          description: Pack display name
          type: string
        eol:
          description: "Pack end of life, date format: yyyy-MM-dd"
          type: string
        group:
          description: Pack group
          type: string
        layer:
          $ref: "#/components/schemas/v1PackLayer"
        logoUrl:
          description: Pack logo url
          type: string
        manifests:
          description: Pack manifests are additional content as part of the cluster
            profile
          items:
            $ref: "#/components/schemas/v1ManifestSummary"
          type: array
        name:
          description: Pack name
          type: string
        presets:
          description: Pack presets are the set of configurations applied on user
            selection of presets
          items:
            $ref: "#/components/schemas/v1PackPreset"
          type: array
        registryUid:
          description: Pack registry uid
          type: string
        schema:
          description: "Pack schema contains constraints such as data type, format,\
            \ hints for the pack values"
          items:
            $ref: "#/components/schemas/v1PackSchema"
          type: array
        type:
          $ref: "#/components/schemas/v1PackType"
        values:
          description: Pack values
          type: string
        version:
          description: Pack version
          type: string
      type: object
    v1PackMetadata:
      description: Pack metadata object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          addonSubType: addonSubType
          displayName: displayName
          addonType: addonType
          name: name
          cloudTypes:
          - cloudTypes
          - cloudTypes
          registries:
          - uid: uid
            latestPackUid: latestPackUid
            latestVersion: latestVersion
            scope: scope
            name: name
            annotations:
              key: annotations
            logoUrl: logoUrl
          - uid: uid
            latestPackUid: latestPackUid
            latestVersion: latestVersion
            scope: scope
            name: name
            annotations:
              key: annotations
            logoUrl: logoUrl
          type: spectro
          layer: kernel
          group: group
      properties:
        apiVersion:
          description: Pack api version
          type: string
        kind:
          description: Pack kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackMetadataSpec"
      type: object
    v1PackMetadataList:
      description: List of packs metadata
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            addonSubType: addonSubType
            displayName: displayName
            addonType: addonType
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            registries:
            - uid: uid
              latestPackUid: latestPackUid
              latestVersion: latestVersion
              scope: scope
              name: name
              annotations:
                key: annotations
              logoUrl: logoUrl
            - uid: uid
              latestPackUid: latestPackUid
              latestVersion: latestVersion
              scope: scope
              name: name
              annotations:
                key: annotations
              logoUrl: logoUrl
            type: spectro
            layer: kernel
            group: group
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            addonSubType: addonSubType
            displayName: displayName
            addonType: addonType
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            registries:
            - uid: uid
              latestPackUid: latestPackUid
              latestVersion: latestVersion
              scope: scope
              name: name
              annotations:
                key: annotations
              logoUrl: logoUrl
            - uid: uid
              latestPackUid: latestPackUid
              latestVersion: latestVersion
              scope: scope
              name: name
              annotations:
                key: annotations
              logoUrl: logoUrl
            type: spectro
            layer: kernel
            group: group
      properties:
        items:
          description: Packs metadata array
          items:
            $ref: "#/components/schemas/v1PackMetadata"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1PackMetadataSpec:
      description: Pack metadata spec
      example:
        addonSubType: addonSubType
        displayName: displayName
        addonType: addonType
        name: name
        cloudTypes:
        - cloudTypes
        - cloudTypes
        registries:
        - uid: uid
          latestPackUid: latestPackUid
          latestVersion: latestVersion
          scope: scope
          name: name
          annotations:
            key: annotations
          logoUrl: logoUrl
        - uid: uid
          latestPackUid: latestPackUid
          latestVersion: latestVersion
          scope: scope
          name: name
          annotations:
            key: annotations
          logoUrl: logoUrl
        type: spectro
        layer: kernel
        group: group
      properties:
        addonSubType:
          description: "Pack add-on sub type such as monitoring, db etc"
          type: string
        addonType:
          description: "Pack add-on type such as logging, monitoring, security etc"
          type: string
        cloudTypes:
          description: Pack supported cloud types
          items:
            type: string
          type: array
        displayName:
          description: Pack display name
          type: string
        group:
          description: Pack group
          type: string
        layer:
          $ref: "#/components/schemas/v1PackLayer"
        name:
          description: Pack name
          type: string
        registries:
          description: Pack registries array
          items:
            $ref: "#/components/schemas/v1RegistryPackMetadata"
          type: array
        type:
          $ref: "#/components/schemas/v1PackType"
      type: object
    v1PackParamsEntity:
      description: Pack params request payload
      properties:
        references:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1PackPreset:
      description: PackPreset defines the preset pack values
      example:
        add: add
        displayName: displayName
        name: name
        remove:
        - remove
        - remove
        group: group
      properties:
        add:
          type: string
          x-omitempty: false
        displayName:
          type: string
          x-omitempty: false
        group:
          type: string
          x-omitempty: false
        name:
          type: string
          x-omitempty: false
        remove:
          items:
            type: string
          type: array
          x-omitempty: false
      type: object
    v1PackReadme:
      example:
        readme: readme
      properties:
        readme:
          description: Readme describes the documentation of the specified pack
          type: string
      type: object
    v1PackRef:
      description: "PackRef server/name:tag to point to a pack PackRef is used when\
        \ construct a ClusterProfile PackSpec is used for UI to render the parameters\
        \ form ClusterProfile will not know inner details of a pack ClusterProfile\
        \ only contain pack name:tag, and the param values user entered for it"
      example:
        schema:
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        registryUid: registryUid
        server: server
        values: values
        annotations:
          key: annotations
        isInvalid: true
        params:
          key: params
        type: spectro
        version: version
        layer: kernel
        packUid: packUid
        presets:
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        inValidReason: inValidReason
        digest: digest
        manifests:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        name: name
        logo: logo
        tag: tag
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Annotations is used to allow packref to add more arbitrary
            information one example is to add git reference for values.yaml
          type: object
        digest:
          description: "digest is used to specify the version should be installed\
            \ by palette when pack upgrade available, change this digest to trigger\
            \ upgrade"
          type: string
        inValidReason:
          type: string
        isInvalid:
          description: pack is invalid when the associated tag is deleted from the
            registry
          type: boolean
        layer:
          enum:
          - kernel
          - os
          - k8s
          - cni
          - csi
          - addon
          type: string
        logo:
          description: path to the pack logo
          type: string
        manifests:
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
        name:
          description: pack name
          type: string
        packUid:
          description: "PackUID is Hubble packUID, not palette Pack.UID It is used\
            \ by Hubble only."
          type: string
        params:
          additionalProperties:
            type: string
          description: params passed as env variables to be consumed at installation
            time
          type: object
        presets:
          items:
            $ref: "#/components/schemas/v1PackPreset"
          type: array
        registryUid:
          description: pack registry uid
          type: string
        schema:
          items:
            $ref: "#/components/schemas/v1PackSchema"
          type: array
        server:
          description: pack registry server or helm repo
          type: string
        tag:
          description: pack tag
          type: string
        type:
          description: type of the pack
          enum:
          - spectro
          - helm
          - manifest
          - oci
          type: string
        values:
          description: "values represents the values.yaml used as input parameters\
            \ either Params OR Values should be used, not both If both applied at\
            \ the same time, will only use Values"
          type: string
        version:
          description: pack version
          type: string
      required:
      - layer
      - name
      type: object
    v1PackRefSummary:
      description: Pack ref summary
      example:
        packUid: packUid
        displayName: displayName
        addonType: addonType
        name: name
        annotations:
          key: annotations
        tag: tag
        type: type
        version: version
        layer: kernel
        logoUrl: logoUrl
      properties:
        addonType:
          type: string
        annotations:
          additionalProperties:
            type: string
          type: object
        displayName:
          type: string
        layer:
          $ref: "#/components/schemas/v1PackLayer"
        logoUrl:
          type: string
        name:
          type: string
        packUid:
          type: string
        tag:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    v1PackRefSummaryResponse:
      description: Pack summary response
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          registry:
            uid: uid
            isDefault: true
            kind: kind
            scope: scope
            name: name
            isPrivate: true
          macros:
            resolved:
              key: resolved
          pack:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackRefSummarySpec"
      type: object
    v1PackRefSummarySpec:
      description: Pack summary spec
      example:
        registry:
          uid: uid
          isDefault: true
          kind: kind
          scope: scope
          name: name
          isPrivate: true
        macros:
          resolved:
            key: resolved
        pack:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          template:
            manifest: manifest
            values: values
            parameters:
              inputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              outputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
          registryUid: registryUid
          eol: eol
          addonSubType: addonSubType
          displayName: displayName
          values: values
          addonType: addonType
          annotations:
            key: annotations
          type: spectro
          version: version
          layer: kernel
          logoUrl: logoUrl
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          cloudTypes:
          - cloudTypes
          - cloudTypes
          group: group
      properties:
        macros:
          $ref: "#/components/schemas/v1PackResolvedValues"
        pack:
          $ref: "#/components/schemas/v1PackSummarySpec"
        registry:
          $ref: "#/components/schemas/v1RegistryMetadata"
      type: object
    v1PackRegistries:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registryUid: registryUid
            endpoint: endpoint
            private: true
            auth:
              password: password
              tls:
                certificate: certificate
                insecureSkipVerify: true
                ca: ca
                enabled: true
                key: key
              type: noAuth
              token: token
              username: username
            scope: scope
            name: name
          status:
            packSyncStatus:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            registryUid: registryUid
            endpoint: endpoint
            private: true
            auth:
              password: password
              tls:
                certificate: certificate
                insecureSkipVerify: true
                ca: ca
                enabled: true
                key: key
              type: noAuth
              token: token
              username: username
            scope: scope
            name: name
          status:
            packSyncStatus:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1PackRegistry"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1PackRegistriesSummary:
      description: Pack Registries Summary
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            endpoint: endpoint
            private: true
            scope: scope
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            endpoint: endpoint
            private: true
            scope: scope
          status:
            sync:
              lastRunTime: 2000-01-23T04:56:07.000+00:00
              lastSyncedTime: 2000-01-23T04:56:07.000+00:00
              isSyncSupported: true
              message: message
              status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1PackRegistrySummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1PackRegistry:
      description: Pack registry information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          registryUid: registryUid
          endpoint: endpoint
          private: true
          auth:
            password: password
            tls:
              certificate: certificate
              insecureSkipVerify: true
              ca: ca
              enabled: true
              key: key
            type: noAuth
            token: token
            username: username
          scope: scope
          name: name
        status:
          packSyncStatus:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackRegistrySpec"
        status:
          $ref: "#/components/schemas/v1PackRegistryStatus"
      type: object
    v1PackRegistryImportEntity:
      description: Pack registry import entity
      example:
        metadata:
          uid: uid
          kind: kind
          isSyncSupported: true
          name: name
          isPrivate: true
          providerType: providerType
        matchingRegistries:
        - uid: uid
          kind: kind
          isSyncSupported: true
          name: name
          isPrivate: true
          providerType: providerType
        - uid: uid
          kind: kind
          isSyncSupported: true
          name: name
          isPrivate: true
          providerType: providerType
      properties:
        matchingRegistries:
          items:
            $ref: "#/components/schemas/v1PackRegistryMetadata"
          type: array
        metadata:
          $ref: "#/components/schemas/v1PackRegistryMetadata"
      type: object
    v1PackRegistryMetadata:
      description: Pack registry metadata
      example:
        uid: uid
        kind: kind
        isSyncSupported: true
        name: name
        isPrivate: true
        providerType: providerType
      properties:
        isPrivate:
          description: If true then helm registry is private and is not accessible
            for the content sync
          type: boolean
          x-omitempty: false
        isSyncSupported:
          description: If true the registry sync is supported
          type: boolean
          x-omitempty: false
        kind:
          description: "Pack registry kind [ \"pack\", \"helm\", \"oci\" ]"
          type: string
        name:
          description: Pack registry name
          type: string
        providerType:
          description: "OCI registry provider type [ \"helm\", \"pack\", \"zarf\"\
            \ ]"
          type: string
        uid:
          description: Pack registry uid
          type: string
      type: object
    v1PackRegistrySpec:
      description: Pack registry credentials spec
      example:
        registryUid: registryUid
        endpoint: endpoint
        private: true
        auth:
          password: password
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          type: noAuth
          token: token
          username: username
        scope: scope
        name: name
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        endpoint:
          type: string
        name:
          type: string
        private:
          type: boolean
          x-omitempty: false
        registryUid:
          description: Pack registry uid
          type: string
        scope:
          type: string
      required:
      - auth
      - endpoint
      type: object
    v1PackRegistrySpecSummary:
      description: Pack Registry spec summary
      example:
        endpoint: endpoint
        private: true
        scope: scope
      properties:
        endpoint:
          type: string
        private:
          type: boolean
          x-omitempty: false
        scope:
          type: string
      type: object
    v1PackRegistryStatus:
      description: Status of the pack registry
      example:
        packSyncStatus:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        packSyncStatus:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1PackRegistryStatusSummary:
      description: Pack registry status summary
      example:
        sync:
          lastRunTime: 2000-01-23T04:56:07.000+00:00
          lastSyncedTime: 2000-01-23T04:56:07.000+00:00
          isSyncSupported: true
          message: message
          status: status
      properties:
        sync:
          $ref: "#/components/schemas/v1RegistrySyncStatus"
      type: object
    v1PackRegistrySummary:
      description: Pack Registry summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          endpoint: endpoint
          private: true
          scope: scope
        status:
          sync:
            lastRunTime: 2000-01-23T04:56:07.000+00:00
            lastSyncedTime: 2000-01-23T04:56:07.000+00:00
            isSyncSupported: true
            message: message
            status: status
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackRegistrySpecSummary"
        status:
          $ref: "#/components/schemas/v1PackRegistryStatusSummary"
      type: object
    v1PackResolvedValues:
      description: Pack resolved values
      example:
        resolved:
          key: resolved
      properties:
        resolved:
          additionalProperties:
            type: string
          description: Pack resolved values map
          type: object
      type: object
    v1PackSchema:
      description: "PackSchema defines the schema definition, hints for the pack values"
      example:
        listOptions:
        - listOptions
        - listOptions
        regex: regex
        readonly: true
        hints:
        - hints
        - hints
        format: format
        name: name
        type: type
        required: true
      properties:
        format:
          type: string
          x-omitempty: false
        hints:
          items:
            type: string
          type: array
          x-omitempty: false
        listOptions:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
          x-omitempty: false
        readonly:
          type: boolean
          x-omitempty: false
        regex:
          type: string
          x-omitempty: false
        required:
          type: boolean
          x-omitempty: false
        type:
          type: string
          x-omitempty: false
      type: object
    v1PackSortFields:
      description: Packs sort by fields
      enum:
      - name
      - type
      - layer
      - addOnType
      - displayName
      nullable: true
      type: string
      x-nullable: true
    v1PackSortSpec:
      description: Packs sort spec
      properties:
        field:
          $ref: "#/components/schemas/v1PackSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1PackSummaries:
      description: List of packs
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
      properties:
        items:
          description: Packs array
          items:
            $ref: "#/components/schemas/v1PackSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1PackSummary:
      description: Pack summary object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          template:
            manifest: manifest
            values: values
            parameters:
              inputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              outputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
          registryUid: registryUid
          eol: eol
          addonSubType: addonSubType
          displayName: displayName
          values: values
          addonType: addonType
          annotations:
            key: annotations
          type: spectro
          version: version
          layer: kernel
          logoUrl: logoUrl
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          cloudTypes:
          - cloudTypes
          - cloudTypes
          group: group
        status: "{}"
      properties:
        apiVersion:
          description: Pack api version
          type: string
        kind:
          description: Pack kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PackSummarySpec"
        status:
          description: Pack status
          type: object
      type: object
    v1PackSummarySpec:
      description: Pack object
      example:
        schema:
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        template:
          manifest: manifest
          values: values
          parameters:
            inputParameters:
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            outputParameters:
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
        registryUid: registryUid
        eol: eol
        addonSubType: addonSubType
        displayName: displayName
        values: values
        addonType: addonType
        annotations:
          key: annotations
        type: spectro
        version: version
        layer: kernel
        logoUrl: logoUrl
        presets:
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        digest: digest
        manifests:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        name: name
        cloudTypes:
        - cloudTypes
        - cloudTypes
        group: group
      properties:
        addonSubType:
          description: "Pack add-on sub type such as monitoring, db etc"
          type: string
        addonType:
          description: "Pack add-on type such as logging, monitoring, security etc"
          type: string
        annotations:
          additionalProperties:
            type: string
          description: Pack annotations is used to allow pack to add more arbitrary
            configurations
          type: object
        cloudTypes:
          description: Pack supported cloud types
          items:
            type: string
          type: array
        digest:
          description: Pack digest
          type: string
        displayName:
          description: Pack display name
          type: string
        eol:
          description: "Pack end of life, date format: yyyy-MM-dd"
          type: string
        group:
          description: Pack group
          type: string
        layer:
          $ref: "#/components/schemas/v1PackLayer"
        logoUrl:
          description: Pack logo url
          type: string
        manifests:
          description: Pack manifests are additional content as part of the cluster
            profile
          items:
            $ref: "#/components/schemas/v1ObjectReference"
          type: array
        name:
          description: Pack name
          type: string
        presets:
          description: Pack presets are the set of configurations applied on user
            selection of presets
          items:
            $ref: "#/components/schemas/v1PackPreset"
          type: array
        registryUid:
          description: Pack registry uid
          type: string
        schema:
          description: "Pack schema contains constraints such as data type, format,\
            \ hints for the pack values"
          items:
            $ref: "#/components/schemas/v1PackSchema"
          type: array
        template:
          $ref: "#/components/schemas/v1PackTemplate"
        type:
          $ref: "#/components/schemas/v1PackType"
        values:
          description: Pack values
          type: string
        version:
          description: Pack version
          type: string
      type: object
    v1PackSummaryStatus:
      description: Pack status
      type: object
    v1PackTagEntity:
      description: Pack object
      example:
        registryUid: registryUid
        packValues:
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          template:
            manifest: manifest
            values: values
            parameters:
              inputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              outputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          values: values
          annotations:
            key: annotations
          readme: readme
          dependencies:
          - registryUid: registryUid
            uid: uid
            displayName: displayName
            name: name
            version: version
            logoUrl: logoUrl
          - registryUid: registryUid
            uid: uid
            displayName: displayName
            name: name
            version: version
            logoUrl: logoUrl
        - schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          template:
            manifest: manifest
            values: values
            parameters:
              inputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              outputParameters:
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
              - listOptions:
                - listOptions
                - listOptions
                hidden: true
                displayName: displayName
                format: format
                description: description
                optional: true
                readOnly: true
                targetKey: targetKey
                type: type
                regex: regex
                name: name
                options:
                  key:
                    description: description
                    label: label
                    dependencies:
                    - name: name
                      readOnly: true
                      layer: layer
                    - name: name
                      readOnly: true
                      layer: layer
                value: value
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          values: values
          annotations:
            key: annotations
          readme: readme
          dependencies:
          - registryUid: registryUid
            uid: uid
            displayName: displayName
            name: name
            version: version
            logoUrl: logoUrl
          - registryUid: registryUid
            uid: uid
            displayName: displayName
            name: name
            version: version
            logoUrl: logoUrl
        addonSubType: addonSubType
        displayName: displayName
        addonType: addonType
        name: name
        cloudTypes:
        - cloudTypes
        - cloudTypes
        layer: kernel
        logoUrl: logoUrl
        tags:
        - packUid: packUid
          parentTags:
          - parentTags
          - parentTags
          tag: tag
          version: version
          group: group
        - packUid: packUid
          parentTags:
          - parentTags
          - parentTags
          tag: tag
          version: version
          group: group
      properties:
        addonSubType:
          description: "Pack add-on sub type such as monitoring, db etc"
          type: string
        addonType:
          description: "Pack add-on type such as logging, monitoring, security etc"
          type: string
        cloudTypes:
          description: Pack supported cloud types
          items:
            type: string
          type: array
        displayName:
          description: Pack display name
          type: string
        layer:
          $ref: "#/components/schemas/v1PackLayer"
        logoUrl:
          description: Pack logo url
          type: string
        name:
          description: Pack name
          type: string
        packValues:
          description: Pack values array
          items:
            $ref: "#/components/schemas/v1PackUidValues"
          type: array
        registryUid:
          description: Pack registry uid
          type: string
        tags:
          description: Pack version tags array
          items:
            $ref: "#/components/schemas/v1PackTags"
          type: array
      type: object
    v1PackTags:
      example:
        packUid: packUid
        parentTags:
        - parentTags
        - parentTags
        tag: tag
        version: version
        group: group
      properties:
        group:
          description: Pack group
          type: string
        packUid:
          description: Pack uid
          type: string
        parentTags:
          description: Pack version parent tags
          items:
            type: string
          type: array
        tag:
          description: Pack version tag
          type: string
        version:
          description: Pack version
          type: string
      type: object
    v1PackTemplate:
      description: Pack template configuration
      example:
        manifest: manifest
        values: values
        parameters:
          inputParameters:
          - listOptions:
            - listOptions
            - listOptions
            hidden: true
            displayName: displayName
            format: format
            description: description
            optional: true
            readOnly: true
            targetKey: targetKey
            type: type
            regex: regex
            name: name
            options:
              key:
                description: description
                label: label
                dependencies:
                - name: name
                  readOnly: true
                  layer: layer
                - name: name
                  readOnly: true
                  layer: layer
            value: value
          - listOptions:
            - listOptions
            - listOptions
            hidden: true
            displayName: displayName
            format: format
            description: description
            optional: true
            readOnly: true
            targetKey: targetKey
            type: type
            regex: regex
            name: name
            options:
              key:
                description: description
                label: label
                dependencies:
                - name: name
                  readOnly: true
                  layer: layer
                - name: name
                  readOnly: true
                  layer: layer
            value: value
          outputParameters:
          - listOptions:
            - listOptions
            - listOptions
            hidden: true
            displayName: displayName
            format: format
            description: description
            optional: true
            readOnly: true
            targetKey: targetKey
            type: type
            regex: regex
            name: name
            options:
              key:
                description: description
                label: label
                dependencies:
                - name: name
                  readOnly: true
                  layer: layer
                - name: name
                  readOnly: true
                  layer: layer
            value: value
          - listOptions:
            - listOptions
            - listOptions
            hidden: true
            displayName: displayName
            format: format
            description: description
            optional: true
            readOnly: true
            targetKey: targetKey
            type: type
            regex: regex
            name: name
            options:
              key:
                description: description
                label: label
                dependencies:
                - name: name
                  readOnly: true
                  layer: layer
                - name: name
                  readOnly: true
                  layer: layer
            value: value
      properties:
        manifest:
          description: Pack template manifest content
          type: string
        parameters:
          $ref: "#/components/schemas/v1PackTemplateParameters"
        values:
          description: Pack template values
          type: string
      type: object
    v1PackTemplateParameter:
      description: Pack template parameter
      example:
        listOptions:
        - listOptions
        - listOptions
        hidden: true
        displayName: displayName
        format: format
        description: description
        optional: true
        readOnly: true
        targetKey: targetKey
        type: type
        regex: regex
        name: name
        options:
          key:
            description: description
            label: label
            dependencies:
            - name: name
              readOnly: true
              layer: layer
            - name: name
              readOnly: true
              layer: layer
        value: value
      properties:
        description:
          description: Pack template parameter description
          type: string
        displayName:
          description: Pack template parameter display name
          type: string
        format:
          description: Pack template parameter format
          type: string
        hidden:
          description: "Pack template parameter hidden flag, if true then the parameter\
            \ is hidden in the UI"
          type: boolean
        listOptions:
          description: Pack template parameter list options as string array
          items:
            type: string
          type: array
        name:
          description: Pack template parameter name
          type: string
        optional:
          description: "Pack template parameter optional flag, if true then the parameter\
            \ value is not mandatory"
          type: boolean
        options:
          additionalProperties:
            $ref: "#/components/schemas/v1PackTemplateParameterOption"
          description: Pack template parameter options array
          type: object
        readOnly:
          description: "Pack template parameter readonly flag, if true then the parameter\
            \ value can't be overridden"
          type: boolean
        regex:
          description: "Pack template parameter regex, if set then parameter value\
            \ must match with specified regex"
          type: string
        targetKey:
          description: Pack template parameter target key which is mapped to the key
            defined in the pack values
          type: string
        type:
          description: Pack template parameter data type
          type: string
        value:
          description: Pack template parameter value
          type: string
      type: object
    v1PackTemplateParameterOption:
      description: Pack template parameter option
      example:
        description: description
        label: label
        dependencies:
        - name: name
          readOnly: true
          layer: layer
        - name: name
          readOnly: true
          layer: layer
      properties:
        dependencies:
          description: Pack template parameter dependencies
          items:
            $ref: "#/components/schemas/v1PackDependency"
          type: array
        description:
          description: Pack template parameter description
          type: string
        label:
          description: Pack template parameter label
          type: string
      type: object
    v1PackTemplateParameters:
      description: Pack template parameters
      example:
        inputParameters:
        - listOptions:
          - listOptions
          - listOptions
          hidden: true
          displayName: displayName
          format: format
          description: description
          optional: true
          readOnly: true
          targetKey: targetKey
          type: type
          regex: regex
          name: name
          options:
            key:
              description: description
              label: label
              dependencies:
              - name: name
                readOnly: true
                layer: layer
              - name: name
                readOnly: true
                layer: layer
          value: value
        - listOptions:
          - listOptions
          - listOptions
          hidden: true
          displayName: displayName
          format: format
          description: description
          optional: true
          readOnly: true
          targetKey: targetKey
          type: type
          regex: regex
          name: name
          options:
            key:
              description: description
              label: label
              dependencies:
              - name: name
                readOnly: true
                layer: layer
              - name: name
                readOnly: true
                layer: layer
          value: value
        outputParameters:
        - listOptions:
          - listOptions
          - listOptions
          hidden: true
          displayName: displayName
          format: format
          description: description
          optional: true
          readOnly: true
          targetKey: targetKey
          type: type
          regex: regex
          name: name
          options:
            key:
              description: description
              label: label
              dependencies:
              - name: name
                readOnly: true
                layer: layer
              - name: name
                readOnly: true
                layer: layer
          value: value
        - listOptions:
          - listOptions
          - listOptions
          hidden: true
          displayName: displayName
          format: format
          description: description
          optional: true
          readOnly: true
          targetKey: targetKey
          type: type
          regex: regex
          name: name
          options:
            key:
              description: description
              label: label
              dependencies:
              - name: name
                readOnly: true
                layer: layer
              - name: name
                readOnly: true
                layer: layer
          value: value
      properties:
        inputParameters:
          description: Pack template input parameters array
          items:
            $ref: "#/components/schemas/v1PackTemplateParameter"
          type: array
        outputParameters:
          description: Pack template output parameters array
          items:
            $ref: "#/components/schemas/v1PackTemplateParameter"
          type: array
      type: object
    v1PackType:
      default: spectro
      enum:
      - spectro
      - helm
      - manifest
      - oci
      type: string
    v1PackUidValues:
      example:
        schema:
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        - listOptions:
          - listOptions
          - listOptions
          regex: regex
          readonly: true
          hints:
          - hints
          - hints
          format: format
          name: name
          type: type
          required: true
        template:
          manifest: manifest
          values: values
          parameters:
            inputParameters:
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            outputParameters:
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
            - listOptions:
              - listOptions
              - listOptions
              hidden: true
              displayName: displayName
              format: format
              description: description
              optional: true
              readOnly: true
              targetKey: targetKey
              type: type
              regex: regex
              name: name
              options:
                key:
                  description: description
                  label: label
                  dependencies:
                  - name: name
                    readOnly: true
                    layer: layer
                  - name: name
                    readOnly: true
                    layer: layer
              value: value
        packUid: packUid
        presets:
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        - add: add
          displayName: displayName
          name: name
          remove:
          - remove
          - remove
          group: group
        values: values
        annotations:
          key: annotations
        readme: readme
        dependencies:
        - registryUid: registryUid
          uid: uid
          displayName: displayName
          name: name
          version: version
          logoUrl: logoUrl
        - registryUid: registryUid
          uid: uid
          displayName: displayName
          name: name
          version: version
          logoUrl: logoUrl
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Pack annotations is used to allow pack to add more arbitrary
            configurations
          type: object
        dependencies:
          description: Pack dependencies array
          items:
            $ref: "#/components/schemas/v1PackDependencyMeta"
          type: array
        packUid:
          description: Pack uid
          type: string
        presets:
          description: Pack presets are the set of configurations applied on user
            selection of presets
          items:
            $ref: "#/components/schemas/v1PackPreset"
          type: array
        readme:
          description: Readme describes the documentation of the specified pack
          type: string
        schema:
          description: "Pack schema contains constraints such as data type, format,\
            \ hints for the pack values"
          items:
            $ref: "#/components/schemas/v1PackSchema"
          type: array
        template:
          $ref: "#/components/schemas/v1PackTemplate"
        values:
          description: Pack values represents the values.yaml used as input parameters
          type: string
      type: object
    v1PackUpdateEntity:
      description: Pack update request payload
      properties:
        pack:
          $ref: "#/components/schemas/v1PackEntity"
      type: object
    v1PackValuesEntity:
      description: Pack values entity to refer the existing pack for the values override
      properties:
        manifests:
          description: Pack manifests are additional content as part of the profile
          items:
            $ref: "#/components/schemas/v1ManifestRefUpdateEntity"
          type: array
        name:
          description: Pack name
          type: string
        tag:
          description: Pack version tag
          type: string
        type:
          $ref: "#/components/schemas/v1PackType"
        values:
          description: "Pack values represents the values.yaml used as input parameters\
            \ either Params OR Values should be used, not both If both applied at\
            \ the same time, will only use Values"
          type: string
      required:
      - name
      type: object
    v1PacksFilterSpec:
      description: Packs filter spec
      properties:
        filter:
          $ref: "#/components/schemas/v1PackFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1PackSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1PairingCode:
      description: Pairing code response
      example:
        pairingCode: pairingCode
      properties:
        pairingCode:
          type: string
      type: object
    v1Partition:
      example:
        mountPoint: mountPoint
        usedSpace: 5
        freeSpace: 6
        totalSpace: 1
        fileSystemType: fileSystemType
      properties:
        fileSystemType:
          type: string
        freeSpace:
          format: int32
          type: integer
        mountPoint:
          type: string
        totalSpace:
          format: int32
          type: integer
        usedSpace:
          format: int32
          type: integer
      type: object
    v1PasswordsBlockListEntity:
      description: List of block listed passwords
      example:
        passwords:
        - passwords
        - passwords
      properties:
        passwords:
          items:
            type: string
          type: array
      type: object
    v1PaymentIntent:
      description: Payment setup object
      properties:
        clientSecret:
          description: Payment client secret
          type: string
        paymentIntentId:
          description: Payment intent id
          type: string
        status:
          description: Status of payment intent
          type: string
      type: object
    v1PaymentMethod:
      description: Payment method object
      properties:
        card:
          $ref: "#/components/schemas/v1Card"
        customerId:
          description: Customer uid
          type: string
        firstName:
          description: First name of the user
          type: string
        lastName:
          description: Last name of the user
          type: string
        paymentMethodId:
          description: Payment method uid
          type: string
      type: object
    v1PaymentMethods:
      description: Payment Method list
      properties:
        defaultPaymentMethod:
          description: Default payment method
          type: string
        paymentMethods:
          description: List of payment method
          items:
            $ref: "#/components/schemas/v1PaymentMethod"
          type: array
          uniqueItems: true
      type: object
    v1PaymentPlan:
      description: Stripe price detail object
      properties:
        billingScheme:
          description: Billing scheme
          type: string
        currency:
          description: Unit of currency
          type: string
        id:
          description: Stripe payment plan id
          type: string
        name:
          description: Name of the stripe plan
          type: string
        productId:
          description: Product identifier
          type: string
        type:
          description: Type of payment plan
          type: string
        unitAmount:
          description: Unit amount for the product
          format: int64
          type: number
      type: object
    v1PaymentPlans:
      description: Payment plan object model
      properties:
        stripePlanDetails:
          description: List of Stripe plan details
          items:
            $ref: "#/components/schemas/v1PaymentPlan"
          type: array
          uniqueItems: true
      required:
      - stripePlanDetails
      type: object
    v1PaymentSecrets:
      description: payment secrets
      properties:
        publishableKey:
          type: string
        secretKey:
          type: string
      type: object
    v1PaymentSubscription:
      description: Payment subscription object
      properties:
        customerId:
          description: Customer uid
          type: string
        paymentIntent:
          $ref: "#/components/schemas/v1PaymentIntent"
        paymentMethodIds:
          description: List of payment method uids
          items:
            type: string
          type: array
          uniqueItems: true
        planType:
          description: Plan type
          type: string
        priceId:
          description: Price uid
          type: string
        subscriptionId:
          description: Subscription uid
          type: string
        subscriptionState:
          description: Plan subscription state
          type: string
      type: object
    v1PcgSelfHostedParams:
      properties:
        cloudType:
          type: string
        name:
          type: string
      type: object
    v1PcgServiceKubectlCommands:
      description: Array of kubectl commands
      example:
        kubectlCommands:
        - kubectlCommands
        - kubectlCommands
        overlordUid: overlordUid
      properties:
        kubectlCommands:
          items:
            type: string
          type: array
          uniqueItems: true
        overlordUid:
          type: string
      required:
      - kubectlCommands
      type: object
    v1PcgsSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            isSystem: true
            spectroClusterUid: spectroClusterUid
            tenantUid: tenantUid
            ipAddress: ipAddress
            ipPools:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            cloudAccountUid: cloudAccountUid
            isSelfHosted: true
          status:
            isReady: true
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            state: state
            isActive: true
            kubectlCommands:
            - kubectlCommands
            - kubectlCommands
            notifications:
              isAvailable: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            isSystem: true
            spectroClusterUid: spectroClusterUid
            tenantUid: tenantUid
            ipAddress: ipAddress
            ipPools:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                priavetGatewayUid: priavetGatewayUid
                restrictToSingleCluster: true
                pool:
                  subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              status:
                associatedClusters:
                - associatedClusters
                - associatedClusters
                allottedIps:
                - allottedIps
                - allottedIps
                inUse: true
            cloudAccountUid: cloudAccountUid
            isSelfHosted: true
          status:
            isReady: true
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            state: state
            isActive: true
            kubectlCommands:
            - kubectlCommands
            - kubectlCommands
            notifications:
              isAvailable: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Overlord"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1Permission:
      description: Permission information
      example:
        permissions:
        - permissions
        - permissions
        scope: system
        name: name
      properties:
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
        scope:
          $ref: "#/components/schemas/v1Scope"
      type: object
    v1Permissions:
      description: Array of permissions
      items:
        $ref: "#/components/schemas/v1Permission"
      type: array
    v1Plan:
      description: Plan
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1PlanSpec"
        status:
          $ref: "#/components/schemas/v1PlanStatus"
      type: object
    v1PlanAddFreeCreditUpdate:
      description: Plan add free credit update entity
      properties:
        credit:
          $ref: "#/components/schemas/v1PlanCreditEntity"
      type: object
    v1PlanAddSlaCreditUpdate:
      description: Plan add sla credit update entity
      properties:
        credit:
          $ref: "#/components/schemas/v1PlanCreditEntity"
      type: object
    v1PlanChangeUpdate:
      description: Plan change update entity
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        isPaymentGateway:
          type: boolean
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        tierPrice:
          $ref: "#/components/schemas/v1TierPrice"
        type:
          enum:
          - Trial
          - MonthlyOnDemand
          - AnnualSubscription
          type: string
      required:
      - expiry
      - start
      - type
      type: object
    v1PlanCost:
      description: Plan Cost
      properties:
        discount:
          format: float
          type: number
          x-omitempty: false
        price:
          format: float
          type: number
          x-omitempty: false
      type: object
    v1PlanCpuCoreHoursUsages:
      properties:
        hourlyUsages:
          items:
            $ref: "#/components/schemas/v1ResourceUsage"
          type: array
          uniqueItems: true
      type: object
    v1PlanCredit:
      description: Plan Credit
      example:
        cpuCoreHours: 1.4658129805029452
        creditUid: creditUid
        name: name
        start: 2000-01-23T04:56:07.000+00:00
        expiry: 2000-01-23T04:56:07.000+00:00
        type: Pure
      properties:
        cpuCoreHours:
          format: int64
          type: number
          x-omitempty: false
        creditUid:
          type: string
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          enum:
          - Pure
          - Alloy
          type: string
      required:
      - type
      type: object
    v1PlanCreditEntity:
      description: Plan Credit entity for create/update request
      properties:
        cpuCoreHours:
          format: int64
          type: number
          x-omitempty: false
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          enum:
          - Pure
          - Alloy
          type: string
      required:
      - type
      type: object
    v1PlanCreditUpdate:
      description: Plan credit update entity
      properties:
        credit:
          $ref: "#/components/schemas/v1PlanCreditEntity"
      type: object
    v1PlanExpiry:
      description: Plan expiry
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      required:
      - expiry
      type: object
    v1PlanLimit:
      description: Monthly Plan Limit
      properties:
        alloy:
          $ref: "#/components/schemas/v1PlanLimitSpec"
        isOnDemand:
          description: is onDemand plan and has no limit
          type: boolean
          x-omitempty: false
        isUnlimited:
          description: is unlimited cpu core hours
          type: boolean
          x-omitempty: false
        pure:
          $ref: "#/components/schemas/v1PlanLimitSpec"
      type: object
    v1PlanLimitSpec:
      description: Monthly Plan Limit spec
      properties:
        cpuCoreHours:
          description: cpu cores hours
          format: int64
          type: integer
          x-omitempty: false
        overageLimitPercentage:
          description: overage limit in percentage
          format: int8
          type: integer
          x-omitempty: false
        warnLimitPercentage:
          description: warning limit in percentage
          format: int8
          type: integer
          x-omitempty: false
      type: object
    v1PlanLimitUpdate:
      description: Plan limit change update entity
      properties:
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
      required:
      - planLimit
      type: object
    v1PlanMonthlyUsage:
      description: Plan monthly usage entity
      properties:
        dailyUsages:
          items:
            $ref: "#/components/schemas/v1ResourceUsage"
          type: array
          uniqueItems: true
        month:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
        planType:
          enum:
          - Trial
          - MonthlyOnDemand
          - AnnualSubscription
          type: string
        planUid:
          type: string
        totalMonthlyUsage:
          $ref: "#/components/schemas/v1TotalResourceUsage"
      type: object
    v1PlanMonthlyUsages:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1PlanMonthlyUsage"
          type: array
      type: object
    v1PlanRenewal:
      description: Plan Renewal
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          enum:
          - Trial
          - MonthlyOnDemand
          - AnnualSubscription
          type: string
      required:
      - expiry
      - start
      - type
      type: object
    v1PlanRenewalUpdate:
      description: Plan add renawal update entity
      properties:
        renewal:
          $ref: "#/components/schemas/v1PlanRenewal"
      type: object
    v1PlanSpec:
      description: Plan specifications
      properties:
        cost:
          $ref: "#/components/schemas/v1PlanCost"
        developerCredits:
          $ref: "#/components/schemas/v1DeveloperCredit"
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        freeCredits:
          items:
            $ref: "#/components/schemas/v1PlanCredit"
          type: array
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
        renewal:
          $ref: "#/components/schemas/v1PlanRenewal"
        slaCredits:
          items:
            $ref: "#/components/schemas/v1PlanCredit"
          type: array
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        tierPricing:
          $ref: "#/components/schemas/v1TierPrice"
        type:
          enum:
          - Trial
          - MonthlyOnDemand
          - AnnualSubscription
          type: string
      required:
      - expiry
      - start
      - type
      type: object
    v1PlanStatus:
      properties:
        changeLogs:
          items:
            type: string
          type: array
      type: object
    v1Plans:
      description: Array of Plans
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Plan"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1PlansUsageComputeSpec:
      description: Plans usage compute spec
      properties:
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        tenantUids:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1PodAntiAffinity:
      description: Pod anti affinity is a group of inter pod anti affinity scheduling
        rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 5
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 5
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the anti-affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling anti-affinity expressions, etc.), compute a\
            \ sum by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: "#/components/schemas/v1VmWeightedPodAffinityTerm"
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the anti-affinity requirements specified by this field\
            \ are not met at scheduling time, the pod will not be scheduled onto the\
            \ node. If the anti-affinity requirements specified by this field cease\
            \ to be met at some point during pod execution (e.g. due to a pod label\
            \ update), the system may or may not try to eventually evict the pod from\
            \ its node. When there are multiple elements, the lists of nodes corresponding\
            \ to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: "#/components/schemas/v1VmPodAffinityTerm"
          type: array
      type: object
    v1Pool:
      description: "Pool defines IP ranges or with CIDR for available IPs Gateway,\
        \ Prefix and Nameserver if provided, will overwrite values in IPPool"
      example:
        subnet: subnet
        prefix: 0
        start: start
        end: end
        nameserver:
          addresses:
          - addresses
          - addresses
          search:
          - search
          - search
        gateway: gateway
      properties:
        end:
          description: End is the last IP address that can be rendered. It is used
            as a validation that the rendered IP is in bound.
          type: string
        gateway:
          description: Gateway is the gateway ip address
          type: string
        nameserver:
          $ref: "#/components/schemas/v1Nameserver"
        prefix:
          description: Prefix is the mask of the network as integer (max 128)
          format: int32
          type: integer
        start:
          description: Start is the first ip address that can be rendered
          type: string
        subnet:
          description: "Subnet is used to validate that the rendered IP is in bounds.\
            \ eg: 192.168.0.0/24 If Start value is not given, start value is derived\
            \ from the subnet ip incremented by 1 (start value is `192.168.0.1` for\
            \ subnet `192.168.0.0/24`)"
          type: string
      type: object
    v1PriceRange:
      description: tier price range
      properties:
        discount:
          format: int64
          type: number
        startFrom:
          format: float64
          type: number
        unitAmount:
          format: float64
          type: number
        upTo:
          format: float64
          type: number
        upToInfinity:
          type: boolean
      type: object
    v1PrivateCloudRateConfig:
      description: Private cloud rate config
      example:
        gpuUnitPricePerHour: 5.962133916683182
        storageUnitPriceGiBPerHour: 2.3021358869347655
        cpuUnitPricePerHour: 1.4658129805029452
        memoryUnitPriceGiBPerHour: 5.637376656633329
      properties:
        cpuUnitPricePerHour:
          format: float64
          type: number
        gpuUnitPricePerHour:
          format: float64
          type: number
        memoryUnitPriceGiBPerHour:
          format: float64
          type: number
        storageUnitPriceGiBPerHour:
          format: float64
          type: number
      type: object
    v1ProductUsage:
      description: Product usage
      properties:
        alloyUsage:
          $ref: "#/components/schemas/v1SystemProductUsage"
        pureUsage:
          $ref: "#/components/schemas/v1SystemProductUsage"
      type: object
    v1ProfileMetaEntity:
      description: Cluster profile metadata request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1ClusterProfileSpecEntity"
      required:
      - metadata
      type: object
    v1ProfileResolvedValues:
      description: Cluster profile resolved pack values
      example:
        uid: uid
        resolved:
          key: resolved
      properties:
        resolved:
          additionalProperties:
            type: string
          description: Cluster profile pack resolved values
          type: object
        uid:
          description: Cluster profile uid
          type: string
      type: object
    v1ProfileStatus:
      example:
        hasUserMacros: true
      properties:
        hasUserMacros:
          description: If it is true then profile pack values has a reference to user
            defined macros
          type: boolean
          x-omitempty: false
      type: object
    v1ProfileTemplateSummary:
      description: Edge host clusterprofile template summary
      example:
        uid: uid
        cloudType: cloudType
        name: name
        type: type
        packs:
        - packUid: packUid
          displayName: displayName
          addonType: addonType
          name: name
          annotations:
            key: annotations
          tag: tag
          type: type
          version: version
          layer: kernel
          logoUrl: logoUrl
        - packUid: packUid
          displayName: displayName
          addonType: addonType
          name: name
          annotations:
            key: annotations
          tag: tag
          type: type
          version: version
          layer: kernel
          logoUrl: logoUrl
        version: version
      properties:
        cloudType:
          type: string
        name:
          type: string
        packs:
          items:
            $ref: "#/components/schemas/v1PackRefSummary"
          type: array
        type:
          type: string
        uid:
          type: string
        version:
          type: string
      type: object
    v1ProfileType:
      default: cluster
      enum:
      - cluster
      - infra
      - add-on
      - system
      type: string
    v1Project:
      description: Project information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          alerts:
          - component: component
            channels:
            - uid: uid
              createdBy: createdBy
              identifiers:
              - identifiers
              - identifiers
              alertAllUsers: true
              http:
                headers: "{}"
                method: method
                body: body
                url: url
              isActive: true
              type: email
              status:
                isSucceeded: true
                time: 2000-01-23T04:56:07.000+00:00
                message: message
            - uid: uid
              createdBy: createdBy
              identifiers:
              - identifiers
              - identifiers
              alertAllUsers: true
              http:
                headers: "{}"
                method: method
                body: body
                url: url
              isActive: true
              type: email
              status:
                isSucceeded: true
                time: 2000-01-23T04:56:07.000+00:00
                message: message
          - component: component
            channels:
            - uid: uid
              createdBy: createdBy
              identifiers:
              - identifiers
              - identifiers
              alertAllUsers: true
              http:
                headers: "{}"
                method: method
                body: body
                url: url
              isActive: true
              type: email
              status:
                isSucceeded: true
                time: 2000-01-23T04:56:07.000+00:00
                message: message
            - uid: uid
              createdBy: createdBy
              identifiers:
              - identifiers
              - identifiers
              alertAllUsers: true
              http:
                headers: "{}"
                method: method
                body: body
                url: url
              isActive: true
              type: email
              status:
                isSucceeded: true
                time: 2000-01-23T04:56:07.000+00:00
                message: message
          teams:
          - roles:
            - roles
            - roles
            teamId: teamId
          - roles:
            - roles
            - roles
            teamId: teamId
          logoUrl: logoUrl
          users:
          - roles:
            - roles
            - roles
            userId: userId
          - roles:
            - roles
            - roles
            userId: userId
        status:
          cleanUpStatus:
            msg: msg
            cleanedResources:
            - cleanedResources
            - cleanedResources
            state: state
          isDisabled: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ProjectSpec"
        status:
          $ref: "#/components/schemas/v1ProjectStatus"
      type: object
    v1ProjectActiveAppDeployment:
      description: Active app deployment
      example:
        appRef:
          uid: uid
          name: name
        state: state
      properties:
        appRef:
          $ref: "#/components/schemas/v1ObjectEntity"
        state:
          type: string
      type: object
    v1ProjectActiveAppDeployments:
      description: Active app deployment
      example:
        count: 0
        apps:
        - appRef:
            uid: uid
            name: name
          state: state
        - appRef:
            uid: uid
            name: name
          state: state
      properties:
        apps:
          items:
            $ref: "#/components/schemas/v1ProjectActiveAppDeployment"
          type: array
        count:
          format: int32
          type: integer
      type: object
    v1ProjectActiveCluster:
      description: Active clusters
      example:
        clusterRef:
          uid: uid
          name: name
        state: state
      properties:
        clusterRef:
          $ref: "#/components/schemas/v1ObjectEntity"
        state:
          type: string
      type: object
    v1ProjectActiveClusters:
      description: Active clusters
      example:
        count: 6
        clusters:
        - clusterRef:
            uid: uid
            name: name
          state: state
        - clusterRef:
            uid: uid
            name: name
          state: state
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1ProjectActiveCluster"
          type: array
        count:
          format: int32
          type: integer
      type: object
    v1ProjectActiveResources:
      description: Active project resources
      example:
        appDeployments:
          count: 0
          apps:
          - appRef:
              uid: uid
              name: name
            state: state
          - appRef:
              uid: uid
              name: name
            state: state
        virtualClusters:
          count: 6
          clusters:
          - clusterRef:
              uid: uid
              name: name
            state: state
          - clusterRef:
              uid: uid
              name: name
            state: state
        clusters:
          count: 6
          clusters:
          - clusterRef:
              uid: uid
              name: name
            state: state
          - clusterRef:
              uid: uid
              name: name
            state: state
      properties:
        appDeployments:
          $ref: "#/components/schemas/v1ProjectActiveAppDeployments"
        clusters:
          $ref: "#/components/schemas/v1ProjectActiveClusters"
        virtualClusters:
          $ref: "#/components/schemas/v1ProjectActiveClusters"
      type: object
    v1ProjectAlertComponent:
      description: Project alert component
      example:
        supportedChannels:
        - supportedChannels
        - supportedChannels
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        supportedChannels:
          items:
            type: string
          type: array
      type: object
    v1ProjectAlertComponents:
      description: Supported project alerts component
      example:
        components:
        - supportedChannels:
          - supportedChannels
          - supportedChannels
          name: name
          description: description
        - supportedChannels:
          - supportedChannels
          - supportedChannels
          name: name
          description: description
      properties:
        components:
          items:
            $ref: "#/components/schemas/v1ProjectAlertComponent"
          type: array
      type: object
    v1ProjectCleanUpStatus:
      description: Project cleanup status
      example:
        msg: msg
        cleanedResources:
        - cleanedResources
        - cleanedResources
        state: state
      properties:
        cleanedResources:
          items:
            type: string
          type: array
        msg:
          type: string
        state:
          type: string
      type: object
    v1ProjectCleanup:
      description: Project delete request payload
      properties:
        deletingClusterDurationThresholdInMin:
          format: int32
          type: integer
        provisioningClusterDurationThresholdInMin:
          format: int32
          type: integer
      type: object
    v1ProjectClusterSettings:
      example:
        tenantClusterSettings:
          nodesAutoRemediationSetting:
            isEnabled: true
            disableNodesAutoRemediation: true
        nodesAutoRemediationSetting:
          isEnabled: true
          disableNodesAutoRemediation: true
      properties:
        nodesAutoRemediationSetting:
          $ref: "#/components/schemas/v1NodesAutoRemediationSettings"
        tenantClusterSettings:
          $ref: "#/components/schemas/v1TenantClusterSettings"
      type: object
    v1ProjectEntity:
      description: Project information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ProjectEntitySpec"
      type: object
    v1ProjectEntitySpec:
      description: Project specifications
      properties:
        logoUid:
          type: string
        teams:
          items:
            $ref: "#/components/schemas/v1TeamRoleMap"
          type: array
          uniqueItems: true
        users:
          items:
            $ref: "#/components/schemas/v1UserRoleMap"
          type: array
          uniqueItems: true
      type: object
    v1ProjectFilterSortFields:
      enum:
      - name
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1ProjectFilterSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1ProjectFilterSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1ProjectFilterSpec:
      description: Project filter spec
      properties:
        name:
          $ref: "#/components/schemas/v1FilterString"
      type: object
    v1ProjectMeta:
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1ProjectMetadata:
      description: Project metadata
      example:
        metadata:
          uid: uid
          name: name
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectEntity"
      type: object
    v1ProjectPatch:
      items:
        $ref: "#/components/schemas/v1HttpPatch"
      type: array
    v1ProjectResourceUsage:
      description: project resource usage
      properties:
        alloyCpuCoreHours:
          type: number
          x-omitempty: false
        project:
          $ref: "#/components/schemas/v1ProjectMeta"
        pureCpuCoreHours:
          type: number
          x-omitempty: false
      type: object
    v1ProjectRolesEntity:
      example:
        projects:
        - uid: uid
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          name: name
          inheritedRoles:
          - uid: uid
            name: name
          - uid: uid
            name: name
        - uid: uid
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          name: name
          inheritedRoles:
          - uid: uid
            name: name
          - uid: uid
            name: name
      properties:
        projects:
          items:
            $ref: "#/components/schemas/v1UidRoleSummary"
          type: array
      type: object
    v1ProjectRolesPatch:
      properties:
        projects:
          items:
            $ref: "#/components/schemas/v1ProjectRolesPatch_projects_inner"
          type: array
      type: object
    v1ProjectSpec:
      description: Project specifications
      example:
        alerts:
        - component: component
          channels:
          - uid: uid
            createdBy: createdBy
            identifiers:
            - identifiers
            - identifiers
            alertAllUsers: true
            http:
              headers: "{}"
              method: method
              body: body
              url: url
            isActive: true
            type: email
            status:
              isSucceeded: true
              time: 2000-01-23T04:56:07.000+00:00
              message: message
          - uid: uid
            createdBy: createdBy
            identifiers:
            - identifiers
            - identifiers
            alertAllUsers: true
            http:
              headers: "{}"
              method: method
              body: body
              url: url
            isActive: true
            type: email
            status:
              isSucceeded: true
              time: 2000-01-23T04:56:07.000+00:00
              message: message
        - component: component
          channels:
          - uid: uid
            createdBy: createdBy
            identifiers:
            - identifiers
            - identifiers
            alertAllUsers: true
            http:
              headers: "{}"
              method: method
              body: body
              url: url
            isActive: true
            type: email
            status:
              isSucceeded: true
              time: 2000-01-23T04:56:07.000+00:00
              message: message
          - uid: uid
            createdBy: createdBy
            identifiers:
            - identifiers
            - identifiers
            alertAllUsers: true
            http:
              headers: "{}"
              method: method
              body: body
              url: url
            isActive: true
            type: email
            status:
              isSucceeded: true
              time: 2000-01-23T04:56:07.000+00:00
              message: message
        teams:
        - roles:
          - roles
          - roles
          teamId: teamId
        - roles:
          - roles
          - roles
          teamId: teamId
        logoUrl: logoUrl
        users:
        - roles:
          - roles
          - roles
          userId: userId
        - roles:
          - roles
          - roles
          userId: userId
      properties:
        alerts:
          items:
            $ref: "#/components/schemas/v1Alert"
          type: array
          uniqueItems: true
        logoUrl:
          type: string
        teams:
          items:
            $ref: "#/components/schemas/v1TeamRoleMap"
          type: array
          uniqueItems: true
        users:
          items:
            $ref: "#/components/schemas/v1UserRoleMap"
          type: array
          uniqueItems: true
      type: object
    v1ProjectSpecSummary:
      example:
        teams:
        - uid: uid
          name: name
        - uid: uid
          name: name
        logoUrl: logoUrl
        users:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        logoUrl:
          type: string
        teams:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        users:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
      type: object
    v1ProjectStatus:
      description: Project status
      example:
        cleanUpStatus:
          msg: msg
          cleanedResources:
          - cleanedResources
          - cleanedResources
          state: state
        isDisabled: true
      properties:
        cleanUpStatus:
          $ref: "#/components/schemas/v1ProjectCleanUpStatus"
        isDisabled:
          type: boolean
      type: object
    v1ProjectStatusSummary:
      description: Project status summary
      example:
        usage:
          alloyCpuCores: 5.637376656633329
          pureCpuCores: 7.061401241503109
          clusters:
          - uid: uid
            isAlloy: true
            cpuCores: 2.3021358869347655
            name: name
          - uid: uid
            isAlloy: true
            cpuCores: 2.3021358869347655
            name: name
        clustersHealth:
          running: 1
          healthy: 6
          unhealthy: 5
          errored: 0
        status:
          cleanUpStatus:
            msg: msg
            cleanedResources:
            - cleanedResources
            - cleanedResources
            state: state
          isDisabled: true
      properties:
        clustersHealth:
          $ref: "#/components/schemas/v1SpectroClustersHealth"
        status:
          $ref: "#/components/schemas/v1ProjectStatus"
        usage:
          $ref: "#/components/schemas/v1ProjectUsageSummary"
      type: object
    v1ProjectSummary:
      description: Project summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        specSummary:
          teams:
          - uid: uid
            name: name
          - uid: uid
            name: name
          logoUrl: logoUrl
          users:
          - uid: uid
            name: name
          - uid: uid
            name: name
        status:
          usage:
            alloyCpuCores: 5.637376656633329
            pureCpuCores: 7.061401241503109
            clusters:
            - uid: uid
              isAlloy: true
              cpuCores: 2.3021358869347655
              name: name
            - uid: uid
              isAlloy: true
              cpuCores: 2.3021358869347655
              name: name
          clustersHealth:
            running: 1
            healthy: 6
            unhealthy: 5
            errored: 0
          status:
            cleanUpStatus:
              msg: msg
              cleanedResources:
              - cleanedResources
              - cleanedResources
              state: state
            isDisabled: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        specSummary:
          $ref: "#/components/schemas/v1ProjectSpecSummary"
        status:
          $ref: "#/components/schemas/v1ProjectStatusSummary"
      type: object
    v1ProjectTeamsEntity:
      properties:
        teams:
          items:
            $ref: "#/components/schemas/v1TeamRoleMap"
          type: array
          uniqueItems: true
      type: object
    v1ProjectUsage:
      description: Project usage object
      example:
        alloy:
          amount: 7.457744773683766
          usedCredits: 4.965218492984954
          tierPrice: 1.1730742509559433
        pure:
          amount: 7.457744773683766
          usedCredits: 4.965218492984954
          tierPrice: 1.1730742509559433
      properties:
        alloy:
          $ref: "#/components/schemas/v1ProjectUsageData"
        pure:
          $ref: "#/components/schemas/v1ProjectUsageData"
      type: object
    v1ProjectUsageData:
      description: Project usage data object
      example:
        amount: 7.457744773683766
        usedCredits: 4.965218492984954
        tierPrice: 1.1730742509559433
      properties:
        amount:
          description: Billing amount for the project
          format: float64
          type: number
        tierPrice:
          description: Tier price based on the usage
          format: float64
          type: number
        usedCredits:
          description: Project used credits
          format: float64
          type: number
      type: object
    v1ProjectUsageSummary:
      description: Project usage summary
      example:
        alloyCpuCores: 5.637376656633329
        pureCpuCores: 7.061401241503109
        clusters:
        - uid: uid
          isAlloy: true
          cpuCores: 2.3021358869347655
          name: name
        - uid: uid
          isAlloy: true
          cpuCores: 2.3021358869347655
          name: name
      properties:
        alloyCpuCores:
          type: number
          x-omitempty: false
        clusters:
          items:
            $ref: "#/components/schemas/v1ClusterUsageSummary"
          type: array
        pureCpuCores:
          type: number
          x-omitempty: false
      type: object
    v1ProjectUsersEntity:
      properties:
        users:
          items:
            $ref: "#/components/schemas/v1UserRoleMap"
          type: array
          uniqueItems: true
      type: object
    v1Projects:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Project"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1ProjectsFilterSpec:
      description: Project filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ProjectFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1ProjectFilterSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1ProjectsMetadata:
      example:
        items:
        - metadata:
            uid: uid
            name: name
        - metadata:
            uid: uid
            name: name
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ProjectMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1ProjectsSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            teams:
            - uid: uid
              name: name
            - uid: uid
              name: name
            logoUrl: logoUrl
            users:
            - uid: uid
              name: name
            - uid: uid
              name: name
          status:
            usage:
              alloyCpuCores: 5.637376656633329
              pureCpuCores: 7.061401241503109
              clusters:
              - uid: uid
                isAlloy: true
                cpuCores: 2.3021358869347655
                name: name
              - uid: uid
                isAlloy: true
                cpuCores: 2.3021358869347655
                name: name
            clustersHealth:
              running: 1
              healthy: 6
              unhealthy: 5
              errored: 0
            status:
              cleanUpStatus:
                msg: msg
                cleanedResources:
                - cleanedResources
                - cleanedResources
                state: state
              isDisabled: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            teams:
            - uid: uid
              name: name
            - uid: uid
              name: name
            logoUrl: logoUrl
            users:
            - uid: uid
              name: name
            - uid: uid
              name: name
          status:
            usage:
              alloyCpuCores: 5.637376656633329
              pureCpuCores: 7.061401241503109
              clusters:
              - uid: uid
                isAlloy: true
                cpuCores: 2.3021358869347655
                name: name
              - uid: uid
                isAlloy: true
                cpuCores: 2.3021358869347655
                name: name
            clustersHealth:
              running: 1
              healthy: 6
              unhealthy: 5
              errored: 0
            status:
              cleanUpStatus:
                msg: msg
                cleanedResources:
                - cleanedResources
                - cleanedResources
                state: state
              isDisabled: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ProjectSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1ProjectsWorkspaces:
      description: List projects and its workspaces
      example:
        uid: uid
        name: name
        workspaces:
        - uid: uid
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          name: name
          inheritedRoles:
          - uid: uid
            name: name
          - uid: uid
            name: name
        - uid: uid
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          name: name
          inheritedRoles:
          - uid: uid
            name: name
          - uid: uid
            name: name
      properties:
        name:
          type: string
        uid:
          type: string
        workspaces:
          items:
            $ref: "#/components/schemas/v1WorkspacesRoles"
          type: array
          uniqueItems: true
      type: object
    v1PublicCloudRateConfig:
      description: Public cloud rate config
      example:
        memoryOptimized:
          memoryRateProportion: 6.0274563
          computeRateProportion: 0.8008282
        computeOptimized:
          memoryRateProportion: 6.0274563
          computeRateProportion: 0.8008282
      properties:
        computeOptimized:
          $ref: "#/components/schemas/v1CloudInstanceRateConfig"
        memoryOptimized:
          $ref: "#/components/schemas/v1CloudInstanceRateConfig"
      type: object
    v1RateConfig:
      description: Rate config
      example:
        edge:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        vsphere:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        gcp:
          memoryOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
          computeOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
        maas:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        custom:
        - cloudType: cloudType
          rateConfig:
            gpuUnitPricePerHour: 5.962133916683182
            storageUnitPriceGiBPerHour: 2.3021358869347655
            cpuUnitPricePerHour: 1.4658129805029452
            memoryUnitPriceGiBPerHour: 5.637376656633329
        - cloudType: cloudType
          rateConfig:
            gpuUnitPricePerHour: 5.962133916683182
            storageUnitPriceGiBPerHour: 2.3021358869347655
            cpuUnitPricePerHour: 1.4658129805029452
            memoryUnitPriceGiBPerHour: 5.637376656633329
        openstack:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        aws:
          memoryOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
          computeOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
        edgeNative:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        generic:
          gpuUnitPricePerHour: 5.962133916683182
          storageUnitPriceGiBPerHour: 2.3021358869347655
          cpuUnitPricePerHour: 1.4658129805029452
          memoryUnitPriceGiBPerHour: 5.637376656633329
        azure:
          memoryOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
          computeOptimized:
            memoryRateProportion: 6.0274563
            computeRateProportion: 0.8008282
      properties:
        aws:
          $ref: "#/components/schemas/v1PublicCloudRateConfig"
        azure:
          $ref: "#/components/schemas/v1PublicCloudRateConfig"
        custom:
          items:
            $ref: "#/components/schemas/v1CustomCloudRateConfig"
          type: array
          uniqueItems: true
        edge:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
        edgeNative:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
        gcp:
          $ref: "#/components/schemas/v1PublicCloudRateConfig"
        generic:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
        maas:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
        openstack:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
        vsphere:
          $ref: "#/components/schemas/v1PrivateCloudRateConfig"
      type: object
    v1RegistriesMetadata:
      description: Pack Registries Metadata
      example:
        items:
        - uid: uid
          isDefault: true
          kind: kind
          scope: scope
          name: name
          isPrivate: true
        - uid: uid
          isDefault: true
          kind: kind
          scope: scope
          name: name
          isPrivate: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1RegistryMetadata"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1RegistryAuth:
      description: Auth credentials of the registry
      example:
        password: password
        tls:
          certificate: certificate
          insecureSkipVerify: true
          ca: ca
          enabled: true
          key: key
        type: noAuth
        token: token
        username: username
      properties:
        password:
          format: password
          type: string
        tls:
          $ref: "#/components/schemas/v1TlsConfiguration"
        token:
          format: password
          type: string
        type:
          enum:
          - noAuth
          - basic
          - token
          type: string
        username:
          type: string
      type: object
    v1RegistryConf:
      description: Registry configuration
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        endpoint:
          type: string
      type: object
    v1RegistryConfigEntity:
      description: Registry configuration entity
      example:
        config:
          endpoint: endpoint
          auth:
            password: password
            tls:
              certificate: certificate
              insecureSkipVerify: true
              ca: ca
              enabled: true
              key: key
            type: noAuth
            token: token
            username: username
          name: name
      properties:
        config:
          $ref: "#/components/schemas/v1RegistryConfiguration"
      type: object
    v1RegistryConfiguration:
      description: Registry configuration
      example:
        endpoint: endpoint
        auth:
          password: password
          tls:
            certificate: certificate
            insecureSkipVerify: true
            ca: ca
            enabled: true
            key: key
          type: noAuth
          token: token
          username: username
        name: name
      properties:
        auth:
          $ref: "#/components/schemas/v1RegistryAuth"
        endpoint:
          type: string
        name:
          type: string
      type: object
    v1RegistryMetadata:
      description: Registry meta
      example:
        uid: uid
        isDefault: true
        kind: kind
        scope: scope
        name: name
        isPrivate: true
      properties:
        isDefault:
          type: boolean
          x-omitempty: false
        isPrivate:
          type: boolean
          x-omitempty: false
        kind:
          type: string
        name:
          type: string
        scope:
          type: string
        uid:
          type: string
      type: object
    v1RegistryPackMetadata:
      description: Registry metadata information
      example:
        uid: uid
        latestPackUid: latestPackUid
        latestVersion: latestVersion
        scope: scope
        name: name
        annotations:
          key: annotations
        logoUrl: logoUrl
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Pack annotations is used to allow pack to add more arbitrary
            configurations
          type: object
        latestPackUid:
          description: Latest pack uid
          type: string
        latestVersion:
          description: Pack latest version
          type: string
        logoUrl:
          description: Pack logo url
          type: string
        name:
          description: Pack registry name
          type: string
        scope:
          description: Pack registry scope
          type: string
        uid:
          description: Pack registry uid
          type: string
      type: object
    v1RegistrySyncStatus:
      description: Status of the registry sync
      example:
        lastRunTime: 2000-01-23T04:56:07.000+00:00
        lastSyncedTime: 2000-01-23T04:56:07.000+00:00
        isSyncSupported: true
        message: message
        status: status
      properties:
        isSyncSupported:
          type: boolean
          x-omitempty: false
        lastRunTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastSyncedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          type: string
        status:
          type: string
      type: object
    v1RelatedObject:
      description: Object for which the resource is related
      example:
        uid: uid
        kind: spectrocluster
        name: name
      properties:
        kind:
          enum:
          - spectrocluster
          - machine
          - cloudconfig
          - clusterprofile
          - pack
          - appprofile
          - appdeployment
          - edgehost
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1ReleaseDescription:
      description: spectro application management release description
      properties:
        details:
          type: string
        title:
          type: string
        version:
          type: string
      type: object
    v1ReleaseVersion:
      description: spectro application management release version information
      properties:
        date:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        description:
          type: string
        releaseNotes:
          items:
            $ref: "#/components/schemas/v1ReleaseDescription"
          type: array
        version:
          type: string
      type: object
    v1ResourceCloudCostSummary:
      description: Resource cloud cost summary information
      example:
        total:
          compute: 5.637376656633329
          total: 7.061401241503109
          storage: 2.3021358869347655
        data:
        - compute: 0.8008281904610115
          total: 5.962133916683182
          storage: 6.027456183070403
          timestamp: 1.4658129805029452
        - compute: 0.8008281904610115
          total: 5.962133916683182
          storage: 6.027456183070403
          timestamp: 1.4658129805029452
        entity:
          uid: uid
          kind: kind
          name: name
      properties:
        data:
          items:
            $ref: "#/components/schemas/v1CloudCostDataPoint"
          type: array
          uniqueItems: true
        entity:
          $ref: "#/components/schemas/v1ResourceReference"
        total:
          $ref: "#/components/schemas/v1ResourceTotalCloudCost"
      type: object
    v1ResourceConsumption:
      description: Resource consumption information
      example:
        total:
          usage:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          allotted:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
        data:
        - usage:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          allotted:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          timestamp: 1.4658129805029452
        - usage:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          allotted:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          timestamp: 1.4658129805029452
        associatedResources:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        entity:
          uid: uid
          kind: kind
          name: name
      properties:
        associatedResources:
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
        data:
          items:
            $ref: "#/components/schemas/v1ResourceConsumptionDataPoint"
          type: array
          uniqueItems: true
        entity:
          $ref: "#/components/schemas/v1ResourceReference"
        total:
          $ref: "#/components/schemas/v1ResourceTotalConsumptionData"
      type: object
    v1ResourceConsumptionData:
      description: Resource cosumption data
      example:
        memory: 6.027456183070403
        cpu: 0.8008281904610115
      properties:
        cpu:
          format: float64
          type: number
          x-omitempty: false
        memory:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ResourceConsumptionDataPoint:
      description: Resource cosumption data point
      example:
        usage:
          memory: 6.027456183070403
          cpu: 0.8008281904610115
        allotted:
          memory: 6.027456183070403
          cpu: 0.8008281904610115
        timestamp: 1.4658129805029452
      properties:
        allotted:
          $ref: "#/components/schemas/v1ResourceConsumptionData"
        timestamp:
          format: int64
          type: number
        usage:
          $ref: "#/components/schemas/v1ResourceConsumptionData"
      type: object
    v1ResourceConsumptionFilter:
      description: Resource consumption filter
      properties:
        clouds:
          items:
            type: string
          type: array
          uniqueItems: true
        clusters:
          items:
            type: string
          type: array
          uniqueItems: true
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        includeControlPlaneMachines:
          type: boolean
        includeMasterMachines:
          description: Deprecated. Use includeControlPlaneMachines
          type: boolean
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        projects:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        workspaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ResourceConsumptionOptions:
      description: Resource consumption options
      properties:
        enableSummaryView:
          default: true
          type: boolean
        groupBy:
          default: namespace
          enum:
          - tenant
          - project
          - workspace
          - cluster
          - namespace
          - cloud
          type: string
        period:
          default: 60
          format: int32
          type: integer
      type: object
    v1ResourceConsumptionSpec:
      description: Resource consumption spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ResourceConsumptionFilter"
        options:
          $ref: "#/components/schemas/v1ResourceConsumptionOptions"
      type: object
    v1ResourceCost:
      description: Resource Cost information
      example:
        cloud:
          compute: 0.8008281904610115
          total: 1.4658129805029452
          storage: 6.027456183070403
        total: 5.962133916683182
      properties:
        cloud:
          $ref: "#/components/schemas/v1CloudCost"
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ResourceCostDataPoint:
      description: Resource cost data point
      example:
        total: 5.637376656633329
        memory: 6.027456183070403
        cpu: 0.8008281904610115
        storage: 1.4658129805029452
        timestamp: 5.962133916683182
      properties:
        cpu:
          format: float64
          type: number
          x-omitempty: false
        memory:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        timestamp:
          format: int64
          type: number
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ResourceCostSummary:
      description: Resource cost summary information
      example:
        total:
          total: 3.616076749251911
          memory: 7.061401241503109
          cpu: 2.3021358869347655
          storage: 9.301444243932576
        data:
        - total: 5.637376656633329
          memory: 6.027456183070403
          cpu: 0.8008281904610115
          storage: 1.4658129805029452
          timestamp: 5.962133916683182
        - total: 5.637376656633329
          memory: 6.027456183070403
          cpu: 0.8008281904610115
          storage: 1.4658129805029452
          timestamp: 5.962133916683182
        associatedResources:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        entity:
          uid: uid
          kind: kind
          name: name
      properties:
        associatedResources:
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
        data:
          items:
            $ref: "#/components/schemas/v1ResourceCostDataPoint"
          type: array
          uniqueItems: true
        entity:
          $ref: "#/components/schemas/v1ResourceReference"
        total:
          $ref: "#/components/schemas/v1ResourceTotalCost"
      type: object
    v1ResourceCostSummaryFilter:
      description: Resource cost summary filter
      properties:
        clouds:
          items:
            type: string
          type: array
          uniqueItems: true
        clusters:
          items:
            type: string
          type: array
          uniqueItems: true
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        includeControlPlaneMachines:
          type: boolean
        includeMasterMachines:
          description: Deprecated. Use includeControlPlaneMachines
          type: boolean
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        projects:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        workspaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ResourceCostSummaryOptions:
      description: Resource cost summary options
      properties:
        enableSummaryView:
          default: true
          type: boolean
        groupBy:
          default: cluster
          enum:
          - tenant
          - project
          - workspace
          - cluster
          - namespace
          - deployment
          - cloud
          type: string
        period:
          default: 60
          format: int32
          type: integer
      type: object
    v1ResourceCostSummarySpec:
      description: Resource cost summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ResourceCostSummaryFilter"
        options:
          $ref: "#/components/schemas/v1ResourceCostSummaryOptions"
      type: object
    v1ResourceEntity:
      properties:
        checks:
          items:
            type: string
          type: array
        data:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    v1ResourceGroup:
      description: Azure resource Group is a container that holds related resources
        for an Azure solution
      example:
        name: name
        location: location
        id: id
      properties:
        id:
          description: The ID of the resource group
          type: string
        location:
          description: The location of the resource group. It cannot be changed after
            the resource group has been created
          type: string
        name:
          description: The type of the resource group
          type: string
      type: object
    v1ResourceLimitType:
      enum:
      - user
      - project
      - apiKey
      - team
      - role
      - cloudaccount
      - clusterprofile
      - workspace
      - registry
      - privategateway
      - location
      - certificate
      - macro
      - sshkey
      - alert
      - spectrocluster
      - edgehost
      - appprofile
      - appdeployment
      - edgetoken
      - clustergroup
      - filter
      - systemadmin
      type: string
    v1ResourceReference:
      example:
        uid: uid
        kind: kind
        name: name
      properties:
        kind:
          type: string
        name:
          type: string
        uid:
          type: string
      required:
      - uid
      type: object
    v1ResourceRoles:
      example:
        resourceRoles:
        - uid: uid
          filterRefs:
          - uid: uid
            name: name
          - uid: uid
            name: name
          projectUids:
          - uid: uid
            name: name
          - uid: uid
            name: name
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
        - uid: uid
          filterRefs:
          - uid: uid
            name: name
          - uid: uid
            name: name
          projectUids:
          - uid: uid
            name: name
          - uid: uid
            name: name
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
      properties:
        resourceRoles:
          items:
            $ref: "#/components/schemas/v1ResourceRolesEntity"
          type: array
      type: object
    v1ResourceRolesEntity:
      example:
        uid: uid
        filterRefs:
        - uid: uid
          name: name
        - uid: uid
          name: name
        projectUids:
        - uid: uid
          name: name
        - uid: uid
          name: name
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        filterRefs:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        projectUids:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        uid:
          type: string
      type: object
    v1ResourceRolesUpdateEntity:
      properties:
        filterRefs:
          items:
            type: string
          type: array
        projectUids:
          items:
            type: string
          type: array
        roles:
          items:
            type: string
          type: array
      type: object
    v1ResourceTotalCloudCost:
      description: Resource total cloud cost information
      example:
        compute: 5.637376656633329
        total: 7.061401241503109
        storage: 2.3021358869347655
      properties:
        compute:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ResourceTotalConsumptionData:
      description: Resource total cosumption data
      example:
        usage:
          memory: 6.027456183070403
          cpu: 0.8008281904610115
        allotted:
          memory: 6.027456183070403
          cpu: 0.8008281904610115
      properties:
        allotted:
          $ref: "#/components/schemas/v1ResourceConsumptionData"
        usage:
          $ref: "#/components/schemas/v1ResourceConsumptionData"
      type: object
    v1ResourceTotalCost:
      description: Resource total cost information
      example:
        total: 3.616076749251911
        memory: 7.061401241503109
        cpu: 2.3021358869347655
        storage: 9.301444243932576
      properties:
        cpu:
          format: float64
          type: number
          x-omitempty: false
        memory:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1ResourceUsage:
      description: ResourceUsage
      properties:
        projects:
          items:
            $ref: "#/components/schemas/v1ProjectResourceUsage"
          type: array
          uniqueItems: true
        timestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        totalAlloyCpuCoreHours:
          type: number
          x-omitempty: false
        totalPureCpuCoreHours:
          type: number
          x-omitempty: false
      type: object
    v1ResourceUsageDataPoint:
      description: Resource usage data point
      example:
        baremetal:
          activeEdgehosts: 0.8008281904610115
          maxEdgehosts: 1.4658129805029452
          maxMachines: 5.962133916683182
          activeMachines: 6.027456183070403
        memory: 2.3021358869347655
        cpu: 5.637376656633329
        edgehost:
          activeEdgehosts: 0.8008281904610115
          maxEdgehosts: 1.4658129805029452
          maxMachines: 5.962133916683182
          activeMachines: 6.027456183070403
        timestamp: 7.061401241503109
      properties:
        baremetal:
          $ref: "#/components/schemas/v1ResourceUsageMeteringDataPoint"
        cpu:
          format: float64
          type: number
          x-omitempty: false
        edgehost:
          $ref: "#/components/schemas/v1ResourceUsageMeteringDataPoint"
        memory:
          format: float64
          type: number
          x-omitempty: false
        timestamp:
          format: int64
          type: number
      type: object
    v1ResourceUsageMeteringDataPoint:
      description: min and max count for machines & edgehost for the given period
      example:
        activeEdgehosts: 0.8008281904610115
        maxEdgehosts: 1.4658129805029452
        maxMachines: 5.962133916683182
        activeMachines: 6.027456183070403
      properties:
        activeEdgehosts:
          format: int64
          type: number
        activeMachines:
          format: int64
          type: number
        maxEdgehosts:
          format: int64
          type: number
        maxMachines:
          format: int64
          type: number
      type: object
    v1ResourceUsageSummary:
      description: Resource usage summary information
      example:
        data:
        - baremetal:
            activeEdgehosts: 0.8008281904610115
            maxEdgehosts: 1.4658129805029452
            maxMachines: 5.962133916683182
            activeMachines: 6.027456183070403
          memory: 2.3021358869347655
          cpu: 5.637376656633329
          edgehost:
            activeEdgehosts: 0.8008281904610115
            maxEdgehosts: 1.4658129805029452
            maxMachines: 5.962133916683182
            activeMachines: 6.027456183070403
          timestamp: 7.061401241503109
        - baremetal:
            activeEdgehosts: 0.8008281904610115
            maxEdgehosts: 1.4658129805029452
            maxMachines: 5.962133916683182
            activeMachines: 6.027456183070403
          memory: 2.3021358869347655
          cpu: 5.637376656633329
          edgehost:
            activeEdgehosts: 0.8008281904610115
            maxEdgehosts: 1.4658129805029452
            maxMachines: 5.962133916683182
            activeMachines: 6.027456183070403
          timestamp: 7.061401241503109
        associatedResources:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        entity:
          uid: uid
          kind: kind
          name: name
      properties:
        associatedResources:
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
        data:
          items:
            $ref: "#/components/schemas/v1ResourceUsageDataPoint"
          type: array
          uniqueItems: true
        entity:
          $ref: "#/components/schemas/v1ResourceReference"
      type: object
    v1ResourceUsageSummaryFilter:
      description: Resource usage summary filter
      properties:
        clouds:
          items:
            type: string
          type: array
          uniqueItems: true
        clusters:
          items:
            type: string
          type: array
          uniqueItems: true
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        includeControlPlaneMachines:
          type: boolean
        includeMasterMachines:
          description: Deprecated. Use includeControlPlaneMachines
          type: boolean
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        pods:
          items:
            type: string
          type: array
          uniqueItems: true
        projects:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        workload:
          $ref: "#/components/schemas/v1ResourceWorkloadFilter"
        workspaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1ResourceUsageSummaryOptions:
      description: Resource usage summary options
      properties:
        enableSummaryView:
          default: true
          type: boolean
        groupBy:
          default: cluster
          enum:
          - tenant
          - project
          - workspace
          - cluster
          - namespace
          - deployment
          - statefulset
          - daemonset
          - pod
          - cloud
          type: string
        includeMeteringInfo:
          default: false
          type: boolean
        period:
          default: 60
          format: int32
          type: integer
      type: object
    v1ResourceUsageSummarySpec:
      description: Resource usage summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1ResourceUsageSummaryFilter"
        options:
          $ref: "#/components/schemas/v1ResourceUsageSummaryOptions"
      type: object
    v1ResourceWorkloadFilter:
      description: Workload resource filter
      properties:
        names:
          items:
            type: string
          type: array
          uniqueItems: true
        type:
          default: all
          enum:
          - deployment
          - statefulset
          - daemonset
          - all
          type: string
      type: object
    v1Resources:
      properties:
        resources:
          additionalProperties:
            $ref: "#/components/schemas/v1ResourceEntity"
          type: object
      type: object
    v1ResourcesCloudCostSummary:
      description: Resources cloud cost summary information
      example:
        total:
          compute: 5.637376656633329
          total: 7.061401241503109
          storage: 2.3021358869347655
        resources:
        - total:
            compute: 5.637376656633329
            total: 7.061401241503109
            storage: 2.3021358869347655
          data:
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
          entity:
            uid: uid
            kind: kind
            name: name
        - total:
            compute: 5.637376656633329
            total: 7.061401241503109
            storage: 2.3021358869347655
          data:
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
          entity:
            uid: uid
            kind: kind
            name: name
      properties:
        resources:
          items:
            $ref: "#/components/schemas/v1ResourceCloudCostSummary"
          type: array
        total:
          $ref: "#/components/schemas/v1ResourceTotalCloudCost"
      type: object
    v1ResourcesConsumption:
      description: Resources consumption information
      example:
        total:
          usage:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
          allotted:
            memory: 6.027456183070403
            cpu: 0.8008281904610115
        memoryUnit: memoryUnit
        resources:
        - total:
            usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
          data:
          - usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            timestamp: 1.4658129805029452
          - usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            timestamp: 1.4658129805029452
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
        - total:
            usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
          data:
          - usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            timestamp: 1.4658129805029452
          - usage:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            allotted:
              memory: 6.027456183070403
              cpu: 0.8008281904610115
            timestamp: 1.4658129805029452
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
        cpuUnit: cpuUnit
      properties:
        cpuUnit:
          type: string
        memoryUnit:
          type: string
        resources:
          items:
            $ref: "#/components/schemas/v1ResourceConsumption"
          type: array
        total:
          $ref: "#/components/schemas/v1ResourceTotalConsumptionData"
      type: object
    v1ResourcesCostSummary:
      description: Resources cost summary information
      example:
        total:
          total: 3.616076749251911
          memory: 7.061401241503109
          cpu: 2.3021358869347655
          storage: 9.301444243932576
        resources:
        - total:
            total: 3.616076749251911
            memory: 7.061401241503109
            cpu: 2.3021358869347655
            storage: 9.301444243932576
          data:
          - total: 5.637376656633329
            memory: 6.027456183070403
            cpu: 0.8008281904610115
            storage: 1.4658129805029452
            timestamp: 5.962133916683182
          - total: 5.637376656633329
            memory: 6.027456183070403
            cpu: 0.8008281904610115
            storage: 1.4658129805029452
            timestamp: 5.962133916683182
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
        - total:
            total: 3.616076749251911
            memory: 7.061401241503109
            cpu: 2.3021358869347655
            storage: 9.301444243932576
          data:
          - total: 5.637376656633329
            memory: 6.027456183070403
            cpu: 0.8008281904610115
            storage: 1.4658129805029452
            timestamp: 5.962133916683182
          - total: 5.637376656633329
            memory: 6.027456183070403
            cpu: 0.8008281904610115
            storage: 1.4658129805029452
            timestamp: 5.962133916683182
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
      properties:
        resources:
          items:
            $ref: "#/components/schemas/v1ResourceCostSummary"
          type: array
        total:
          $ref: "#/components/schemas/v1ResourceTotalCost"
      type: object
    v1ResourcesUsageSummary:
      description: Resources usage summary information
      example:
        memoryUnit: memoryUnit
        resources:
        - data:
          - baremetal:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            memory: 2.3021358869347655
            cpu: 5.637376656633329
            edgehost:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            timestamp: 7.061401241503109
          - baremetal:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            memory: 2.3021358869347655
            cpu: 5.637376656633329
            edgehost:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            timestamp: 7.061401241503109
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
        - data:
          - baremetal:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            memory: 2.3021358869347655
            cpu: 5.637376656633329
            edgehost:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            timestamp: 7.061401241503109
          - baremetal:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            memory: 2.3021358869347655
            cpu: 5.637376656633329
            edgehost:
              activeEdgehosts: 0.8008281904610115
              maxEdgehosts: 1.4658129805029452
              maxMachines: 5.962133916683182
              activeMachines: 6.027456183070403
            timestamp: 7.061401241503109
          associatedResources:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          entity:
            uid: uid
            kind: kind
            name: name
        cpuUnit: cpuUnit
      properties:
        cpuUnit:
          type: string
        memoryUnit:
          type: string
        resources:
          items:
            $ref: "#/components/schemas/v1ResourceUsageSummary"
          type: array
      type: object
    v1RestoreStatusMeta:
      description: Restore  status meta
      example:
        msg: msg
        restoreTime: 2000-01-23T04:56:07.000+00:00
        isSucceeded: true
      properties:
        isSucceeded:
          type: boolean
        msg:
          type: string
        restoreTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1Role:
      description: Role
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          permissions:
          - permissions
          - permissions
          scope: system
          type: system
        status:
          isEnabled: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1RoleSpec"
        status:
          $ref: "#/components/schemas/v1RoleStatus"
      type: object
    v1RoleClone:
      description: Role clone specifications
      properties:
        metadata:
          $ref: "#/components/schemas/v1RoleCloneMetadata"
      type: object
    v1RoleCloneMetadata:
      description: Role clone metadata
      properties:
        name:
          type: string
      type: object
    v1RolePatch:
      items:
        $ref: "#/components/schemas/v1HttpPatch"
      type: array
    v1RoleSpec:
      description: Role specifications
      example:
        permissions:
        - permissions
        - permissions
        scope: system
        type: system
      properties:
        permissions:
          items:
            type: string
          type: array
          uniqueItems: true
        scope:
          $ref: "#/components/schemas/v1Scope"
        type:
          enum:
          - system
          - user
          type: string
      type: object
    v1RoleStatus:
      description: Role status
      example:
        isEnabled: true
      properties:
        isEnabled:
          description: Specifies if role account is enabled/disabled
          type: boolean
          x-omitempty: false
      type: object
    v1Roles:
      description: Array of Roles
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            permissions:
            - permissions
            - permissions
            scope: system
            type: system
          status:
            isEnabled: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            permissions:
            - permissions
            - permissions
            scope: system
            type: system
          status:
            isEnabled: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Role"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1S3StorageConfig:
      description: S3 storage config object
      example:
        useRestic: true
        bucketName: bucketName
        s3Url: s3Url
        caCert: caCert
        credentials:
          credentialType: secret
          secretSpec:
            mission: mission
            permissionBoundary: permissionBoundary
            role: role
            agency: agency
            accountName: accountName
            namePrefix: namePrefix
            tls:
              cert: cert
              ca: ca
              key: key
            isCapValidationEnabled: true
            policy: policy
          partition: aws
          sts:
            externalId: externalId
            arn: arn
          secretKey: secretKey
          accessKey: accessKey
          secretToken: secretToken
          policyARNs:
          - policyARNs
          - policyARNs
        region: region
        s3ForcePathStyle: true
      properties:
        bucketName:
          description: S3 storage bucket name
          type: string
        caCert:
          description: CA Certificate
          type: string
        credentials:
          $ref: "#/components/schemas/v1AwsCloudAccount"
        region:
          description: AWS region name
          type: string
        s3ForcePathStyle:
          default: true
          type: boolean
        s3Url:
          description: Custom hosted S3 URL
          type: string
        useRestic:
          default: true
          description: "Set to 'true', to use Restic plugin for the backup"
          type: boolean
      required:
      - bucketName
      - credentials
      - region
      type: object
    v1SchedulerJob:
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SchedulerJob_spec"
        status:
          $ref: "#/components/schemas/v1SchedulerJob_status"
      type: object
    v1SchedulerJobs:
      items:
        $ref: "#/components/schemas/v1SchedulerJob"
      type: array
      uniqueItems: true
    v1SchedulerJobsHealth:
      items:
        $ref: "#/components/schemas/v1SchedulerJob"
      type: array
      uniqueItems: true
    v1Scope:
      enum:
      - system
      - tenant
      - project
      - resource
      type: string
    v1SearchFilterBoolCondition:
      properties:
        value:
          type: boolean
      type: object
    v1SearchFilterCondition:
      properties:
        bool:
          $ref: "#/components/schemas/v1SearchFilterBoolCondition"
        date:
          $ref: "#/components/schemas/v1SearchFilterDateCondition"
        float:
          $ref: "#/components/schemas/v1SearchFilterFloatCondition"
        int:
          $ref: "#/components/schemas/v1SearchFilterIntegerCondition"
        keyValue:
          $ref: "#/components/schemas/v1SearchFilterKeyValueCondition"
        string:
          $ref: "#/components/schemas/v1SearchFilterStringCondition"
      type: object
    v1SearchFilterConjunctionOperator:
      enum:
      - and
      - or
      nullable: true
      type: string
      x-nullable: true
    v1SearchFilterDateCondition:
      properties:
        match:
          $ref: "#/components/schemas/v1SearchFilterDateConditionMatch"
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterDateOperator"
      type: object
    v1SearchFilterDateConditionMatch:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        values:
          items:
            $ref: "#/components/schemas/v1Time"
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterDateOperator:
      enum:
      - eq
      - gt
      - gte
      - lt
      - lte
      - range
      type: string
    v1SearchFilterFloatCondition:
      properties:
        match:
          $ref: "#/components/schemas/v1SearchFilterFloatConditionMatch"
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterIntegerOperator"
      type: object
    v1SearchFilterFloatConditionMatch:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        values:
          items:
            format: float64
            type: number
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterGroup:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        filters:
          items:
            $ref: "#/components/schemas/v1SearchFilterItem"
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterIntegerCondition:
      properties:
        match:
          $ref: "#/components/schemas/v1SearchFilterIntegerConditionMatch"
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterIntegerOperator"
      type: object
    v1SearchFilterIntegerConditionMatch:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        values:
          items:
            type: integer
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterIntegerOperator:
      enum:
      - eq
      - gt
      - gte
      - lt
      - lte
      type: string
    v1SearchFilterItem:
      properties:
        condition:
          $ref: "#/components/schemas/v1SearchFilterCondition"
        property:
          type: string
        type:
          $ref: "#/components/schemas/v1SearchFilterPropertyType"
      type: object
    v1SearchFilterKeyValueCondition:
      properties:
        ignoreCase:
          type: boolean
        key:
          type: string
        match:
          $ref: "#/components/schemas/v1SearchFilterKeyValueConditionMatch"
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterStringOperator"
      type: object
    v1SearchFilterKeyValueConditionMatch:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        values:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterKeyValueOperator:
      enum:
      - eq
      type: string
    v1SearchFilterPropertyType:
      enum:
      - string
      - int
      - float
      - bool
      - date
      - keyValue
      type: string
    v1SearchFilterSchemaSpec:
      example:
        schema:
          properties:
          - maxIntVal: 6
            default: default
            isDeprecated: true
            displayName: displayName
            minFloatVal: 1.4658129805029452
            minIntVal: 5
            hideDisplay: true
            name: name
            maxFloatVal: 0.8008281904610115
            type: type
            enum:
            - enum
            - enum
            enumValues:
            - displayValue: displayValue
              value: value
            - displayValue: displayValue
              value: value
          - maxIntVal: 6
            default: default
            isDeprecated: true
            displayName: displayName
            minFloatVal: 1.4658129805029452
            minIntVal: 5
            hideDisplay: true
            name: name
            maxFloatVal: 0.8008281904610115
            type: type
            enum:
            - enum
            - enum
            enumValues:
            - displayValue: displayValue
              value: value
            - displayValue: displayValue
              value: value
      properties:
        schema:
          $ref: "#/components/schemas/v1SearchFilterSchemaSpecProperties"
      type: object
    v1SearchFilterSchemaSpecEnumValue:
      example:
        displayValue: displayValue
        value: value
      properties:
        displayValue:
          type: string
        value:
          type: string
      type: object
    v1SearchFilterSchemaSpecProperties:
      example:
        properties:
        - maxIntVal: 6
          default: default
          isDeprecated: true
          displayName: displayName
          minFloatVal: 1.4658129805029452
          minIntVal: 5
          hideDisplay: true
          name: name
          maxFloatVal: 0.8008281904610115
          type: type
          enum:
          - enum
          - enum
          enumValues:
          - displayValue: displayValue
            value: value
          - displayValue: displayValue
            value: value
        - maxIntVal: 6
          default: default
          isDeprecated: true
          displayName: displayName
          minFloatVal: 1.4658129805029452
          minIntVal: 5
          hideDisplay: true
          name: name
          maxFloatVal: 0.8008281904610115
          type: type
          enum:
          - enum
          - enum
          enumValues:
          - displayValue: displayValue
            value: value
          - displayValue: displayValue
            value: value
      properties:
        properties:
          items:
            $ref: "#/components/schemas/v1SearchFilterSchemaSpecProperty"
          type: array
      type: object
    v1SearchFilterSchemaSpecProperty:
      example:
        maxIntVal: 6
        default: default
        isDeprecated: true
        displayName: displayName
        minFloatVal: 1.4658129805029452
        minIntVal: 5
        hideDisplay: true
        name: name
        maxFloatVal: 0.8008281904610115
        type: type
        enum:
        - enum
        - enum
        enumValues:
        - displayValue: displayValue
          value: value
        - displayValue: displayValue
          value: value
      properties:
        default:
          type: string
          x-order: 6
        displayName:
          type: string
          x-order: 2
        enum:
          items:
            type: string
          type: array
          x-omitempty: true
          x-order: 4
        enumValues:
          items:
            $ref: "#/components/schemas/v1SearchFilterSchemaSpecEnumValue"
          type: array
          x-omitempty: true
          x-order: 5
        hideDisplay:
          type: boolean
          x-order: 1
        isDeprecated:
          type: boolean
          x-omitempty: false
          x-order: 11
        maxFloatVal:
          format: float64
          type: number
          x-order: 10
        maxIntVal:
          format: int32
          type: integer
          x-order: 8
        minFloatVal:
          format: float64
          type: number
          x-order: 9
        minIntVal:
          format: int32
          type: integer
          x-order: 7
        name:
          type: string
          x-order: 0
        type:
          type: string
          x-order: 3
      type: object
    v1SearchFilterSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1SearchSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1SearchFilterSpec:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        filterGroups:
          items:
            $ref: "#/components/schemas/v1SearchFilterGroup"
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterStringCondition:
      properties:
        ignoreCase:
          type: boolean
        match:
          $ref: "#/components/schemas/v1SearchFilterStringConditionMatch"
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterStringOperator"
      type: object
    v1SearchFilterStringConditionMatch:
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        values:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1SearchFilterStringOperator:
      enum:
      - eq
      - contains
      - beginsWith
      type: string
    v1SearchFilterSummarySpec:
      description: Spectro cluster search filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1SearchFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1SearchFilterSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1SearchSortFields:
      enum:
      - environment
      - clusterName
      - clusterState
      - healthState
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1SectroClusterK8sDashboardUrl:
      description: Service version information
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    v1ServiceEncryptionKey:
      description: Returns the data encryption key for the session
      properties:
        encryptionKey:
          description: Encryption key to be used to decrypt the encrypted data in
            the response
          type: string
      type: object
    v1ServiceImage:
      description: Service image entity
      properties:
        buildId:
          type: string
        image:
          type: string
        serviceName:
          type: string
        version:
          type: string
      type: object
    v1ServiceManifest:
      description: Service manifest information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          manifests:
          - path: path
            repoName: repoName
            name: name
            sha: sha
            content: content
          - path: path
            repoName: repoName
            name: name
            sha: sha
            content: content
          name: name
          version: version
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ServiceManifestSpec"
      type: object
    v1ServiceManifestSpec:
      example:
        manifests:
        - path: path
          repoName: repoName
          name: name
          sha: sha
          content: content
        - path: path
          repoName: repoName
          name: name
          sha: sha
          content: content
        name: name
        version: version
      properties:
        manifests:
          items:
            $ref: "#/components/schemas/v1GitRepoFileContent"
          type: array
          uniqueItems: true
        name:
          type: string
        version:
          type: string
      type: object
    v1ServicePort:
      example:
        protocol: protocol
        port: 0
      properties:
        port:
          description: The port that will be exposed by this service.
          format: int32
          type: integer
        protocol:
          type: string
      required:
      - port
      type: object
    v1ServiceSpec:
      description: ServiceSpec defines the specification of service registering edge
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    v1ServiceVersion:
      description: Service version information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          latestVersion:
            path: path
            repoName: repoName
            name: name
            sha: sha
            content: content
          name: name
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ServiceVersionSpec"
      type: object
    v1ServiceVersionSpec:
      example:
        latestVersion:
          path: path
          repoName: repoName
          name: name
          sha: sha
          content: content
        name: name
      properties:
        latestVersion:
          $ref: "#/components/schemas/v1GitRepoFileContent"
        name:
          type: string
      type: object
    v1ServicesImages:
      properties:
        serviceImages:
          items:
            $ref: "#/components/schemas/v1ServiceImage"
          type: array
          uniqueItems: true
      type: object
    v1SonobuoyEntity:
      description: Sonobuoy response
      properties:
        reports:
          additionalProperties:
            $ref: "#/components/schemas/v1SonobuoyReportEntity"
          type: object
        requestUid:
          type: string
        status:
          enum:
          - Completed
          - InProgress
          - Failed
          - Initiated
          type: string
      required:
      - reports
      - requestUid
      - status
      type: object
    v1SonobuoyLog:
      description: Compliance Scan Sonobuoy Log
      example:
        msg: msg
        output: output
        path: path
        description: description
        state: state
      properties:
        description:
          type: string
        msg:
          type: string
        output:
          type: string
        path:
          type: string
        state:
          type: string
      type: object
    v1SonobuoyLogEntity:
      description: Sonobuoy log
      properties:
        description:
          type: string
        msg:
          type: string
        output:
          type: string
        path:
          type: string
        state:
          type: string
      type: object
    v1SonobuoyReport:
      description: Compliance Scan Sonobuoy Report
      example:
        fail: 9
        node: node
        total: 2
        plugin: plugin
        pass: 3
        logs:
        - msg: msg
          output: output
          path: path
          description: description
          state: state
        - msg: msg
          output: output
          path: path
          description: description
          state: state
        status: status
      properties:
        fail:
          format: int32
          type: integer
        logs:
          items:
            $ref: "#/components/schemas/v1SonobuoyLog"
          type: array
        node:
          type: string
        pass:
          format: int32
          type: integer
        plugin:
          type: string
        status:
          type: string
        total:
          format: int32
          type: integer
      type: object
    v1SonobuoyReportEntity:
      description: Sonobuoy report
      properties:
        fail:
          format: int32
          type: integer
        logs:
          items:
            $ref: "#/components/schemas/v1SonobuoyLogEntity"
          type: array
        node:
          type: string
        pass:
          format: int32
          type: integer
        plugin:
          type: string
        status:
          type: string
        total:
          format: int32
          type: integer
      type: object
    v1SortOrder:
      default: asc
      enum:
      - asc
      - desc
      type: string
    v1SpcApply:
      example:
        actionType: DownloadAndInstall
        lastModifiedTime: 2000-01-23T04:56:07.000+00:00
        crdDigest: crdDigest
        spcHash: spcHash
        spcInfraHash: spcInfraHash
        canBeApplied: true
        patchAppliedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        actionType:
          enum:
          - DownloadAndInstall
          - DownloadAndInstallLater
          type: string
        canBeApplied:
          description: If it is true then Agent can apply the changes to the palette
          type: boolean
          x-omitempty: false
        crdDigest:
          type: string
        lastModifiedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        patchAppliedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        spcHash:
          type: string
        spcInfraHash:
          type: string
      type: object
    v1SpcApplySettings:
      properties:
        actionType:
          enum:
          - DownloadAndInstall
          - DownloadAndInstallLater
          type: string
      type: object
    v1SpcPatchTimeEntity:
      properties:
        clusterHash:
          type: string
        patchTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SpectroAppMgmtUpgrade:
      description: Spectro application management upgrade information
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1ClusterProfileNotificationUpdateEntity"
          type: array
          uniqueItems: true
        version:
          type: string
      required:
      - version
      type: object
    v1SpectroAwsClusterEntity:
      description: AWS cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterEntity_spec"
      type: object
    v1SpectroAwsClusterImportEntity:
      description: Spectro AWS cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroAwsClusterRateEntity:
      description: Spectro AWS cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1AwsClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1AwsMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroAzureClusterEntity:
      description: Azure cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroAzureClusterEntity_spec"
      type: object
    v1SpectroAzureClusterImportEntity:
      description: Spectro Azure cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroAzureClusterRateEntity:
      description: Spectro Azure cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1AzureClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroCluster:
      description: SpectroCluster is the Schema for the spectroclusters API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          clusterType: PureManage
          clusterProfileTemplates:
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          - packServerSecret: packServerSecret
            uid: uid
            cloudType: cloudType
            profileVersion: profileVersion
            relatedObject:
              uid: uid
              kind: kind
              name: name
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
            packServerRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          cloudType: cloudType
          clusterConfig:
            clusterMetaAttribute: clusterMetaAttribute
            machineManagementConfig:
              osPatchConfig:
                schedule: schedule
                onDemandPatchAfter: 2000-01-23T04:56:07.000+00:00
                patchOnBoot: true
                rebootIfRequired: true
            hostClusterConfig:
              clusterEndpoint:
                type: Ingress
                config:
                  ingressConfig:
                    port: 6
                    host: host
                  loadBalancerConfig:
                    externalIPs:
                    - externalIPs
                    - externalIPs
                    loadBalancerSourceRanges:
                    - loadBalancerSourceRanges
                    - loadBalancerSourceRanges
                    externalTrafficPolicy: externalTrafficPolicy
              clusterGroup:
                uid: uid
                kind: kind
                name: name
              isHostCluster: false
              hostCluster:
                uid: uid
                kind: kind
                name: name
            clusterResources:
              rbacs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              namespaces:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
            lifecycleConfig:
              pause: false
            controlPlaneHealthCheckTimeout: controlPlaneHealthCheckTimeout
            updateWorkerPoolsInParallel: true
            clusterRbac:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            hybridClusterConfig:
              clusterUid: clusterUid
              enable: true
              hybridMachinePoolClusterRefs:
              - uid: uid
                cloudType: edge-native
              - uid: uid
                cloudType: edge-native
            machineHealthConfig:
              nodeReadyHealthCheckDuration: nodeReadyHealthCheckDuration
              networkReadyHealthCheckDuration: networkReadyHealthCheckDuration
              healthCheckMaxUnhealthy: healthCheckMaxUnhealthy
          cloudConfigRef:
            uid: uid
            kind: kind
            name: name
        status:
          virtual:
            clusterGroup:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            lifecycleStatus:
              msg: msg
              status: Pausing
            appDeployments:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            hostCluster:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            virtualClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            state: state
          profileStatus:
            hasUserMacros: true
          fips:
            mode: none
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          packs:
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          upgrades:
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          apiEndpoints:
          - port: 0
            host: host
          - port: 0
            host: host
          spcApply:
            actionType: DownloadAndInstall
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            crdDigest: crdDigest
            spcHash: spcHash
            spcInfraHash: spcInfraHash
            canBeApplied: true
            patchAppliedTime: 2000-01-23T04:56:07.000+00:00
          abortTimestamp: 2000-01-23T04:56:07.000+00:00
          clusterImport:
            isBrownfield: true
            importLink: importLink
            state: state
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            geoLoc:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            countryName: countryName
          state: state
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          addOnServices:
          - endpoint: endpoint
            name: name
          - endpoint: endpoint
            name: name
          repave:
            state: Pending
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterSpec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterStatus"
      type: object
    v1SpectroClusterActiveAppDeployment:
      description: Active app deployment
      properties:
        appRef:
          $ref: "#/components/schemas/v1ObjectEntity"
        state:
          type: string
      type: object
    v1SpectroClusterActiveCluster:
      description: Active clusters
      properties:
        clusterRef:
          $ref: "#/components/schemas/v1ObjectEntity"
        state:
          type: string
      type: object
    v1SpectroClusterActiveResources:
      description: Active cluster resources
      properties:
        appDeployments:
          items:
            $ref: "#/components/schemas/v1SpectroClusterActiveAppDeployment"
          type: array
        clusters:
          items:
            $ref: "#/components/schemas/v1SpectroClusterActiveCluster"
          type: array
        virtualClusters:
          items:
            $ref: "#/components/schemas/v1SpectroClusterActiveCluster"
          type: array
      type: object
    v1SpectroClusterAddOnService:
      description: Spectro cluster addon service
      example:
        endpoint: endpoint
        name: name
      properties:
        endpoint:
          type: string
        name:
          type: string
      type: object
    v1SpectroClusterAddOnServiceSummary:
      description: Spectro cluster status summary
      example:
        endpoint: endpoint
        name: name
      properties:
        endpoint:
          type: string
        name:
          type: string
      type: object
    v1SpectroClusterAssetEntity:
      description: Cluster asset
      example:
        spec:
          frpKubeconfig: frpKubeconfig
          manifest: manifest
          kubeconfigclient: kubeconfigclient
          kubeconfig: kubeconfig
          tokenkubeconfig: tokenkubeconfig
      properties:
        spec:
          $ref: "#/components/schemas/v1SpectroClusterAssetEntity_spec"
      type: object
    v1SpectroClusterAssetFrpKubeConfig:
      description: Cluster asset Frp Kube Config
      properties:
        frpKubeconfig:
          type: string
      type: object
    v1SpectroClusterAssetKubeConfig:
      description: Cluster asset Kube Config
      properties:
        kubeconfig:
          type: string
      type: object
    v1SpectroClusterAssetKubeConfigClient:
      description: Cluster asset Kube Config Client
      properties:
        kubeconfigclient:
          type: string
      type: object
    v1SpectroClusterAssetManifest:
      description: Cluster asset
      properties:
        manifest:
          type: string
      type: object
    v1SpectroClusterAssetTokenKubeConfig:
      description: Cluster asset admin token Kube Config
      properties:
        tokenkubeconfig:
          type: string
      type: object
    v1SpectroClusterCloudCost:
      description: Spectro cluster cloud cost information
      example:
        cost:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        data:
        - compute: 0.8008281904610115
          total: 5.962133916683182
          storage: 6.027456183070403
          timestamp: 1.4658129805029452
        - compute: 0.8008281904610115
          total: 5.962133916683182
          storage: 6.027456183070403
          timestamp: 1.4658129805029452
      properties:
        cost:
          $ref: "#/components/schemas/v1ResourceCost"
        data:
          items:
            $ref: "#/components/schemas/v1CloudCostDataPoint"
          type: array
      type: object
    v1SpectroClusterCloudCostSummaryFilter:
      description: Spectro cluster cloud cost summary filter
      properties:
        clouds:
          items:
            type: string
          type: array
          uniqueItems: true
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        projects:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        workspaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterCloudCostSummaryOptions:
      description: Spectro cluster cloud cost summary options
      properties:
        groupBy:
          default: project
          enum:
          - tenant
          - project
          - cloud
          - cluster
          type: string
        period:
          default: 1440
          format: int32
          type: integer
      type: object
    v1SpectroClusterCloudCostSummarySpec:
      description: Spectro cluster cloud cost summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1SpectroClusterCloudCostSummaryFilter"
        options:
          $ref: "#/components/schemas/v1SpectroClusterCloudCostSummaryOptions"
      type: object
    v1SpectroClusterCost:
      description: Spectro cluster cost information
      example:
        cloud:
          cost:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          data:
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
          - compute: 0.8008281904610115
            total: 5.962133916683182
            storage: 6.027456183070403
            timestamp: 1.4658129805029452
        uid: uid
        cost:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        name: name
      properties:
        cloud:
          $ref: "#/components/schemas/v1SpectroClusterCloudCost"
        cost:
          $ref: "#/components/schemas/v1ResourceCost"
        name:
          type: string
        uid:
          type: string
      type: object
    v1SpectroClusterCostSummary:
      example:
        cluster:
          cloud:
            cost:
              cloud:
                compute: 0.8008281904610115
                total: 1.4658129805029452
                storage: 6.027456183070403
              total: 5.962133916683182
            data:
            - compute: 0.8008281904610115
              total: 5.962133916683182
              storage: 6.027456183070403
              timestamp: 1.4658129805029452
            - compute: 0.8008281904610115
              total: 5.962133916683182
              storage: 6.027456183070403
              timestamp: 1.4658129805029452
          uid: uid
          cost:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          name: name
        period: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        cluster:
          $ref: "#/components/schemas/v1SpectroClusterCost"
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        period:
          format: int32
          type: integer
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SpectroClusterFilterSpec:
      description: Spectro cluster filter spec
      properties:
        cloudAccounts:
          items:
            type: string
          type: array
          uniqueItems: true
        clusterName:
          $ref: "#/components/schemas/v1FilterString"
        clusterProfiles:
          items:
            type: string
          type: array
          uniqueItems: true
        clusterState:
          $ref: "#/components/schemas/v1ClusterState"
        clusterStates:
          items:
            $ref: "#/components/schemas/v1ClusterState"
          type: array
          uniqueItems: true
        cpuUsage:
          $ref: "#/components/schemas/v1FilterIntRange"
        environment:
          description: Deprecated. Use environments
          items:
            type: string
          type: array
          uniqueItems: true
        environments:
          items:
            type: string
          type: array
          uniqueItems: true
        healthState:
          default: all
          enum:
          - all
          - Healthy
          - UnHealthy
          type: string
        isDeleted:
          default: false
          type: boolean
        isHostCluster:
          default: false
          type: boolean
          x-omitempty: false
        memoryUsage:
          $ref: "#/components/schemas/v1FilterNumberRange"
        metricPeriod:
          default: 60
          description: Metric period in minutes defines latest metrics by period
          format: int32
          type: integer
        projectUids:
          items:
            type: string
          type: array
          uniqueItems: true
        tags:
          $ref: "#/components/schemas/v1FilterArray"
      type: object
    v1SpectroClusterHealthCheck:
      properties:
        spec:
          $ref: "#/components/schemas/v1SpectroClusterHealthCheckSpec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterHealthCheckStatus"
      type: object
    v1SpectroClusterHealthCheckSpec:
      properties:
        name:
          type: string
        orgName:
          type: string
        ownerName:
          type: string
        ownerUid:
          type: string
        tenantUid:
          type: string
      type: object
    v1SpectroClusterHealthCheckStatus:
      properties:
        machineHealthChecks:
          items:
            $ref: "#/components/schemas/v1HealthCheck"
          type: array
        msgBrokerHealthChecks:
          items:
            $ref: "#/components/schemas/v1HealthCheck"
          type: array
        spectroClusterHealthChecks:
          items:
            $ref: "#/components/schemas/v1HealthCheck"
          type: array
      type: object
    v1SpectroClusterHealthCondition:
      description: Spectro cluster health condition
      example:
        relatedObject:
          uid: uid
          kind: spectrocluster
          name: name
        message: message
        type: type
      properties:
        message:
          type: string
        relatedObject:
          $ref: "#/components/schemas/v1RelatedObject"
        type:
          type: string
      type: object
    v1SpectroClusterHealthStatus:
      description: Spectro cluster health status
      example:
        lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
        agentVersion: agentVersion
        state: state
        conditions:
        - relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          message: message
          type: type
        - relatedObject:
            uid: uid
            kind: spectrocluster
            name: name
          message: message
          type: type
      properties:
        agentVersion:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/v1SpectroClusterHealthCondition"
          type: array
          uniqueItems: true
        lastHeartBeatTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
      type: object
    v1SpectroClusterHeartbeat:
      description: Cluster heartbeat message
      properties:
        agentVersion:
          description: Version of the agent
          type: string
        message:
          description: Heartbeat message
          type: string
      required:
      - agentVersion
      type: object
    v1SpectroClusterHybridPoolsMetadata:
      description: Metadata of clusters launched as hybrid machine pools
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          cloudType: cloudType
          hybridPools:
          - uid: uid
            clusterUid: clusterUid
            cloudType: cloudType
            name: name
            cloudConfigUid: cloudConfigUid
            status:
              health:
                isHeartBeatFailed: true
                state: state
              state: state
          - uid: uid
            clusterUid: clusterUid
            cloudType: cloudType
            name: name
            cloudConfigUid: cloudConfigUid
            status:
              health:
                isHeartBeatFailed: true
                state: state
              state: state
        status:
          virtual:
            clusterGroup:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            lifecycleStatus:
              msg: msg
              status: Pausing
            appDeployments:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            hostCluster:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            virtualClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            state: state
          profileStatus:
            hasUserMacros: true
          fips:
            mode: none
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          packs:
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          upgrades:
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          apiEndpoints:
          - port: 0
            host: host
          - port: 0
            host: host
          spcApply:
            actionType: DownloadAndInstall
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            crdDigest: crdDigest
            spcHash: spcHash
            spcInfraHash: spcInfraHash
            canBeApplied: true
            patchAppliedTime: 2000-01-23T04:56:07.000+00:00
          abortTimestamp: 2000-01-23T04:56:07.000+00:00
          clusterImport:
            isBrownfield: true
            importLink: importLink
            state: state
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            geoLoc:
              latitude: 0.8008281904610115
              longitude: 6.027456183070403
            countryName: countryName
          state: state
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          addOnServices:
          - endpoint: endpoint
            name: name
          - endpoint: endpoint
            name: name
          repave:
            state: Pending
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterHybridPoolsMetadata_spec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterStatus"
      type: object
    v1SpectroClusterK8sCertificate:
      description: K8 Certificates for all the cluster's control plane nodes
      properties:
        machineCertificates:
          items:
            $ref: "#/components/schemas/v1K8MachineCertificate"
          type: array
      type: object
    v1SpectroClusterKubeCtlRedirect:
      description: Active resources of tenant
      example:
        redirectUri: redirectUri
      properties:
        redirectUri:
          type: string
      type: object
    v1SpectroClusterLocationInputEntity:
      description: Cluster location
      properties:
        location:
          $ref: "#/components/schemas/v1ClusterLocation"
      type: object
    v1SpectroClusterMeta:
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterType: clusterType
          cloudType: cloudType
          cloudRegion: cloudRegion
          archType:
          - amd64
          - amd64
          cloudAccountUid: cloudAccountUid
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            coordinates:
            - 5.637376656633329
            - 5.637376656633329
            countryName: countryName
          tags:
          - tags
          - tags
        status:
          state: state
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterMetaSpec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterMetaStatus"
      type: object
    v1SpectroClusterMetaSpec:
      description: Spectro cluster meta summary
      example:
        clusterType: clusterType
        cloudType: cloudType
        cloudRegion: cloudRegion
        archType:
        - amd64
        - amd64
        cloudAccountUid: cloudAccountUid
        location:
          regionCode: regionCode
          countryCode: countryCode
          regionName: regionName
          coordinates:
          - 5.637376656633329
          - 5.637376656633329
          countryName: countryName
        tags:
        - tags
        - tags
      properties:
        archType:
          description: Architecture type of the cluster
          items:
            $ref: "#/components/schemas/v1ArchType"
          type: array
        cloudAccountUid:
          description: Unique identifier for the cloud account used by this cluster
          type: string
        cloudRegion:
          description: Geographic region where the cluster is deployed
          type: string
        cloudType:
          description: Infrastructure provider type for the cluster
          type: string
        clusterType:
          description: Type classification of the cluster
          type: string
        location:
          $ref: "#/components/schemas/v1ClusterMetaSpecLocation"
        tags:
          description: User-defined labels associated with this cluster
          items:
            type: string
          type: array
      type: object
    v1SpectroClusterMetaStatus:
      example:
        state: state
      properties:
        state:
          description: Current state of the cluster
          type: string
      required:
      - state
      type: object
    v1SpectroClusterMetaSummary:
      description: Spectro cluster meta summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        specSummary:
          clusterType: clusterType
          importMode: importMode
          cloudType: cloudType
          cloudRegion: cloudRegion
          archType:
          - amd64
          - amd64
          cloudAccountUid: cloudAccountUid
          projectMeta:
            uid: uid
            name: name
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            coordinates:
            - 5.637376656633329
            - 5.637376656633329
            countryName: countryName
          tags:
          - tags
          - tags
        status:
          cost:
            total: 0.8008281904610115
          fips:
            mode: none
          health:
            isHeartBeatFailed: true
            state: state
          state: state
          updates:
            isUpdatesPending: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        specSummary:
          $ref: "#/components/schemas/v1SpectroClusterMetaSummary_specSummary"
        status:
          $ref: "#/components/schemas/v1SpectroClusterMetaSummary_status"
      type: object
    v1SpectroClusterMetadataFilterSpec:
      description: Spectro cluster filter spec
      properties:
        environment:
          type: string
        includeVirtual:
          default: false
          type: boolean
        isAlloy:
          default: false
          description: isAlloy is renamed to isImported
          type: boolean
        isImportReadOnly:
          default: true
          type: boolean
        isImported:
          default: false
          type: boolean
        name:
          $ref: "#/components/schemas/v1FilterString"
        state:
          type: string
      type: object
    v1SpectroClusterMetadataSpec:
      description: Spectro cluster metadata spec
      properties:
        filter:
          $ref: "#/components/schemas/v1SpectroClusterMetadataFilterSpec"
        sort:
          enum:
          - environment
          - state
          - name
          nullable: true
          type: string
      type: object
    v1SpectroClusterMetrics:
      description: Spectro cluster metrics
      example:
        memory:
          request: 7.061401241503109
          total: 9.301444243932576
          unit: unit
          usage: 3.616076749251911
          limit: 2.3021358869347655
          lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
        cpu:
          request: 7.061401241503109
          total: 9.301444243932576
          unit: unit
          usage: 3.616076749251911
          limit: 2.3021358869347655
          lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
      properties:
        cpu:
          $ref: "#/components/schemas/v1ComputeMetrics"
        memory:
          $ref: "#/components/schemas/v1ComputeMetrics"
      type: object
    v1SpectroClusterMigration:
      description: Spectro cluster migration status
      properties:
        database:
          $ref: "#/components/schemas/v1MgmtMigrationStatuses"
        state:
          type: string
          x-omitempty: false
        tenant:
          $ref: "#/components/schemas/v1SpectroTenantMigration"
      type: object
    v1SpectroClusterOidcClaims:
      example:
        Email: Email
        FirstName: FirstName
        SpectroTeam: SpectroTeam
        LastName: LastName
      properties:
        Email:
          type: string
          x-omitempty: false
        FirstName:
          type: string
          x-omitempty: false
        LastName:
          type: string
          x-omitempty: false
        SpectroTeam:
          type: string
          x-omitempty: false
      type: object
    v1SpectroClusterOidcIssuerTlsSpec:
      example:
        insecureSkipVerify: false
        caCertificateBase64: caCertificateBase64
      properties:
        caCertificateBase64:
          type: string
          x-omitempty: false
        insecureSkipVerify:
          default: false
          type: boolean
          x-omitempty: false
      type: object
    v1SpectroClusterOidcSpec:
      example:
        issuerTls:
          insecureSkipVerify: false
          caCertificateBase64: caCertificateBase64
        clientId: clientId
        issuerUrl: issuerUrl
        clientSecret: clientSecret
        scopes:
        - scopes
        - scopes
        requiredClaims:
          Email: Email
          FirstName: FirstName
          SpectroTeam: SpectroTeam
          LastName: LastName
      properties:
        clientId:
          type: string
          x-omitempty: false
        clientSecret:
          type: string
          x-omitempty: false
        issuerTls:
          $ref: "#/components/schemas/v1SpectroClusterOidcIssuerTlsSpec"
        issuerUrl:
          description: the issuer is the URL identifier for the service
          type: string
          x-omitempty: false
        requiredClaims:
          $ref: "#/components/schemas/v1SpectroClusterOidcClaims"
        scopes:
          items:
            type: string
          type: array
          x-omitempty: false
      type: object
    v1SpectroClusterPackCondition:
      properties:
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          enum:
          - ReadyForInstall
          - Installed
          - Ready
          - Error
          - UpgradeAvailable
          - WaitingForOtherLayers
          type: string
      type: object
    v1SpectroClusterPackConfigList:
      example:
        items:
        - spec:
            packUid: packUid
            scope: scope
            values: values
            manifests:
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            name: name
            tag: tag
            associatedObject: associatedObject
            type: type
            version: version
            isValuesOverridden: true
        - spec:
            packUid: packUid
            scope: scope
            values: values
            manifests:
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            - parentUid: parentUid
              uid: uid
              isOverridden: true
              digest: digest
              name: name
            name: name
            tag: tag
            associatedObject: associatedObject
            type: type
            version: version
            isValuesOverridden: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1PackConfig"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1SpectroClusterPackDiff:
      description: Cluster pack difference
      example:
        current:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
        diffConfigKeys:
        - diffConfigKeys
        - diffConfigKeys
        target:
          schema:
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          - listOptions:
            - listOptions
            - listOptions
            regex: regex
            readonly: true
            hints:
            - hints
            - hints
            format: format
            name: name
            type: type
            required: true
          registryUid: registryUid
          server: server
          values: values
          annotations:
            key: annotations
          isInvalid: true
          params:
            key: params
          type: spectro
          version: version
          layer: kernel
          packUid: packUid
          presets:
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          - add: add
            displayName: displayName
            name: name
            remove:
            - remove
            - remove
            group: group
          inValidReason: inValidReason
          digest: digest
          manifests:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          name: name
          logo: logo
          tag: tag
      properties:
        current:
          $ref: "#/components/schemas/v1PackRef"
        diffConfigKeys:
          items:
            type: string
          type: array
        target:
          $ref: "#/components/schemas/v1PackRef"
      type: object
    v1SpectroClusterPackProperties:
      description: Cluster pack properties response
      example:
        yaml: yaml
      properties:
        yaml:
          type: string
          x-omitempty: false
      type: object
    v1SpectroClusterPackStatusEntity:
      properties:
        condition:
          $ref: "#/components/schemas/v1SpectroClusterPackCondition"
        endTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          description: Pack name
          type: string
        profileUid:
          description: Cluster profile uid
          type: string
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          $ref: "#/components/schemas/v1PackType"
        version:
          description: pack version
          type: string
      type: object
    v1SpectroClusterPacksEntity:
      description: Cluster entity for pack refs validate
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      type: object
    v1SpectroClusterPacksStatusEntity:
      properties:
        packs:
          items:
            $ref: "#/components/schemas/v1SpectroClusterPackStatusEntity"
          type: array
      type: object
    v1SpectroClusterPairMeta:
      description: Spectro cluster meta
      properties:
        localClusterToken:
          description: Cluster token in the local UI
          type: string
        localClusterUid:
          description: Cluster uid in the local UI
          type: string
        name:
          description: Spectro cluster name
          type: string
        uid:
          description: Spectro cluster uid
          type: string
      type: object
    v1SpectroClusterPairStatus:
      description: Spectro cluster status
      properties:
        pairingClusterName:
          description: Cluster Name associated to the pairing request
          type: string
        pairingClusterUid:
          description: Cluster UID associated to the pairing request
          type: string
        state:
          description: Spectro cluster status
          type: string
      type: object
    v1SpectroClusterPairingRequestMeta:
      description: Returns spectro cluster pair meta
      properties:
        cloudType:
          description: Cluster cloud type
          type: string
        clusterUid:
          description: Spectro cluster uid
          type: string
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        localClusterUid:
          description: Cluster uid in the local UI
          type: string
        name:
          description: Spectro cluster name
          type: string
        pairingUid:
          description: Cluster pairing uid
          type: string
        state:
          description: State of the spectro cluster pairing request
          type: string
      type: object
    v1SpectroClusterPairingRequestMetas:
      description: Spectro cluster pairing request meta
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SpectroClusterPairingRequestMeta"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1SpectroClusterPolicies:
      description: Cluster policies
      properties:
        backupPolicy:
          $ref: "#/components/schemas/v1ClusterBackupConfig"
        scanPolicy:
          $ref: "#/components/schemas/v1ClusterComplianceScheduleConfig"
      type: object
    v1SpectroClusterProfile:
      description: Cluster profile response
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          cloudType: cloudType
          relatedObject:
            uid: uid
            kind: kind
            name: name
          type: type
          packs:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              template:
                manifest: manifest
                values: values
                parameters:
                  inputParameters:
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  outputParameters:
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
              registryUid: registryUid
              eol: eol
              addonSubType: addonSubType
              displayName: displayName
              values: values
              addonType: addonType
              annotations:
                key: annotations
              type: spectro
              version: version
              layer: kernel
              logoUrl: logoUrl
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              cloudTypes:
              - cloudTypes
              - cloudTypes
              group: group
            status: "{}"
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              template:
                manifest: manifest
                values: values
                parameters:
                  inputParameters:
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  outputParameters:
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
                  - listOptions:
                    - listOptions
                    - listOptions
                    hidden: true
                    displayName: displayName
                    format: format
                    description: description
                    optional: true
                    readOnly: true
                    targetKey: targetKey
                    type: type
                    regex: regex
                    name: name
                    options:
                      key:
                        description: description
                        label: label
                        dependencies:
                        - name: name
                          readOnly: true
                          layer: layer
                        - name: name
                          readOnly: true
                          layer: layer
                    value: value
              registryUid: registryUid
              eol: eol
              addonSubType: addonSubType
              displayName: displayName
              values: values
              addonType: addonType
              annotations:
                key: annotations
              type: spectro
              version: version
              layer: kernel
              logoUrl: logoUrl
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              cloudTypes:
              - cloudTypes
              - cloudTypes
              group: group
            status: "{}"
          version: 0
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterProfileSpec"
      type: object
    v1SpectroClusterProfileEntity:
      description: Cluster profile request payload
      properties:
        packValues:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1PackValuesEntity"
          type: array
          uniqueItems: true
        replaceWithProfile:
          description: Cluster profile uid to be replaced with new profile
          type: string
        uid:
          description: Cluster profile uid
          type: string
        variables:
          items:
            $ref: "#/components/schemas/v1SpectroClusterVariable"
          type: array
      type: object
    v1SpectroClusterProfileList:
      example:
        profiles:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            cloudType: cloudType
            relatedObject:
              uid: uid
              kind: kind
              name: name
            type: type
            packs:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                template:
                  manifest: manifest
                  values: values
                  parameters:
                    inputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    outputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                registryUid: registryUid
                eol: eol
                addonSubType: addonSubType
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                template:
                  manifest: manifest
                  values: values
                  parameters:
                    inputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    outputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                registryUid: registryUid
                eol: eol
                addonSubType: addonSubType
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            version: 0
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            cloudType: cloudType
            relatedObject:
              uid: uid
              kind: kind
              name: name
            type: type
            packs:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                template:
                  manifest: manifest
                  values: values
                  parameters:
                    inputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    outputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                registryUid: registryUid
                eol: eol
                addonSubType: addonSubType
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                template:
                  manifest: manifest
                  values: values
                  parameters:
                    inputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    outputParameters:
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                    - listOptions:
                      - listOptions
                      - listOptions
                      hidden: true
                      displayName: displayName
                      format: format
                      description: description
                      optional: true
                      readOnly: true
                      targetKey: targetKey
                      type: type
                      regex: regex
                      name: name
                      options:
                        key:
                          description: description
                          label: label
                          dependencies:
                          - name: name
                            readOnly: true
                            layer: layer
                          - name: name
                            readOnly: true
                            layer: layer
                      value: value
                registryUid: registryUid
                eol: eol
                addonSubType: addonSubType
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            version: 0
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfile"
          type: array
      required:
      - profiles
      type: object
    v1SpectroClusterProfileSpec:
      description: Cluster profile spec response
      example:
        cloudType: cloudType
        relatedObject:
          uid: uid
          kind: kind
          name: name
        type: type
        packs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            template:
              manifest: manifest
              values: values
              parameters:
                inputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                outputParameters:
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
                - listOptions:
                  - listOptions
                  - listOptions
                  hidden: true
                  displayName: displayName
                  format: format
                  description: description
                  optional: true
                  readOnly: true
                  targetKey: targetKey
                  type: type
                  regex: regex
                  name: name
                  options:
                    key:
                      description: description
                      label: label
                      dependencies:
                      - name: name
                        readOnly: true
                        layer: layer
                      - name: name
                        readOnly: true
                        layer: layer
                  value: value
            registryUid: registryUid
            eol: eol
            addonSubType: addonSubType
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
        version: 0
      properties:
        cloudType:
          description: Cluster profile cloud type
          type: string
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1ClusterProfilePacksEntity"
          type: array
          uniqueItems: true
        relatedObject:
          $ref: "#/components/schemas/v1ObjectReference"
        type:
          description: "Cluster profile type [ \"cluster\", \"infra\", \"add-on\"\
            , \"system\" ]"
          type: string
        version:
          description: Cluster profile version
          format: int32
          type: integer
      type: object
    v1SpectroClusterProfileUpdates:
      example:
        profiles:
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterProfileValidatorResponse:
      description: Cluster profile validator response
      example:
        uid: uid
        packs:
          results:
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
      properties:
        packs:
          $ref: "#/components/schemas/v1ConstraintValidatorResponse"
        uid:
          description: Cluster profile uid
          type: string
      type: object
    v1SpectroClusterProfiles:
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
        spcApplySettings:
          $ref: "#/components/schemas/v1SpcApplySettings"
      required:
      - profiles
      type: object
    v1SpectroClusterProfilesDeleteEntity:
      properties:
        profileUids:
          description: Cluster's profile uid list
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterProfilesPacksManifests:
      example:
        profiles:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            packs:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                eol: eol
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  name: name
                  content: content
                - uid: uid
                  name: name
                  content: content
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                eol: eol
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  name: name
                  content: content
                - uid: uid
                  name: name
                  content: content
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            packs:
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                eol: eol
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  name: name
                  content: content
                - uid: uid
                  name: name
                  content: content
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
            - metadata:
                uid: uid
                creationTimestamp: 2000-01-23T04:56:07.000+00:00
                name: name
                annotations:
                  key: annotations
                lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
                deletionTimestamp: 2000-01-23T04:56:07.000+00:00
                labels:
                  key: labels
              spec:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                eol: eol
                displayName: displayName
                values: values
                addonType: addonType
                annotations:
                  key: annotations
                type: spectro
                version: version
                layer: kernel
                logoUrl: logoUrl
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                digest: digest
                manifests:
                - uid: uid
                  name: name
                  content: content
                - uid: uid
                  name: name
                  content: content
                name: name
                cloudTypes:
                - cloudTypes
                - cloudTypes
                group: group
              status: "{}"
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1ClusterProfilePacksManifests"
          type: array
      required:
      - profiles
      type: object
    v1SpectroClusterProfilesParamReferenceEntity:
      description: Cluster profiles param reference entity
      properties:
        references:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterProfilesResolvedValues:
      description: Cluster profiles resolved values response
      example:
        profiles:
        - uid: uid
          resolved:
            key: resolved
        - uid: uid
          resolved:
            key: resolved
      properties:
        profiles:
          items:
            $ref: "#/components/schemas/v1ProfileResolvedValues"
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterProjectCleanedResource:
      description: List of cleaned project spectro cluster resources
      properties:
        resources:
          items:
            type: string
          type: array
      type: object
    v1SpectroClusterProjectCleanupValidateEntity:
      description: Cluster duration thresholds
      properties:
        deletingClusterDurationThresholdInMin:
          format: int32
          type: integer
        provisioningClusterDurationThresholdInMin:
          format: int32
          type: integer
      type: object
    v1SpectroClusterRate:
      description: Cluster estimated rate information
      example:
        resourceMetadata:
          instanceTypes:
            key:
              cost:
                price:
                - onDemand: 0.8008281904610115
                  os: linux
                  spot: 6.027456183070403
                - onDemand: 0.8008281904610115
                  os: linux
                  spot: 6.027456183070403
              memory: 5.637376656633329
              price: 2.3021358869347655
              nonSupportedZones:
              - nonSupportedZones
              - nonSupportedZones
              supportedArchitectures:
              - supportedArchitectures
              - supportedArchitectures
              cpu: 1.4658129805029452
              category: category
              type: type
              gpu: 5.962133916683182
          storageTypes:
            key:
              throughputCost:
                discountedUsage: discountedUsage
                price:
                - price: price
                  limit: limit
                - price: price
                  limit: limit
              cost:
                discountedUsage: discountedUsage
                price:
                - price: price
                  limit: limit
                - price: price
                  limit: limit
              iopsCost:
                discountedUsage: discountedUsage
                price:
                - price: price
                  limit: limit
                - price: price
                  limit: limit
              kind: kind
              name: name
        rate:
          compute: 9.301444243932576
          total: 2.027123023002322
          storage: 3.616076749251911
        name: name
        machinePools:
        - rate:
            compute:
              rate: 6.027456183070403
              type: type
            total: 7.061401241503109
            storage:
            - sizeGB: 5.637376656633329
              rate: 5.962133916683182
              iops: 1.4658129805029452
              throughput: 2.3021358869347655
              type: type
            - sizeGB: 5.637376656633329
              rate: 5.962133916683182
              iops: 1.4658129805029452
              throughput: 2.3021358869347655
              type: type
          name: name
          nodesCount: 0
        - rate:
            compute:
              rate: 6.027456183070403
              type: type
            total: 7.061401241503109
            storage:
            - sizeGB: 5.637376656633329
              rate: 5.962133916683182
              iops: 1.4658129805029452
              throughput: 2.3021358869347655
              type: type
            - sizeGB: 5.637376656633329
              rate: 5.962133916683182
              iops: 1.4658129805029452
              throughput: 2.3021358869347655
              type: type
          name: name
          nodesCount: 0
      properties:
        machinePools:
          items:
            $ref: "#/components/schemas/v1MachinePoolRate"
          type: array
        name:
          type: string
        rate:
          $ref: "#/components/schemas/v1TotalClusterRate"
        resourceMetadata:
          $ref: "#/components/schemas/v1CloudResourceMetadata"
      type: object
    v1SpectroClusterRegistrationTokenEntity:
      description: Spectrocluster registration token entity
      properties:
        registrationToken:
          description: Registration token to reject the pairing request
          type: string
      type: object
    v1SpectroClusterRepave:
      description: Spectro cluster repave status information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          spectroClusterUid: spectroClusterUid
          reasons:
          - code: code
            message: message
            pack:
              current:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              diffConfigKeys:
              - diffConfigKeys
              - diffConfigKeys
              target:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
          - code: code
            message: message
            pack:
              current:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              diffConfigKeys:
              - diffConfigKeys
              - diffConfigKeys
              target:
                schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
          source: user
        status:
          repaveTransitionTime: 2000-01-23T04:56:07.000+00:00
          state: Pending
          message: message
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterRepaveSpec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterRepaveStatus"
      type: object
    v1SpectroClusterRepaveReason:
      description: Cluster repave reason description
      example:
        code: code
        message: message
        pack:
          current:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          diffConfigKeys:
          - diffConfigKeys
          - diffConfigKeys
          target:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
      properties:
        code:
          type: string
        message:
          type: string
        pack:
          $ref: "#/components/schemas/v1SpectroClusterPackDiff"
      type: object
    v1SpectroClusterRepaveSpec:
      example:
        spectroClusterUid: spectroClusterUid
        reasons:
        - code: code
          message: message
          pack:
            current:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            diffConfigKeys:
            - diffConfigKeys
            - diffConfigKeys
            target:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
        - code: code
          message: message
          pack:
            current:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            diffConfigKeys:
            - diffConfigKeys
            - diffConfigKeys
            target:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
        source: user
      properties:
        reasons:
          description: Spectro cluster repave reasons
          items:
            $ref: "#/components/schemas/v1SpectroClusterRepaveReason"
          type: array
        source:
          $ref: "#/components/schemas/v1ClusterRepaveSource"
        spectroClusterUid:
          type: string
      type: object
    v1SpectroClusterRepaveStatus:
      example:
        repaveTransitionTime: 2000-01-23T04:56:07.000+00:00
        state: Pending
        message: message
      properties:
        message:
          type: string
        repaveTransitionTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          $ref: "#/components/schemas/v1ClusterRepaveState"
      type: object
    v1SpectroClusterRepaveValidationResponse:
      description: Cluster repave validation response
      example:
        reasons:
        - code: code
          message: message
          pack:
            current:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            diffConfigKeys:
            - diffConfigKeys
            - diffConfigKeys
            target:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
        - code: code
          message: message
          pack:
            current:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            diffConfigKeys:
            - diffConfigKeys
            - diffConfigKeys
            target:
              schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
        isRepaveRequired: true
      properties:
        isRepaveRequired:
          description: If true then the pack changes can cause cluster repave
          type: boolean
          x-omitempty: false
        reasons:
          items:
            $ref: "#/components/schemas/v1SpectroClusterRepaveReason"
          type: array
      type: object
    v1SpectroClusterRevision:
      description: Revision specification details for a cluster
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterSpec"
      type: object
    v1SpectroClusterRevisionMeta:
      description: Revision spec uid along with the creationTimestamp for the revision
      properties:
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        uid:
          description: The unique id of the spc revision document
          type: string
      type: object
    v1SpectroClusterRevisionMetaList:
      properties:
        spcRevisions:
          items:
            $ref: "#/components/schemas/v1SpectroClusterRevisionMeta"
          type: array
      type: object
    v1SpectroClusterSortFields:
      enum:
      - environment
      - clusterName
      - healthState
      - creationTimestamp
      - lastModifiedTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1SpectroClusterSortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1SpectroClusterSortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1SpectroClusterSpec:
      description: SpectroClusterSpec defines the desired state of SpectroCluster
      example:
        clusterType: PureManage
        clusterProfileTemplates:
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        - packServerSecret: packServerSecret
          uid: uid
          cloudType: cloudType
          profileVersion: profileVersion
          relatedObject:
            uid: uid
            kind: kind
            name: name
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
          packServerRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        cloudType: cloudType
        clusterConfig:
          clusterMetaAttribute: clusterMetaAttribute
          machineManagementConfig:
            osPatchConfig:
              schedule: schedule
              onDemandPatchAfter: 2000-01-23T04:56:07.000+00:00
              patchOnBoot: true
              rebootIfRequired: true
          hostClusterConfig:
            clusterEndpoint:
              type: Ingress
              config:
                ingressConfig:
                  port: 6
                  host: host
                loadBalancerConfig:
                  externalIPs:
                  - externalIPs
                  - externalIPs
                  loadBalancerSourceRanges:
                  - loadBalancerSourceRanges
                  - loadBalancerSourceRanges
                  externalTrafficPolicy: externalTrafficPolicy
            clusterGroup:
              uid: uid
              kind: kind
              name: name
            isHostCluster: false
            hostCluster:
              uid: uid
              kind: kind
              name: name
          clusterResources:
            rbacs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            namespaces:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
          lifecycleConfig:
            pause: false
          controlPlaneHealthCheckTimeout: controlPlaneHealthCheckTimeout
          updateWorkerPoolsInParallel: true
          clusterRbac:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          hybridClusterConfig:
            clusterUid: clusterUid
            enable: true
            hybridMachinePoolClusterRefs:
            - uid: uid
              cloudType: edge-native
            - uid: uid
              cloudType: edge-native
          machineHealthConfig:
            nodeReadyHealthCheckDuration: nodeReadyHealthCheckDuration
            networkReadyHealthCheckDuration: networkReadyHealthCheckDuration
            healthCheckMaxUnhealthy: healthCheckMaxUnhealthy
        cloudConfigRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudConfigRef:
          $ref: "#/components/schemas/v1ObjectReference"
        cloudType:
          type: string
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfig"
        clusterProfileTemplates:
          description: "When a cluster created from a clusterprofile at t1, ClusterProfileTemplate\
            \ is a copy of the draft version or latest published version of the clusterprofileSpec.clusterprofileTemplate\
            \ then clusterprofile may evolve to v2 at t2, but before user decide to\
            \ upgrade the cluster, it will stay as it is when user decide to upgrade,\
            \ clusterProfileTemplate will be updated from the clusterprofile pointed\
            \ by ClusterProfileRef"
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
        clusterType:
          enum:
          - PureManage
          - AlloyMonitor
          - AlloyAssist
          - AlloyExtend
          type: string
      type: object
    v1SpectroClusterState:
      description: Spectrocluster state entity
      example:
        state: state
      properties:
        state:
          description: Spectrocluster state
          type: string
      type: object
    v1SpectroClusterStatus:
      description: SpectroClusterStatus
      example:
        virtual:
          clusterGroup:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          lifecycleStatus:
            msg: msg
            status: Pausing
          appDeployments:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          hostCluster:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          virtualClusters:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          state: state
        profileStatus:
          hasUserMacros: true
        fips:
          mode: none
        services:
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        packs:
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        upgrades:
        - reason:
          - reason
          - reason
          timestamp: 2000-01-23T04:56:07.000+00:00
        - reason:
          - reason
          - reason
          timestamp: 2000-01-23T04:56:07.000+00:00
        apiEndpoints:
        - port: 0
          host: host
        - port: 0
          host: host
        spcApply:
          actionType: DownloadAndInstall
          lastModifiedTime: 2000-01-23T04:56:07.000+00:00
          crdDigest: crdDigest
          spcHash: spcHash
          spcInfraHash: spcInfraHash
          canBeApplied: true
          patchAppliedTime: 2000-01-23T04:56:07.000+00:00
        abortTimestamp: 2000-01-23T04:56:07.000+00:00
        clusterImport:
          isBrownfield: true
          importLink: importLink
          state: state
        location:
          regionCode: regionCode
          countryCode: countryCode
          regionName: regionName
          geoLoc:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          countryName: countryName
        state: state
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        addOnServices:
        - endpoint: endpoint
          name: name
        - endpoint: endpoint
          name: name
        repave:
          state: Pending
      properties:
        abortTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        addOnServices:
          items:
            $ref: "#/components/schemas/v1SpectroClusterAddOnService"
          type: array
        apiEndpoints:
          items:
            $ref: "#/components/schemas/v1APIEndpoint"
          type: array
        clusterImport:
          $ref: "#/components/schemas/v1ClusterImport"
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        fips:
          $ref: "#/components/schemas/v1ClusterFips"
        location:
          $ref: "#/components/schemas/v1ClusterLocation"
        packs:
          items:
            $ref: "#/components/schemas/v1ClusterPackStatus"
          type: array
        profileStatus:
          $ref: "#/components/schemas/v1ProfileStatus"
        repave:
          $ref: "#/components/schemas/v1ClusterRepaveStatus"
        services:
          items:
            $ref: "#/components/schemas/v1LoadBalancerService"
          type: array
        spcApply:
          $ref: "#/components/schemas/v1SpcApply"
        state:
          description: current operational state
          type: string
        upgrades:
          items:
            $ref: "#/components/schemas/v1Upgrades"
          type: array
        virtual:
          $ref: "#/components/schemas/v1Virtual"
      type: object
    v1SpectroClusterStatusEntity:
      description: Spectrocluster status entity
      example:
        status:
          state: state
      properties:
        status:
          $ref: "#/components/schemas/v1SpectroClusterState"
      type: object
    v1SpectroClusterSummary:
      description: Spectro cluster summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        specSummary:
          cloudConfig:
            uid: uid
            hybridMachinePools:
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            cloudType: cloudType
            machinePools:
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
          clusterProfileTemplates:
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          clusterProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          clusterConfig:
            hostClusterConfig:
              clusterGroup:
                uid: uid
                kind: kind
                name: name
          projectMeta:
            uid: uid
            name: name
          cloudAccountMeta:
            uid: uid
            name: name
          archTypes:
          - amd64
          - amd64
        status:
          virtual:
            clusterGroup:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            lifecycleStatus:
              msg: msg
              status: Pausing
            appDeployments:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            hostCluster:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            virtualClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            state: state
          cost:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          clusterImport:
            isBrownfield: true
            importLink: importLink
            state: state
          fips:
            mode: none
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            agentVersion: agentVersion
            state: state
            conditions:
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            coordinates:
            - 5.637376656633329
            - 5.637376656633329
            countryName: countryName
          metrics:
            memory:
              request: 7.061401241503109
              total: 9.301444243932576
              unit: unit
              usage: 3.616076749251911
              limit: 2.3021358869347655
              lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            cpu:
              request: 7.061401241503109
              total: 9.301444243932576
              unit: unit
              usage: 3.616076749251911
              limit: 2.3021358869347655
              lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
          state: state
          hourlyRate:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          notifications:
            isAvailable: true
          repave:
            state: Pending
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        specSummary:
          $ref: "#/components/schemas/v1SpectroClusterSummary_specSummary"
        status:
          $ref: "#/components/schemas/v1SpectroClusterSummary_status"
      type: object
    v1SpectroClusterSummarySpec:
      description: Spectro cluster filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1SpectroClusterFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1SpectroClusterSortSpec"
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterTags:
      example:
        tags:
        - tags
        - tags
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    v1SpectroClusterToken:
      description: Returns spectro cluster token
      properties:
        authToken:
          description: Spectro cluster auth token
          type: string
      type: object
    v1SpectroClusterUidStatusSummary:
      description: Spectro cluster status summary
      example:
        virtual:
          clusterGroup:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          lifecycleStatus:
            msg: msg
            status: Pausing
          appDeployments:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          hostCluster:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          virtualClusters:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          state: state
        cost:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        fips:
          mode: none
        health:
          lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
          agentVersion: agentVersion
          state: state
          conditions:
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
        services:
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        - host: host
          name: name
          ports:
          - protocol: protocol
            port: 0
          - protocol: protocol
            port: 0
        packs:
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        - profileUid: profileUid
          condition:
            reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          manifests:
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          - uid: uid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            name: name
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          type: type
          version: version
        upgrades:
        - reason:
          - reason
          - reason
          timestamp: 2000-01-23T04:56:07.000+00:00
        - reason:
          - reason
          - reason
          timestamp: 2000-01-23T04:56:07.000+00:00
        apiEndpoints:
        - port: 0
          host: host
        - port: 0
          host: host
        spcApply:
          actionType: DownloadAndInstall
          lastModifiedTime: 2000-01-23T04:56:07.000+00:00
          crdDigest: crdDigest
          spcHash: spcHash
          spcInfraHash: spcInfraHash
          canBeApplied: true
          patchAppliedTime: 2000-01-23T04:56:07.000+00:00
        abortTimestamp: 2000-01-23T04:56:07.000+00:00
        kubeMeta:
          hasManifest: true
          hasKubeConfig: true
          hasKubeConfigClient: true
          kubernetesVersion: kubernetesVersion
        clusterImport:
          isBrownfield: true
          importLink: importLink
          state: state
        location:
          regionCode: regionCode
          countryCode: countryCode
          regionName: regionName
          coordinates:
          - 5.637376656633329
          - 5.637376656633329
          countryName: countryName
        metrics:
          memory:
            request: 7.061401241503109
            total: 9.301444243932576
            unit: unit
            usage: 3.616076749251911
            limit: 2.3021358869347655
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
          cpu:
            request: 7.061401241503109
            total: 9.301444243932576
            unit: unit
            usage: 3.616076749251911
            limit: 2.3021358869347655
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
        state: state
        workspaces:
        - uid: uid
          kind: kind
          name: name
        - uid: uid
          kind: kind
          name: name
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        hourlyRate:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        addOnServices:
        - endpoint: endpoint
          name: name
        - endpoint: endpoint
          name: name
        notifications:
          isAvailable: true
      properties:
        abortTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        addOnServices:
          items:
            $ref: "#/components/schemas/v1SpectroClusterAddOnServiceSummary"
          type: array
        apiEndpoints:
          items:
            $ref: "#/components/schemas/v1APIEndpoint"
          type: array
        clusterImport:
          $ref: "#/components/schemas/v1ClusterImport"
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        cost:
          $ref: "#/components/schemas/v1ResourceCost"
        fips:
          $ref: "#/components/schemas/v1ClusterFips"
        health:
          $ref: "#/components/schemas/v1SpectroClusterHealthStatus"
        hourlyRate:
          $ref: "#/components/schemas/v1ResourceCost"
        kubeMeta:
          $ref: "#/components/schemas/v1KubeMeta"
        location:
          $ref: "#/components/schemas/v1ClusterMetaSpecLocation"
        metrics:
          $ref: "#/components/schemas/v1SpectroClusterMetrics"
        notifications:
          $ref: "#/components/schemas/v1ClusterNotificationStatus"
        packs:
          items:
            $ref: "#/components/schemas/v1ClusterPackStatus"
          type: array
        services:
          items:
            $ref: "#/components/schemas/v1LoadBalancerService"
          type: array
        spcApply:
          $ref: "#/components/schemas/v1SpcApply"
        state:
          description: current operational state
          type: string
        upgrades:
          items:
            $ref: "#/components/schemas/v1Upgrades"
          type: array
        virtual:
          $ref: "#/components/schemas/v1Virtual"
        workspaces:
          items:
            $ref: "#/components/schemas/v1ResourceReference"
          type: array
      type: object
    v1SpectroClusterUidSummary:
      description: Spectro cluster summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          cloudConfig:
            uid: uid
            hybridMachinePools:
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            cloudType: cloudType
            machinePools:
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
            - isControlPlane: true
              size: 1
              cloudType: cloudType
              healthy: 0
              infraProfileTemplate:
                uid: uid
                cloudType: cloudType
                scope: scope
                name: name
                type: type
                packs:
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                - schema:
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  - listOptions:
                    - listOptions
                    - listOptions
                    regex: regex
                    readonly: true
                    hints:
                    - hints
                    - hints
                    format: format
                    name: name
                    type: type
                    required: true
                  registryUid: registryUid
                  server: server
                  values: values
                  annotations:
                    key: annotations
                  isInvalid: true
                  params:
                    key: params
                  type: spectro
                  version: version
                  layer: kernel
                  packUid: packUid
                  presets:
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  - add: add
                    displayName: displayName
                    name: name
                    remove:
                    - remove
                    - remove
                    group: group
                  inValidReason: inValidReason
                  digest: digest
                  manifests:
                  - uid: uid
                    kind: kind
                    name: name
                  - uid: uid
                    kind: kind
                    name: name
                  name: name
                  logo: logo
                  tag: tag
                version: 0
              maintenanceMode: 6
              labels:
              - labels
              - labels
          clusterProfileTemplates:
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          - uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          clusterProfileTemplate:
            uid: uid
            cloudType: cloudType
            scope: scope
            name: name
            type: type
            packs:
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            - schema:
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              - listOptions:
                - listOptions
                - listOptions
                regex: regex
                readonly: true
                hints:
                - hints
                - hints
                format: format
                name: name
                type: type
                required: true
              registryUid: registryUid
              server: server
              values: values
              annotations:
                key: annotations
              isInvalid: true
              params:
                key: params
              type: spectro
              version: version
              layer: kernel
              packUid: packUid
              presets:
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              - add: add
                displayName: displayName
                name: name
                remove:
                - remove
                - remove
                group: group
              inValidReason: inValidReason
              digest: digest
              manifests:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              name: name
              logo: logo
              tag: tag
            version: 0
          archTypes:
          - amd64
          - amd64
          cloudaccount:
            uid: uid
            name: name
        status:
          virtual:
            clusterGroup:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            lifecycleStatus:
              msg: msg
              status: Pausing
            appDeployments:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            hostCluster:
              uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            virtualClusters:
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            - uid: uid
              projectUid: projectUid
              kind: kind
              tenantUid: tenantUid
              name: name
            state: state
          cost:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          fips:
            mode: none
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            agentVersion: agentVersion
            state: state
            conditions:
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
            - relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              message: message
              type: type
          services:
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          - host: host
            name: name
            ports:
            - protocol: protocol
              port: 0
            - protocol: protocol
              port: 0
          packs:
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          - profileUid: profileUid
            condition:
              reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastProbeTime: 2000-01-23T04:56:07.000+00:00
              status: status
            manifests:
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            - uid: uid
              condition:
                reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastProbeTime: 2000-01-23T04:56:07.000+00:00
                status: status
              name: name
            name: name
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            services:
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            - host: host
              name: name
              ports:
              - protocol: protocol
                port: 0
              - protocol: protocol
                port: 0
            type: type
            version: version
          upgrades:
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          - reason:
            - reason
            - reason
            timestamp: 2000-01-23T04:56:07.000+00:00
          apiEndpoints:
          - port: 0
            host: host
          - port: 0
            host: host
          spcApply:
            actionType: DownloadAndInstall
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            crdDigest: crdDigest
            spcHash: spcHash
            spcInfraHash: spcInfraHash
            canBeApplied: true
            patchAppliedTime: 2000-01-23T04:56:07.000+00:00
          abortTimestamp: 2000-01-23T04:56:07.000+00:00
          kubeMeta:
            hasManifest: true
            hasKubeConfig: true
            hasKubeConfigClient: true
            kubernetesVersion: kubernetesVersion
          clusterImport:
            isBrownfield: true
            importLink: importLink
            state: state
          location:
            regionCode: regionCode
            countryCode: countryCode
            regionName: regionName
            coordinates:
            - 5.637376656633329
            - 5.637376656633329
            countryName: countryName
          metrics:
            memory:
              request: 7.061401241503109
              total: 9.301444243932576
              unit: unit
              usage: 3.616076749251911
              limit: 2.3021358869347655
              lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            cpu:
              request: 7.061401241503109
              total: 9.301444243932576
              unit: unit
              usage: 3.616076749251911
              limit: 2.3021358869347655
              lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
          state: state
          workspaces:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          hourlyRate:
            cloud:
              compute: 0.8008281904610115
              total: 1.4658129805029452
              storage: 6.027456183070403
            total: 5.962133916683182
          addOnServices:
          - endpoint: endpoint
            name: name
          - endpoint: endpoint
            name: name
          notifications:
            isAvailable: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroClusterUidSummary_spec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterUidStatusSummary"
      type: object
    v1SpectroClusterUidUpgrades:
      description: Cluster status upgrades
      properties:
        upgrades:
          items:
            $ref: "#/components/schemas/v1Upgrades"
          type: array
      type: object
    v1SpectroClusterVMCloneEntity:
      properties:
        annotationFilters:
          description: Annotation filters
          items:
            type: string
          type: array
        cloneName:
          description: Cloning Virtual machine's name
          type: string
        labelFilters:
          description: Label filters
          items:
            type: string
          type: array
        newMacAddresses:
          additionalProperties:
            type: string
          description: "NewMacAddresses manually sets that target interfaces' mac\
            \ addresses. The key is the interface name and the value is the new mac\
            \ address. If this field is not specified, a new MAC address will be generated\
            \ automatically, as for any interface that is not included in this map"
          type: object
        newSMBiosSerial:
          description: "NewSMBiosSerial manually sets that target's SMbios serial.\
            \ If this field is not specified, a new serial will be generated automatically."
          type: string
      required:
      - cloneName
      type: object
    v1SpectroClusterValidatorResponse:
      description: Cluster validator response
      example:
        profiles:
        - uid: uid
          packs:
            results:
            - displayName: displayName
              name: name
              errors:
              - code: code
                message: message
              - code: code
                message: message
            - displayName: displayName
              name: name
              errors:
              - code: code
                message: message
              - code: code
                message: message
        - uid: uid
          packs:
            results:
            - displayName: displayName
              name: name
              errors:
              - code: code
                message: message
              - code: code
                message: message
            - displayName: displayName
              name: name
              errors:
              - code: code
                message: message
              - code: code
                message: message
        machinePools:
          results:
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
          - displayName: displayName
            name: name
            errors:
            - code: code
              message: message
            - code: code
              message: message
      properties:
        machinePools:
          $ref: "#/components/schemas/v1ConstraintValidatorResponse"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileValidatorResponse"
          type: array
          uniqueItems: true
      type: object
    v1SpectroClusterVariable:
      description: Variable with value which will be used within the packs of cluster
        profile
      example:
        name: name
        value: value
      properties:
        name:
          description: Variable name
          type: string
        value:
          description: Actual value of the variable to be used within the cluster
          type: string
      required:
      - name
      type: object
    v1SpectroClusterVariableResponse:
      description: Unique variable field with schema definition
      example:
        immutable: true
        regex: regex
        hidden: true
        defaultValue: defaultValue
        displayName: displayName
        isSensitive: true
        format: string
        name: name
        description: description
        value: value
        required: true
      properties:
        defaultValue:
          description: The default value of the variable
          type: string
          x-omitempty: false
        description:
          description: Variable description
          type: string
        displayName:
          description: Unique display name of the variable
          type: string
        format:
          $ref: "#/components/schemas/v1VariableFormat"
        hidden:
          description: "If true, then variable will be hidden for overriding the value.\
            \ By default the hidden flag will be set to false"
          type: boolean
          x-omitempty: false
        immutable:
          description: "If true, then variable value can't be editable. By default\
            \ the immutable flag will be set to false"
          type: boolean
          x-omitempty: false
        isSensitive:
          description: "If true, then default value will be masked. By default the\
            \ isSensitive flag will be set to false"
          type: boolean
          x-omitempty: false
        name:
          description: Variable name
          type: string
        regex:
          description: Regular expression pattern which the variable value must match
          type: string
        required:
          description: Flag to specify if the variable is optional or mandatory. If
            it is mandatory then default value must be provided
          type: boolean
          x-omitempty: false
        value:
          description: The user specified value of the variable
          type: string
          x-omitempty: false
      required:
      - name
      type: object
    v1SpectroClusterVariableUpdateEntity:
      description: List of cluster variables to be updated with profile uid
      example:
        profileUid: profileUid
        variables:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        profileUid:
          description: Profile uid to which the variable belongs
          type: string
        variables:
          description: List of variables with updated values
          items:
            $ref: "#/components/schemas/v1SpectroClusterVariable"
          type: array
          uniqueItems: true
      required:
      - profileUid
      type: object
    v1SpectroClusterVariables:
      description: List of cluster variables with schema belonging to a cluster
      example:
        profileUid: profileUid
        variables:
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          value: value
          required: true
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          value: value
          required: true
      properties:
        profileUid:
          description: Profile uid to which the cluster variable belongs
          type: string
        variables:
          description: List of cluster variables with schema
          items:
            $ref: "#/components/schemas/v1SpectroClusterVariableResponse"
          type: array
          uniqueItems: true
      required:
      - profileUid
      type: object
    v1SpectroClusters:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SpectroCluster"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1SpectroClustersAgentsNotifyEntity:
      description: SpectroClusters for which agents has to be notified
      properties:
        clusterUids:
          items:
            type: string
          type: array
        notifyAllClusters:
          type: boolean
      type: object
    v1SpectroClustersCostComputeSpec:
      description: Cluster's cost compute spec
      properties:
        clusterUids:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SpectroClustersHealth:
      description: Spectro Clusters health data
      example:
        running: 1
        healthy: 6
        unhealthy: 5
        errored: 0
      properties:
        errored:
          format: int32
          type: integer
          x-omitempty: false
        healthy:
          format: int32
          type: integer
          x-omitempty: false
        running:
          format: int32
          type: integer
          x-omitempty: false
        unhealthy:
          format: int32
          type: integer
          x-omitempty: false
      type: object
    v1SpectroClustersMeta:
      items:
        $ref: "#/components/schemas/v1SpectroClusterMeta"
      type: array
    v1SpectroClustersMetadata:
      example:
        items:
        - uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        - uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ObjectMeta"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1SpectroClustersMetadataSearch:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            clusterType: clusterType
            importMode: importMode
            cloudType: cloudType
            cloudRegion: cloudRegion
            archType:
            - amd64
            - amd64
            cloudAccountUid: cloudAccountUid
            projectMeta:
              uid: uid
              name: name
            location:
              regionCode: regionCode
              countryCode: countryCode
              regionName: regionName
              coordinates:
              - 5.637376656633329
              - 5.637376656633329
              countryName: countryName
            tags:
            - tags
            - tags
          status:
            cost:
              total: 0.8008281904610115
            fips:
              mode: none
            health:
              isHeartBeatFailed: true
              state: state
            state: state
            updates:
              isUpdatesPending: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            clusterType: clusterType
            importMode: importMode
            cloudType: cloudType
            cloudRegion: cloudRegion
            archType:
            - amd64
            - amd64
            cloudAccountUid: cloudAccountUid
            projectMeta:
              uid: uid
              name: name
            location:
              regionCode: regionCode
              countryCode: countryCode
              regionName: regionName
              coordinates:
              - 5.637376656633329
              - 5.637376656633329
              countryName: countryName
            tags:
            - tags
            - tags
          status:
            cost:
              total: 0.8008281904610115
            fips:
              mode: none
            health:
              isHeartBeatFailed: true
              state: state
            state: state
            updates:
              isUpdatesPending: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SpectroClusterMetaSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1SpectroClustersSummary:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            cloudConfig:
              uid: uid
              hybridMachinePools:
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              cloudType: cloudType
              machinePools:
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            clusterProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            clusterConfig:
              hostClusterConfig:
                clusterGroup:
                  uid: uid
                  kind: kind
                  name: name
            projectMeta:
              uid: uid
              name: name
            cloudAccountMeta:
              uid: uid
              name: name
            archTypes:
            - amd64
            - amd64
          status:
            virtual:
              clusterGroup:
                uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              lifecycleStatus:
                msg: msg
                status: Pausing
              appDeployments:
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              hostCluster:
                uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              virtualClusters:
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              state: state
            cost:
              cloud:
                compute: 0.8008281904610115
                total: 1.4658129805029452
                storage: 6.027456183070403
              total: 5.962133916683182
            clusterImport:
              isBrownfield: true
              importLink: importLink
              state: state
            fips:
              mode: none
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            location:
              regionCode: regionCode
              countryCode: countryCode
              regionName: regionName
              coordinates:
              - 5.637376656633329
              - 5.637376656633329
              countryName: countryName
            metrics:
              memory:
                request: 7.061401241503109
                total: 9.301444243932576
                unit: unit
                usage: 3.616076749251911
                limit: 2.3021358869347655
                lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
              cpu:
                request: 7.061401241503109
                total: 9.301444243932576
                unit: unit
                usage: 3.616076749251911
                limit: 2.3021358869347655
                lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            state: state
            hourlyRate:
              cloud:
                compute: 0.8008281904610115
                total: 1.4658129805029452
                storage: 6.027456183070403
              total: 5.962133916683182
            notifications:
              isAvailable: true
            repave:
              state: Pending
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          specSummary:
            cloudConfig:
              uid: uid
              hybridMachinePools:
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              cloudType: cloudType
              machinePools:
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
              - isControlPlane: true
                size: 1
                cloudType: cloudType
                healthy: 0
                infraProfileTemplate:
                  uid: uid
                  cloudType: cloudType
                  scope: scope
                  name: name
                  type: type
                  packs:
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  - schema:
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    - listOptions:
                      - listOptions
                      - listOptions
                      regex: regex
                      readonly: true
                      hints:
                      - hints
                      - hints
                      format: format
                      name: name
                      type: type
                      required: true
                    registryUid: registryUid
                    server: server
                    values: values
                    annotations:
                      key: annotations
                    isInvalid: true
                    params:
                      key: params
                    type: spectro
                    version: version
                    layer: kernel
                    packUid: packUid
                    presets:
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    - add: add
                      displayName: displayName
                      name: name
                      remove:
                      - remove
                      - remove
                      group: group
                    inValidReason: inValidReason
                    digest: digest
                    manifests:
                    - uid: uid
                      kind: kind
                      name: name
                    - uid: uid
                      kind: kind
                      name: name
                    name: name
                    logo: logo
                    tag: tag
                  version: 0
                maintenanceMode: 6
                labels:
                - labels
                - labels
            clusterProfileTemplates:
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            - uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            clusterProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            clusterConfig:
              hostClusterConfig:
                clusterGroup:
                  uid: uid
                  kind: kind
                  name: name
            projectMeta:
              uid: uid
              name: name
            cloudAccountMeta:
              uid: uid
              name: name
            archTypes:
            - amd64
            - amd64
          status:
            virtual:
              clusterGroup:
                uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              lifecycleStatus:
                msg: msg
                status: Pausing
              appDeployments:
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              hostCluster:
                uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              virtualClusters:
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              - uid: uid
                projectUid: projectUid
                kind: kind
                tenantUid: tenantUid
                name: name
              state: state
            cost:
              cloud:
                compute: 0.8008281904610115
                total: 1.4658129805029452
                storage: 6.027456183070403
              total: 5.962133916683182
            clusterImport:
              isBrownfield: true
              importLink: importLink
              state: state
            fips:
              mode: none
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              agentVersion: agentVersion
              state: state
              conditions:
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
              - relatedObject:
                  uid: uid
                  kind: spectrocluster
                  name: name
                message: message
                type: type
            location:
              regionCode: regionCode
              countryCode: countryCode
              regionName: regionName
              coordinates:
              - 5.637376656633329
              - 5.637376656633329
              countryName: countryName
            metrics:
              memory:
                request: 7.061401241503109
                total: 9.301444243932576
                unit: unit
                usage: 3.616076749251911
                limit: 2.3021358869347655
                lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
              cpu:
                request: 7.061401241503109
                total: 9.301444243932576
                unit: unit
                usage: 3.616076749251911
                limit: 2.3021358869347655
                lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
            state: state
            hourlyRate:
              cloud:
                compute: 0.8008281904610115
                total: 1.4658129805029452
                storage: 6.027456183070403
              total: 5.962133916683182
            notifications:
              isAvailable: true
            repave:
              state: Pending
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SpectroClusterSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1SpectroClustersUsageComputeSpec:
      description: Cluster's usage compute spec
      properties:
        clusterUids:
          items:
            type: string
          type: array
          uniqueItems: true
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SpectroCustomClusterEntity:
      description: Custom cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroCustomClusterEntity_spec"
      type: object
    v1SpectroEdgeNativeClusterEntity:
      description: EdgeNative cluster create or update request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroEdgeNativeClusterEntity_spec"
      type: object
    v1SpectroEdgeNativeClusterImportEntity:
      description: Spectro EdgeNative cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroEdgeNativeClusterPair:
      description: EdgeNative cluster pair response
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroEdgeNativeClusterPair_spec"
        status:
          $ref: "#/components/schemas/v1SpectroClusterPairStatus"
      type: object
    v1SpectroEdgeNativeClusterPairEntity:
      description: EdgeNative cluster pair create payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroEdgeNativeClusterPairEntity_spec"
      type: object
    v1SpectroEdgeNativeClusterRateEntity:
      description: Edge-native cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroEksClusterEntity:
      description: Spectro EKS cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroEksClusterEntity_spec"
      type: object
    v1SpectroEksClusterRateEntity:
      description: Spectro EKS cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EksClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EksMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroGcpClusterEntity:
      description: GCP cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroGcpClusterEntity_spec"
      type: object
    v1SpectroGcpClusterImportEntity:
      description: Spectro GCP cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroGcpClusterRateEntity:
      description: Gcp cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1GcpClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroGenericClusterImportEntity:
      description: Spectro generic cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroGenericClusterImportEntity_spec"
      type: object
    v1SpectroGenericClusterRateEntity:
      description: Generic cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1GenericClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1GenericMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroInstallerEntity:
      description: Spectro installer entity for create
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroInstallerEntity_spec"
        status:
          $ref: "#/components/schemas/v1InstallerStatus"
      type: object
    v1SpectroInstallerInputEntity:
      description: Spectro installer entity for create
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1SpectroInstallerStatus:
      description: spectro installer status
      properties:
        status:
          $ref: "#/components/schemas/v1InstallerStatus"
      type: object
    v1SpectroInstallers:
      description: List Spectro installers
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SpectroInstallerEntity"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      type: object
    v1SpectroMaasClusterEntity:
      description: Spectro Maas cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroMaasClusterEntity_spec"
      type: object
    v1SpectroMaasClusterImportEntity:
      description: Spectro maas cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroMaasClusterRateEntity:
      description: Maas cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1MaasClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1MaasMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroMgmt:
      description: Spectro management data
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroMgmtSpec"
        status:
          $ref: "#/components/schemas/v1SpectroMgmtStatus"
      type: object
    v1SpectroMgmtSpec:
      description: spectro management specifications
      properties:
        installerMode:
          type: string
        spectroClusterUid:
          type: string
        targetVersion:
          type: string
        version:
          type: string
      type: object
    v1SpectroMgmtStatus:
      description: spectro management status information
      properties:
        appVersions:
          items:
            $ref: "#/components/schemas/v1AppVersion"
          type: array
          uniqueItems: true
        isFailed:
          type: boolean
          x-omitempty: false
        lastUpdatedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          type: string
        messageLogs:
          items:
            type: string
          type: array
        state:
          type: string
        upgradeHistory:
          items:
            $ref: "#/components/schemas/v1SpectroMgmtUpgrade"
          type: array
          uniqueItems: true
      type: object
    v1SpectroMgmtUpgrade:
      description: spectro management upgrade logs
      properties:
        upgradeTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        version:
          type: string
      type: object
    v1SpectroMgmtUpgradePack:
      description: Spectro application management cluster upgrade pack information
      properties:
        diffMessage:
          description: Spectro application management cluster pack difference message
          type: string
        layer:
          description: Spectro application management cluster pack layer type
          type: string
        name:
          description: Spectro application management cluster pack name
          type: string
        registryUid:
          description: Spectro application management cluster pack registry unique
            identifier
          type: string
        type:
          description: Spectro application management cluster pack type
          type: string
        uid:
          description: Spectro application management cluster pack unique identifier
          type: string
        values:
          description: Spectro application management cluster pack values
          type: string
        version:
          description: Spectro application management cluster pack version
          type: string
      type: object
    v1SpectroMgmtUpgradeProfile:
      description: Spectro application management cluster upgrade pack information
      properties:
        packs:
          description: Spectro application management cluster upgrade packs
          items:
            $ref: "#/components/schemas/v1SpectroMgmtUpgradePack"
          type: array
        uid:
          description: Spectro application management cluster profile unique identifier
          type: string
      type: object
    v1SpectroMgmtUpgradeProfiles:
      description: Spectro application management cluster information
      properties:
        profiles:
          description: Spectro application management cluster profiles
          items:
            $ref: "#/components/schemas/v1SpectroMgmtUpgradeProfile"
          type: array
        version:
          description: Spectro application management cluster version
          type: string
      type: object
    v1SpectroMgmtUpgradeSpc:
      description: Spectro application management cluster upgrade profiles
      properties:
        current:
          $ref: "#/components/schemas/v1SpectroMgmtUpgradeProfiles"
        target:
          $ref: "#/components/schemas/v1SpectroMgmtUpgradeProfiles"
      type: object
    v1SpectroOpenStackClusterEntity:
      description: OpenStack cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroOpenStackClusterEntity_spec"
      type: object
    v1SpectroOpenStackClusterImportEntity:
      description: Spectro OpenStack cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroOpenStackClusterRateEntity:
      description: Openstack cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1OpenStackClusterConfig"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1OpenStackMachinePoolConfigEntity"
          type: array
      type: object
    v1SpectroTenantClusterMigration:
      description: Spectro tenant cluster migration status
      properties:
        message:
          type: string
        name:
          type: string
        state:
          type: string
        uid:
          type: string
      type: object
    v1SpectroTenantMigration:
      description: Spectro tenant migration status
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1SpectroTenantClusterMigration"
          type: array
          uniqueItems: true
        state:
          type: string
          x-omitempty: false
      type: object
    v1SpectroTunnelConfig:
      description: Spectro tunnel configuration
      example:
        remoteSsh: disabled
        remoteSshTempUser: disabled
      properties:
        remoteSsh:
          default: disabled
          enum:
          - enabled
          - disabled
          type: string
          x-omitempty: false
        remoteSshTempUser:
          default: disabled
          enum:
          - enabled
          - disabled
          type: string
          x-omitempty: false
      type: object
    v1SpectroTunnelStatus:
      description: SpectroTunnelStatus is the status of the tunnel
      example:
        ssh:
          lastModifiedTime: 2000-01-23T04:56:07.000+00:00
          state: Initiating
          message: message
          user:
            lastModifiedTime: 2000-01-23T04:56:07.000+00:00
            credentials:
              password: password
              sshKey: sshKey
              username: username
            state: Created
            message: message
      properties:
        ssh:
          $ref: "#/components/schemas/v1SshTunnelStatus"
      type: object
    v1SpectroVirtualClusterEntity:
      description: Spectro virtual cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroVirtualClusterEntity_spec"
      type: object
    v1SpectroVsphereClusterEntity:
      description: vSphere cluster request payload for create and update
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SpectroVsphereClusterEntity_spec"
      type: object
    v1SpectroVsphereClusterImportEntity:
      description: Spectro Vsphere cluster import request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SpectroAwsClusterImportEntity_spec"
      type: object
    v1SpectroVsphereClusterRateEntity:
      description: Vsphere cluster request payload for estimating rate
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1VsphereClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1VsphereMachinePoolConfigEntity"
          type: array
      type: object
    v1SpotMarketOptions:
      description: SpotMarketOptions defines the options available to a user when
        configuring Machines to run on Spot instances. Most users should provide an
        empty struct.
      example:
        maxPrice: maxPrice
      properties:
        maxPrice:
          description: MaxPrice defines the maximum price the user is willing to pay
            for Spot VM instances
          type: string
      type: object
    v1SpotVMOptions:
      description: SpotVMOptions defines the options relevant to running the Machine
        on Spot VMs
      example:
        maxPrice: maxPrice
      properties:
        maxPrice:
          description: MaxPrice defines the maximum price the user is willing to pay
            for Spot VM instances
          type: string
      type: object
    v1SshTunnelStatus:
      example:
        lastModifiedTime: 2000-01-23T04:56:07.000+00:00
        state: Initiating
        message: message
        user:
          lastModifiedTime: 2000-01-23T04:56:07.000+00:00
          credentials:
            password: password
            sshKey: sshKey
            username: username
          state: Created
          message: message
      properties:
        lastModifiedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          description: Message is the status message of the SSH tunnel
          type: string
        state:
          description: State is the state of the SSH tunnel
          enum:
          - Initiating
          - Created
          - Deleting
          - Deleted
          - Failed
          type: string
        user:
          $ref: "#/components/schemas/v1SshUserStatus"
      type: object
    v1SshUserCredentials:
      example:
        password: password
        sshKey: sshKey
        username: username
      properties:
        password:
          description: Password is the temporary password of the SSH tunnel
          type: string
        sshKey:
          description: SshKey is the ssh key of the SSH tunnel
          type: string
        username:
          description: UserName is the temporary username of the SSH tunnel
          type: string
      type: object
    v1SshUserStatus:
      example:
        lastModifiedTime: 2000-01-23T04:56:07.000+00:00
        credentials:
          password: password
          sshKey: sshKey
          username: username
        state: Created
        message: message
      properties:
        credentials:
          $ref: "#/components/schemas/v1SshUserCredentials"
        lastModifiedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        message:
          description: Message is the status message of the SSH tunnel
          type: string
        state:
          description: State is the state of the SSH tunnel
          enum:
          - Created
          - Deleted
          - Failed
          type: string
      type: object
    v1SsoLogin:
      description: Describes the allowed sso login details
      example:
        redirectUri: redirectUri
        displayName: displayName
        name: name
        logo: logo
      properties:
        displayName:
          description: Describes the display name for the sso login
          type: string
        logo:
          description: Describes the url path for the sso login
          type: string
        name:
          description: Describes the processed name for the sso login
          type: string
        redirectUri:
          description: Describes the sso login url for the authentication
          type: string
      type: object
    v1SsoLogins:
      description: Describes the allowed sso logins
      items:
        $ref: "#/components/schemas/v1SsoLogin"
      type: array
      uniqueItems: true
    v1StorageAccount:
      description: Azure storage account provides a unique namespace for your Azure
        resources
      example:
        kind: kind
        name: name
        location: location
        id: id
      properties:
        id:
          description: Fully qualified resource ID for the resource
          type: string
        kind:
          description: The kind of the resource
          type: string
        location:
          description: The geo-location where the resource lives
          type: string
        name:
          description: The name of the resource
          type: string
      type: object
    v1StorageAccountEntity:
      description: Azure storage account entity
      example:
        name: name
        id: id
      properties:
        id:
          description: Azure storage account id
          type: string
        name:
          description: Azure storage account name
          type: string
      type: object
    v1StorageContainer:
      description: "Azure storage container organizes a set of blobs, similar to a\
        \ directory in a file system"
      example:
        name: name
        id: id
        type: type
      properties:
        id:
          description: Fully qualified resource ID for the resource.
          type: string
        name:
          description: The name of the resource
          type: string
        type:
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines"
          type: string
      type: object
    v1StorageCost:
      description: Cloud storage cost
      example:
        discountedUsage: discountedUsage
        price:
        - price: price
          limit: limit
        - price: price
          limit: limit
      properties:
        discountedUsage:
          description: Cloud storage upper limit which is free.
          type: string
        price:
          description: Array of cloud storage range prices
          items:
            $ref: "#/components/schemas/v1StoragePrice"
          type: array
      type: object
    v1StoragePrice:
      description: Cloud storage price within an upper limit.
      example:
        price: price
        limit: limit
      properties:
        limit:
          description: Upper limit of cloud storage usage
          type: string
        price:
          description: Price of cloud storage type
          type: string
      type: object
    v1StorageRate:
      description: Storage estimated rate information
      example:
        sizeGB: 5.637376656633329
        rate: 5.962133916683182
        iops: 1.4658129805029452
        throughput: 2.3021358869347655
        type: type
      properties:
        iops:
          format: float64
          type: number
        rate:
          format: float64
          type: number
          x-omitempty: false
        sizeGB:
          format: float64
          type: number
        throughput:
          format: float64
          type: number
        type:
          type: string
      type: object
    v1StorageType:
      description: Cloud cloud Storage type details
      example:
        throughputCost:
          discountedUsage: discountedUsage
          price:
          - price: price
            limit: limit
          - price: price
            limit: limit
        cost:
          discountedUsage: discountedUsage
          price:
          - price: price
            limit: limit
          - price: price
            limit: limit
        iopsCost:
          discountedUsage: discountedUsage
          price:
          - price: price
            limit: limit
          - price: price
            limit: limit
        kind: kind
        name: name
      properties:
        cost:
          $ref: "#/components/schemas/v1StorageCost"
        iopsCost:
          $ref: "#/components/schemas/v1StorageCost"
        kind:
          description: kind of storage type
          type: string
        name:
          description: Name of the storage type
          type: string
        throughputCost:
          $ref: "#/components/schemas/v1StorageCost"
      type: object
    v1StripeKey:
      description: Stripe key object
      properties:
        publishKey:
          description: Publish stripe key
          type: string
      type: object
    v1Subnet:
      example:
        securityGroupName: securityGroupName
        nsgResourceGroup: nsgResourceGroup
        cidrBlock: cidrBlock
        name: name
      properties:
        cidrBlock:
          description: CidrBlock is the CIDR block to be used when the provider creates
            a managed Vnet.
          type: string
        name:
          type: string
        nsgResourceGroup:
          description: Resource group associated with a network security group
          type: string
        securityGroupName:
          description: "Network Security Group(NSG) to be attached to subnet. NSG\
            \ for a control plane subnet, should allow inbound to port 6443, as port\
            \ 6443 is used by kubeadm to bootstrap the control planes"
          type: string
      type: object
    v1Subscription:
      description: Azure Subscription Type
      example:
        displayName: displayName
        state: state
        subscriptionId: subscriptionId
        authorizationSource: authorizationSource
      properties:
        authorizationSource:
          description: "The authorization source of the request. Valid values are\
            \ one or more combinations of Legacy, RoleBased, Bypassed, Direct and\
            \ Management"
          type: string
        displayName:
          description: The subscription display name
          type: string
        state:
          description: "The subscription state. Possible values are Enabled, Warned,\
            \ PastDue, Disabled, and Deleted."
          type: string
        subscriptionId:
          description: The subscription ID
          type: string
      type: object
    v1SyftDependency:
      description: Compliance Scan Syft Dependency
      example:
        name: name
        type: type
        version: version
      properties:
        name:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    v1SyftDependencyEntity:
      description: Syft dependency
      properties:
        name:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    v1SyftEntity:
      description: Syft response
      properties:
        report:
          $ref: "#/components/schemas/v1SyftReportEntity"
        requestUid:
          type: string
        status:
          enum:
          - Completed
          - InProgress
          - Failed
          - Initiated
          type: string
      required:
      - report
      - requestUid
      - status
      type: object
    v1SyftImageContext:
      description: Compliance Scan Syft Image Context
      example:
        containerName: containerName
        namespace: namespace
        podName: podName
      properties:
        containerName:
          type: string
        namespace:
          type: string
        podName:
          type: string
      type: object
    v1SyftReport:
      description: Compliance Scan Syft Report
      example:
        imageContexts:
        - containerName: containerName
          namespace: namespace
          podName: podName
        - containerName: containerName
          namespace: namespace
          podName: podName
        image: image
        vulnerabilitySummary:
          high: 7
          critical: 4
          low: 1
          medium: 1
          negligible: 1
          unknown: 6
        vulnerabilities:
        - severity: severity
          installed: installed
          name: name
          fixedIn: fixedIn
          vulnerability: vulnerability
          type: type
        - severity: severity
          installed: installed
          name: name
          fixedIn: fixedIn
          vulnerability: vulnerability
          type: type
        state: state
        time: 2000-01-23T04:56:07.000+00:00
        isSBOMExist: true
        dependencies:
        - name: name
          type: type
          version: version
        - name: name
          type: type
          version: version
      properties:
        dependencies:
          items:
            $ref: "#/components/schemas/v1SyftDependency"
          type: array
        image:
          type: string
        imageContexts:
          items:
            $ref: "#/components/schemas/v1SyftImageContext"
          type: array
        isSBOMExist:
          type: boolean
        state:
          type: string
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        vulnerabilities:
          items:
            $ref: "#/components/schemas/v1SyftVulnerability"
          type: array
        vulnerabilitySummary:
          $ref: "#/components/schemas/v1SyftVulnerabilitySummary"
      type: object
    v1SyftReportEntity:
      description: Syft report
      properties:
        batchNo:
          format: int32
          type: integer
        batchSize:
          format: int32
          type: integer
        dependencies:
          items:
            $ref: "#/components/schemas/v1SyftDependencyEntity"
          type: array
        image:
          type: string
        imageContexts:
          items:
            $ref: "#/components/schemas/v1SyftImageContext"
          type: array
        sbom:
          type: string
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        vulnerabilities:
          items:
            $ref: "#/components/schemas/v1SyftVulnerabilityEntity"
          type: array
        vulnerabilitySummary:
          $ref: "#/components/schemas/v1SyftVulnerabilitySummaryEntity"
      type: object
    v1SyftScanContext:
      description: Compliance Scan Syft Context
      example:
        scope: scope
        format: format
        labelSelector: labelSelector
        namespace: namespace
        podName: podName
      properties:
        format:
          type: string
        labelSelector:
          type: string
        namespace:
          type: string
        podName:
          type: string
        scope:
          type: string
      type: object
    v1SyftVulnerability:
      description: Compliance Scan Syft Vulnerability
      example:
        severity: severity
        installed: installed
        name: name
        fixedIn: fixedIn
        vulnerability: vulnerability
        type: type
      properties:
        fixedIn:
          type: string
        installed:
          type: string
        name:
          type: string
        severity:
          type: string
        type:
          type: string
        vulnerability:
          type: string
      type: object
    v1SyftVulnerabilityEntity:
      description: Syft vulnerability
      properties:
        fixedIn:
          type: string
        installed:
          type: string
        name:
          type: string
        severity:
          type: string
        type:
          type: string
        vulnerability:
          type: string
      type: object
    v1SyftVulnerabilitySummary:
      description: Compliance Scan Syft Vulnerability Summary
      example:
        high: 7
        critical: 4
        low: 1
        medium: 1
        negligible: 1
        unknown: 6
      properties:
        critical:
          format: int32
          type: integer
        high:
          format: int32
          type: integer
        low:
          format: int32
          type: integer
        medium:
          format: int32
          type: integer
        negligible:
          format: int32
          type: integer
        unknown:
          format: int32
          type: integer
      type: object
    v1SyftVulnerabilitySummaryEntity:
      description: Syft vulnerability summary
      properties:
        critical:
          format: int32
          type: integer
        high:
          format: int32
          type: integer
        low:
          format: int32
          type: integer
        medium:
          format: int32
          type: integer
        negligible:
          format: int32
          type: integer
        unknown:
          format: int32
          type: integer
      type: object
    v1SysLogin:
      description: System admin login input
      properties:
        emailId:
          type: string
        password:
          format: password
          type: string
        username:
          type: string
      type: object
    v1SysUserToken:
      description: Auth token response
      properties:
        Authorization:
          type: string
        IsEmailSet:
          type: boolean
          x-omitempty: false
        IsEmailVerified:
          type: boolean
          x-omitempty: false
        IsMfa:
          type: boolean
          x-omitempty: false
        IsPasswordReset:
          type: boolean
          x-omitempty: false
      type: object
    v1SystemActivateRequest:
      properties:
        activationKey:
          type: string
      required:
      - activationKey
      type: object
    v1SystemActivationResponse:
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SystemActivationResponse_spec"
        status:
          $ref: "#/components/schemas/v1SystemActivationResponse_status"
      type: object
    v1SystemAdmin:
      description: System Admin information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SystemAdministratorSpec"
        status:
          $ref: "#/components/schemas/v1SystemAdministratorStatus"
      type: object
    v1SystemAdminActivation:
      description: System Administrator Activation Specification
      properties:
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        link:
          type: string
      type: object
    v1SystemAdminEntity:
      description: System Admin information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SystemAdministratorSpec"
      type: object
    v1SystemAdminMfa:
      description: System Administrator MFA configuration
      properties:
        devices:
          items:
            type: string
          type: array
        state:
          type: string
      type: object
    v1SystemAdminProfile:
      description: System Administrator Profile Entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1SystemAdminProfileSpec"
      type: object
    v1SystemAdminProfileSpec:
      description: System Administrator Profile Specification
      properties:
        firstName:
          type: string
        lastName:
          type: string
      type: object
    v1SystemAdministratorSpec:
      description: System Administrator Entity Specification
      properties:
        adminType:
          enum:
          - AccountAdmin
          - OperationAdmin
          type: string
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mfa:
          $ref: "#/components/schemas/v1SystemAdminMfa"
      required:
      - adminType
      - emailId
      - firstName
      - lastName
      type: object
    v1SystemAdministratorStatus:
      description: System Administrator Status
      properties:
        activation:
          $ref: "#/components/schemas/v1SystemAdminActivation"
        createdBy:
          type: string
        lastPasswordUpdate:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastSignIn:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
      type: object
    v1SystemAdmins:
      description: List of System Admin information's
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1SystemAdmin"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1SystemAwsAccount:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemAwsSpec"
      type: object
    v1SystemAwsImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemAwsImageSpec"
      type: object
    v1SystemAwsImageSpec:
      description: system aws account specifications
      properties:
        accountId:
          type: string
        goldenImageRegion:
          type: string
      type: object
    v1SystemAwsSpec:
      description: system aws account specifications
      properties:
        accessKey:
          type: string
        secretKey:
          type: string
      type: object
    v1SystemAwsStsAccount:
      description: System AWS Gov account specifications
      properties:
        accessKey:
          type: string
        accountId:
          type: string
        secretKey:
          type: string
      type: object
    v1SystemAzureAccount:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemAzureSpec"
      type: object
    v1SystemAzureSpec:
      description: system azure account specifications
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        subscriptionId:
          type: string
        tenantId:
          type: string
      type: object
    v1SystemAzureStorage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemAzureStorageSpec"
      type: object
    v1SystemAzureStorageSpec:
      description: system aws account specifications
      properties:
        accessKey:
          type: string
        container:
          type: string
        storageName:
          type: string
      type: object
    v1SystemBackupConfigSpec:
      description: system backup config spec
      properties:
        ftp:
          $ref: "#/components/schemas/v1SystemFtpSpec"
        hourOfTheDay:
          type: integer
          x-omitempty: false
        interval:
          type: integer
          x-omitempty: false
        retentionPeriod:
          type: integer
          x-omitempty: false
      type: object
    v1SystemBackupFtpConfigSpec:
      description: system backup config spec
      properties:
        backupSpec:
          $ref: "#/components/schemas/v1SystemBackupSpec"
        ftp:
          $ref: "#/components/schemas/v1SystemFtpSpec"
      type: object
    v1SystemBackupS3ConfigSpec:
      description: system backup config spec
      properties:
        backupSpec:
          $ref: "#/components/schemas/v1SystemBackupSpec"
        s3:
          $ref: "#/components/schemas/v1SystemS3Spec"
      type: object
    v1SystemBackupSpec:
      description: system backup config spec
      properties:
        hourOfTheDay:
          type: integer
          x-omitempty: false
        interval:
          type: integer
          x-omitempty: false
        retentionPeriod:
          type: integer
          x-omitempty: false
      type: object
    v1SystemCertificateSpec:
      description: system smtp config spec
      properties:
        caCert:
          type: string
        crt:
          type: string
        insecureSkipVerify:
          type: boolean
        key:
          type: string
      type: object
    v1SystemCertificatesSpec:
      description: system certificate in base64 format
      properties:
        caCertificateBase64:
          type: string
          x-omitempty: false
        certificateBase64:
          type: string
          x-omitempty: false
        insecureSkipVerify:
          type: boolean
          x-omitempty: false
        keyBase64:
          type: string
          x-omitempty: false
      type: object
    v1SystemConfigAuth:
      description: System config auth
      properties:
        enforceServiceAuthToken:
          type: boolean
          x-omitempty: false
        enforceTlsVerify:
          type: boolean
          x-omitempty: false
      type: object
    v1SystemConfigCluster:
      description: System config cluster
      properties:
        stableEndpointAccess:
          type: boolean
          x-omitempty: false
      type: object
    v1SystemConfigDomainCertificatesSpec:
      description: system domain and its certificate config spec
      properties:
        certificates:
          $ref: "#/components/schemas/v1SystemCertificatesSpec"
        rootDomain:
          type: string
      type: object
    v1SystemConfigDomainSpec:
      description: system domain config spec
      properties:
        apiServer:
          type: string
        derivedApiServer:
          type: string
        derivedRootDomain:
          type: string
        rootDomain:
          type: string
        urlProtocol:
          type: string
      type: object
    v1SystemConfigStoreEntity:
      properties:
        key:
          type: string
          x-omitempty: false
        value:
          type: string
          x-omitempty: false
      required:
      - key
      - value
      type: object
    v1SystemCryptoData:
      description: SystemAdmin
      properties:
        input:
          type: string
        result:
          type: string
      type: object
    v1SystemCryptoInput:
      description: SystemAdmin
      properties:
        input:
          type: string
      type: object
    v1SystemEdgeImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemEdgeImageSpec"
      type: object
    v1SystemEdgeImageSpec:
      description: system edge account specifications
      properties:
        caCert:
          type: string
        imagesHostEndpoint:
          type: string
        insecureSkipVerify:
          type: boolean
      type: object
    v1SystemEdgeNativeImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemEdgeNativeImageSpec"
      type: object
    v1SystemEdgeNativeImageSpec:
      description: system edge-native account specifications
      properties:
        caCert:
          type: string
        imagesHostEndpoint:
          type: string
        insecureSkipVerify:
          type: boolean
        stylusImagesEndpoint:
          type: string
      type: object
    v1SystemFeature:
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          isAllowed: true
          docLink: docLink
          description: description
          key: key
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SystemFeaturesSpec"
      type: object
    v1SystemFeatures:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            isAllowed: true
            docLink: docLink
            description: description
            key: key
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            isAllowed: true
            docLink: docLink
            description: description
            key: key
      properties:
        items:
          description: List of system features
          items:
            $ref: "#/components/schemas/v1SystemFeature"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1SystemFeaturesOperation:
      properties:
        isAllowed:
          description: Flag which specifies if feature is allowed or not
          type: boolean
          x-omitempty: false
      type: object
    v1SystemFeaturesSpec:
      example:
        isAllowed: true
        docLink: docLink
        description: description
        key: key
      properties:
        description:
          description: Feature description
          type: string
        docLink:
          description: Feature doc link
          type: string
        isAllowed:
          description: Flag which specifies if feature is allowed or not
          type: boolean
          x-omitempty: false
        key:
          description: Unique Feature key
          type: string
      type: object
    v1SystemFtpSpec:
      description: system ftp config spec
      properties:
        dir:
          type: string
          x-omitempty: false
        password:
          type: string
          x-omitempty: false
        server:
          type: string
          x-omitempty: false
        username:
          type: string
          x-omitempty: false
      type: object
    v1SystemGcpAccount:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemGcpSpec"
      type: object
    v1SystemGcpImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemGcpImageSpec"
      type: object
    v1SystemGcpImageSpec:
      description: system gcp account specifications
      properties:
        imageProject:
          type: string
      type: object
    v1SystemGcpSpec:
      description: system gcp account specifications
      properties:
        json:
          type: string
      type: object
    v1SystemGitAuthSpec:
      description: system git auth account specifications
      properties:
        _type:
          type: string
        password:
          type: string
        token:
          type: string
        username:
          $ref: "#/components/schemas/v1SystemGitAuthSpec"
      type: object
    v1SystemGithubSsoSpec:
      description: system sso github config spec
      properties:
        clientId:
          type: string
        clientSecretKey:
          type: string
        isEnabled:
          type: boolean
        logoUrl:
          type: string
          x-omitempty: false
      type: object
    v1SystemKubectlSpec:
      description: system web kubectl config spec
      properties:
        endpoint:
          type: string
        isEnabled:
          type: boolean
      type: object
    v1SystemLoggerSpec:
      description: system logger config spec
      properties:
        format:
          type: string
        level:
          type: string
      type: object
    v1SystemMaasImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemMaasImageSpec"
      type: object
    v1SystemMaasImageSpec:
      description: system maas account specifications
      properties:
        caCert:
          type: string
        imagesHostEndpoint:
          type: string
        insecureSkipVerify:
          type: boolean
      type: object
    v1SystemOciImageRegistry:
      description: system web kubectl config spec
      properties:
        baseContentPath:
          type: string
        caCert:
          type: string
        endpoint:
          type: string
        insecureSkipVerify:
          type: boolean
        mirrorRegistries:
          type: string
        name:
          type: string
        password:
          type: string
        username:
          type: string
      type: object
    v1SystemOidcClaims:
      properties:
        Email:
          type: string
          x-omitempty: false
        FirstName:
          type: string
          x-omitempty: false
        LastName:
          type: string
          x-omitempty: false
        SpectroTeam:
          type: string
          x-omitempty: false
      type: object
    v1SystemOidcClientSpec:
      description: system sso oidc config spec
      properties:
        callbackUrl:
          type: string
          x-omitempty: false
        clientId:
          type: string
          x-omitempty: false
        clientSecret:
          type: string
          x-omitempty: false
        isEnabled:
          type: boolean
          x-omitempty: false
        issuerUrl:
          description: the issuer is the URL identifier for the service
          type: string
          x-omitempty: false
        logoUrl:
          type: string
          x-omitempty: false
        requiredClaims:
          $ref: "#/components/schemas/v1SystemOidcClaims"
        scopes:
          items:
            type: string
          type: array
          x-omitempty: false
      type: object
    v1SystemOpenstackImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemOpenstackImageSpec"
      type: object
    v1SystemOpenstackImageSpec:
      description: system openstack account specifications
      properties:
        imagesHostEndpoint:
          type: string
      type: object
    v1SystemPasswordPolicySpec:
      description: system password policy
      properties:
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        expiryDurationInDays:
          type: integer
        firstReminderInDays:
          type: integer
        isRegex:
          type: boolean
        minLength:
          type: integer
        minNumOfBlockLetters:
          type: integer
        minNumOfDigits:
          type: integer
        minNumOfSmallLetters:
          type: integer
        minNumOfSpecialCharacters:
          type: integer
        regex:
          type: string
        reminderFrequency:
          type: integer
        updateTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SystemPlan:
      description: system plan
      properties:
        freeCredits:
          items:
            $ref: "#/components/schemas/v1SystemPlanCredit"
          type: array
        planLimit:
          $ref: "#/components/schemas/v1SystemPlanLimit"
        slaCredits:
          items:
            $ref: "#/components/schemas/v1SystemPlanCredit"
          type: array
        systemStartDate:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SystemPlanCredit:
      description: Plan Credit
      properties:
        cpuCoreHours:
          format: int64
          type: number
          x-omitempty: false
        creditUid:
          type: string
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
        start:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          enum:
          - Pure
          - Alloy
          type: string
      required:
      - type
      type: object
    v1SystemPlanLimit:
      description: System Monthly Plan Limit
      properties:
        alloy:
          $ref: "#/components/schemas/v1SystemPlanLimitSpec"
        isUnlimited:
          description: is unlimited cpu core hours
          type: boolean
          x-omitempty: false
        pure:
          $ref: "#/components/schemas/v1SystemPlanLimitSpec"
      type: object
    v1SystemPlanLimitSpec:
      description: Monthly Plan Limit spec
      properties:
        cpuCoreHours:
          description: cpu cores hours
          format: int64
          type: integer
          x-omitempty: false
        overageLimitPercentage:
          description: overage limit in percentage
          format: int8
          type: integer
          x-omitempty: false
        warnLimitPercentage:
          description: warning limit in percentage
          format: int8
          type: integer
          x-omitempty: false
      type: object
    v1SystemPlanLimitUpdate:
      description: System Plan limit change update entity
      properties:
        planLimit:
          $ref: "#/components/schemas/v1SystemPlanLimit"
      type: object
    v1SystemProductUsage:
      description: Yearly usage
      properties:
        allocatedCredits:
          description: Allocated credits
          format: int64
          type: number
        breachedCredits:
          description: Credits exceeded the allocated and free credits
          format: float64
          type: number
        freeSlaCredits:
          description: Free allocated SLA credits
          format: int64
          type: number
        usedCredits:
          description: Used credits
          format: float64
          type: number
      type: object
    v1SystemProxySpec:
      description: system proxy config spec
      properties:
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
      type: object
    v1SystemRateLimit:
      description: system rate-limit
      properties:
        isActive:
          type: boolean
      type: object
    v1SystemRegistry:
      description: Registry configuration
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1RegistryConf"
      type: object
    v1SystemResourceLimit:
      properties:
        kind:
          $ref: "#/components/schemas/v1ResourceLimitType"
        limit:
          format: int64
          type: number
          x-omitempty: false
        maxLimit:
          format: int64
          type: number
          x-omitempty: false
      type: object
    v1SystemResourceLimits:
      description: "System resource limits. Supported resources keys are 'user','project','apiKey','team','role','cloudaccount','clusterprofile','workspace','registry','privategateway','location','certificate','macro','sshkey','alert','spectrocluster','edgehost'."
      properties:
        resources:
          items:
            $ref: "#/components/schemas/v1SystemResourceLimit"
          type: array
          uniqueItems: true
      type: object
    v1SystemRetentionPolicy:
      description: system retention policy
      properties:
        retentionPeriod:
          type: integer
          x-omitempty: false
      type: object
    v1SystemReverseProxy:
      description: system config reverse proxy
      example:
        clientCert: clientCert
        server: server
        protocol: http
        caCert: caCert
        clientKey: clientKey
        port: 0
        vHostPort: 6
      properties:
        caCert:
          type: string
        clientCert:
          type: string
        clientKey:
          type: string
        port:
          type: integer
        protocol:
          enum:
          - http
          - https
          type: string
        server:
          type: string
        vHostPort:
          type: integer
      type: object
    v1SystemS3Spec:
      description: system backup s3 storage config spec
      properties:
        accessKey:
          type: string
          x-omitempty: false
        bucket:
          type: string
          x-omitempty: false
        folder:
          type: string
          x-omitempty: false
        region:
          type: string
          x-omitempty: false
        secretKey:
          type: string
          x-omitempty: false
      type: object
    v1SystemScarSpec:
      description: system scar config spec
      example:
        endpoint: endpoint
        password: password
        caCert: caCert
        baseContentPath: baseContentPath
        insecureVerify: true
        username: username
      properties:
        baseContentPath:
          type: string
        caCert:
          type: string
        endpoint:
          type: string
        insecureVerify:
          type: boolean
        password:
          type: string
        username:
          type: string
      type: object
    v1SystemScarValidationResponse:
      description: system proxy config spec
      properties:
        spectroVersion:
          type: string
      type: object
    v1SystemSecurityMode:
      description: System service mode
      properties:
        securityMode:
          type: string
      type: object
    v1SystemServiceLogin:
      description: System service login input
      properties:
        authToken:
          description: authToken helps in two step verification for the authorization.
          type: string
        isSystem:
          type: boolean
        overlordUid:
          type: string
        serviceName:
          type: string
        serviceVersion:
          type: string
        spectroClusterUid:
          type: string
        tenantUid:
          type: string
      type: object
    v1SystemSmtpSpec:
      description: system smtp config spec
      properties:
        fromEmailId:
          type: string
        insecureSkipVerifyTls:
          type: boolean
        password:
          type: string
        smtpPort:
          type: integer
        smtpServer:
          type: string
        userName:
          type: string
      type: object
    v1SystemSsoAuthSpec:
      description: system sso config spec
      properties:
        github:
          $ref: "#/components/schemas/v1SystemGithubSsoSpec"
        oidcAuthSpecs:
          additionalProperties:
            $ref: "#/components/schemas/v1SystemOidcClientSpec"
          type: object
      type: object
    v1SystemSsoSpec:
      description: system sso config spec
      properties:
        acsUrlRoot:
          type: string
        acsUrlScheme:
          type: string
        apiVersion:
          type: string
        audienceUrl:
          type: string
        authSpec:
          $ref: "#/components/schemas/v1SystemSsoAuthSpec"
        entityId:
          type: string
      type: object
    v1SystemStartDate:
      description: system start date
      properties:
        systemStartDate:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SystemStorageS3ConfigSpec:
      description: system storage s3 config spec
      properties:
        isEnabled:
          type: boolean
        retentionPolicy:
          $ref: "#/components/schemas/v1SystemRetentionPolicy"
        s3:
          $ref: "#/components/schemas/v1SystemS3Spec"
      type: object
    v1SystemSysplan:
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SystemSysplan_spec"
      type: object
    v1SystemTimeseriesMetrics:
      description: system timeseries metrics config
      properties:
        archivalInterval:
          type: integer
        batchInterval:
          type: integer
        enabled:
          type: boolean
          x-omitempty: false
        retentionPeriod:
          type: integer
      type: object
    v1SystemTimeseriesSpec:
      description: system timeseries config spec
      properties:
        machine:
          $ref: "#/components/schemas/v1SystemTimeseriesMetrics"
        pod:
          $ref: "#/components/schemas/v1SystemTimeseriesMetrics"
      type: object
    v1SystemUsage:
      description: System usage billing object
      properties:
        planLimit:
          $ref: "#/components/schemas/v1PlanLimit"
        usageBillingPeriod:
          $ref: "#/components/schemas/v1InvoiceBillingPeriod"
        yearlyUsages:
          description: List of every year system usage
          items:
            $ref: "#/components/schemas/v1YearlyUsage"
          type: array
          uniqueItems: true
      type: object
    v1SystemUserMe:
      description: User information wrt permissions
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1SystemUserSpec"
        status:
          $ref: "#/components/schemas/v1SystemUserMeStatus"
      type: object
    v1SystemUserMeStatus:
      description: User status with permissions
      properties:
        isEmailSet:
          type: boolean
          x-omitempty: false
        isEmailVerified:
          type: boolean
          x-omitempty: false
        isMfaEnabled:
          type: boolean
          x-omitempty: false
        isPasswordReset:
          type: boolean
          x-omitempty: false
        lastEmailUpdateTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastEmailVerifiedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastLoginTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastPasswordUpdateTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SystemUserSpec:
      description: User specifications
      properties:
        adminType:
          description: Admin type
          type: string
        emailId:
          description: System User's email id
          type: string
      type: object
    v1SystemVersionInfo:
      description: system version info
      properties:
        version:
          type: string
      type: object
    v1SystemVsphereImage:
      description: SystemAdmin
      properties:
        spec:
          $ref: "#/components/schemas/v1SystemVsphereImageSpec"
      type: object
    v1SystemVsphereImageSpec:
      description: system vsphere account specifications
      properties:
        caCert:
          type: string
        imagesHostEndpoint:
          type: string
        insecureSkipVerify:
          type: boolean
        overlordOvaLocation:
          type: string
      type: object
    v1SystemsManager:
      description: SystemsManager specifies the Systems Manager configuration for
        the AWS/EKS cluster
      example:
        activationCode: activationCode
        activationId: activationId
      properties:
        activationCode:
          description: ActivationCode specifies the Systems Manager activation code
          type: string
        activationId:
          description: ActivationID specifies the Systems Manager activation ID
          type: string
      type: object
    v1TagFilter:
      description: Tag Filter create spec
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1TagFilterSpec"
      type: object
    v1TagFilterGroup:
      example:
        conjunction: and
        filters:
        - negation: true
          values:
          - values
          - values
          key: key
          operator: eq
        - negation: true
          values:
          - values
          - values
          key: key
          operator: eq
      properties:
        conjunction:
          $ref: "#/components/schemas/v1SearchFilterConjunctionOperator"
        filters:
          items:
            $ref: "#/components/schemas/v1TagFilterItem"
          type: array
          uniqueItems: true
      type: object
    v1TagFilterItem:
      example:
        negation: true
        values:
        - values
        - values
        key: key
        operator: eq
      properties:
        key:
          type: string
        negation:
          type: boolean
        operator:
          $ref: "#/components/schemas/v1SearchFilterKeyValueOperator"
        values:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1TagFilterSpec:
      description: Filter create spec
      example:
        filterGroup:
          conjunction: and
          filters:
          - negation: true
            values:
            - values
            - values
            key: key
            operator: eq
          - negation: true
            values:
            - values
            - values
            key: key
            operator: eq
      properties:
        filterGroup:
          $ref: "#/components/schemas/v1TagFilterGroup"
      type: object
    v1TagFilterSummary:
      description: Filter summary object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          filterGroup:
            conjunction: and
            filters:
            - negation: true
              values:
              - values
              - values
              key: key
              operator: eq
            - negation: true
              values:
              - values
              - values
              key: key
              operator: eq
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1TagFilterSpec"
      type: object
    v1Taint:
      description: Taint
      example:
        timeAdded: 2000-01-23T04:56:07.000+00:00
        effect: NoSchedule
        value: value
        key: key
      properties:
        effect:
          enum:
          - NoSchedule
          - PreferNoSchedule
          - NoExecute
          type: string
        key:
          description: The taint key to be applied to a node
          type: string
        timeAdded:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        value:
          description: The taint value corresponding to the taint key.
          type: string
      type: object
    v1Team:
      description: Team information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          sources:
          - sources
          - sources
          roles:
          - roles
          - roles
          users:
          - users
          - users
        status: "{}"
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1TeamSpec"
        status:
          description: Team status
          type: object
      type: object
    v1TeamPatch:
      items:
        $ref: "#/components/schemas/v1HttpPatch"
      type: array
    v1TeamRoleMap:
      example:
        roles:
        - roles
        - roles
        teamId: teamId
      properties:
        roles:
          items:
            type: string
          type: array
        teamId:
          type: string
      type: object
    v1TeamSpec:
      description: Team specifications
      example:
        sources:
        - sources
        - sources
        roles:
        - roles
        - roles
        users:
        - users
        - users
      properties:
        roles:
          items:
            type: string
          type: array
          uniqueItems: true
        sources:
          items:
            type: string
          type: array
          uniqueItems: true
        users:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1TeamSpecSummary:
      example:
        projects:
        - uid: uid
          name: name
        - uid: uid
          name: name
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
        emailId: emailId
        users:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        emailId:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        users:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
      type: object
    v1TeamStatus:
      description: Team status
      type: object
    v1TeamSummary:
      description: Team summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          projects:
          - uid: uid
            name: name
          - uid: uid
            name: name
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          emailId: emailId
          users:
          - uid: uid
            name: name
          - uid: uid
            name: name
        status: "{}"
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1TeamSpecSummary"
        status:
          description: Team status
          type: object
      type: object
    v1TeamSummarySortFields:
      enum:
      - name
      - creationTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1TeamSummarySortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1TeamSummarySortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1TeamTenantRolesEntity:
      example:
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
      type: object
    v1TeamTenantRolesUpdate:
      properties:
        roles:
          items:
            type: string
          type: array
      type: object
    v1Teams:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            sources:
            - sources
            - sources
            roles:
            - roles
            - roles
            users:
            - users
            - users
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            sources:
            - sources
            - sources
            roles:
            - roles
            - roles
            users:
            - users
            - users
          status: "{}"
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Team"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1TeamsBatch:
      items:
        $ref: "#/components/schemas/v1Team"
      type: array
      uniqueItems: true
    v1TeamsFilterSpec:
      description: Teams filter spec
      properties:
        name:
          $ref: "#/components/schemas/v1FilterString"
      type: object
    v1TeamsMetadata:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ObjectEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1TeamsSummary:
      description: "Deprecated, Use v1UsersSummaryList - Returns User summary"
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1TeamSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1TeamsSummaryList:
      description: Returns Team summary
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            projects:
            - uid: uid
              name: name
            - uid: uid
              name: name
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            emailId: emailId
            users:
            - uid: uid
              name: name
            - uid: uid
              name: name
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            projects:
            - uid: uid
              name: name
            - uid: uid
              name: name
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            emailId: emailId
            users:
            - uid: uid
              name: name
            - uid: uid
              name: name
          status: "{}"
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1TeamSummary"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1TeamsSummarySpec:
      description: Teams filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1TeamsFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1TeamSummarySortSpec"
          type: array
          uniqueItems: true
      type: object
    v1Tenant:
      description: Tenant
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1TenantSpec"
        status:
          $ref: "#/components/schemas/v1TenantStatus"
      type: object
    v1TenantActivate:
      description: Activate/Deactivate tenant
      properties:
        isActive:
          default: true
          type: boolean
      type: object
    v1TenantActivity:
      description: Active tenant and clusters data
      properties:
        clustersInfo:
          $ref: "#/components/schemas/v1ClustersInfo"
        org:
          type: string
        planType:
          type: string
        totalProjects:
          format: int64
          type: number
        totalUsers:
          format: int64
          type: number
        uid:
          type: string
        users:
          items:
            $ref: "#/components/schemas/v1UserActivityInfo"
          type: array
          uniqueItems: true
      type: object
    v1TenantAddressPatch:
      description: Tenant Address
      properties:
        address:
          $ref: "#/components/schemas/v1Address"
      type: object
    v1TenantAssetCert:
      description: tenant cert
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          certificate: certificate
          isCA: true
          key: key
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1Cert"
      type: object
    v1TenantAssetCerts:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            certificate: certificate
            isCA: true
            key: key
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            certificate: certificate
            isCA: true
            key: key
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1TenantAssetCert"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1TenantBasicEntity:
      description: Tenant Basic param
      properties:
        emailId:
          type: string
        orgName:
          type: string
      type: object
    v1TenantCleanUpStatus:
      description: Tenant CleanUp Status
      properties:
        cleanUpError:
          type: string
        cleanUpStages:
          type: string
        cleanUpTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        cleanedResources:
          items:
            type: string
          type: array
        isCompleted:
          type: boolean
          x-omitempty: false
        isInProgress:
          type: boolean
          x-omitempty: false
      type: object
    v1TenantClusterSettings:
      example:
        nodesAutoRemediationSetting:
          isEnabled: true
          disableNodesAutoRemediation: true
      properties:
        nodesAutoRemediationSetting:
          $ref: "#/components/schemas/v1NodesAutoRemediationSettings"
      type: object
    v1TenantContractSpec:
      description: Tenant contract settings
      properties:
        acceptedTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        isAccepted:
          description: "If the contract is accepted offline, then set this field to\
            \ true"
          type: boolean
        isRequired:
          description: "Is the contract required, for on-prem installation it will\
            \ be false"
          type: boolean
      required:
      - isAccepted
      - isRequired
      type: object
    v1TenantDomains:
      description: Tenant domains
      example:
        domains:
        - domains
        - domains
      properties:
        domains:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1TenantEmailPatch:
      description: Tenant EmailId
      properties:
        emailId:
          type: string
      type: object
    v1TenantEnableClusterGroup:
      description: Enable or Disable cluster group for a tenant
      example:
        hideSystemClusterGroups: true
        isClusterGroupEnabled: true
      properties:
        hideSystemClusterGroups:
          type: boolean
          x-omitempty: false
        isClusterGroupEnabled:
          description: Deprecated. Use hideSystemClusterGroups field
          type: boolean
          x-omitempty: false
      type: object
    v1TenantEntity:
      description: Tenant Entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1TenantSpecEntity"
      type: object
    v1TenantFreemium:
      description: Tenant freemium configuration
      example:
        totalUsageLimit: 1.4658129805029452
        isUnlimited: true
        activeClustersLimit: 0
        overageUsageLimit: 6.027456183070403
        isFreemium: true
      properties:
        activeClustersLimit:
          type: integer
          x-omitempty: false
        isFreemium:
          type: boolean
          x-omitempty: false
        isUnlimited:
          type: boolean
          x-omitempty: false
        overageUsageLimit:
          format: float64
          type: number
          x-omitempty: false
        totalUsageLimit:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1TenantFreemiumUsage:
      example:
        isUnlimited: true
        usage:
          usage: 5.962133916683182
        limit:
          activeClusters: 0
          overageUsage: 6.027456183070403
          usage: 1.4658129805029452
        isFreemium: true
      properties:
        isFreemium:
          type: boolean
          x-omitempty: false
        isUnlimited:
          type: boolean
          x-omitempty: false
        limit:
          $ref: "#/components/schemas/v1FreemiumUsageLimit"
        usage:
          $ref: "#/components/schemas/v1FreemiumUsage"
      type: object
    v1TenantOidcClaims:
      example:
        Email: Email
        FirstName: FirstName
        SpectroTeam: SpectroTeam
        LastName: LastName
      properties:
        Email:
          type: string
          x-omitempty: false
        FirstName:
          type: string
          x-omitempty: false
        LastName:
          type: string
          x-omitempty: false
        SpectroTeam:
          type: string
          x-omitempty: false
      type: object
    v1TenantOidcClientSpec:
      description: Tenant
      example:
        userInfo:
          useUserInfo: false
          claims:
            Email: Email
            FirstName: FirstName
            SpectroTeam: SpectroTeam
            LastName: LastName
        clientId: clientId
        issuerUrl: issuerUrl
        defaultTeams:
        - defaultTeams
        - defaultTeams
        isSsoEnabled: true
        requiredClaims:
          Email: Email
          FirstName: FirstName
          SpectroTeam: SpectroTeam
          LastName: LastName
        syncSsoTeams: true
        scopesDelimiter: scopesDelimiter
        issuerTls:
          insecureSkipVerify: false
          caCertificateBase64: caCertificateBase64
        logoutUrl: logoutUrl
        callbackUrl: callbackUrl
        clientSecret: clientSecret
        scopes:
        - scopes
        - scopes
      properties:
        callbackUrl:
          type: string
          x-omitempty: false
        clientId:
          type: string
          x-omitempty: false
        clientSecret:
          type: string
          x-omitempty: false
        defaultTeams:
          items:
            type: string
          type: array
          x-omitempty: false
        isSsoEnabled:
          type: boolean
          x-omitempty: false
        issuerTls:
          $ref: "#/components/schemas/v1OidcIssuerTls"
        issuerUrl:
          description: the issuer is the URL identifier for the service
          type: string
          x-omitempty: false
        logoutUrl:
          type: string
          x-omitempty: false
        requiredClaims:
          $ref: "#/components/schemas/v1TenantOidcClaims"
        scopes:
          items:
            type: string
          type: array
          x-omitempty: false
        scopesDelimiter:
          type: string
          x-omitempty: false
        syncSsoTeams:
          description: "When syncSsoTeams is set to true, all the teams from the OIDC\
            \ configuration are pulled and saved in palette whereas when set to false,\
            \ only the teams which are part of palette are pulled and saved"
          type: boolean
          x-omitempty: false
        userInfo:
          $ref: "#/components/schemas/v1OidcUserInfo"
      type: object
    v1TenantPasswordPolicyEntity:
      description: Tenant Password Policy Entity
      example:
        minNumOfSpecialCharacters: 7
        regex: regex
        isRegex: true
        minNumOfBlockLetters: 5
        minLength: 1
        creationTimestamp: 2000-01-23T04:56:07.000+00:00
        firstReminderInDays: 6
        expiryDurationInDays: 0
        minNumOfSmallLetters: 2
        updateTimestamp: 2000-01-23T04:56:07.000+00:00
        minNumOfDigits: 5
      properties:
        creationTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        expiryDurationInDays:
          type: integer
        firstReminderInDays:
          type: integer
        isRegex:
          type: boolean
        minLength:
          type: integer
        minNumOfBlockLetters:
          type: integer
        minNumOfDigits:
          type: integer
        minNumOfSmallLetters:
          type: integer
        minNumOfSpecialCharacters:
          type: integer
        regex:
          type: string
        updateTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1TenantResourceLimit:
      example:
        maxLimit: 6.027456183070403
        kind: user
        limit: 0.8008281904610115
        label: label
      properties:
        kind:
          $ref: "#/components/schemas/v1ResourceLimitType"
        label:
          type: string
        limit:
          format: int64
          type: number
          x-omitempty: false
        maxLimit:
          format: int64
          type: number
          x-omitempty: false
      type: object
    v1TenantResourceLimitEntity:
      properties:
        kind:
          $ref: "#/components/schemas/v1ResourceLimitType"
        limit:
          format: int64
          type: number
          x-omitempty: false
      type: object
    v1TenantResourceLimits:
      description: Tenant resource limits
      example:
        resources:
        - maxLimit: 6.027456183070403
          kind: user
          limit: 0.8008281904610115
          label: label
        - maxLimit: 6.027456183070403
          kind: user
          limit: 0.8008281904610115
          label: label
      properties:
        resources:
          items:
            $ref: "#/components/schemas/v1TenantResourceLimit"
          type: array
          uniqueItems: true
      type: object
    v1TenantResourceLimitsEntity:
      description: "Tenant resource limits. Supported resources keys are 'user','project','apiKey','team','role','cloudaccount','clusterprofile','workspace','registry','privategateway','location','certificate','macro','sshkey','alert','spectrocluster','edgehost'."
      properties:
        resources:
          items:
            $ref: "#/components/schemas/v1TenantResourceLimitEntity"
          type: array
          uniqueItems: true
      type: object
    v1TenantSamlRequestSpec:
      description: Tenant
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/v1TenantSamlSpecAttribute"
          type: array
        defaultTeams:
          items:
            type: string
          type: array
        federationMetadata:
          type: string
        identityProvider:
          type: string
        isSingleLogoutEnabled:
          type: boolean
        isSsoEnabled:
          type: boolean
        nameIdFormat:
          type: string
        syncSsoTeams:
          description: "When syncSsoTeams is set to true, all the teams from the OIDC\
            \ configuration are pulled and saved in palette whereas when set to false,\
            \ only the teams which are part of palette are pulled and saved"
          type: boolean
      type: object
    v1TenantSamlSpec:
      description: Tenant
      example:
        isSingleLogoutEnabled: true
        certificate: certificate
        defaultTeams:
        - defaultTeams
        - defaultTeams
        entityId: entityId
        serviceProviderMetadata: serviceProviderMetadata
        isSsoEnabled: true
        identityProvider: identityProvider
        issuer: issuer
        acsUrl: acsUrl
        audienceUrl: audienceUrl
        syncSsoTeams: true
        singleLogoutUrl: singleLogoutUrl
        nameIdFormat: nameIdFormat
        attributes:
        - attributeValue: attributeValue
          nameFormat: nameFormat
          name: name
          mappedAttribute: mappedAttribute
        - attributeValue: attributeValue
          nameFormat: nameFormat
          name: name
          mappedAttribute: mappedAttribute
        federationMetadata: federationMetadata
      properties:
        acsUrl:
          type: string
        attributes:
          items:
            $ref: "#/components/schemas/v1TenantSamlSpecAttribute"
          type: array
        audienceUrl:
          description: same as entity id
          type: string
        certificate:
          description: certificate for slo
          type: string
        defaultTeams:
          items:
            type: string
          type: array
        entityId:
          type: string
        federationMetadata:
          type: string
        identityProvider:
          type: string
        isSingleLogoutEnabled:
          type: boolean
          x-omitempty: false
        isSsoEnabled:
          type: boolean
          x-omitempty: false
        issuer:
          description: same as entity id
          type: string
        nameIdFormat:
          type: string
        serviceProviderMetadata:
          type: string
        singleLogoutUrl:
          description: slo url
          type: string
          x-omitempty: false
        syncSsoTeams:
          description: "When syncSsoTeams is set to true, all the teams from the OIDC\
            \ configuration are pulled and saved in palette whereas when set to false,\
            \ only the teams which are part of palette are pulled and saved"
          type: boolean
          x-omitempty: false
      type: object
    v1TenantSamlSpecAttribute:
      example:
        attributeValue: attributeValue
        nameFormat: nameFormat
        name: name
        mappedAttribute: mappedAttribute
      properties:
        attributeValue:
          type: string
        mappedAttribute:
          type: string
        name:
          type: string
        nameFormat:
          type: string
      type: object
    v1TenantSelfSignUpSpec:
      description: Tenant sign up data
      properties:
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        loginMode:
          default: devops
          enum:
          - dev
          - devops
          type: string
        notifyTenantAdmin:
          type: boolean
        orgName:
          type: string
      required:
      - emailId
      - firstName
      - lastName
      - orgName
      type: object
    v1TenantSpec:
      description: Tenant Spec
      properties:
        address:
          $ref: "#/components/schemas/v1Address"
        authType:
          type: string
        defaultLoginMode:
          type: string
        orgEmailId:
          type: string
        orgName:
          type: string
        planUid:
          type: string
      type: object
    v1TenantSpecEntity:
      description: Tenant Entity input
      properties:
        address:
          $ref: "#/components/schemas/v1Address"
        authType:
          type: string
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        loginMode:
          default: devops
          enum:
          - dev
          - devops
          type: string
        orgEmailId:
          type: string
        orgName:
          type: string
        roles:
          items:
            type: string
          type: array
          uniqueItems: true
        ssoApp:
          type: string
      type: object
    v1TenantSsoAuthProvidersEntity:
      example:
        isEnabled: true
        ssoLogins:
        - ssoLogins
        - ssoLogins
      properties:
        isEnabled:
          type: boolean
          x-omitempty: false
        ssoLogins:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1TenantStatus:
      description: Tenant Status
      properties:
        cleanUpStatus:
          $ref: "#/components/schemas/v1TenantCleanUpStatus"
        isActive:
          type: boolean
          x-omitempty: false
        toBeDeleted:
          type: boolean
          x-omitempty: false
      type: object
    v1TenantUpgradeSettingsEntity:
      properties:
        enableLock:
          type: boolean
          x-omitempty: false
        supportedVersionsRange:
          type: integer
          x-omitempty: false
      type: object
    v1TenantUsage:
      description: Tenant usage object
      properties:
        orgName:
          description: Organization name
          type: string
        tenantUid:
          description: Tenant uid
          type: string
        usedAlloyCredits:
          description: Credits used by imported clusters
          format: float64
          type: number
        usedPureCredits:
          description: Credits used by managed clusters
          format: float64
          type: number
      type: object
    v1Tenants:
      description: Tenants list
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1Tenant"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1TenantsAccountsNas:
      properties:
        failures:
          items:
            type: string
          type: array
        success:
          items:
            type: string
          type: array
      type: object
    v1TenantsActivities:
      description: Active tenants and clusters data
      properties:
        tenants:
          additionalProperties:
            $ref: "#/components/schemas/v1TenantActivity"
          type: object
      type: object
    v1Theme:
      description: Theme data entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1ThemeSpec"
        status:
          $ref: "#/components/schemas/v1ThemeStatus"
      type: object
    v1ThemeCreateEntity:
      description: Theme data create entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1ThemeSpec"
      required:
      - metadata
      - spec
      type: object
    v1ThemeMetadata:
      description: Theme metadata
      properties:
        active:
          description: Tells if the theme is active or not
          type: boolean
          x-omitempty: false
        name:
          description: Name of the theme
          type: string
        uid:
          description: Uid of the theme
          type: string
      type: object
    v1ThemeSpec:
      properties:
        values:
          description: "Contains the string value of custom properties like logo,\
            \ name etc."
          type: string
          x-omitempty: false
      required:
      - values
      type: object
    v1ThemeStatus:
      properties:
        active:
          description: Specifies if the theme is active or not
          type: boolean
          x-omitempty: false
      type: object
    v1ThemeUpdateEntity:
      description: Theme data update entity
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaUpdateEntity"
        spec:
          $ref: "#/components/schemas/v1ThemeSpec"
      type: object
    v1ThemesMetadata:
      description: Theme metadata
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1ThemeMetadata"
          type: array
      type: object
    v1TierPrice:
      description: tier price
      properties:
        alloyPricing:
          items:
            $ref: "#/components/schemas/v1PriceRange"
          type: array
          uniqueItems: true
        purePricing:
          items:
            $ref: "#/components/schemas/v1PriceRange"
          type: array
          uniqueItems: true
      type: object
    v1Time:
      description: Time is a wrapper around time.Time which supports correct marshaling
        to YAML and JSON.  Wrappers are provided for many of the factory methods that
        the time package offers.
      format: date-time
      type: string
    v1TlsConfiguration:
      description: TLS configuration
      example:
        certificate: certificate
        insecureSkipVerify: true
        ca: ca
        enabled: true
        key: key
      properties:
        ca:
          type: string
        certificate:
          type: string
        enabled:
          type: boolean
          x-omitempty: false
        insecureSkipVerify:
          type: boolean
          x-omitempty: false
        key:
          type: string
      type: object
    v1TotalClusterRate:
      description: Cluster total estimated rate information
      example:
        compute: 9.301444243932576
        total: 2.027123023002322
        storage: 3.616076749251911
      properties:
        compute:
          format: float64
          type: number
          x-omitempty: false
        storage:
          format: float64
          type: number
          x-omitempty: false
        total:
          format: float64
          type: number
          x-omitempty: false
      type: object
    v1TotalResourceUsage:
      description: Total Resource Usage
      properties:
        projects:
          items:
            $ref: "#/components/schemas/v1ProjectResourceUsage"
          type: array
          uniqueItems: true
        totalAlloyCpuCoreHours:
          type: number
          x-omitempty: false
        totalPureCpuCoreHours:
          type: number
          x-omitempty: false
      type: object
    v1TransferJob:
      description: transfer job details
      properties:
        finishTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        folder:
          type: string
        isCompleted:
          type: boolean
        message:
          items:
            type: string
          type: array
        startTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
        status:
          items:
            type: string
          type: array
      type: object
    v1TunnelConfiguration:
      description: Describes the response that contains the tunnel configuration to
        establish connection
      properties:
        preferredServer:
          $ref: "#/components/schemas/v1TunnelEndpoint"
        servers:
          items:
            $ref: "#/components/schemas/v1TunnelEndpoint"
          type: array
          uniqueItems: true
      type: object
    v1TunnelEndpoint:
      properties:
        endpoint:
          description: Describes the URL where the client has to connect to the tunnel
            server
          type: string
        tls:
          $ref: "#/components/schemas/v1TunnelEndpoint_tls"
      type: object
    v1Uid:
      example:
        uid: uid
      properties:
        uid:
          type: string
      required:
      - uid
      type: object
    v1UidRoleSummary:
      example:
        uid: uid
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
        name: name
        inheritedRoles:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        inheritedRoles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        name:
          type: string
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        uid:
          type: string
      type: object
    v1UidSummary:
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1Uids:
      items:
        $ref: "#/components/schemas/v1Uid"
      type: array
      uniqueItems: true
    v1UpdateStrategy:
      description: "UpdatesStrategy will be used to translate to RollingUpdateStrategy\
        \ of a MachineDeployment We'll start with default values for the translation,\
        \ can expose more details later Following is details of parameters translated\
        \ from the type ScaleOut => maxSurge=1, maxUnavailable=0 ScaleIn => maxSurge=0,\
        \ maxUnavailable=1"
      example:
        type: RollingUpdateScaleOut
      properties:
        type:
          description: "update strategy, either ScaleOut or ScaleIn if empty, will\
            \ default to RollingUpdateScaleOut"
          enum:
          - RollingUpdateScaleOut
          - RollingUpdateScaleIn
          type: string
      type: object
    v1UpdateTenantStatus:
      description: Update tenant status
      properties:
        errorMessage:
          type: string
        kind:
          type: string
        stage:
          type: string
      type: object
    v1Updated:
      description: The resource was updated successfully
      type: object
    v1UpdatedMsg:
      description: Update response with message
      example:
        msg: msg
      properties:
        msg:
          type: string
      type: object
    v1Upgrades:
      description: Upgrades represent the reason of the last upgrade that took place
      example:
        reason:
        - reason
        - reason
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        reason:
          items:
            type: string
          type: array
        timestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1User:
      description: User
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          firstName: firstName
          lastName: lastName
          roles:
          - roles
          - roles
          emailId: emailId
        status:
          lastSignIn: 2000-01-23T04:56:07.000+00:00
          isPasswordResetting: true
          activationLink: activationLink
          isActive: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserSpec"
        status:
          $ref: "#/components/schemas/v1UserStatus"
      type: object
    v1UserActivateInfo:
      properties:
        passwordToken:
          type: string
      type: object
    v1UserActivateLink:
      properties:
        activationLink:
          type: string
      type: object
    v1UserActivityInfo:
      description: Active user data
      properties:
        lastLogin:
          type: string
        lastLoginTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1UserAssetSsh:
      description: SSH key information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          publicKey: publicKey
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserAssetSshSpec"
      type: object
    v1UserAssetSshEntity:
      description: SSH Key request payload
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1UserAssetSshSpec"
      type: object
    v1UserAssetSshSpec:
      description: SSH key specification
      example:
        publicKey: publicKey
      properties:
        publicKey:
          type: string
      type: object
    v1UserAssetsLocation:
      description: Location object
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          isDefault: true
          storage: s3
          type: type
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserAssetsLocationSpec"
      type: object
    v1UserAssetsLocationAzure:
      description: Azure location object
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        spec:
          isDefault: true
          type: type
          config:
            resourceGroup: resourceGroup
            credentials:
              clientId: clientId
              tenantId: tenantId
              clientSecret: clientSecret
              subscriptionId: subscriptionId
              clientCloud: public
            containerName: containerName
            sku: sku
            storageName: storageName
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1UserAssetsLocationAzureSpec"
      type: object
    v1UserAssetsLocationAzureSpec:
      description: Azure location specification
      example:
        isDefault: true
        type: type
        config:
          resourceGroup: resourceGroup
          credentials:
            clientId: clientId
            tenantId: tenantId
            clientSecret: clientSecret
            subscriptionId: subscriptionId
            clientCloud: public
          containerName: containerName
          sku: sku
          storageName: storageName
      properties:
        config:
          $ref: "#/components/schemas/v1AzureStorageConfig"
        isDefault:
          description: "Set to 'true', if location has to be set as default"
          type: boolean
        type:
          description: "Azure location type [azure]"
          type: string
      required:
      - config
      type: object
    v1UserAssetsLocationGcp:
      description: GCP location object
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        spec:
          isDefault: true
          type: type
          config:
            bucketName: bucketName
            credentials:
              jsonCredentialsFileUid: jsonCredentialsFileUid
              jsonCredentials: jsonCredentials
            projectId: projectId
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1UserAssetsLocationGcpSpec"
      type: object
    v1UserAssetsLocationGcpSpec:
      description: GCP location specification
      example:
        isDefault: true
        type: type
        config:
          bucketName: bucketName
          credentials:
            jsonCredentialsFileUid: jsonCredentialsFileUid
            jsonCredentials: jsonCredentials
          projectId: projectId
      properties:
        config:
          $ref: "#/components/schemas/v1GcpStorageConfig"
        isDefault:
          description: "Set to 'true', if location has to be set as default"
          type: boolean
        type:
          description: "GCP location type [gcp]"
          type: string
      required:
      - config
      type: object
    v1UserAssetsLocationS3:
      description: S3 location object
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        spec:
          isDefault: true
          type: type
          config:
            useRestic: true
            bucketName: bucketName
            s3Url: s3Url
            caCert: caCert
            credentials:
              credentialType: secret
              secretSpec:
                mission: mission
                permissionBoundary: permissionBoundary
                role: role
                agency: agency
                accountName: accountName
                namePrefix: namePrefix
                tls:
                  cert: cert
                  ca: ca
                  key: key
                isCapValidationEnabled: true
                policy: policy
              partition: aws
              sts:
                externalId: externalId
                arn: arn
              secretKey: secretKey
              accessKey: accessKey
              secretToken: secretToken
              policyARNs:
              - policyARNs
              - policyARNs
            region: region
            s3ForcePathStyle: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
        spec:
          $ref: "#/components/schemas/v1UserAssetsLocationS3Spec"
      type: object
    v1UserAssetsLocationS3Spec:
      description: S3 location specification
      example:
        isDefault: true
        type: type
        config:
          useRestic: true
          bucketName: bucketName
          s3Url: s3Url
          caCert: caCert
          credentials:
            credentialType: secret
            secretSpec:
              mission: mission
              permissionBoundary: permissionBoundary
              role: role
              agency: agency
              accountName: accountName
              namePrefix: namePrefix
              tls:
                cert: cert
                ca: ca
                key: key
              isCapValidationEnabled: true
              policy: policy
            partition: aws
            sts:
              externalId: externalId
              arn: arn
            secretKey: secretKey
            accessKey: accessKey
            secretToken: secretToken
            policyARNs:
            - policyARNs
            - policyARNs
          region: region
          s3ForcePathStyle: true
      properties:
        config:
          $ref: "#/components/schemas/v1S3StorageConfig"
        isDefault:
          description: "Set to 'true', if location has to be set as default"
          type: boolean
        type:
          description: "S3 location type [s3/minio]"
          type: string
      required:
      - config
      type: object
    v1UserAssetsLocationSpec:
      description: Location specification
      example:
        isDefault: true
        storage: s3
        type: type
      properties:
        isDefault:
          type: boolean
        storage:
          $ref: "#/components/schemas/v1LocationType"
        type:
          type: string
      type: object
    v1UserAssetsLocations:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            isDefault: true
            storage: s3
            type: type
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            isDefault: true
            storage: s3
            type: type
      properties:
        items:
          description: List of locations
          items:
            $ref: "#/components/schemas/v1UserAssetsLocation"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1UserAssetsSsh:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            publicKey: publicKey
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            publicKey: publicKey
      properties:
        items:
          description: List of SSH keys
          items:
            $ref: "#/components/schemas/v1UserAssetSsh"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1UserAuthenticatedUrl:
      description: Returns the Authenticated redirect Url for the palette oidc
      properties:
        redirectUrl:
          description: authenticated redirect Url for the palette oidc
          type: string
      type: object
    v1UserEntity:
      description: User
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserSpecEntity"
      type: object
    v1UserInfo:
      description: User basic information
      example:
        orgName: orgName
        tenantUid: tenantUid
        userUid: userUid
      properties:
        orgName:
          description: Organization name
          type: string
        tenantUid:
          type: string
        userUid:
          type: string
      type: object
    v1UserInfoResponse:
      properties:
        address:
          description: End-User's preferred postal address
          type: string
        birthdate:
          description: "End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑\
            2004] YYYY-MM-DD format"
          type: string
        email:
          description: End-User's preferred e-mail address
          type: string
        email_verified:
          description: User at the time the verification was performed
          type: boolean
        family_name:
          description: Surname(s) or last name(s) of the End-User
          type: string
        gender:
          description: End-User's gender
          type: string
        given_name:
          description: Given name(s) or first name(s) of the End-User
          type: string
        locale:
          description: "End-User's locale, represented as a BCP47 [RFC5646] language\
            \ tag"
          type: string
        middle_name:
          description: Middle name(s) of the End-User
          type: string
        name:
          description: "End-User's full name in displayable form including all name\
            \ parts, possibly including titles and suffixes, ordered according to\
            \ the End-User's locale and preferences"
          type: string
        nickname:
          description: Casual name of the End-User that may or may not be the same
            as the given_name
          type: string
        phone_number:
          description: End-User's preferred telephone number
          type: string
        phone_number_verified:
          description: User at the time the verification was performed
          type: boolean
        picture:
          description: URL of the End-User's profile picture
          type: string
        preferred_username:
          description: "Shorthand name by which the End-User wishes to be referred\
            \ to at the RP, such as janedoe or j.doe"
          type: string
        profile:
          description: URL of the End-User's profile page
          type: string
        sub:
          description: Subject - Identifier for the End-User at the Issuer
          type: string
        updated_at:
          description: Time the End-User's information was last updated
          type: integer
        website:
          description: URL of the End-User's Web page or blog
          type: string
        zoneinfo:
          description: "String from zoneinfo [zoneinfo] time zone database representing\
            \ the End-User's time zone"
          type: string
      type: object
    v1UserKubectlSession:
      example:
        podIp: podIp
        projectUid: projectUid
        clusterUid: clusterUid
        creationTime: creationTime
        port: port
        sessionUid: sessionUid
        podName: podName
        tenantClusterEndpoint: tenantClusterEndpoint
        isActive: true
        userName: userName
        shellyCluster: shellyCluster
        userUid: userUid
      properties:
        clusterUid:
          type: string
        creationTime:
          type: string
        isActive:
          type: boolean
        podIp:
          type: string
        podName:
          type: string
        port:
          type: string
        projectUid:
          type: string
        sessionUid:
          type: string
        shellyCluster:
          type: string
        tenantClusterEndpoint:
          type: string
        userName:
          type: string
        userUid:
          type: string
      type: object
    v1UserMe:
      description: User information wrt permissions
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserSpec"
        status:
          $ref: "#/components/schemas/v1UserMeStatus"
      type: object
    v1UserMeStatus:
      description: User status with permissions
      properties:
        activationLink:
          description: Contains activation link for the user
          type: string
        isActive:
          description: Specifies if user account is active/disabled
          type: boolean
        isContractAccepted:
          description: Specifies if user account has accepted the contract
          type: boolean
          x-omitempty: false
        loginMode:
          description: User's login Mode
          type: string
        projectPermissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        tenant:
          $ref: "#/components/schemas/v1UserMeTenant"
        tenantPermissions:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    v1UserMeTenant:
      properties:
        orgName:
          type: string
        tenantUid:
          type: string
      type: object
    v1UserMeta:
      example:
        firstName: firstName
        lastName: lastName
        uid: uid
        org: org
        emailId: emailId
      properties:
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        org:
          type: string
        uid:
          type: string
      type: object
    v1UserMetaEntity:
      description: User meta entity
      example:
        uid: uid
        name: name
        emailId: emailId
      properties:
        emailId:
          type: string
        name:
          type: string
        uid:
          type: string
      type: object
    v1UserPatch:
      items:
        $ref: "#/components/schemas/v1HttpPatch"
      type: array
    v1UserProfile:
      description: User Profile
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserProfileSpec"
        status:
          $ref: "#/components/schemas/v1UserProfileStatus"
      type: object
    v1UserProfileSpec:
      description: User Profile specifications
      properties:
        emailId:
          description: User's email id
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
    v1UserProfileStatus:
      description: User Profile status
      properties:
        lastPasswordPolicyMail:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastPasswordUpdate:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1UserProfiles:
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1UserProfile"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1UserRoleMap:
      example:
        roles:
        - roles
        - roles
        userId: userId
      properties:
        roles:
          items:
            type: string
          type: array
        userId:
          type: string
      type: object
    v1UserRoleUIDs:
      properties:
        roles:
          items:
            type: string
          type: array
      type: object
    v1UserRolesEntity:
      example:
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
        inheritedRoles:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        inheritedRoles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
      type: object
    v1UserRsaToken:
      description: Rsa Auth token response
      properties:
        token:
          type: string
      type: object
    v1UserSpec:
      description: User specifications
      example:
        firstName: firstName
        lastName: lastName
        roles:
        - roles
        - roles
        emailId: emailId
      properties:
        emailId:
          description: User's email id
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1UserSpecEntity:
      description: User Entity input
      properties:
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        loginMode:
          type: string
        roles:
          items:
            type: string
          type: array
          uniqueItems: true
        teams:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1UserSpecSummary:
      example:
        firstName: firstName
        lastName: lastName
        projects:
        - uid: uid
          name: name
        - uid: uid
          name: name
        teams:
        - uid: uid
          name: name
        - uid: uid
          name: name
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
        emailId: emailId
        projectsCount: 0
      properties:
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        projects:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        projectsCount:
          format: int32
          type: integer
          x-omitempty: false
        roles:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
        teams:
          items:
            $ref: "#/components/schemas/v1UidSummary"
          type: array
      type: object
    v1UserStatus:
      description: User status
      example:
        lastSignIn: 2000-01-23T04:56:07.000+00:00
        isPasswordResetting: true
        activationLink: activationLink
        isActive: true
      properties:
        activationLink:
          description: provides the link to activate or reset the user password
          type: string
          x-omitempty: false
        isActive:
          description: Specifies if user account is active/disabled
          type: boolean
          x-omitempty: false
        isPasswordResetting:
          description: Specifies if user in multi org requested password reset
          type: boolean
          x-omitempty: false
        lastSignIn:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1UserStatusLoginMode:
      properties:
        loginMode:
          enum:
          - dev
          - devops
          type: string
      type: object
    v1UserSummary:
      description: User summary
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          firstName: firstName
          lastName: lastName
          projects:
          - uid: uid
            name: name
          - uid: uid
            name: name
          teams:
          - uid: uid
            name: name
          - uid: uid
            name: name
          roles:
          - uid: uid
            name: name
          - uid: uid
            name: name
          emailId: emailId
          projectsCount: 0
        status:
          lastSignIn: 2000-01-23T04:56:07.000+00:00
          isPasswordResetting: true
          activationLink: activationLink
          isActive: true
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserSpecSummary"
        status:
          $ref: "#/components/schemas/v1UserStatus"
      type: object
    v1UserSummarySortFields:
      enum:
      - name
      - creationTimestamp
      nullable: true
      type: string
      x-nullable: true
    v1UserSummarySortSpec:
      properties:
        field:
          $ref: "#/components/schemas/v1UserSummarySortFields"
        order:
          $ref: "#/components/schemas/v1SortOrder"
      type: object
    v1UserToken:
      description: Returns the Authorization token. To be used for further api calls
      example:
        Authorization: Authorization
        isMfa: true
      properties:
        Authorization:
          description: Describes the authentication token in jwt format.
          type: string
        isMfa:
          description: Indicates the authentication flow using MFA
          type: boolean
          x-omitempty: false
      type: object
    v1UserUpdateEntity:
      description: User
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1UserUpdateSpecEntity"
      type: object
    v1UserUpdateSpecEntity:
      description: User Entity input
      properties:
        emailId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          description: "Deprecated. Use 'v1/users/{uid}/roles' API to assign roles."
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1Users:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            firstName: firstName
            lastName: lastName
            roles:
            - roles
            - roles
            emailId: emailId
          status:
            lastSignIn: 2000-01-23T04:56:07.000+00:00
            isPasswordResetting: true
            activationLink: activationLink
            isActive: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            firstName: firstName
            lastName: lastName
            roles:
            - roles
            - roles
            emailId: emailId
          status:
            lastSignIn: 2000-01-23T04:56:07.000+00:00
            isPasswordResetting: true
            activationLink: activationLink
            isActive: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1User"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1UsersFilterSpec:
      description: Users filter spec
      properties:
        emailId:
          $ref: "#/components/schemas/v1FilterString"
        name:
          $ref: "#/components/schemas/v1FilterString"
      type: object
    v1UsersMetadata:
      example:
        items:
        - uid: uid
          name: name
          emailId: emailId
        - uid: uid
          name: name
          emailId: emailId
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1UserMetaEntity"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1UsersSummary:
      description: "Deprecated, Use v1UsersSummaryList - Returns User summary"
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1UserSummary"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1UsersSummaryList:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            firstName: firstName
            lastName: lastName
            projects:
            - uid: uid
              name: name
            - uid: uid
              name: name
            teams:
            - uid: uid
              name: name
            - uid: uid
              name: name
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            emailId: emailId
            projectsCount: 0
          status:
            lastSignIn: 2000-01-23T04:56:07.000+00:00
            isPasswordResetting: true
            activationLink: activationLink
            isActive: true
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            firstName: firstName
            lastName: lastName
            projects:
            - uid: uid
              name: name
            - uid: uid
              name: name
            teams:
            - uid: uid
              name: name
            - uid: uid
              name: name
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            emailId: emailId
            projectsCount: 0
          status:
            lastSignIn: 2000-01-23T04:56:07.000+00:00
            isPasswordResetting: true
            activationLink: activationLink
            isActive: true
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1UserSummary"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1UsersSummarySpec:
      description: Users filter summary spec
      properties:
        filter:
          $ref: "#/components/schemas/v1UsersFilterSpec"
        sort:
          items:
            $ref: "#/components/schemas/v1UserSummarySortSpec"
          type: array
          uniqueItems: true
      type: object
    v1V1SystemAdminEmail:
      description: SystemAdmin
      properties:
        email:
          type: string
        insecureVerify:
          type: boolean
        password:
          type: string
      type: object
    v1V1SystemAdminPasswordResetEntity:
      description: SystemAdmin
      properties:
        email:
          type: string
        newPassword:
          type: string
        oldPassword:
          type: string
      type: object
    v1VMAddVolumeEntity:
      properties:
        addVolumeOptions:
          $ref: "#/components/schemas/v1VmAddVolumeOptions"
        dataVolumeTemplate:
          $ref: "#/components/schemas/v1VmDataVolumeTemplateSpec"
        persist:
          description: "If 'true' add the disk to the Virtual Machine & Virtual Machine\
            \ Instance, else add the disk to the Virtual Machine Instance only"
          type: boolean
      required:
      - addVolumeOptions
      type: object
    v1VMCluster:
      description: VM Dashboard enabled Spectro cluster
      example:
        metadata:
          uid: uid
          projectUid: projectUid
          name: name
        spec:
          cloudType: cloudType
        status:
          clusterState: clusterState
      properties:
        metadata:
          $ref: "#/components/schemas/v1VMCluster_metadata"
        spec:
          $ref: "#/components/schemas/v1VMCluster_spec"
        status:
          $ref: "#/components/schemas/v1VMCluster_status"
      type: object
    v1VMClusters:
      example:
        items:
        - metadata:
            uid: uid
            projectUid: projectUid
            name: name
          spec:
            cloudType: cloudType
          status:
            clusterState: clusterState
        - metadata:
            uid: uid
            projectUid: projectUid
            name: name
          spec:
            cloudType: cloudType
          status:
            clusterState: clusterState
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1VMCluster"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1VMRemoveVolumeEntity:
      properties:
        persist:
          description: "If 'true' remove the disk from the Virtual Machine & Virtual\
            \ Machine Instance, else remove the disk from the Virtual Machine Instance\
            \ only"
          type: boolean
        removeVolumeOptions:
          $ref: "#/components/schemas/v1VmRemoveVolumeOptions"
      required:
      - removeVolumeOptions
      type: object
    v1Variable:
      description: Unique variable field with schema definition
      example:
        immutable: true
        regex: regex
        hidden: true
        defaultValue: defaultValue
        displayName: displayName
        isSensitive: true
        format: string
        name: name
        description: description
        required: true
      properties:
        defaultValue:
          description: The default value of the variable
          type: string
          x-omitempty: false
        description:
          description: Variable description
          type: string
        displayName:
          description: Unique display name of the variable
          type: string
        format:
          $ref: "#/components/schemas/v1VariableFormat"
        hidden:
          description: "If true, then variable will be hidden for overriding the value.\
            \ By default the hidden flag will be set to false"
          type: boolean
          x-omitempty: false
        immutable:
          description: "If true, then variable value can't be editable. By default\
            \ the immutable flag will be set to false"
          type: boolean
          x-omitempty: false
        isSensitive:
          description: "If true, then default value will be masked. By default the\
            \ isSensitive flag will be set to false"
          type: boolean
          x-omitempty: false
        name:
          description: Variable name
          type: string
        regex:
          description: Regular expression pattern which the variable value must match
          type: string
        required:
          description: Flag to specify if the variable is optional or mandatory. If
            it is mandatory then default value must be provided
          type: boolean
          x-omitempty: false
      required:
      - name
      type: object
    v1VariableFormat:
      default: string
      description: Format type of the variable value
      enum:
      - string
      - number
      - boolean
      - ipv4
      - ipv4cidr
      - ipv6
      - version
      type: string
    v1VariableNames:
      properties:
        variables:
          description: Array of variable names
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - variables
      type: object
    v1Variables:
      example:
        variables:
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          required: true
        - immutable: true
          regex: regex
          hidden: true
          defaultValue: defaultValue
          displayName: displayName
          isSensitive: true
          format: string
          name: name
          description: description
          required: true
      properties:
        variables:
          description: List of unique variable fields with schema constraints
          items:
            $ref: "#/components/schemas/v1Variable"
          type: array
          uniqueItems: true
      type: object
    v1Virtual:
      example:
        clusterGroup:
          uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        lifecycleStatus:
          msg: msg
          status: Pausing
        appDeployments:
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        hostCluster:
          uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        virtualClusters:
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        state: state
      properties:
        appDeployments:
          description: list of apps deployed on the virtual cluster
          items:
            $ref: "#/components/schemas/v1ObjectResReference"
          type: array
        clusterGroup:
          $ref: "#/components/schemas/v1ObjectResReference"
        hostCluster:
          $ref: "#/components/schemas/v1ObjectResReference"
        lifecycleStatus:
          $ref: "#/components/schemas/v1LifecycleStatus"
        state:
          description: cluster virtual host status
          type: string
        virtualClusters:
          description: list of virtual clusters deployed on the cluster
          items:
            $ref: "#/components/schemas/v1ObjectResReference"
          type: array
      type: object
    v1VirtualCloudClusterConfigEntity:
      description: Virtual cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1VirtualClusterConfig"
      type: object
    v1VirtualCloudConfig:
      description: VirtualCloudConfig is the Schema for the virtual cloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          hostClusterUid: hostClusterUid
          machinePoolConfig:
          - isControlPlane: true
            instanceType:
              maxStorageGiB: 5
              minMemInMiB: 2
              minStorageGiB: 7
              maxCPU: 6
              minCPU: 5
              maxMemInMiB: 1
            additionalLabels:
              key: additionalLabels
            maxSize: 9
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 2
            name: name
            minSize: 3
            azs:
            - azs
            - azs
            resourcePool: resourcePool
          - isControlPlane: true
            instanceType:
              maxStorageGiB: 5
              minMemInMiB: 2
              minStorageGiB: 7
              maxCPU: 6
              minCPU: 5
              maxMemInMiB: 1
            additionalLabels:
              key: additionalLabels
            maxSize: 9
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 2
            name: name
            minSize: 3
            azs:
            - azs
            - azs
            resourcePool: resourcePool
          clusterConfig:
            helmRelease:
              values: ""
              chart:
                repo: ""
                name: ""
                version: ""
            controlPlaneEndpoint:
              port: 0
              host: host
            kubernetesVersion: ""
        status:
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VirtualCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1NestedCloudConfigStatus"
      type: object
    v1VirtualCloudConfigSpec:
      description: VirtualCloudConfigSpec defines the cloud configuration input by
        user This will translate to clusterspec for cluster-api.
      example:
        hostClusterUid: hostClusterUid
        machinePoolConfig:
        - isControlPlane: true
          instanceType:
            maxStorageGiB: 5
            minMemInMiB: 2
            minStorageGiB: 7
            maxCPU: 6
            minCPU: 5
            maxMemInMiB: 1
          additionalLabels:
            key: additionalLabels
          maxSize: 9
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 2
          name: name
          minSize: 3
          azs:
          - azs
          - azs
          resourcePool: resourcePool
        - isControlPlane: true
          instanceType:
            maxStorageGiB: 5
            minMemInMiB: 2
            minStorageGiB: 7
            maxCPU: 6
            minCPU: 5
            maxMemInMiB: 1
          additionalLabels:
            key: additionalLabels
          maxSize: 9
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 2
          name: name
          minSize: 3
          azs:
          - azs
          - azs
          resourcePool: resourcePool
        clusterConfig:
          helmRelease:
            values: ""
            chart:
              repo: ""
              name: ""
              version: ""
          controlPlaneEndpoint:
            port: 0
            host: host
          kubernetesVersion: ""
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1VirtualClusterConfig"
        hostClusterUid:
          type: string
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1VirtualMachinePoolConfig"
          type: array
      required:
      - clusterConfig
      - hostClusterUid
      - machinePoolConfig
      type: object
    v1VirtualClusterConfig:
      description: Cluster level configuration for virtual cluster
      example:
        helmRelease:
          values: ""
          chart:
            repo: ""
            name: ""
            version: ""
        controlPlaneEndpoint:
          port: 0
          host: host
        kubernetesVersion: ""
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1APIEndpoint"
        helmRelease:
          $ref: "#/components/schemas/v1VirtualClusterHelmRelease"
        kubernetesVersion:
          default: ""
          type: string
      type: object
    v1VirtualClusterHelmChart:
      example:
        repo: ""
        name: ""
        version: ""
      properties:
        name:
          default: ""
          type: string
        repo:
          default: ""
          type: string
        version:
          default: ""
          type: string
      type: object
    v1VirtualClusterHelmRelease:
      example:
        values: ""
        chart:
          repo: ""
          name: ""
          version: ""
      properties:
        chart:
          $ref: "#/components/schemas/v1VirtualClusterHelmChart"
        values:
          default: ""
          type: string
      type: object
    v1VirtualClusterResize:
      properties:
        instanceType:
          $ref: "#/components/schemas/v1VirtualInstanceType"
      required:
      - instanceType
      type: object
    v1VirtualInstanceType:
      example:
        maxStorageGiB: 5
        minMemInMiB: 2
        minStorageGiB: 7
        maxCPU: 6
        minCPU: 5
        maxMemInMiB: 1
      properties:
        maxCPU:
          description: Maximum CPU cores
          format: int32
          type: integer
        maxMemInMiB:
          description: Maximum memory in MiB
          format: int32
          type: integer
        maxStorageGiB:
          description: Maximum storage in GiB
          format: int32
          type: integer
        minCPU:
          description: Minimum CPU cores
          format: int32
          type: integer
        minMemInMiB:
          description: Minimum memory in MiB
          format: int32
          type: integer
        minStorageGiB:
          description: Minimum storage in GiB
          format: int32
          type: integer
      type: object
    v1VirtualMachine:
      description: Virtual cloud machine definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        kind: kind
        spec:
          hostname: hostname
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VirtualMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1VirtualMachinePoolCloudConfigEntity:
      properties:
        instanceType:
          $ref: "#/components/schemas/v1VirtualInstanceType"
      required:
      - instanceType
      type: object
    v1VirtualMachinePoolConfig:
      example:
        isControlPlane: true
        instanceType:
          maxStorageGiB: 5
          minMemInMiB: 2
          minStorageGiB: 7
          maxCPU: 6
          minCPU: 5
          maxMemInMiB: 1
        additionalLabels:
          key: additionalLabels
        maxSize: 9
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 2
        name: name
        minSize: 3
        azs:
        - azs
        - azs
        resourcePool: resourcePool
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        azs:
          items:
            type: string
          type: array
        instanceType:
          $ref: "#/components/schemas/v1VirtualInstanceType"
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        resourcePool:
          type: string
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
      required:
      - instanceType
      type: object
    v1VirtualMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1VirtualMachinePoolCloudConfigEntity"
      required:
      - cloudConfig
      type: object
    v1VirtualMachineSnapshot:
      description: VirtualMachineSnapshot defines the operation of snapshotting a
        VM
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          managedFields:
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          deletionPolicy: deletionPolicy
          source:
            apiGroup: apiGroup
            kind: kind
            name: name
          failureDeadline: failureDeadline
        status:
          phase: phase
          sourceUID: sourceUID
          indications:
          - indications
          - indications
          creationTime: 2000-01-23T04:56:07.000+00:00
          snapshotVolumes:
            includedVolumes:
            - includedVolumes
            - includedVolumes
            excludedVolumes:
            - excludedVolumes
            - excludedVolumes
          virtualMachineSnapshotContentName: virtualMachineSnapshotContentName
          readyToUse: true
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          error:
            time: 2000-01-23T04:56:07.000+00:00
            message: message
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1VmObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VirtualMachineSnapshotSpec"
        status:
          $ref: "#/components/schemas/v1VirtualMachineSnapshotStatus"
      required:
      - spec
      type: object
    v1VirtualMachineSnapshotList:
      description: VirtualMachineSnapshotList is a list of VirtualMachineSnapshot
        resources
      example:
        metadata:
          remainingItemCount: 3
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            deletionPolicy: deletionPolicy
            source:
              apiGroup: apiGroup
              kind: kind
              name: name
            failureDeadline: failureDeadline
          status:
            phase: phase
            sourceUID: sourceUID
            indications:
            - indications
            - indications
            creationTime: 2000-01-23T04:56:07.000+00:00
            snapshotVolumes:
              includedVolumes:
              - includedVolumes
              - includedVolumes
              excludedVolumes:
              - excludedVolumes
              - excludedVolumes
            virtualMachineSnapshotContentName: virtualMachineSnapshotContentName
            readyToUse: true
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            error:
              time: 2000-01-23T04:56:07.000+00:00
              message: message
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations:
              key: annotations
            generateName: generateName
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            managedFields:
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            - apiVersion: apiVersion
              fieldsV1:
                Raw:
                - Raw
                - Raw
              manager: manager
              subresource: subresource
              time: 2000-01-23T04:56:07.000+00:00
              operation: operation
              fieldsType: fieldsType
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            deletionPolicy: deletionPolicy
            source:
              apiGroup: apiGroup
              kind: kind
              name: name
            failureDeadline: failureDeadline
          status:
            phase: phase
            sourceUID: sourceUID
            indications:
            - indications
            - indications
            creationTime: 2000-01-23T04:56:07.000+00:00
            snapshotVolumes:
              includedVolumes:
              - includedVolumes
              - includedVolumes
              excludedVolumes:
              - excludedVolumes
              - excludedVolumes
            virtualMachineSnapshotContentName: virtualMachineSnapshotContentName
            readyToUse: true
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            error:
              time: 2000-01-23T04:56:07.000+00:00
              message: message
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            $ref: "#/components/schemas/v1VirtualMachineSnapshot"
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1VmListMeta"
      required:
      - items
      - metadata
      type: object
    v1VirtualMachineSnapshotSpec:
      description: VirtualMachineSnapshotSpec is the spec for a VirtualMachineSnapshot
        resource
      example:
        deletionPolicy: deletionPolicy
        source:
          apiGroup: apiGroup
          kind: kind
          name: name
        failureDeadline: failureDeadline
      properties:
        deletionPolicy:
          type: string
        failureDeadline:
          description: "Duration is a wrapper around time.Duration which supports\
            \ correct marshaling to YAML and JSON. In particular, it marshals into\
            \ strings, which can be used as map keys in json."
          type: string
        source:
          $ref: "#/components/schemas/v1VmTypedLocalObjectReference"
      required:
      - source
      type: object
    v1VirtualMachineSnapshotStatus:
      description: VirtualMachineSnapshotStatus is the status for a VirtualMachineSnapshot
        resource
      example:
        phase: phase
        sourceUID: sourceUID
        indications:
        - indications
        - indications
        creationTime: 2000-01-23T04:56:07.000+00:00
        snapshotVolumes:
          includedVolumes:
          - includedVolumes
          - includedVolumes
          excludedVolumes:
          - excludedVolumes
          - excludedVolumes
        virtualMachineSnapshotContentName: virtualMachineSnapshotContentName
        readyToUse: true
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        error:
          time: 2000-01-23T04:56:07.000+00:00
          message: message
      nullable: true
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/v1VmCondition"
          type: array
        creationTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        error:
          $ref: "#/components/schemas/v1VmError"
        indications:
          items:
            type: string
          type: array
          x-kubernetes-list-type: set
        phase:
          type: string
        readyToUse:
          type: boolean
        snapshotVolumes:
          $ref: "#/components/schemas/v1VmSnapshotVolumesLists"
        sourceUID:
          type: string
        virtualMachineSnapshotContentName:
          type: string
      type: object
      x-nullable: true
    v1VirtualMachineSpec:
      description: Virtual cloud machine definition spec
      example:
        hostname: hostname
      properties:
        hostname:
          type: string
      type: object
    v1VirtualMachines:
      description: List of virtual machines
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            hostname: hostname
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          kind: kind
          spec:
            hostname: hostname
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1VirtualMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1VirtualNetwork:
      description: Azure virtual network is the fundamental building block for your
        private network in Azure.
      example:
        addressSpaces:
        - addressSpaces
        - addressSpaces
        name: name
        location: location
        subnets:
        - securityGroupName: securityGroupName
          nsgResourceGroup: nsgResourceGroup
          cidrBlock: cidrBlock
          name: name
        - securityGroupName: securityGroupName
          nsgResourceGroup: nsgResourceGroup
          cidrBlock: cidrBlock
          name: name
        id: id
        type: type
      properties:
        addressSpaces:
          description: Location of the virtual network
          items:
            type: string
          type: array
          uniqueItems: true
        id:
          description: The ID of the resource group
          type: string
        location:
          description: Location of the virtual network
          type: string
        name:
          description: Name of the virtual network
          type: string
        subnets:
          description: List of subnets associated with Azure VPC
          items:
            $ref: "#/components/schemas/v1Subnet"
          type: array
        type:
          description: Type of the virtual network
          type: string
      type: object
    v1VmAccessCredential:
      description: AccessCredential represents a credential source that can be used
        to authorize remote access to the vm guest Only one of its members may be
        specified.
      example:
        sshPublicKey:
          propagationMethod:
            configDrive: "{}"
            qemuGuestAgent:
              users:
              - users
              - users
          source:
            secret:
              secretName: secretName
        userPassword:
          propagationMethod:
            qemuGuestAgent: "{}"
          source:
            secret:
              secretName: secretName
      properties:
        sshPublicKey:
          $ref: "#/components/schemas/v1VmSshPublicKeyAccessCredential"
        userPassword:
          $ref: "#/components/schemas/v1VmUserPasswordAccessCredential"
      type: object
    v1VmAccessCredentialSecretSource:
      example:
        secretName: secretName
      properties:
        secretName:
          description: SecretName represents the name of the secret in the VMI's namespace
          type: string
      required:
      - secretName
      type: object
    v1VmAddVolumeOptions:
      description: AddVolumeOptions is provided when dynamically hot plugging a volume
        and disk
      example:
        disk:
          shareable: true
          cache: cache
          dedicatedIOThread: true
          disk:
            bus: bus
            readonly: true
            pciAddress: pciAddress
          lun:
            bus: bus
            readonly: true
          bootOrder: 4
          serial: serial
          io: io
          name: name
          tag: tag
          cdrom:
            tray: tray
            bus: bus
            readonly: true
          blockSize:
            custom:
              physical: 2
              logical: 3
            matchVolume:
              enabled: true
        dryRun:
        - dryRun
        - dryRun
        name: name
        volumeSource:
          dataVolume:
            hotpluggable: true
            name: name
          persistentVolumeClaim:
            claimName: claimName
            hotpluggable: true
            readOnly: true
      properties:
        disk:
          $ref: "#/components/schemas/v1VmDisk"
        dryRun:
          description: "When present, indicates that modifications should not be persisted.\
            \ An invalid or unrecognized dryRun directive will result in an error\
            \ response and no further processing of the request. Valid values are:\
            \ - All: all dry run stages will be processed"
          items:
            type: string
          type: array
          x-kubernetes-list-type: atomic
        name:
          description: Name represents the name that will be used to map the disk
            to the corresponding volume. This overrides any name set inside the Disk
            struct itself.
          type: string
        volumeSource:
          $ref: "#/components/schemas/v1VmHotplugVolumeSource"
      required:
      - disk
      - name
      - volumeSource
      type: object
    v1VmAffinity:
      description: Affinity is a group of affinity scheduling rules.
      example:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 1
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 1
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 5
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 5
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 5
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 5
      properties:
        nodeAffinity:
          $ref: "#/components/schemas/v1VmNodeAffinity"
        podAffinity:
          $ref: "#/components/schemas/v1VmPodAffinity"
        podAntiAffinity:
          $ref: "#/components/schemas/v1PodAntiAffinity"
      type: object
    v1VmBIOS:
      description: "If set (default), BIOS will be used."
      example:
        useSerial: true
      properties:
        useSerial:
          description: "If set, the BIOS output will be transmitted over serial"
          type: boolean
      type: object
    v1VmBlockSize:
      description: BlockSize provides the option to change the block size presented
        to the VM for a disk. Only one of its members may be specified.
      example:
        custom:
          physical: 2
          logical: 3
        matchVolume:
          enabled: true
      properties:
        custom:
          $ref: "#/components/schemas/v1VmCustomBlockSize"
        matchVolume:
          $ref: "#/components/schemas/v1VmFeatureState"
      type: object
    v1VmBootloader:
      description: Represents the firmware blob used to assist in the domain creation
        process. Used for setting the QEMU BIOS file path for the libvirt domain.
      example:
        bios:
          useSerial: true
        efi:
          secureBoot: true
      properties:
        bios:
          $ref: "#/components/schemas/v1VmBIOS"
        efi:
          $ref: "#/components/schemas/v1VmEFI"
      type: object
    v1VmCDRomTarget:
      example:
        tray: tray
        bus: bus
        readonly: true
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi."
          type: string
        readonly:
          description: ReadOnly. Defaults to true.
          type: boolean
        tray:
          description: Tray indicates if the tray of the device is open or closed.
            Allowed values are "open" and "closed". Defaults to closed.
          type: string
      type: object
    v1VmChassis:
      description: Chassis specifies the chassis info passed to the domain.
      example:
        serial: serial
        asset: asset
        sku: sku
        version: version
        manufacturer: manufacturer
      properties:
        asset:
          type: string
        manufacturer:
          type: string
        serial:
          type: string
        sku:
          type: string
        version:
          type: string
      type: object
    v1VmClientPassthroughDevices:
      description: |-
        Represent a subset of client devices that can be accessed by VMI. At the moment only, USB devices using Usbredir's library and tooling. Another fit would be a smartcard with libcacard.

        The struct is currently empty as there is no immediate request for user-facing APIs. This structure simply turns on USB redirection of UsbClientPassthroughMaxNumberOf devices.
      type: object
    v1VmClock:
      description: Represents the clock and timers of a vmi.
      example:
        timer:
          rtc:
            tickPolicy: tickPolicy
            present: true
            track: track
          kvm:
            present: true
          hpet:
            tickPolicy: tickPolicy
            present: true
          pit:
            tickPolicy: tickPolicy
            present: true
          hyperv:
            present: true
        utc:
          offsetSeconds: 5
        timezone: timezone
      properties:
        timer:
          $ref: "#/components/schemas/v1VmTimer"
        timezone:
          description: Timezone sets the guest clock to the specified timezone. Zone
            name follows the TZ environment variable format (e.g. 'America/New_York').
          type: string
        utc:
          $ref: "#/components/schemas/v1VmClockOffsetUTC"
      type: object
    v1VmClockOffsetUTC:
      description: UTC sets the guest clock to UTC on each boot.
      example:
        offsetSeconds: 5
      properties:
        offsetSeconds:
          description: "OffsetSeconds specifies an offset in seconds, relative to\
            \ UTC. If set, guest changes to the clock will be kept during reboots\
            \ and not reset."
          format: int32
          type: integer
      type: object
    v1VmCloudInitConfigDriveSource:
      description: "Represents a cloud-init config drive user data source. More info:\
        \ https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html"
      example:
        networkDataSecretRef:
          name: name
        userData: userData
        networkData: networkData
        networkDataBase64: networkDataBase64
        secretRef:
          name: name
        userDataBase64: userDataBase64
      properties:
        networkData:
          description: NetworkData contains config drive inline cloud-init networkdata.
          type: string
        networkDataBase64:
          description: NetworkDataBase64 contains config drive cloud-init networkdata
            as a base64 encoded string.
          type: string
        networkDataSecretRef:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
        secretRef:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
        userData:
          description: UserData contains config drive inline cloud-init userdata.
          type: string
        userDataBase64:
          description: UserDataBase64 contains config drive cloud-init userdata as
            a base64 encoded string.
          type: string
      type: object
    v1VmCloudInitNoCloudSource:
      description: "Represents a cloud-init nocloud user data source. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html"
      example:
        networkDataSecretRef:
          name: name
        userData: userData
        networkData: networkData
        networkDataBase64: networkDataBase64
        secretRef:
          name: name
        userDataBase64: userDataBase64
      properties:
        networkData:
          description: NetworkData contains NoCloud inline cloud-init networkdata.
          type: string
        networkDataBase64:
          description: NetworkDataBase64 contains NoCloud cloud-init networkdata as
            a base64 encoded string.
          type: string
        networkDataSecretRef:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
        secretRef:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
        userData:
          description: UserData contains NoCloud inline cloud-init userdata.
          type: string
        userDataBase64:
          description: UserDataBase64 contains NoCloud cloud-init userdata as a base64
            encoded string.
          type: string
      type: object
    v1VmCondition:
      description: Condition defines conditions
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastProbeTime: lastProbeTime
        status: status
      properties:
        lastProbeTime:
          type: string
        lastTransitionTime:
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - status
      - type
      type: object
    v1VmConfigDriveSshPublicKeyAccessCredentialPropagation:
      type: object
    v1VmConfigMapVolumeSource:
      description: "ConfigMapVolumeSource adapts a ConfigMap into a volume. More info:\
        \ https://kubernetes.io/docs/concepts/storage/volumes/#configmap"
      example:
        volumeLabel: volumeLabel
        name: name
        optional: true
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap or it's keys must be defined
          type: boolean
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    v1VmContainerDiskSource:
      description: Represents a docker image with an embedded disk.
      example:
        image: image
        imagePullPolicy: imagePullPolicy
        imagePullSecret: imagePullSecret
        path: path
      properties:
        image:
          description: Image is the name of the image with the embedded disk.
          type: string
        imagePullPolicy:
          description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults\
            \ to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot\
            \ be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
          type: string
        imagePullSecret:
          description: ImagePullSecret is the name of the Docker registry secret required
            to pull the image. The secret must already exist.
          type: string
        path:
          description: Path defines the path to disk file in the container
          type: string
      required:
      - image
      type: object
    v1VmCoreDataVolumeSource:
      example:
        hotpluggable: true
        name: name
      properties:
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        name:
          description: Name of both the DataVolume and the PVC in the same namespace.
            After PVC population the DataVolume is garbage collected by default.
          type: string
      required:
      - name
      type: object
    v1VmCoreResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      example:
        requests:
          key: null
        limits:
          key: null
      properties:
        limits:
          additionalProperties:
            $ref: "#/components/schemas/v1VmQuantity"
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
        requests:
          additionalProperties:
            $ref: "#/components/schemas/v1VmQuantity"
          description: "Requests describes the minimum amount of compute resources\
            \ required. If Requests is omitted for a container, it defaults to Limits\
            \ if that is explicitly specified, otherwise to an implementation-defined\
            \ value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
      type: object
    v1VmCpu:
      description: CPU allows specifying the CPU topology.
      example:
        features:
        - name: name
          policy: policy
        - name: name
          policy: policy
        realtime:
          mask: mask
        cores: 2
        dedicatedCpuPlacement: true
        numa:
          guestMappingPassthrough: "{}"
        threads: 9
        model: model
        sockets: 7
        isolateEmulatorThread: true
      properties:
        cores:
          description: Cores specifies the number of cores inside the vmi. Must be
            a value greater or equal 1.
          format: int64
          type: integer
        dedicatedCpuPlacement:
          description: DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance
            on a node with enough dedicated pCPUs and pin the vCPUs to it.
          type: boolean
        features:
          description: Features specifies the CPU features list inside the VMI.
          items:
            $ref: "#/components/schemas/v1VmCpuFeature"
          type: array
        isolateEmulatorThread:
          description: IsolateEmulatorThread requests one more dedicated pCPU to be
            allocated for the VMI to place the emulator thread on it.
          type: boolean
        model:
          description: Model specifies the CPU model inside the VMI. List of available
            models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It
            is possible to specify special cases like "host-passthrough" to get the
            same CPU as the node and "host-model" to get CPU closest to the node one.
            Defaults to host-model.
          type: string
        numa:
          $ref: "#/components/schemas/v1VmNUMA"
        realtime:
          $ref: "#/components/schemas/v1VmRealtime"
        sockets:
          description: Sockets specifies the number of sockets inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
        threads:
          description: Threads specifies the number of threads inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
      type: object
    v1VmCpuFeature:
      description: CPUFeature allows specifying a CPU feature.
      example:
        name: name
        policy: policy
      properties:
        name:
          description: Name of the CPU feature
          type: string
        policy:
          description: "Policy is the CPU feature attribute which can have the following\
            \ attributes: force    - The virtual CPU will claim the feature is supported\
            \ regardless of it being supported by host CPU. require  - Guest creation\
            \ will fail unless the feature is supported by the host CPU or the hypervisor\
            \ is able to emulate it. optional - The feature will be supported by virtual\
            \ CPU if and only if it is supported by host CPU. disable  - The feature\
            \ will not be supported by virtual CPU. forbid   - Guest creation will\
            \ fail if the feature is supported by host CPU. Defaults to require"
          type: string
      required:
      - name
      type: object
    v1VmCustomBlockSize:
      description: CustomBlockSize represents the desired logical and physical block
        size for a VM disk.
      example:
        physical: 2
        logical: 3
      properties:
        logical:
          format: int32
          type: integer
        physical:
          format: int32
          type: integer
      required:
      - logical
      - physical
      type: object
    v1VmDHCPOptions:
      description: Extra DHCP options to use in the interface.
      example:
        ntpServers:
        - ntpServers
        - ntpServers
        tftpServerName: tftpServerName
        bootFileName: bootFileName
        privateOptions:
        - value: value
          option: 1
        - value: value
          option: 1
      properties:
        bootFileName:
          description: If specified will pass option 67 to interface's DHCP server
          type: string
        ntpServers:
          description: If specified will pass the configured NTP server to the VM
            via DHCP option 042.
          items:
            type: string
          type: array
        privateOptions:
          description: "If specified will pass extra DHCP options for private use,\
            \ range: 224-254"
          items:
            $ref: "#/components/schemas/v1VmDHCPPrivateOptions"
          type: array
        tftpServerName:
          description: If specified will pass option 66 to interface's DHCP server
          type: string
      type: object
    v1VmDHCPPrivateOptions:
      description: DHCPExtraOptions defines Extra DHCP options for a VM.
      example:
        value: value
        option: 1
      properties:
        option:
          description: Option is an Integer value from 224-254 Required.
          format: int32
          type: integer
        value:
          description: Value is a String value for the Option provided Required.
          type: string
      required:
      - option
      - value
      type: object
    v1VmDataVolumeBlankImage:
      description: DataVolumeBlankImage provides the parameters to create a new raw
        blank image for the PVC
      type: object
    v1VmDataVolumeCheckpoint:
      description: DataVolumeCheckpoint defines a stage in a warm migration.
      example:
        current: current
        previous: previous
      properties:
        current:
          description: Current is the identifier of the snapshot created for this
            checkpoint.
          type: string
        previous:
          description: Previous is the identifier of the snapshot from the previous
            checkpoint.
          type: string
      required:
      - current
      - previous
      type: object
    v1VmDataVolumeSource:
      description: "DataVolumeSource represents the source for our Data Volume, this\
        \ can be HTTP, Imageio, S3, Registry or an existing PVC"
      example:
        s3:
          secretRef: secretRef
          certConfigMap: certConfigMap
          url: url
        registry:
          imageStream: imageStream
          pullMethod: pullMethod
          secretRef: secretRef
          certConfigMap: certConfigMap
          url: url
        vddk:
          backingFile: backingFile
          initImageURL: initImageURL
          secretRef: secretRef
          thumbprint: thumbprint
          uuid: uuid
          url: url
        blank: "{}"
        imageio:
          secretRef: secretRef
          certConfigMap: certConfigMap
          diskId: diskId
          url: url
        upload: "{}"
        http:
          secretExtraHeaders:
          - secretExtraHeaders
          - secretExtraHeaders
          secretRef: secretRef
          certConfigMap: certConfigMap
          extraHeaders:
          - extraHeaders
          - extraHeaders
          url: url
        pvc:
          name: name
          namespace: namespace
      properties:
        blank:
          description: DataVolumeBlankImage provides the parameters to create a new
            raw blank image for the PVC
          type: object
        http:
          $ref: "#/components/schemas/v1VmDataVolumeSourceHttp"
        imageio:
          $ref: "#/components/schemas/v1VmDataVolumeSourceImageIO"
        pvc:
          $ref: "#/components/schemas/v1VmDataVolumeSourcePVC"
        registry:
          $ref: "#/components/schemas/v1VmDataVolumeSourceRegistry"
        s3:
          $ref: "#/components/schemas/v1VmDataVolumeSourceS3"
        upload:
          description: DataVolumeSourceUpload provides the parameters to create a
            Data Volume by uploading the source
          type: object
        vddk:
          $ref: "#/components/schemas/v1VmDataVolumeSourceVDDK"
      type: object
    v1VmDataVolumeSourceHttp:
      description: "DataVolumeSourceHTTP can be either an http or https endpoint,\
        \ with an optional basic auth user name and password, and an optional configmap\
        \ containing additional CAs"
      example:
        secretExtraHeaders:
        - secretExtraHeaders
        - secretExtraHeaders
        secretRef: secretRef
        certConfigMap: certConfigMap
        extraHeaders:
        - extraHeaders
        - extraHeaders
        url: url
      properties:
        certConfigMap:
          description: "CertConfigMap is a configmap reference, containing a Certificate\
            \ Authority(CA) public key, and a base64 encoded pem certificate"
          type: string
        extraHeaders:
          description: ExtraHeaders is a list of strings containing extra headers
            to include with HTTP transfer requests
          items:
            type: string
          type: array
        secretExtraHeaders:
          description: "SecretExtraHeaders is a list of Secret references, each containing\
            \ an extra HTTP header that may include sensitive information"
          items:
            type: string
          type: array
        secretRef:
          description: "SecretRef A Secret reference, the secret should contain accessKeyId\
            \ (user name) base64 encoded, and secretKey (password) also base64 encoded"
          type: string
        url:
          description: URL is the URL of the http(s) endpoint
          type: string
      required:
      - url
      type: object
    v1VmDataVolumeSourceImageIO:
      description: DataVolumeSourceImageIO provides the parameters to create a Data
        Volume from an imageio source
      example:
        secretRef: secretRef
        certConfigMap: certConfigMap
        diskId: diskId
        url: url
      properties:
        certConfigMap:
          description: CertConfigMap provides a reference to the CA cert
          type: string
        diskId:
          description: DiskID provides id of a disk to be imported
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            ovirt-engine
          type: string
        url:
          description: URL is the URL of the ovirt-engine
          type: string
      required:
      - diskId
      - url
      type: object
    v1VmDataVolumeSourcePVC:
      description: DataVolumeSourcePVC provides the parameters to create a Data Volume
        from an existing PVC
      example:
        name: name
        namespace: namespace
      properties:
        name:
          description: The name of the source PVC
          type: string
        namespace:
          description: The namespace of the source PVC
          type: string
      required:
      - name
      - namespace
      type: object
    v1VmDataVolumeSourceRef:
      description: DataVolumeSourceRef defines an indirect reference to the source
        of data for the DataVolume
      example:
        kind: kind
        name: name
        namespace: namespace
      properties:
        kind:
          description: "The kind of the source reference, currently only \"DataSource\"\
            \ is supported"
          type: string
        name:
          description: The name of the source reference
          type: string
        namespace:
          description: "The namespace of the source reference, defaults to the DataVolume\
            \ namespace"
          type: string
      required:
      - kind
      - name
      type: object
    v1VmDataVolumeSourceRegistry:
      description: DataVolumeSourceRegistry provides the parameters to create a Data
        Volume from an registry source
      example:
        imageStream: imageStream
        pullMethod: pullMethod
        secretRef: secretRef
        certConfigMap: certConfigMap
        url: url
      properties:
        certConfigMap:
          description: CertConfigMap provides a reference to the Registry certs
          type: string
        imageStream:
          description: ImageStream is the name of image stream for import
          type: string
        pullMethod:
          description: "PullMethod can be either \"pod\" (default import), or \"node\"\
            \ (node docker cache based import)"
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            Registry source
          type: string
        url:
          description: "URL is the url of the registry source (starting with the scheme:\
            \ docker, oci-archive)"
          type: string
      type: object
    v1VmDataVolumeSourceS3:
      description: DataVolumeSourceS3 provides the parameters to create a Data Volume
        from an S3 source
      example:
        secretRef: secretRef
        certConfigMap: certConfigMap
        url: url
      properties:
        certConfigMap:
          description: "CertConfigMap is a configmap reference, containing a Certificate\
            \ Authority(CA) public key, and a base64 encoded pem certificate"
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            S3 source
          type: string
        url:
          description: URL is the url of the S3 source
          type: string
      required:
      - url
      type: object
    v1VmDataVolumeSourceUpload:
      description: DataVolumeSourceUpload provides the parameters to create a Data
        Volume by uploading the source
      type: object
    v1VmDataVolumeSourceVDDK:
      description: DataVolumeSourceVDDK provides the parameters to create a Data Volume
        from a Vmware source
      example:
        backingFile: backingFile
        initImageURL: initImageURL
        secretRef: secretRef
        thumbprint: thumbprint
        uuid: uuid
        url: url
      properties:
        backingFile:
          description: BackingFile is the path to the virtual hard disk to migrate
            from vCenter/ESXi
          type: string
        initImageURL:
          description: "InitImageURL is an optional URL to an image containing an\
            \ extracted VDDK library, overrides v2v-vmware config map"
          type: string
        secretRef:
          description: SecretRef provides a reference to a secret containing the username
            and password needed to access the vCenter or ESXi host
          type: string
        thumbprint:
          description: Thumbprint is the certificate thumbprint of the vCenter or
            ESXi host
          type: string
        url:
          description: URL is the URL of the vCenter or ESXi host with the VM to migrate
          type: string
        uuid:
          description: UUID is the UUID of the virtual machine that the backing file
            is attached to in vCenter/ESXi
          type: string
      type: object
    v1VmDataVolumeSpec:
      description: DataVolumeSpec defines the DataVolume type specification
      example:
        finalCheckpoint: true
        preallocation: true
        priorityClassName: priorityClassName
        checkpoints:
        - current: current
          previous: previous
        - current: current
          previous: previous
        source:
          s3:
            secretRef: secretRef
            certConfigMap: certConfigMap
            url: url
          registry:
            imageStream: imageStream
            pullMethod: pullMethod
            secretRef: secretRef
            certConfigMap: certConfigMap
            url: url
          vddk:
            backingFile: backingFile
            initImageURL: initImageURL
            secretRef: secretRef
            thumbprint: thumbprint
            uuid: uuid
            url: url
          blank: "{}"
          imageio:
            secretRef: secretRef
            certConfigMap: certConfigMap
            diskId: diskId
            url: url
          upload: "{}"
          http:
            secretExtraHeaders:
            - secretExtraHeaders
            - secretExtraHeaders
            secretRef: secretRef
            certConfigMap: certConfigMap
            extraHeaders:
            - extraHeaders
            - extraHeaders
            url: url
          pvc:
            name: name
            namespace: namespace
        storage:
          storageClassName: storageClassName
          volumeName: volumeName
          resources:
            requests:
              key: null
            limits:
              key: null
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          accessModes:
          - accessModes
          - accessModes
          dataSource:
            apiGroup: apiGroup
            kind: kind
            name: name
          volumeMode: volumeMode
        pvc:
          storageClassName: storageClassName
          dataSourceRef:
            apiGroup: apiGroup
            kind: kind
            name: name
          volumeName: volumeName
          resources:
            requests:
              key: null
            limits:
              key: null
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          accessModes:
          - accessModes
          - accessModes
          dataSource:
            apiGroup: apiGroup
            kind: kind
            name: name
          volumeMode: volumeMode
        sourceRef:
          kind: kind
          name: name
          namespace: namespace
        contentType: contentType
      properties:
        checkpoints:
          description: "Checkpoints is a list of DataVolumeCheckpoints, representing\
            \ stages in a multistage import."
          items:
            $ref: "#/components/schemas/v1VmDataVolumeCheckpoint"
          type: array
        contentType:
          description: "DataVolumeContentType options: \"kubevirt\", \"archive\""
          type: string
        finalCheckpoint:
          description: FinalCheckpoint indicates whether the current DataVolumeCheckpoint
            is the final checkpoint.
          type: boolean
        preallocation:
          description: Preallocation controls whether storage for DataVolumes should
            be allocated in advance.
          type: boolean
        priorityClassName:
          description: "PriorityClassName for Importer, Cloner and Uploader pod"
          type: string
        pvc:
          $ref: "#/components/schemas/v1VmPersistentVolumeClaimSpec"
        source:
          $ref: "#/components/schemas/v1VmDataVolumeSource"
        sourceRef:
          $ref: "#/components/schemas/v1VmDataVolumeSourceRef"
        storage:
          $ref: "#/components/schemas/v1VmStorageSpec"
      type: object
    v1VmDataVolumeTemplateSpec:
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          managedFields:
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          finalCheckpoint: true
          preallocation: true
          priorityClassName: priorityClassName
          checkpoints:
          - current: current
            previous: previous
          - current: current
            previous: previous
          source:
            s3:
              secretRef: secretRef
              certConfigMap: certConfigMap
              url: url
            registry:
              imageStream: imageStream
              pullMethod: pullMethod
              secretRef: secretRef
              certConfigMap: certConfigMap
              url: url
            vddk:
              backingFile: backingFile
              initImageURL: initImageURL
              secretRef: secretRef
              thumbprint: thumbprint
              uuid: uuid
              url: url
            blank: "{}"
            imageio:
              secretRef: secretRef
              certConfigMap: certConfigMap
              diskId: diskId
              url: url
            upload: "{}"
            http:
              secretExtraHeaders:
              - secretExtraHeaders
              - secretExtraHeaders
              secretRef: secretRef
              certConfigMap: certConfigMap
              extraHeaders:
              - extraHeaders
              - extraHeaders
              url: url
            pvc:
              name: name
              namespace: namespace
          storage:
            storageClassName: storageClassName
            volumeName: volumeName
            resources:
              requests:
                key: null
              limits:
                key: null
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            accessModes:
            - accessModes
            - accessModes
            dataSource:
              apiGroup: apiGroup
              kind: kind
              name: name
            volumeMode: volumeMode
          pvc:
            storageClassName: storageClassName
            dataSourceRef:
              apiGroup: apiGroup
              kind: kind
              name: name
            volumeName: volumeName
            resources:
              requests:
                key: null
              limits:
                key: null
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            accessModes:
            - accessModes
            - accessModes
            dataSource:
              apiGroup: apiGroup
              kind: kind
              name: name
            volumeMode: volumeMode
          sourceRef:
            kind: kind
            name: name
            namespace: namespace
          contentType: contentType
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values."
          type: string
        kind:
          description: Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase.
          type: string
        metadata:
          $ref: "#/components/schemas/v1VmObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VmDataVolumeSpec"
      required:
      - spec
      type: object
    v1VmDevices:
      example:
        autoattachPodInterface: true
        interfaces:
        - dhcpOptions:
            ntpServers:
            - ntpServers
            - ntpServers
            tftpServerName: tftpServerName
            bootFileName: bootFileName
            privateOptions:
            - value: value
              option: 1
            - value: value
              option: 1
          slirp: "{}"
          macvtap: "{}"
          ports:
          - protocol: protocol
            port: 1
            name: name
          - protocol: protocol
            port: 1
            name: name
          macAddress: macAddress
          masquerade: "{}"
          bootOrder: 1
          acpiIndex: 7
          name: name
          sriov: "{}"
          model: model
          pciAddress: pciAddress
          bridge: "{}"
          passt: "{}"
          tag: tag
        - dhcpOptions:
            ntpServers:
            - ntpServers
            - ntpServers
            tftpServerName: tftpServerName
            bootFileName: bootFileName
            privateOptions:
            - value: value
              option: 1
            - value: value
              option: 1
          slirp: "{}"
          macvtap: "{}"
          ports:
          - protocol: protocol
            port: 1
            name: name
          - protocol: protocol
            port: 1
            name: name
          macAddress: macAddress
          masquerade: "{}"
          bootOrder: 1
          acpiIndex: 7
          name: name
          sriov: "{}"
          model: model
          pciAddress: pciAddress
          bridge: "{}"
          passt: "{}"
          tag: tag
        disks:
        - shareable: true
          cache: cache
          dedicatedIOThread: true
          disk:
            bus: bus
            readonly: true
            pciAddress: pciAddress
          lun:
            bus: bus
            readonly: true
          bootOrder: 4
          serial: serial
          io: io
          name: name
          tag: tag
          cdrom:
            tray: tray
            bus: bus
            readonly: true
          blockSize:
            custom:
              physical: 2
              logical: 3
            matchVolume:
              enabled: true
        - shareable: true
          cache: cache
          dedicatedIOThread: true
          disk:
            bus: bus
            readonly: true
            pciAddress: pciAddress
          lun:
            bus: bus
            readonly: true
          bootOrder: 4
          serial: serial
          io: io
          name: name
          tag: tag
          cdrom:
            tray: tray
            bus: bus
            readonly: true
          blockSize:
            custom:
              physical: 2
              logical: 3
            matchVolume:
              enabled: true
        inputs:
        - bus: bus
          name: name
          type: type
        - bus: bus
          name: name
          type: type
        sound:
          name: name
          model: model
        autoattachInputDevice: true
        useVirtioTransitional: true
        rng: "{}"
        autoattachSerialConsole: true
        autoattachVSOCK: true
        filesystems:
        - name: name
          virtiofs: "{}"
        - name: name
          virtiofs: "{}"
        hostDevices:
        - name: name
          tag: tag
          deviceName: deviceName
        - name: name
          tag: tag
          deviceName: deviceName
        networkInterfaceMultiqueue: true
        autoattachMemBalloon: true
        tpm: "{}"
        clientPassthrough: "{}"
        watchdog:
          i6300esb:
            action: action
          name: name
        blockMultiQueue: true
        gpus:
        - name: name
          tag: tag
          virtualGPUOptions:
            display:
              enabled: true
              ramFB:
                enabled: true
          deviceName: deviceName
        - name: name
          tag: tag
          virtualGPUOptions:
            display:
              enabled: true
              ramFB:
                enabled: true
          deviceName: deviceName
        disableHotplug: true
        autoattachGraphicsDevice: true
      properties:
        autoattachGraphicsDevice:
          description: Whether to attach the default graphics device or not. VNC will
            not be available if set to false. Defaults to true.
          type: boolean
        autoattachInputDevice:
          description: Whether to attach an Input Device. Defaults to false.
          type: boolean
        autoattachMemBalloon:
          description: Whether to attach the Memory balloon device with default period.
            Period can be adjusted in virt-config. Defaults to true.
          type: boolean
        autoattachPodInterface:
          description: Whether to attach a pod network interface. Defaults to true.
          type: boolean
        autoattachSerialConsole:
          description: Whether to attach the default serial console or not. Serial
            console access will not be available if set to false. Defaults to true.
          type: boolean
        autoattachVSOCK:
          description: Whether to attach the VSOCK CID to the VM or not. VSOCK access
            will be available if set to true. Defaults to false.
          type: boolean
        blockMultiQueue:
          description: Whether or not to enable virtio multi-queue for block devices.
            Defaults to false.
          type: boolean
        clientPassthrough:
          description: |-
            Represent a subset of client devices that can be accessed by VMI. At the moment only, USB devices using Usbredir's library and tooling. Another fit would be a smartcard with libcacard.

            The struct is currently empty as there is no immediate request for user-facing APIs. This structure simply turns on USB redirection of UsbClientPassthroughMaxNumberOf devices.
          type: object
        disableHotplug:
          description: DisableHotplug disabled the ability to hotplug disks.
          type: boolean
        disks:
          description: "Disks describes disks, cdroms and luns which are connected\
            \ to the vmi."
          items:
            $ref: "#/components/schemas/v1VmDisk"
          type: array
        filesystems:
          description: Filesystems describes filesystem which is connected to the
            vmi.
          items:
            $ref: "#/components/schemas/v1VmFilesystem"
          type: array
          x-kubernetes-list-type: atomic
        gpus:
          description: Whether to attach a GPU device to the vmi.
          items:
            $ref: "#/components/schemas/v1VmGPU"
          type: array
          x-kubernetes-list-type: atomic
        hostDevices:
          description: Whether to attach a host device to the vmi.
          items:
            $ref: "#/components/schemas/v1VmHostDevice"
          type: array
          x-kubernetes-list-type: atomic
        inputs:
          description: Inputs describe input devices
          items:
            $ref: "#/components/schemas/v1VmInput"
          type: array
        interfaces:
          description: Interfaces describe network interfaces which are added to the
            vmi.
          items:
            $ref: "#/components/schemas/v1VmInterface"
          type: array
        networkInterfaceMultiqueue:
          description: "If specified, virtual network interfaces configured with a\
            \ virtio bus will also enable the vhost multiqueue feature for network\
            \ devices. The number of queues created depends on additional factors\
            \ of the VirtualMachineInstance, like the number of guest CPUs."
          type: boolean
        rng:
          description: Rng represents the random device passed from host
          type: object
        sound:
          $ref: "#/components/schemas/v1VmSoundDevice"
        tpm:
          type: object
        useVirtioTransitional:
          description: Fall back to legacy virtio 0.9 support if virtio bus is selected
            on devices. This is helpful for old machines like CentOS6 or RHEL6 which
            do not understand virtio_non_transitional (virtio 1.0).
          type: boolean
        watchdog:
          $ref: "#/components/schemas/v1VmWatchdog"
      type: object
    v1VmDisk:
      example:
        shareable: true
        cache: cache
        dedicatedIOThread: true
        disk:
          bus: bus
          readonly: true
          pciAddress: pciAddress
        lun:
          bus: bus
          readonly: true
        bootOrder: 4
        serial: serial
        io: io
        name: name
        tag: tag
        cdrom:
          tray: tray
          bus: bus
          readonly: true
        blockSize:
          custom:
            physical: 2
            logical: 3
          matchVolume:
            enabled: true
      properties:
        blockSize:
          $ref: "#/components/schemas/v1VmBlockSize"
        bootOrder:
          description: "BootOrder is an integer value > 0, used to determine ordering\
            \ of boot devices. Lower values take precedence. Each disk or interface\
            \ that has a boot order must have a unique value. Disks without a boot\
            \ order are not tried if a disk with a boot order exists."
          format: int32
          type: integer
        cache:
          description: "Cache specifies which kvm disk cache mode should be used.\
            \ Supported values are: CacheNone, CacheWriteThrough."
          type: string
        cdrom:
          $ref: "#/components/schemas/v1VmCDRomTarget"
        dedicatedIOThread:
          description: dedicatedIOThread indicates this disk should have an exclusive
            IO Thread. Enabling this implies useIOThreads = true. Defaults to false.
          type: boolean
        disk:
          $ref: "#/components/schemas/v1VmDiskTarget"
        io:
          description: "IO specifies which QEMU disk IO mode should be used. Supported\
            \ values are: native, default, threads."
          type: string
        lun:
          $ref: "#/components/schemas/v1VmLunTarget"
        name:
          description: Name is the device name
          type: string
        serial:
          description: Serial provides the ability to specify a serial number for
            the disk device.
          type: string
        shareable:
          description: If specified the disk is made sharable and multiple write from
            different VMs are permitted
          type: boolean
        tag:
          description: "If specified, disk address and its tag will be provided to\
            \ the guest via config drive metadata"
          type: string
      required:
      - name
      type: object
    v1VmDiskTarget:
      example:
        bus: bus
        readonly: true
        pciAddress: pciAddress
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi, usb."
          type: string
        pciAddress:
          description: "If specified, the virtual disk will be placed on the guests\
            \ pci address with the specified PCI address. For example: 0000:81:01.10"
          type: string
        readonly:
          description: ReadOnly. Defaults to false.
          type: boolean
      type: object
    v1VmDomainSpec:
      example:
        features:
          smm:
            enabled: true
          kvm:
            hidden: true
          apic:
            endOfInterrupt: true
            enabled: true
          acpi:
            enabled: true
          pvspinlock:
            enabled: true
          hyperv:
            vpindex:
              enabled: true
            ipi:
              enabled: true
            reenlightenment:
              enabled: true
            runtime:
              enabled: true
            vendorid:
              vendorid: vendorid
              enabled: true
            evmcs:
              enabled: true
            synictimer:
              direct:
                enabled: true
              enabled: true
            spinlocks:
              spinlocks: 6
              enabled: true
            tlbflush:
              enabled: true
            synic:
              enabled: true
            relaxed:
              enabled: true
            vapic:
              enabled: true
            reset:
              enabled: true
            frequencies:
              enabled: true
        ioThreadsPolicy: ioThreadsPolicy
        memory:
          hugepages:
            pageSize: pageSize
          guest: guest
        devices:
          autoattachPodInterface: true
          interfaces:
          - dhcpOptions:
              ntpServers:
              - ntpServers
              - ntpServers
              tftpServerName: tftpServerName
              bootFileName: bootFileName
              privateOptions:
              - value: value
                option: 1
              - value: value
                option: 1
            slirp: "{}"
            macvtap: "{}"
            ports:
            - protocol: protocol
              port: 1
              name: name
            - protocol: protocol
              port: 1
              name: name
            macAddress: macAddress
            masquerade: "{}"
            bootOrder: 1
            acpiIndex: 7
            name: name
            sriov: "{}"
            model: model
            pciAddress: pciAddress
            bridge: "{}"
            passt: "{}"
            tag: tag
          - dhcpOptions:
              ntpServers:
              - ntpServers
              - ntpServers
              tftpServerName: tftpServerName
              bootFileName: bootFileName
              privateOptions:
              - value: value
                option: 1
              - value: value
                option: 1
            slirp: "{}"
            macvtap: "{}"
            ports:
            - protocol: protocol
              port: 1
              name: name
            - protocol: protocol
              port: 1
              name: name
            macAddress: macAddress
            masquerade: "{}"
            bootOrder: 1
            acpiIndex: 7
            name: name
            sriov: "{}"
            model: model
            pciAddress: pciAddress
            bridge: "{}"
            passt: "{}"
            tag: tag
          disks:
          - shareable: true
            cache: cache
            dedicatedIOThread: true
            disk:
              bus: bus
              readonly: true
              pciAddress: pciAddress
            lun:
              bus: bus
              readonly: true
            bootOrder: 4
            serial: serial
            io: io
            name: name
            tag: tag
            cdrom:
              tray: tray
              bus: bus
              readonly: true
            blockSize:
              custom:
                physical: 2
                logical: 3
              matchVolume:
                enabled: true
          - shareable: true
            cache: cache
            dedicatedIOThread: true
            disk:
              bus: bus
              readonly: true
              pciAddress: pciAddress
            lun:
              bus: bus
              readonly: true
            bootOrder: 4
            serial: serial
            io: io
            name: name
            tag: tag
            cdrom:
              tray: tray
              bus: bus
              readonly: true
            blockSize:
              custom:
                physical: 2
                logical: 3
              matchVolume:
                enabled: true
          inputs:
          - bus: bus
            name: name
            type: type
          - bus: bus
            name: name
            type: type
          sound:
            name: name
            model: model
          autoattachInputDevice: true
          useVirtioTransitional: true
          rng: "{}"
          autoattachSerialConsole: true
          autoattachVSOCK: true
          filesystems:
          - name: name
            virtiofs: "{}"
          - name: name
            virtiofs: "{}"
          hostDevices:
          - name: name
            tag: tag
            deviceName: deviceName
          - name: name
            tag: tag
            deviceName: deviceName
          networkInterfaceMultiqueue: true
          autoattachMemBalloon: true
          tpm: "{}"
          clientPassthrough: "{}"
          watchdog:
            i6300esb:
              action: action
            name: name
          blockMultiQueue: true
          gpus:
          - name: name
            tag: tag
            virtualGPUOptions:
              display:
                enabled: true
                ramFB:
                  enabled: true
            deviceName: deviceName
          - name: name
            tag: tag
            virtualGPUOptions:
              display:
                enabled: true
                ramFB:
                  enabled: true
            deviceName: deviceName
          disableHotplug: true
          autoattachGraphicsDevice: true
        machine:
          type: type
        cpu:
          features:
          - name: name
            policy: policy
          - name: name
            policy: policy
          realtime:
            mask: mask
          cores: 2
          dedicatedCpuPlacement: true
          numa:
            guestMappingPassthrough: "{}"
          threads: 9
          model: model
          sockets: 7
          isolateEmulatorThread: true
        resources:
          overcommitGuestOverhead: true
          requests: "{}"
          limits: "{}"
        chassis:
          serial: serial
          asset: asset
          sku: sku
          version: version
          manufacturer: manufacturer
        clock:
          timer:
            rtc:
              tickPolicy: tickPolicy
              present: true
              track: track
            kvm:
              present: true
            hpet:
              tickPolicy: tickPolicy
              present: true
            pit:
              tickPolicy: tickPolicy
              present: true
            hyperv:
              present: true
          utc:
            offsetSeconds: 5
          timezone: timezone
        firmware:
          serial: serial
          bootloader:
            bios:
              useSerial: true
            efi:
              secureBoot: true
          uuid: uuid
          kernelBoot:
            container:
              image: image
              imagePullPolicy: imagePullPolicy
              imagePullSecret: imagePullSecret
              initrdPath: initrdPath
              kernelPath: kernelPath
            kernelArgs: kernelArgs
        launchSecurity:
          sev: "{}"
      properties:
        chassis:
          $ref: "#/components/schemas/v1VmChassis"
        clock:
          $ref: "#/components/schemas/v1VmClock"
        cpu:
          $ref: "#/components/schemas/v1VmCpu"
        devices:
          $ref: "#/components/schemas/v1VmDevices"
        features:
          $ref: "#/components/schemas/v1VmFeatures"
        firmware:
          $ref: "#/components/schemas/v1VmFirmware"
        ioThreadsPolicy:
          description: "Controls whether or not disks will share IOThreads. Omitting\
            \ IOThreadsPolicy disables use of IOThreads. One of: shared, auto"
          type: string
        launchSecurity:
          $ref: "#/components/schemas/v1VmLaunchSecurity"
        machine:
          $ref: "#/components/schemas/v1VmMachine"
        memory:
          $ref: "#/components/schemas/v1VmMemory"
        resources:
          $ref: "#/components/schemas/v1VmResourceRequirements"
      required:
      - devices
      type: object
    v1VmDownwardApiVolumeFile:
      description: DownwardAPIVolumeFile represents information to create the file
        containing the pod field
      example:
        mode: 9
        path: path
        resourceFieldRef:
          divisor: divisor
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
      properties:
        fieldRef:
          $ref: "#/components/schemas/v1VmObjectFieldSelector"
        mode:
          description: "Optional: mode bits used to set permissions on this file,\
            \ must be an octal value between 0000 and 0777 or a decimal value between\
            \ 0 and 511. YAML accepts both octal and decimal values, JSON requires\
            \ decimal values for mode bits. If not specified, the volume defaultMode\
            \ will be used. This might be in conflict with other options that affect\
            \ the file mode, like fsGroup, and the result can be other mode bits set."
          format: int32
          type: integer
        path:
          description: "Required: Path is  the relative path name of the file to be\
            \ created. Must not be absolute or contain the '..' path. Must be utf-8\
            \ encoded. The first item of the relative path must not start with '..'"
          type: string
        resourceFieldRef:
          $ref: "#/components/schemas/v1VmResourceFieldSelector"
      required:
      - path
      type: object
    v1VmDownwardApiVolumeSource:
      description: DownwardAPIVolumeSource represents a volume containing downward
        API info.
      example:
        volumeLabel: volumeLabel
        fields:
        - mode: 9
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
        - mode: 9
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      properties:
        fields:
          description: Fields is a list of downward API volume file
          items:
            $ref: "#/components/schemas/v1VmDownwardApiVolumeFile"
          type: array
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    v1VmDownwardMetricsVolumeSource:
      description: DownwardMetricsVolumeSource adds a very small disk to VMIs which
        contains a limited view of host and guest metrics. The disk content is compatible
        with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
      type: object
    v1VmDuration:
      description: "Duration is a wrapper around time.Duration which supports correct\
        \ marshaling to YAML and JSON. In particular, it marshals into strings, which\
        \ can be used as map keys in json."
      type: string
    v1VmEFI:
      description: "If set, EFI will be used instead of BIOS."
      example:
        secureBoot: true
      properties:
        secureBoot:
          description: "If set, SecureBoot will be enabled and the OVMF roms will\
            \ be swapped for SecureBoot-enabled ones. Requires SMM to be enabled.\
            \ Defaults to true"
          type: boolean
      type: object
    v1VmEmptyDiskSource:
      description: EmptyDisk represents a temporary disk which shares the vmis lifecycle.
      example:
        capacity: capacity
      properties:
        capacity:
          description: |-
            Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

            The serialization format is:

            <quantity>        ::= <signedNumber><suffix>
              (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
            <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
              (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            <decimalSI>       ::= m | "" | k | M | G | T | P | E
              (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

            No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
              a. No precision is lost
              b. No fractional digits will be emitted
              c. The exponent (or suffix) is as large as possible.
            The sign will be omitted unless the number is negative.

            Examples:
              1.5 will be serialized as "1500m"
              1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

            This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
          type: string
      required:
      - capacity
      type: object
    v1VmEphemeralVolumeSource:
      example:
        persistentVolumeClaim:
          claimName: claimName
          hotpluggable: true
          readOnly: true
      properties:
        persistentVolumeClaim:
          $ref: "#/components/schemas/v1VmPersistentVolumeClaimVolumeSource"
      type: object
    v1VmError:
      description: Error is the last error encountered during the snapshot/restore
      example:
        time: 2000-01-23T04:56:07.000+00:00
        message: message
      properties:
        message:
          type: string
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1VmExecAction:
      description: ExecAction describes a "run in container" action.
      example:
        command:
        - command
        - command
      properties:
        command:
          description: "Command is the command line to execute inside the container,\
            \ the working directory for the command  is root ('/') in the container's\
            \ filesystem. The command is simply exec'd, it is not run inside a shell,\
            \ so traditional shell instructions ('|', etc) won't work. To use a shell,\
            \ you need to explicitly call out to that shell. Exit status of 0 is treated\
            \ as live/healthy and non-zero is unhealthy."
          items:
            type: string
          type: array
      type: object
    v1VmFeatureApiC:
      example:
        endOfInterrupt: true
        enabled: true
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        endOfInterrupt:
          description: EndOfInterrupt enables the end of interrupt notification in
            the guest. Defaults to false.
          type: boolean
      type: object
    v1VmFeatureHyperv:
      description: Hyperv specific features.
      example:
        vpindex:
          enabled: true
        ipi:
          enabled: true
        reenlightenment:
          enabled: true
        runtime:
          enabled: true
        vendorid:
          vendorid: vendorid
          enabled: true
        evmcs:
          enabled: true
        synictimer:
          direct:
            enabled: true
          enabled: true
        spinlocks:
          spinlocks: 6
          enabled: true
        tlbflush:
          enabled: true
        synic:
          enabled: true
        relaxed:
          enabled: true
        vapic:
          enabled: true
        reset:
          enabled: true
        frequencies:
          enabled: true
      properties:
        evmcs:
          $ref: "#/components/schemas/v1VmFeatureState"
        frequencies:
          $ref: "#/components/schemas/v1VmFeatureState"
        ipi:
          $ref: "#/components/schemas/v1VmFeatureState"
        reenlightenment:
          $ref: "#/components/schemas/v1VmFeatureState"
        relaxed:
          $ref: "#/components/schemas/v1VmFeatureState"
        reset:
          $ref: "#/components/schemas/v1VmFeatureState"
        runtime:
          $ref: "#/components/schemas/v1VmFeatureState"
        spinlocks:
          $ref: "#/components/schemas/v1VmFeatureSpinlocks"
        synic:
          $ref: "#/components/schemas/v1VmFeatureState"
        synictimer:
          $ref: "#/components/schemas/v1VmSyNICTimer"
        tlbflush:
          $ref: "#/components/schemas/v1VmFeatureState"
        vapic:
          $ref: "#/components/schemas/v1VmFeatureState"
        vendorid:
          $ref: "#/components/schemas/v1VmFeatureVendorId"
        vpindex:
          $ref: "#/components/schemas/v1VmFeatureState"
      type: object
    v1VmFeatureKVm:
      example:
        hidden: true
      properties:
        hidden:
          description: Hide the KVM hypervisor from standard MSR based discovery.
            Defaults to false
          type: boolean
      type: object
    v1VmFeatureSpinlocks:
      example:
        spinlocks: 6
        enabled: true
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        spinlocks:
          description: Retries indicates the number of retries. Must be a value greater
            or equal 4096. Defaults to 4096.
          format: int64
          type: integer
      type: object
    v1VmFeatureState:
      description: Represents if a feature is enabled or disabled.
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
      type: object
    v1VmFeatureVendorId:
      example:
        vendorid: vendorid
        enabled: true
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        vendorid:
          description: "VendorID sets the hypervisor vendor id, visible to the vmi.\
            \ String up to twelve characters."
          type: string
      type: object
    v1VmFeatures:
      example:
        smm:
          enabled: true
        kvm:
          hidden: true
        apic:
          endOfInterrupt: true
          enabled: true
        acpi:
          enabled: true
        pvspinlock:
          enabled: true
        hyperv:
          vpindex:
            enabled: true
          ipi:
            enabled: true
          reenlightenment:
            enabled: true
          runtime:
            enabled: true
          vendorid:
            vendorid: vendorid
            enabled: true
          evmcs:
            enabled: true
          synictimer:
            direct:
              enabled: true
            enabled: true
          spinlocks:
            spinlocks: 6
            enabled: true
          tlbflush:
            enabled: true
          synic:
            enabled: true
          relaxed:
            enabled: true
          vapic:
            enabled: true
          reset:
            enabled: true
          frequencies:
            enabled: true
      properties:
        acpi:
          $ref: "#/components/schemas/v1VmFeatureState"
        apic:
          $ref: "#/components/schemas/v1VmFeatureApiC"
        hyperv:
          $ref: "#/components/schemas/v1VmFeatureHyperv"
        kvm:
          $ref: "#/components/schemas/v1VmFeatureKVm"
        pvspinlock:
          $ref: "#/components/schemas/v1VmFeatureState"
        smm:
          $ref: "#/components/schemas/v1VmFeatureState"
      type: object
    v1VmFieldsV1:
      description: |-
        FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

        Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:\<index>', where \<index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

        The exact format is defined in sigs.k8s.io/structured-merge-diff
      example:
        Raw:
        - Raw
        - Raw
      properties:
        Raw:
          items:
            format: byte
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
          type: array
      type: object
    v1VmFilesystem:
      example:
        name: name
        virtiofs: "{}"
      properties:
        name:
          description: Name is the device name
          type: string
        virtiofs:
          type: object
      required:
      - name
      - virtiofs
      type: object
    v1VmFilesystemVirtiofs:
      type: object
    v1VmFirmware:
      example:
        serial: serial
        bootloader:
          bios:
            useSerial: true
          efi:
            secureBoot: true
        uuid: uuid
        kernelBoot:
          container:
            image: image
            imagePullPolicy: imagePullPolicy
            imagePullSecret: imagePullSecret
            initrdPath: initrdPath
            kernelPath: kernelPath
          kernelArgs: kernelArgs
      properties:
        bootloader:
          $ref: "#/components/schemas/v1VmBootloader"
        kernelBoot:
          $ref: "#/components/schemas/v1VmKernelBoot"
        serial:
          description: The system-serial-number in SMBIOS
          type: string
        uuid:
          description: UUID reported by the vmi bios. Defaults to a random generated
            uid.
          type: string
      type: object
    v1VmGPU:
      example:
        name: name
        tag: tag
        virtualGPUOptions:
          display:
            enabled: true
            ramFB:
              enabled: true
        deviceName: deviceName
      properties:
        deviceName:
          type: string
        name:
          description: Name of the GPU device as exposed by a device plugin
          type: string
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
        virtualGPUOptions:
          $ref: "#/components/schemas/v1VmVGPUOptions"
      required:
      - deviceName
      - name
      type: object
    v1VmGuestAgentPing:
      description: GuestAgentPing configures the guest-agent based ping probe
      type: object
    v1VmHPETTimer:
      example:
        tickPolicy: tickPolicy
        present: true
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\", \"\
            merge\", \"discard\"."
          type: string
      type: object
    v1VmHostDevice:
      example:
        name: name
        tag: tag
        deviceName: deviceName
      properties:
        deviceName:
          description: DeviceName is the resource name of the host device exposed
            by a device plugin
          type: string
        name:
          type: string
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
      required:
      - deviceName
      - name
      type: object
    v1VmHostDisk:
      description: Represents a disk created on the cluster level
      example:
        path: path
        shared: true
        type: type
        capacity: capacity
      properties:
        capacity:
          description: |-
            Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

            The serialization format is:

            <quantity>        ::= <signedNumber><suffix>
              (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
            <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
              (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            <decimalSI>       ::= m | "" | k | M | G | T | P | E
              (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

            No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
              a. No precision is lost
              b. No fractional digits will be emitted
              c. The exponent (or suffix) is as large as possible.
            The sign will be omitted unless the number is negative.

            Examples:
              1.5 will be serialized as "1500m"
              1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

            This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
          type: string
        path:
          description: The path to HostDisk image located on the cluster
          type: string
        shared:
          description: Shared indicate whether the path is shared between nodes
          type: boolean
        type:
          description: Contains information if disk.img exists or should be created
            allowed options are 'Disk' and 'DiskOrCreate'
          type: string
      required:
      - path
      - type
      type: object
    v1VmHotplugVolumeSource:
      description: HotplugVolumeSource Represents the source of a volume to mount
        which are capable of being hotplugged on a live running VMI. Only one of its
        members may be specified.
      example:
        dataVolume:
          hotpluggable: true
          name: name
        persistentVolumeClaim:
          claimName: claimName
          hotpluggable: true
          readOnly: true
      properties:
        dataVolume:
          $ref: "#/components/schemas/v1VmCoreDataVolumeSource"
        persistentVolumeClaim:
          $ref: "#/components/schemas/v1VmPersistentVolumeClaimVolumeSource"
      type: object
    v1VmHttpGetAction:
      description: HTTPGetAction describes an action based on HTTP Get requests.
      example:
        path: path
        scheme: scheme
        port: port
        host: host
        httpHeaders:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        host:
          description: "Host name to connect to, defaults to the pod IP. You probably\
            \ want to set \"Host\" in httpHeaders instead."
          type: string
        httpHeaders:
          description: Custom headers to set in the request. HTTP allows repeated
            headers.
          items:
            $ref: "#/components/schemas/v1VmHttpHeader"
          type: array
        path:
          description: Path to access on the HTTP server.
          type: string
        port:
          description: Name or number of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          type: string
        scheme:
          description: Scheme to use for connecting to the host. Defaults to HTTP.
          type: string
      required:
      - port
      type: object
    v1VmHttpHeader:
      description: HTTPHeader describes a custom header to be used in HTTP probes
      example:
        name: name
        value: value
      properties:
        name:
          description: The header field name
          type: string
        value:
          description: The header field value
          type: string
      required:
      - name
      - value
      type: object
    v1VmHugepages:
      description: Hugepages allow to use hugepages for the VirtualMachineInstance
        instead of regular memory.
      example:
        pageSize: pageSize
      properties:
        pageSize:
          description: "PageSize specifies the hugepage size, for x86_64 architecture\
            \ valid values are 1Gi and 2Mi."
          type: string
      type: object
    v1VmHypervTimer:
      example:
        present: true
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
      type: object
    v1VmI6300ESBWatchdog:
      description: i6300esb watchdog device.
      example:
        action: action
      properties:
        action:
          description: "The action to take. Valid values are poweroff, reset, shutdown.\
            \ Defaults to reset."
          type: string
      type: object
    v1VmInput:
      example:
        bus: bus
        name: name
        type: type
      properties:
        bus:
          description: "Bus indicates the bus of input device to emulate. Supported\
            \ values: virtio, usb."
          type: string
        name:
          description: Name is the device name
          type: string
        type:
          description: "Type indicated the type of input device. Supported values:\
            \ tablet."
          type: string
      required:
      - name
      - type
      type: object
    v1VmInstancetypeMatcher:
      description: InstancetypeMatcher references a instancetype that is used to fill
        fields in the VMI template.
      example:
        revisionName: revisionName
        kind: kind
        inferFromVolume: inferFromVolume
        name: name
      properties:
        inferFromVolume:
          description: InferFromVolume lists the name of a volume that should be used
            to infer or discover the instancetype to be used through known annotations
            on the underlying resource. Once applied to the InstancetypeMatcher this
            field is removed.
          type: string
        kind:
          description: "Kind specifies which instancetype resource is referenced.\
            \ Allowed values are: \"VirtualMachineInstancetype\" and \"VirtualMachineClusterInstancetype\"\
            . If not specified, \"VirtualMachineClusterInstancetype\" is used by default."
          type: string
        name:
          description: Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
          type: string
        revisionName:
          description: RevisionName specifies a ControllerRevision containing a specific
            copy of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
            to be used. This is initially captured the first time the instancetype
            is applied to the VirtualMachineInstance.
          type: string
      type: object
    v1VmInterface:
      example:
        dhcpOptions:
          ntpServers:
          - ntpServers
          - ntpServers
          tftpServerName: tftpServerName
          bootFileName: bootFileName
          privateOptions:
          - value: value
            option: 1
          - value: value
            option: 1
        slirp: "{}"
        macvtap: "{}"
        ports:
        - protocol: protocol
          port: 1
          name: name
        - protocol: protocol
          port: 1
          name: name
        macAddress: macAddress
        masquerade: "{}"
        bootOrder: 1
        acpiIndex: 7
        name: name
        sriov: "{}"
        model: model
        pciAddress: pciAddress
        bridge: "{}"
        passt: "{}"
        tag: tag
      properties:
        acpiIndex:
          description: "If specified, the ACPI index is used to provide network interface\
            \ device naming, that is stable across changes in PCI addresses assigned\
            \ to the device. This value is required to be unique across all devices\
            \ and be between 1 and (16*1024-1)."
          format: int32
          type: integer
        bootOrder:
          description: "BootOrder is an integer value > 0, used to determine ordering\
            \ of boot devices. Lower values take precedence. Each interface or disk\
            \ that has a boot order must have a unique value. Interfaces without a\
            \ boot order are not tried."
          format: int32
          type: integer
        bridge:
          description: InterfaceBridge connects to a given network via a linux bridge.
          type: object
        dhcpOptions:
          $ref: "#/components/schemas/v1VmDHCPOptions"
        macAddress:
          description: "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF."
          type: string
        macvtap:
          description: InterfaceMacvtap connects to a given network by extending the
            Kubernetes node's L2 networks via a macvtap interface.
          type: object
        masquerade:
          description: InterfaceMasquerade connects to a given network using netfilter
            rules to nat the traffic.
          type: object
        model:
          description: "Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139,\
            \ virtio. Defaults to virtio."
          type: string
        name:
          description: Logical name of the interface as well as a reference to the
            associated networks. Must match the Name of a Network.
          type: string
        passt:
          description: InterfacePasst connects to a given network.
          type: object
        pciAddress:
          description: "If specified, the virtual network interface will be placed\
            \ on the guests pci address with the specified PCI address. For example:\
            \ 0000:81:01.10"
          type: string
        ports:
          description: List of ports to be forwarded to the virtual machine.
          items:
            $ref: "#/components/schemas/v1VmPort"
          type: array
        slirp:
          description: InterfaceSlirp connects to a given network using QEMU user
            networking mode.
          type: object
        sriov:
          description: InterfaceSRIOV connects to a given network by passing-through
            an SR-IOV PCI device via vfio.
          type: object
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
      required:
      - name
      type: object
    v1VmInterfaceBridge:
      description: InterfaceBridge connects to a given network via a linux bridge.
      type: object
    v1VmInterfaceMacvtap:
      description: InterfaceMacvtap connects to a given network by extending the Kubernetes
        node's L2 networks via a macvtap interface.
      type: object
    v1VmInterfaceMasquerade:
      description: InterfaceMasquerade connects to a given network using netfilter
        rules to nat the traffic.
      type: object
    v1VmInterfacePasst:
      description: InterfacePasst connects to a given network.
      type: object
    v1VmInterfaceSRIOV:
      description: InterfaceSRIOV connects to a given network by passing-through an
        SR-IOV PCI device via vfio.
      type: object
    v1VmInterfaceSlirp:
      description: InterfaceSlirp connects to a given network using QEMU user networking
        mode.
      type: object
    v1VmKVmTimer:
      example:
        present: true
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
      type: object
    v1VmKernelBoot:
      description: "Represents the firmware blob used to assist in the kernel boot\
        \ process. Used for setting the kernel, initrd and command line arguments"
      example:
        container:
          image: image
          imagePullPolicy: imagePullPolicy
          imagePullSecret: imagePullSecret
          initrdPath: initrdPath
          kernelPath: kernelPath
        kernelArgs: kernelArgs
      properties:
        container:
          $ref: "#/components/schemas/v1VmKernelBootContainer"
        kernelArgs:
          description: Arguments to be passed to the kernel at boot time
          type: string
      type: object
    v1VmKernelBootContainer:
      description: "If set, the VM will be booted from the defined kernel / initrd."
      example:
        image: image
        imagePullPolicy: imagePullPolicy
        imagePullSecret: imagePullSecret
        initrdPath: initrdPath
        kernelPath: kernelPath
      properties:
        image:
          description: Image that contains initrd / kernel files.
          type: string
        imagePullPolicy:
          description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults\
            \ to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot\
            \ be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
          type: string
        imagePullSecret:
          description: ImagePullSecret is the name of the Docker registry secret required
            to pull the image. The secret must already exist.
          type: string
        initrdPath:
          description: the fully-qualified path to the ramdisk image in the host OS
          type: string
        kernelPath:
          description: The fully-qualified path to the kernel image in the host OS
          type: string
      required:
      - image
      type: object
    v1VmLabelSelector:
      description: A label selector is a label query over a set of resources. The
        result of matchLabels and matchExpressions are ANDed. An empty label selector
        matches all objects. A null label selector matches no objects.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels:
          key: matchLabels
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            $ref: "#/components/schemas/v1VmLabelSelectorRequirement"
          type: array
        matchLabels:
          additionalProperties:
            type: string
          description: "matchLabels is a map of key-value pairs. A single key-value\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          type: object
      type: object
    v1VmLabelSelectorRequirement:
      description: "A label selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: key is the label key that the selector applies to.
          type: string
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: key
        operator:
          description: "operator represents a key's relationship to a set of values.\
            \ Valid operators are In, NotIn, Exists and DoesNotExist."
          type: string
        values:
          description: "values is an array of string values. If the operator is In\
            \ or NotIn, the values array must be non-empty. If the operator is Exists\
            \ or DoesNotExist, the values array must be empty. This array is replaced\
            \ during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    v1VmLaunchSecurity:
      example:
        sev: "{}"
      properties:
        sev:
          type: object
      type: object
    v1VmListMeta:
      description: "ListMeta describes metadata that synthetic resources must have,\
        \ including lists and various status objects. A resource may have only one\
        \ of {ObjectMeta, ListMeta}."
      example:
        remainingItemCount: 3
        continue: continue
        resourceVersion: resourceVersion
        selfLink: selfLink
      properties:
        continue:
          description: "continue may be set if the user set a limit on the number\
            \ of items returned, and indicates that the server has more data available.\
            \ The value is opaque and may be used to issue another request to the\
            \ endpoint that served this list to retrieve the next set of available\
            \ objects. Continuing a consistent list may not be possible if the server\
            \ configuration has changed or more than a few minutes have passed. The\
            \ resourceVersion field returned when using this continue value will be\
            \ identical to the value in the first response, unless you have received\
            \ this token from an error message."
          type: string
        remainingItemCount:
          description: "remainingItemCount is the number of subsequent items in the\
            \ list which are not included in this list response. If the list request\
            \ contained label or field selectors, then the number of remaining items\
            \ is unknown and the field will be left unset and omitted during serialization.\
            \ If the list is complete (either because it is not chunking or because\
            \ this is the last chunk), then there are no more remaining items and\
            \ this field will be left unset and omitted during serialization. Servers\
            \ older than v1.15 do not set this field. The intended use of the remainingItemCount\
            \ is *estimating* the size of a collection. Clients should not rely on\
            \ the remainingItemCount to be set or to be exact."
          format: int64
          type: integer
        resourceVersion:
          description: String that identifies the server's internal version of this
            object that can be used by clients to determine when objects have changed.
            Value must be treated as opaque by clients and passed unmodified back
            to the server. Populated by the system. Read-only.
          type: string
        selfLink:
          description: |-
            selfLink is a URL representing this object. Populated by the system. Read-only.

            DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
          type: string
      type: object
    v1VmLocalObjectReference:
      description: LocalObjectReference contains enough information to let you locate
        the referenced object inside the same namespace.
      example:
        name: name
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
      type: object
    v1VmLunTarget:
      example:
        bus: bus
        readonly: true
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi."
          type: string
        readonly:
          description: ReadOnly. Defaults to false.
          type: boolean
      type: object
    v1VmMachine:
      example:
        type: type
      properties:
        type:
          description: QEMU machine type is the actual chipset of the VirtualMachineInstance.
          type: string
      type: object
    v1VmManagedFieldsEntry:
      description: "ManagedFieldsEntry is a workflow-id, a FieldSet and the group\
        \ version of the resource that the fieldset applies to."
      example:
        apiVersion: apiVersion
        fieldsV1:
          Raw:
          - Raw
          - Raw
        manager: manager
        subresource: subresource
        time: 2000-01-23T04:56:07.000+00:00
        operation: operation
        fieldsType: fieldsType
      properties:
        apiVersion:
          description: APIVersion defines the version of this resource that this field
            set applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field set
            because it cannot be automatically converted.
          type: string
        fieldsType:
          description: "FieldsType is the discriminator for the different fields format\
            \ and version. There is currently only one possible value: \"FieldsV1\""
          type: string
        fieldsV1:
          $ref: "#/components/schemas/v1VmFieldsV1"
        manager:
          description: Manager is an identifier of the workflow managing these fields.
          type: string
        operation:
          description: Operation is the type of operation which lead to this ManagedFieldsEntry
            being created. The only valid values for this field are 'Apply' and 'Update'.
          type: string
        subresource:
          description: "Subresource is the name of the subresource used to update\
            \ that object, or empty string if the object was updated through the main\
            \ resource. The value of this field is used to distinguish between managers,\
            \ even if they share the same name. For example, a status update will\
            \ be distinct from a regular update using the same manager name. Note\
            \ that the APIVersion field is not related to the Subresource field and\
            \ it always corresponds to the version of the main resource."
          type: string
        time:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1VmMemory:
      description: Memory allows specifying the VirtualMachineInstance memory features.
      example:
        hugepages:
          pageSize: pageSize
        guest: guest
      properties:
        guest:
          description: |-
            Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

            The serialization format is:

            <quantity>        ::= <signedNumber><suffix>
              (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
            <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
              (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            <decimalSI>       ::= m | "" | k | M | G | T | P | E
              (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

            No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
              a. No precision is lost
              b. No fractional digits will be emitted
              c. The exponent (or suffix) is as large as possible.
            The sign will be omitted unless the number is negative.

            Examples:
              1.5 will be serialized as "1500m"
              1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

            This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
          type: string
        hugepages:
          $ref: "#/components/schemas/v1VmHugepages"
      type: object
    v1VmMemoryDumpVolumeSource:
      example:
        claimName: claimName
        hotpluggable: true
        readOnly: true
      properties:
        claimName:
          description: "ClaimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        readOnly:
          description: Will force the ReadOnly setting in VolumeMounts. Default false.
          type: boolean
      required:
      - claimName
      type: object
    v1VmMultusNetwork:
      description: Represents the multus cni network.
      example:
        default: true
        networkName: networkName
      properties:
        default:
          description: Select the default network and add it to the multus-cni.io/default-network
            annotation.
          type: boolean
        networkName:
          description: "References to a NetworkAttachmentDefinition CRD object. Format:\
            \ <networkName>, <namespace>/<networkName>. If namespace is not specified,\
            \ VMI namespace is assumed."
          type: string
      required:
      - networkName
      type: object
    v1VmNUMA:
      example:
        guestMappingPassthrough: "{}"
      properties:
        guestMappingPassthrough:
          description: "NUMAGuestMappingPassthrough instructs kubevirt to model numa\
            \ topology which is compatible with the CPU pinning on the guest. This\
            \ will result in a subset of the node numa topology being passed through,\
            \ ensuring that virtual numa nodes and their memory never cross boundaries\
            \ coming from the node numa mapping."
          type: object
      type: object
    v1VmNUMAGuestMappingPassthrough:
      description: "NUMAGuestMappingPassthrough instructs kubevirt to model numa topology\
        \ which is compatible with the CPU pinning on the guest. This will result\
        \ in a subset of the node numa topology being passed through, ensuring that\
        \ virtual numa nodes and their memory never cross boundaries coming from the\
        \ node numa mapping."
      type: object
    v1VmNetwork:
      description: Network represents a network type and a resource that should be
        connected to the vm.
      example:
        pod:
          vmNetworkCIDR: vmNetworkCIDR
          vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
        name: name
        multus:
          default: true
          networkName: networkName
      properties:
        multus:
          $ref: "#/components/schemas/v1VmMultusNetwork"
        name:
          description: "Network name. Must be a DNS_LABEL and unique within the vm.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        pod:
          $ref: "#/components/schemas/v1VmPodNetwork"
      required:
      - name
      type: object
    v1VmNodeAffinity:
      description: Node affinity is a group of node affinity scheduling rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 1
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 1
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node matches the corresponding matchExpressions; the\
            \ node(s) with the highest sum are the most preferred."
          items:
            $ref: "#/components/schemas/v1VmPreferredSchedulingTerm"
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          $ref: "#/components/schemas/v1VmNodeSelector"
      type: object
    v1VmNodeSelector:
      description: "A node selector represents the union of the results of one or\
        \ more label queries over a set of nodes; that is, it represents the OR of\
        \ the selectors represented by the node selector terms."
      example:
        nodeSelectorTerms:
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
      properties:
        nodeSelectorTerms:
          description: Required. A list of node selector terms. The terms are ORed.
          items:
            $ref: "#/components/schemas/v1VmNodeSelectorTerm"
          type: array
      required:
      - nodeSelectorTerms
      type: object
    v1VmNodeSelectorRequirement:
      description: "A node selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: The label key that the selector applies to.
          type: string
        operator:
          description: "Represents a key's relationship to a set of values. Valid\
            \ operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
          type: string
        values:
          description: "An array of string values. If the operator is In or NotIn,\
            \ the values array must be non-empty. If the operator is Exists or DoesNotExist,\
            \ the values array must be empty. If the operator is Gt or Lt, the values\
            \ array must have a single element, which will be interpreted as an integer.\
            \ This array is replaced during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    v1VmNodeSelectorTerm:
      description: A null or empty node selector term matches no objects. The requirements
        of them are ANDed. The TopologySelectorTerm type implements a subset of the
        NodeSelectorTerm.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchFields:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            $ref: "#/components/schemas/v1VmNodeSelectorRequirement"
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            $ref: "#/components/schemas/v1VmNodeSelectorRequirement"
          type: array
      type: object
    v1VmObjectFieldSelector:
      description: ObjectFieldSelector selects an APIVersioned field of an object.
      example:
        apiVersion: apiVersion
        fieldPath: fieldPath
      properties:
        apiVersion:
          description: "Version of the schema the FieldPath is written in terms of,\
            \ defaults to \"v1\"."
          type: string
        fieldPath:
          description: Path of the field to select in the specified API version.
          type: string
      required:
      - fieldPath
      type: object
    v1VmObjectMeta:
      description: "ObjectMeta is metadata that all persisted resources must have,\
        \ which includes all objects users must create."
      example:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations:
          key: annotations
        generateName: generateName
        deletionTimestamp: 2000-01-23T04:56:07.000+00:00
        labels:
          key: labels
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        managedFields:
        - apiVersion: apiVersion
          fieldsV1:
            Raw:
            - Raw
            - Raw
          manager: manager
          subresource: subresource
          time: 2000-01-23T04:56:07.000+00:00
          operation: operation
          fieldsType: fieldsType
        - apiVersion: apiVersion
          fieldsV1:
            Raw:
            - Raw
            - Raw
          manager: manager
          subresource: subresource
          time: 2000-01-23T04:56:07.000+00:00
          operation: operation
          fieldsType: fieldsType
        clusterName: clusterName
        creationTimestamp: creationTimestamp
        name: name
        namespace: namespace
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: http://kubernetes.io/docs/user-guide/annotations"
          type: object
        clusterName:
          description: The name of the cluster which the object belongs to. This is
            used to distinguish resources with same name and namespace in different
            clusters. This field is not set anywhere right now and apiserver is going
            to ignore it if set in create or update request.
          type: string
        creationTimestamp:
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          type: string
        deletionGracePeriodSeconds:
          description: Number of seconds allowed for this object to gracefully terminate
            before it will be removed from the system. Only set when deletionTimestamp
            is also set. May only be shortened. Read-only.
          format: int64
          type: integer
        deletionTimestamp:
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          format: date-time
          nullable: true
          type: string
        finalizers:
          description: "Must be empty before the object is deleted from the registry.\
            \ Each entry is an identifier for the responsible component that will\
            \ remove the entry from the list. If the deletionTimestamp of the object\
            \ is non-nil, entries in this list can only be removed. Finalizers may\
            \ be processed and removed in any order.  Order is NOT enforced because\
            \ it introduces significant risk of stuck finalizers. finalizers is a\
            \ shared field, any actor with permission can reorder it. If the finalizer\
            \ list is processed in order, then this can lead to a situation in which\
            \ the component responsible for the first finalizer in the list is waiting\
            \ for a signal (field value, external system, or other) produced by a\
            \ component responsible for a finalizer later in the list, resulting in\
            \ a deadlock. Without enforced ordering finalizers are free to order amongst\
            \ themselves and are not vulnerable to ordering changes in the list."
          items:
            type: string
          type: array
          x-kubernetes-patch-strategy: merge
        generateName:
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

            If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

            Applied only if Name is not specified.
          type: string
        generation:
          description: A sequence number representing a specific generation of the
            desired state. Populated by the system. Read-only.
          format: int64
          type: integer
        labels:
          additionalProperties:
            type: string
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
          type: object
        managedFields:
          description: "ManagedFields maps workflow-id and version to the set of fields\
            \ that are managed by that workflow. This is mostly for internal housekeeping,\
            \ and users typically shouldn't need to set or understand this field.\
            \ A workflow can be the user's name, a controller's name, or the name\
            \ of a specific apply path like \"ci-cd\". The set of fields is always\
            \ in the version that the workflow used when modifying the object."
          items:
            $ref: "#/components/schemas/v1VmManagedFieldsEntry"
          type: array
        name:
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
        namespace:
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
            Must be a DNS_LABEL. Cannot be updated.
          type: string
        ownerReferences:
          description: "List of objects depended by this object. If ALL objects in\
            \ the list have been deleted, this object will be garbage collected. If\
            \ this object is managed by a controller, then an entry in this list will\
            \ point to this controller, with the controller field set to true. There\
            \ cannot be more than one managing controller."
          items:
            $ref: "#/components/schemas/v1VmOwnerReference"
          type: array
          x-kubernetes-patch-strategy: merge
          x-kubernetes-patch-merge-key: uid
        resourceVersion:
          description: |-
            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
            Populated by the system. Read-only. Value must be treated as opaque by clients.
          type: string
        selfLink:
          description: |-
            SelfLink is a URL representing this object. Populated by the system. Read-only.
            DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
          type: string
        uid:
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
            Populated by the system. Read-only.
          type: string
      type: object
    v1VmOwnerReference:
      description: "OwnerReference contains enough information to let you identify\
        \ an owning object. An owning object must be in the same namespace as the\
        \ dependent, or be cluster-scoped, so there is no namespace field."
      example:
        uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: "If true, AND if the owner has the \"foregroundDeletion\" finalizer,\
            \ then the owner cannot be deleted from the key-value store until this\
            \ reference is removed. Defaults to false. To set this field, a user needs\
            \ \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity)\
            \ will be returned."
          type: boolean
        controller:
          description: "If true, this reference points to the managing controller."
          type: boolean
        kind:
          description: Kind of the referent.
          type: string
        name:
          description: "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
        uid:
          description: "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
          type: string
      required:
      - apiVersion
      - kind
      - name
      - uid
      type: object
    v1VmPITTimer:
      example:
        tickPolicy: tickPolicy
        present: true
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\", \"\
            discard\"."
          type: string
      type: object
    v1VmPersistentVolumeClaimSpec:
      description: PersistentVolumeClaimSpec describes the common attributes of storage
        devices and allows a Source for provider-specific attributes
      example:
        storageClassName: storageClassName
        dataSourceRef:
          apiGroup: apiGroup
          kind: kind
          name: name
        volumeName: volumeName
        resources:
          requests:
            key: null
          limits:
            key: null
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        accessModes:
        - accessModes
        - accessModes
        dataSource:
          apiGroup: apiGroup
          kind: kind
          name: name
        volumeMode: volumeMode
      properties:
        accessModes:
          description: "AccessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            type: string
          type: array
        dataSource:
          $ref: "#/components/schemas/v1VmTypedLocalObjectReference"
        dataSourceRef:
          $ref: "#/components/schemas/v1VmTypedLocalObjectReference"
        resources:
          $ref: "#/components/schemas/v1VmCoreResourceRequirements"
        selector:
          $ref: "#/components/schemas/v1VmLabelSelector"
        storageClassName:
          description: "Name of the StorageClass required by the claim. More info:\
            \ https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          description: volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
        volumeName:
          description: VolumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    v1VmPersistentVolumeClaimVolumeSource:
      description: "PersistentVolumeClaimVolumeSource represents a reference to a\
        \ PersistentVolumeClaim in the same namespace. Directly attached to the vmi\
        \ via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
      example:
        claimName: claimName
        hotpluggable: true
        readOnly: true
      properties:
        claimName:
          description: "ClaimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        readOnly:
          description: Will force the ReadOnly setting in VolumeMounts. Default false.
          type: boolean
      required:
      - claimName
      type: object
    v1VmPodAffinity:
      description: Pod affinity is a group of inter pod affinity scheduling rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 5
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            namespaceSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 5
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: "#/components/schemas/v1VmWeightedPodAffinityTerm"
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the affinity requirements specified by this field are not\
            \ met at scheduling time, the pod will not be scheduled onto the node.\
            \ If the affinity requirements specified by this field cease to be met\
            \ at some point during pod execution (e.g. due to a pod label update),\
            \ the system may or may not try to eventually evict the pod from its node.\
            \ When there are multiple elements, the lists of nodes corresponding to\
            \ each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: "#/components/schemas/v1VmPodAffinityTerm"
          type: array
      type: object
    v1VmPodAffinityTerm:
      description: "Defines a set of pods (namely those matching the labelSelector\
        \ relative to the given namespace(s)) that this pod should be co-located (affinity)\
        \ or not co-located (anti-affinity) with, where co-located is defined as running\
        \ on a node whose value of the label with key <topologyKey> matches that of\
        \ any node on which a pod of the set of pods is running"
      example:
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        namespaceSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      properties:
        labelSelector:
          $ref: "#/components/schemas/v1VmLabelSelector"
        namespaceSelector:
          $ref: "#/components/schemas/v1VmLabelSelector"
        namespaces:
          description: namespaces specifies a static list of namespace names that
            the term applies to. The term is applied to the union of the namespaces
            listed in this field and the ones selected by namespaceSelector. null
            or empty namespaces list and null namespaceSelector means "this pod's
            namespace"
          items:
            type: string
          type: array
        topologyKey:
          description: "This pod should be co-located (affinity) or not co-located\
            \ (anti-affinity) with the pods matching the labelSelector in the specified\
            \ namespaces, where co-located is defined as running on a node whose value\
            \ of the label with key topologyKey matches that of any node on which\
            \ any of the selected pods is running. Empty topologyKey is not allowed."
          type: string
      required:
      - topologyKey
      type: object
    v1VmPodDnsConfig:
      description: PodDNSConfig defines the DNS parameters of a pod in addition to
        those generated from DNSPolicy.
      example:
        searches:
        - searches
        - searches
        nameservers:
        - nameservers
        - nameservers
        options:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        nameservers:
          description: A list of DNS name server IP addresses. This will be appended
            to the base nameservers generated from DNSPolicy. Duplicated nameservers
            will be removed.
          items:
            type: string
          type: array
        options:
          description: A list of DNS resolver options. This will be merged with the
            base options generated from DNSPolicy. Duplicated entries will be removed.
            Resolution options given in Options will override those that appear in
            the base DNSPolicy.
          items:
            $ref: "#/components/schemas/v1VmPodDnsConfigOption"
          type: array
        searches:
          description: A list of DNS search domains for host-name lookup. This will
            be appended to the base search paths generated from DNSPolicy. Duplicated
            search paths will be removed.
          items:
            type: string
          type: array
      type: object
    v1VmPodDnsConfigOption:
      description: PodDNSConfigOption defines DNS resolver options of a pod.
      example:
        name: name
        value: value
      properties:
        name:
          description: Required.
          type: string
        value:
          type: string
      type: object
    v1VmPodNetwork:
      description: Represents the stock pod network interface.
      example:
        vmNetworkCIDR: vmNetworkCIDR
        vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
      properties:
        vmIPv6NetworkCIDR:
          description: IPv6 CIDR for the vm network. Defaults to fd10:0:2::/120 if
            not specified.
          type: string
        vmNetworkCIDR:
          description: CIDR for vm network. Default 10.0.2.0/24 if not specified.
          type: string
      type: object
    v1VmPort:
      description: Port represents a port to expose from the virtual machine. Default
        protocol TCP. The port field is mandatory
      example:
        protocol: protocol
        port: 1
        name: name
      properties:
        name:
          description: "If specified, this must be an IANA_SVC_NAME and unique within\
            \ the pod. Each named port in a pod must have a unique name. Name for\
            \ the port that can be referred to by services."
          type: string
        port:
          description: "Number of port to expose for the virtual machine. This must\
            \ be a valid port number, 0 < x < 65536."
          format: int32
          type: integer
        protocol:
          description: Protocol for port. Must be UDP or TCP. Defaults to "TCP".
          type: string
      required:
      - port
      type: object
    v1VmPreferenceMatcher:
      description: PreferenceMatcher references a set of preference that is used to
        fill fields in the VMI template.
      example:
        revisionName: revisionName
        kind: kind
        inferFromVolume: inferFromVolume
        name: name
      properties:
        inferFromVolume:
          description: InferFromVolume lists the name of a volume that should be used
            to infer or discover the preference to be used through known annotations
            on the underlying resource. Once applied to the PreferenceMatcher this
            field is removed.
          type: string
        kind:
          description: "Kind specifies which preference resource is referenced. Allowed\
            \ values are: \"VirtualMachinePreference\" and \"VirtualMachineClusterPreference\"\
            . If not specified, \"VirtualMachineClusterPreference\" is used by default."
          type: string
        name:
          description: Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference
          type: string
        revisionName:
          description: RevisionName specifies a ControllerRevision containing a specific
            copy of the VirtualMachinePreference or VirtualMachineClusterPreference
            to be used. This is initially captured the first time the instancetype
            is applied to the VirtualMachineInstance.
          type: string
      type: object
    v1VmPreferredSchedulingTerm:
      description: An empty preferred scheduling term matches all objects with implicit
        weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no
        objects (i.e. is also a no-op).
      example:
        preference:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        weight: 1
      properties:
        preference:
          $ref: "#/components/schemas/v1VmNodeSelectorTerm"
        weight:
          description: "Weight associated with matching the corresponding nodeSelectorTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - preference
      - weight
      type: object
    v1VmProbe:
      description: Probe describes a health check to be performed against a VirtualMachineInstance
        to determine whether it is alive or ready to receive traffic.
      example:
        failureThreshold: 7
        periodSeconds: 4
        tcpSocket:
          port: port
          host: host
        timeoutSeconds: 9
        guestAgentPing: "{}"
        successThreshold: 5
        initialDelaySeconds: 1
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: port
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        exec:
          $ref: "#/components/schemas/v1VmExecAction"
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered
            failed after having succeeded. Defaults to 3. Minimum value is 1.
          format: int32
          type: integer
        guestAgentPing:
          description: GuestAgentPing configures the guest-agent based ping probe
          type: object
        httpGet:
          $ref: "#/components/schemas/v1VmHttpGetAction"
        initialDelaySeconds:
          description: "Number of seconds after the VirtualMachineInstance has started\
            \ before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1.
          format: int32
          type: integer
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered
            successful after having failed. Defaults to 1. Must be 1 for liveness.
            Minimum value is 1.
          format: int32
          type: integer
        tcpSocket:
          $ref: "#/components/schemas/v1VmTcpSocketAction"
        timeoutSeconds:
          description: "Number of seconds after which the probe times out. For exec\
            \ probes the timeout fails the probe but does not terminate the command\
            \ running on the guest. This means a blocking command can result in an\
            \ increasing load on the guest. A small buffer will be added to the resulting\
            \ workload exec probe to compensate for delays caused by the qemu guest\
            \ exec mechanism. Defaults to 1 second. Minimum value is 1. More info:\
            \ https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
      type: object
    v1VmQemuGuestAgentSshPublicKeyAccessCredentialPropagation:
      example:
        users:
        - users
        - users
      properties:
        users:
          description: Users represents a list of guest users that should have the
            ssh public keys added to their authorized_keys file.
          items:
            type: string
          type: array
          x-kubernetes-list-type: set
      required:
      - users
      type: object
    v1VmQemuGuestAgentUserPasswordAccessCredentialPropagation:
      type: object
    v1VmQuantity:
      description: |-
        Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

        The serialization format is:

        <quantity>        ::= <signedNumber><suffix>
          (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
        <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
          (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
        <decimalSI>       ::= m | "" | k | M | G | T | P | E
          (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
        <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

        No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

        When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

        Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
          a. No precision is lost
          b. No fractional digits will be emitted
          c. The exponent (or suffix) is as large as possible.
        The sign will be omitted unless the number is negative.

        Examples:
          1.5 will be serialized as "1500m"
          1.5Gi will be serialized as "1536Mi"

        Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

        Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

        This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
      type: string
    v1VmRTCTimer:
      example:
        tickPolicy: tickPolicy
        present: true
        track: track
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\"."
          type: string
        track:
          description: Track the guest or the wall clock.
          type: string
      type: object
    v1VmRealtime:
      description: Realtime holds the tuning knobs specific for realtime workloads.
      example:
        mask: mask
      properties:
        mask:
          description: "Mask defines the vcpu mask expression that defines which vcpus\
            \ are used for realtime. Format matches libvirt's expressions. Example:\
            \ \"0-3,^1\",\"0,2,3\",\"2-3\""
          type: string
      type: object
    v1VmRemoveVolumeOptions:
      description: RemoveVolumeOptions is provided when dynamically hot unplugging
        volume and disk
      example:
        dryRun:
        - dryRun
        - dryRun
        name: name
      properties:
        dryRun:
          description: "When present, indicates that modifications should not be persisted.\
            \ An invalid or unrecognized dryRun directive will result in an error\
            \ response and no further processing of the request. Valid values are:\
            \ - All: all dry run stages will be processed"
          items:
            type: string
          type: array
          x-kubernetes-list-type: atomic
        name:
          description: Name represents the name that maps to both the disk and volume
            that should be removed
          type: string
      required:
      - name
      type: object
    v1VmResourceFieldSelector:
      description: "ResourceFieldSelector represents container resources (cpu, memory)\
        \ and their output format"
      example:
        divisor: divisor
        resource: resource
        containerName: containerName
      properties:
        containerName:
          description: "Container name: required for volumes, optional for env vars"
          type: string
        divisor:
          description: |-
            Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.

            The serialization format is:

            <quantity>        ::= <signedNumber><suffix>
              (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
            <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
              (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
            <decimalSI>       ::= m | "" | k | M | G | T | P | E
              (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>

            No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
              a. No precision is lost
              b. No fractional digits will be emitted
              c. The exponent (or suffix) is as large as possible.
            The sign will be omitted unless the number is negative.

            Examples:
              1.5 will be serialized as "1500m"
              1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)

            This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
          type: string
        resource:
          description: "Required: resource to select"
          type: string
      required:
      - resource
      type: object
    v1VmResourceRequirements:
      example:
        overcommitGuestOverhead: true
        requests: "{}"
        limits: "{}"
      properties:
        limits:
          description: Limits describes the maximum amount of compute resources allowed.
            Valid resource keys are "memory" and "cpu".
          properties: {}
          type: object
        overcommitGuestOverhead:
          description: Don't ask the scheduler to take the guest-management overhead
            into account. Instead put the overhead only into the container's memory
            limit. This can lead to crashes if all memory is in use on a node. Defaults
            to false.
          type: boolean
        requests:
          description: Requests is a description of the initial vmi resources. Valid
            resource keys are "memory" and "cpu".
          properties: {}
          type: object
      type: object
    v1VmRng:
      description: Rng represents the random device passed from host
      type: object
    v1VmSEV:
      type: object
    v1VmSecretVolumeSource:
      description: SecretVolumeSource adapts a Secret into a volume.
      example:
        secretName: secretName
        volumeLabel: volumeLabel
        optional: true
      properties:
        optional:
          description: Specify whether the Secret or it's keys must be defined
          type: boolean
        secretName:
          description: "Name of the secret in the pod's namespace to use. More info:\
            \ https://kubernetes.io/docs/concepts/storage/volumes#secret"
          type: string
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    v1VmServiceAccountVolumeSource:
      description: ServiceAccountVolumeSource adapts a ServiceAccount into a volume.
      example:
        serviceAccountName: serviceAccountName
      properties:
        serviceAccountName:
          description: "Name of the service account in the pod's namespace to use.\
            \ More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
          type: string
      type: object
    v1VmSnapshotVolumesLists:
      description: SnapshotVolumesLists includes the list of volumes which were included
        in the snapshot and volumes which were excluded from the snapshot
      example:
        includedVolumes:
        - includedVolumes
        - includedVolumes
        excludedVolumes:
        - excludedVolumes
        - excludedVolumes
      properties:
        excludedVolumes:
          items:
            type: string
          type: array
          x-kubernetes-list-type: set
        includedVolumes:
          items:
            type: string
          type: array
          x-kubernetes-list-type: set
      type: object
    v1VmSoundDevice:
      description: Represents the user's configuration to emulate sound cards in the
        VMI.
      example:
        name: name
        model: model
      properties:
        model:
          description: "We only support ich9 or ac97. If SoundDevice is not set: No\
            \ sound card is emulated. If SoundDevice is set but Model is not: ich9"
          type: string
        name:
          description: User's defined name for this sound device
          type: string
      required:
      - name
      type: object
    v1VmSshPublicKeyAccessCredential:
      description: SSHPublicKeyAccessCredential represents a source and propagation
        method for injecting ssh public keys into a vm guest
      example:
        propagationMethod:
          configDrive: "{}"
          qemuGuestAgent:
            users:
            - users
            - users
        source:
          secret:
            secretName: secretName
      properties:
        propagationMethod:
          $ref: "#/components/schemas/v1VmSshPublicKeyAccessCredentialPropagationMethod"
        source:
          $ref: "#/components/schemas/v1VmSshPublicKeyAccessCredentialSource"
      required:
      - propagationMethod
      - source
      type: object
    v1VmSshPublicKeyAccessCredentialPropagationMethod:
      description: SSHPublicKeyAccessCredentialPropagationMethod represents the method
        used to inject a ssh public key into the vm guest. Only one of its members
        may be specified.
      example:
        configDrive: "{}"
        qemuGuestAgent:
          users:
          - users
          - users
      properties:
        configDrive:
          type: object
        qemuGuestAgent:
          $ref: "#/components/schemas/v1VmQemuGuestAgentSshPublicKeyAccessCredentialPropagation"
      type: object
    v1VmSshPublicKeyAccessCredentialSource:
      description: SSHPublicKeyAccessCredentialSource represents where to retrieve
        the ssh key credentials Only one of its members may be specified.
      example:
        secret:
          secretName: secretName
      properties:
        secret:
          $ref: "#/components/schemas/v1VmAccessCredentialSecretSource"
      type: object
    v1VmStorageSpec:
      description: StorageSpec defines the Storage type specification
      example:
        storageClassName: storageClassName
        volumeName: volumeName
        resources:
          requests:
            key: null
          limits:
            key: null
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        accessModes:
        - accessModes
        - accessModes
        dataSource:
          apiGroup: apiGroup
          kind: kind
          name: name
        volumeMode: volumeMode
      properties:
        accessModes:
          description: "AccessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            type: string
          type: array
        dataSource:
          $ref: "#/components/schemas/v1VmTypedLocalObjectReference"
        resources:
          $ref: "#/components/schemas/v1VmCoreResourceRequirements"
        selector:
          $ref: "#/components/schemas/v1VmLabelSelector"
        storageClassName:
          description: "Name of the StorageClass required by the claim. More info:\
            \ https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          description: volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
        volumeName:
          description: VolumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    v1VmSyNICTimer:
      example:
        direct:
          enabled: true
        enabled: true
      properties:
        direct:
          $ref: "#/components/schemas/v1VmFeatureState"
        enabled:
          type: boolean
      type: object
    v1VmSysprepSource:
      description: Represents a Sysprep volume source.
      example:
        configMap:
          name: name
        secret:
          name: name
      properties:
        configMap:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
        secret:
          $ref: "#/components/schemas/v1VmLocalObjectReference"
      type: object
    v1VmTPMDevice:
      type: object
    v1VmTcpSocketAction:
      description: TCPSocketAction describes an action based on opening a socket
      example:
        port: port
        host: host
      properties:
        host:
          description: "Optional: Host name to connect to, defaults to the pod IP."
          type: string
        port:
          description: Number or name of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          type: string
      required:
      - port
      type: object
    v1VmTimer:
      description: Represents all available timers in a vmi.
      example:
        rtc:
          tickPolicy: tickPolicy
          present: true
          track: track
        kvm:
          present: true
        hpet:
          tickPolicy: tickPolicy
          present: true
        pit:
          tickPolicy: tickPolicy
          present: true
        hyperv:
          present: true
      properties:
        hpet:
          $ref: "#/components/schemas/v1VmHPETTimer"
        hyperv:
          $ref: "#/components/schemas/v1VmHypervTimer"
        kvm:
          $ref: "#/components/schemas/v1VmKVmTimer"
        pit:
          $ref: "#/components/schemas/v1VmPITTimer"
        rtc:
          $ref: "#/components/schemas/v1VmRTCTimer"
      type: object
    v1VmToleration:
      description: "The pod this Toleration is attached to tolerates any taint that\
        \ matches the triple <key,value,effect> using the matching operator <operator>."
      example:
        effect: effect
        tolerationSeconds: 6
        value: value
        key: key
        operator: operator
      properties:
        effect:
          description: "Effect indicates the taint effect to match. Empty means match\
            \ all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule\
            \ and NoExecute."
          type: string
        key:
          description: "Key is the taint key that the toleration applies to. Empty\
            \ means match all taint keys. If the key is empty, operator must be Exists;\
            \ this combination means to match all values and all keys."
          type: string
        operator:
          description: "Operator represents a key's relationship to the value. Valid\
            \ operators are Exists and Equal. Defaults to Equal. Exists is equivalent\
            \ to wildcard for value, so that a pod can tolerate all taints of a particular\
            \ category."
          type: string
        tolerationSeconds:
          description: "TolerationSeconds represents the period of time the toleration\
            \ (which must be of effect NoExecute, otherwise this field is ignored)\
            \ tolerates the taint. By default, it is not set, which means tolerate\
            \ the taint forever (do not evict). Zero and negative values will be treated\
            \ as 0 (evict immediately) by the system."
          format: int64
          type: integer
        value:
          description: "Value is the taint value the toleration matches to. If the\
            \ operator is Exists, the value should be empty, otherwise just a regular\
            \ string."
          type: string
      type: object
    v1VmTopologySpreadConstraint:
      description: TopologySpreadConstraint specifies how to spread matching pods
        among the given topology.
      example:
        whenUnsatisfiable: whenUnsatisfiable
        maxSkew: 8
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels:
            key: matchLabels
        topologyKey: topologyKey
      properties:
        labelSelector:
          $ref: "#/components/schemas/v1VmLabelSelector"
        maxSkew:
          description: "MaxSkew describes the degree to which pods may be unevenly\
            \ distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum\
            \ permitted difference between the number of matching pods in the target\
            \ topology and the global minimum. For example, in a 3-zone cluster, MaxSkew\
            \ is set to 1, and pods with the same labelSelector spread as 1/1/0: |\
            \ zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1,\
            \ incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling\
            \ it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2)\
            \ violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled\
            \ onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to\
            \ give higher precedence to topologies that satisfy it. It's a required\
            \ field. Default value is 1 and 0 is not allowed."
          format: int32
          type: integer
        topologyKey:
          description: "TopologyKey is the key of node labels. Nodes that have a label\
            \ with this key and identical values are considered to be in the same\
            \ topology. We consider each <key, value> as a \"bucket\", and try to\
            \ put balanced number of pods into each bucket. It's a required field."
          type: string
        whenUnsatisfiable:
          description: |-
            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
              but giving higher precedence to topologies that would help reduce the
              skew.
            A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
          type: string
      required:
      - maxSkew
      - topologyKey
      - whenUnsatisfiable
      type: object
    v1VmTypedLocalObjectReference:
      description: TypedLocalObjectReference contains enough information to let you
        locate the typed referenced object inside the same namespace.
      example:
        apiGroup: apiGroup
        kind: kind
        name: name
      properties:
        apiGroup:
          description: "APIGroup is the group for the resource being referenced. If\
            \ APIGroup is not specified, the specified Kind must be in the core API\
            \ group. For any other third-party types, APIGroup is required."
          type: string
        kind:
          description: Kind is the type of resource being referenced
          type: string
        name:
          description: Name is the name of resource being referenced
          type: string
      required:
      - kind
      - name
      type: object
    v1VmUserPasswordAccessCredential:
      description: UserPasswordAccessCredential represents a source and propagation
        method for injecting user passwords into a vm guest Only one of its members
        may be specified.
      example:
        propagationMethod:
          qemuGuestAgent: "{}"
        source:
          secret:
            secretName: secretName
      properties:
        propagationMethod:
          $ref: "#/components/schemas/v1VmUserPasswordAccessCredentialPropagationMethod"
        source:
          $ref: "#/components/schemas/v1VmUserPasswordAccessCredentialSource"
      required:
      - propagationMethod
      - source
      type: object
    v1VmUserPasswordAccessCredentialPropagationMethod:
      description: UserPasswordAccessCredentialPropagationMethod represents the method
        used to inject a user passwords into the vm guest. Only one of its members
        may be specified.
      example:
        qemuGuestAgent: "{}"
      properties:
        qemuGuestAgent:
          type: object
      type: object
    v1VmUserPasswordAccessCredentialSource:
      description: UserPasswordAccessCredentialSource represents where to retrieve
        the user password credentials Only one of its members may be specified.
      example:
        secret:
          secretName: secretName
      properties:
        secret:
          $ref: "#/components/schemas/v1VmAccessCredentialSecretSource"
      type: object
    v1VmVGPUDisplayOptions:
      example:
        enabled: true
        ramFB:
          enabled: true
      properties:
        enabled:
          description: Enabled determines if a display addapter backed by a vGPU should
            be enabled or disabled on the guest. Defaults to true.
          type: boolean
        ramFB:
          $ref: "#/components/schemas/v1VmFeatureState"
      type: object
    v1VmVGPUOptions:
      example:
        display:
          enabled: true
          ramFB:
            enabled: true
      properties:
        display:
          $ref: "#/components/schemas/v1VmVGPUDisplayOptions"
      type: object
    v1VmVirtualMachineCondition:
      description: VirtualMachineCondition represents the state of VirtualMachine
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastProbeTime: lastProbeTime
        status: status
      properties:
        lastProbeTime:
          type: string
        lastTransitionTime:
          type: string
        message:
          type: string
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - status
      - type
      type: object
    v1VmVirtualMachineInstanceSpec:
      description: VirtualMachineInstanceSpec is a description of a VirtualMachineInstance.
      example:
        dnsPolicy: dnsPolicy
        livenessProbe:
          failureThreshold: 7
          periodSeconds: 4
          tcpSocket:
            port: port
            host: host
          timeoutSeconds: 9
          guestAgentPing: "{}"
          successThreshold: 5
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        terminationGracePeriodSeconds: 9
        dnsConfig:
          searches:
          - searches
          - searches
          nameservers:
          - nameservers
          - nameservers
          options:
          - name: name
            value: value
          - name: name
            value: value
        priorityClassName: priorityClassName
        topologySpreadConstraints:
        - whenUnsatisfiable: whenUnsatisfiable
          maxSkew: 8
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
        - whenUnsatisfiable: whenUnsatisfiable
          maxSkew: 8
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
        volumes:
        - downwardAPI:
            volumeLabel: volumeLabel
            fields:
            - mode: 9
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 9
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          cloudInitConfigDrive:
            networkDataSecretRef:
              name: name
            userData: userData
            networkData: networkData
            networkDataBase64: networkDataBase64
            secretRef:
              name: name
            userDataBase64: userDataBase64
          downwardMetrics: "{}"
          ephemeral:
            persistentVolumeClaim:
              claimName: claimName
              hotpluggable: true
              readOnly: true
          serviceAccount:
            serviceAccountName: serviceAccountName
          sysprep:
            configMap:
              name: name
            secret:
              name: name
          containerDisk:
            image: image
            imagePullPolicy: imagePullPolicy
            imagePullSecret: imagePullSecret
            path: path
          hostDisk:
            path: path
            shared: true
            type: type
            capacity: capacity
          secret:
            secretName: secretName
            volumeLabel: volumeLabel
            optional: true
          cloudInitNoCloud:
            networkDataSecretRef:
              name: name
            userData: userData
            networkData: networkData
            networkDataBase64: networkDataBase64
            secretRef:
              name: name
            userDataBase64: userDataBase64
          configMap:
            volumeLabel: volumeLabel
            name: name
            optional: true
          dataVolume:
            hotpluggable: true
            name: name
          name: name
          persistentVolumeClaim:
            claimName: claimName
            hotpluggable: true
            readOnly: true
          memoryDump:
            claimName: claimName
            hotpluggable: true
            readOnly: true
          emptyDisk:
            capacity: capacity
        - downwardAPI:
            volumeLabel: volumeLabel
            fields:
            - mode: 9
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 9
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          cloudInitConfigDrive:
            networkDataSecretRef:
              name: name
            userData: userData
            networkData: networkData
            networkDataBase64: networkDataBase64
            secretRef:
              name: name
            userDataBase64: userDataBase64
          downwardMetrics: "{}"
          ephemeral:
            persistentVolumeClaim:
              claimName: claimName
              hotpluggable: true
              readOnly: true
          serviceAccount:
            serviceAccountName: serviceAccountName
          sysprep:
            configMap:
              name: name
            secret:
              name: name
          containerDisk:
            image: image
            imagePullPolicy: imagePullPolicy
            imagePullSecret: imagePullSecret
            path: path
          hostDisk:
            path: path
            shared: true
            type: type
            capacity: capacity
          secret:
            secretName: secretName
            volumeLabel: volumeLabel
            optional: true
          cloudInitNoCloud:
            networkDataSecretRef:
              name: name
            userData: userData
            networkData: networkData
            networkDataBase64: networkDataBase64
            secretRef:
              name: name
            userDataBase64: userDataBase64
          configMap:
            volumeLabel: volumeLabel
            name: name
            optional: true
          dataVolume:
            hotpluggable: true
            name: name
          name: name
          persistentVolumeClaim:
            claimName: claimName
            hotpluggable: true
            readOnly: true
          memoryDump:
            claimName: claimName
            hotpluggable: true
            readOnly: true
          emptyDisk:
            capacity: capacity
        networks:
        - pod:
            vmNetworkCIDR: vmNetworkCIDR
            vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
          name: name
          multus:
            default: true
            networkName: networkName
        - pod:
            vmNetworkCIDR: vmNetworkCIDR
            vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
          name: name
          multus:
            default: true
            networkName: networkName
        nodeSelector:
          key: nodeSelector
        hostname: hostname
        tolerations:
        - effect: effect
          tolerationSeconds: 6
          value: value
          key: key
          operator: operator
        - effect: effect
          tolerationSeconds: 6
          value: value
          key: key
          operator: operator
        accessCredentials:
        - sshPublicKey:
            propagationMethod:
              configDrive: "{}"
              qemuGuestAgent:
                users:
                - users
                - users
            source:
              secret:
                secretName: secretName
          userPassword:
            propagationMethod:
              qemuGuestAgent: "{}"
            source:
              secret:
                secretName: secretName
        - sshPublicKey:
            propagationMethod:
              configDrive: "{}"
              qemuGuestAgent:
                users:
                - users
                - users
            source:
              secret:
                secretName: secretName
          userPassword:
            propagationMethod:
              qemuGuestAgent: "{}"
            source:
              secret:
                secretName: secretName
        startStrategy: startStrategy
        domain:
          features:
            smm:
              enabled: true
            kvm:
              hidden: true
            apic:
              endOfInterrupt: true
              enabled: true
            acpi:
              enabled: true
            pvspinlock:
              enabled: true
            hyperv:
              vpindex:
                enabled: true
              ipi:
                enabled: true
              reenlightenment:
                enabled: true
              runtime:
                enabled: true
              vendorid:
                vendorid: vendorid
                enabled: true
              evmcs:
                enabled: true
              synictimer:
                direct:
                  enabled: true
                enabled: true
              spinlocks:
                spinlocks: 6
                enabled: true
              tlbflush:
                enabled: true
              synic:
                enabled: true
              relaxed:
                enabled: true
              vapic:
                enabled: true
              reset:
                enabled: true
              frequencies:
                enabled: true
          ioThreadsPolicy: ioThreadsPolicy
          memory:
            hugepages:
              pageSize: pageSize
            guest: guest
          devices:
            autoattachPodInterface: true
            interfaces:
            - dhcpOptions:
                ntpServers:
                - ntpServers
                - ntpServers
                tftpServerName: tftpServerName
                bootFileName: bootFileName
                privateOptions:
                - value: value
                  option: 1
                - value: value
                  option: 1
              slirp: "{}"
              macvtap: "{}"
              ports:
              - protocol: protocol
                port: 1
                name: name
              - protocol: protocol
                port: 1
                name: name
              macAddress: macAddress
              masquerade: "{}"
              bootOrder: 1
              acpiIndex: 7
              name: name
              sriov: "{}"
              model: model
              pciAddress: pciAddress
              bridge: "{}"
              passt: "{}"
              tag: tag
            - dhcpOptions:
                ntpServers:
                - ntpServers
                - ntpServers
                tftpServerName: tftpServerName
                bootFileName: bootFileName
                privateOptions:
                - value: value
                  option: 1
                - value: value
                  option: 1
              slirp: "{}"
              macvtap: "{}"
              ports:
              - protocol: protocol
                port: 1
                name: name
              - protocol: protocol
                port: 1
                name: name
              macAddress: macAddress
              masquerade: "{}"
              bootOrder: 1
              acpiIndex: 7
              name: name
              sriov: "{}"
              model: model
              pciAddress: pciAddress
              bridge: "{}"
              passt: "{}"
              tag: tag
            disks:
            - shareable: true
              cache: cache
              dedicatedIOThread: true
              disk:
                bus: bus
                readonly: true
                pciAddress: pciAddress
              lun:
                bus: bus
                readonly: true
              bootOrder: 4
              serial: serial
              io: io
              name: name
              tag: tag
              cdrom:
                tray: tray
                bus: bus
                readonly: true
              blockSize:
                custom:
                  physical: 2
                  logical: 3
                matchVolume:
                  enabled: true
            - shareable: true
              cache: cache
              dedicatedIOThread: true
              disk:
                bus: bus
                readonly: true
                pciAddress: pciAddress
              lun:
                bus: bus
                readonly: true
              bootOrder: 4
              serial: serial
              io: io
              name: name
              tag: tag
              cdrom:
                tray: tray
                bus: bus
                readonly: true
              blockSize:
                custom:
                  physical: 2
                  logical: 3
                matchVolume:
                  enabled: true
            inputs:
            - bus: bus
              name: name
              type: type
            - bus: bus
              name: name
              type: type
            sound:
              name: name
              model: model
            autoattachInputDevice: true
            useVirtioTransitional: true
            rng: "{}"
            autoattachSerialConsole: true
            autoattachVSOCK: true
            filesystems:
            - name: name
              virtiofs: "{}"
            - name: name
              virtiofs: "{}"
            hostDevices:
            - name: name
              tag: tag
              deviceName: deviceName
            - name: name
              tag: tag
              deviceName: deviceName
            networkInterfaceMultiqueue: true
            autoattachMemBalloon: true
            tpm: "{}"
            clientPassthrough: "{}"
            watchdog:
              i6300esb:
                action: action
              name: name
            blockMultiQueue: true
            gpus:
            - name: name
              tag: tag
              virtualGPUOptions:
                display:
                  enabled: true
                  ramFB:
                    enabled: true
              deviceName: deviceName
            - name: name
              tag: tag
              virtualGPUOptions:
                display:
                  enabled: true
                  ramFB:
                    enabled: true
              deviceName: deviceName
            disableHotplug: true
            autoattachGraphicsDevice: true
          machine:
            type: type
          cpu:
            features:
            - name: name
              policy: policy
            - name: name
              policy: policy
            realtime:
              mask: mask
            cores: 2
            dedicatedCpuPlacement: true
            numa:
              guestMappingPassthrough: "{}"
            threads: 9
            model: model
            sockets: 7
            isolateEmulatorThread: true
          resources:
            overcommitGuestOverhead: true
            requests: "{}"
            limits: "{}"
          chassis:
            serial: serial
            asset: asset
            sku: sku
            version: version
            manufacturer: manufacturer
          clock:
            timer:
              rtc:
                tickPolicy: tickPolicy
                present: true
                track: track
              kvm:
                present: true
              hpet:
                tickPolicy: tickPolicy
                present: true
              pit:
                tickPolicy: tickPolicy
                present: true
              hyperv:
                present: true
            utc:
              offsetSeconds: 5
            timezone: timezone
          firmware:
            serial: serial
            bootloader:
              bios:
                useSerial: true
              efi:
                secureBoot: true
            uuid: uuid
            kernelBoot:
              container:
                image: image
                imagePullPolicy: imagePullPolicy
                imagePullSecret: imagePullSecret
                initrdPath: initrdPath
                kernelPath: kernelPath
              kernelArgs: kernelArgs
          launchSecurity:
            sev: "{}"
        readinessProbe:
          failureThreshold: 7
          periodSeconds: 4
          tcpSocket:
            port: port
            host: host
          timeoutSeconds: 9
          guestAgentPing: "{}"
          successThreshold: 5
          initialDelaySeconds: 1
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        subdomain: subdomain
        evictionStrategy: evictionStrategy
        schedulerName: schedulerName
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 1
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 1
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 5
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 5
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              namespaceSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels:
                  key: matchLabels
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 5
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 5
      properties:
        accessCredentials:
          description: Specifies a set of public keys to inject into the vm guest
          items:
            $ref: "#/components/schemas/v1VmAccessCredential"
          type: array
          x-kubernetes-list-type: atomic
        affinity:
          $ref: "#/components/schemas/v1VmAffinity"
        dnsConfig:
          $ref: "#/components/schemas/v1VmPodDnsConfig"
        dnsPolicy:
          description: "Set DNS policy for the pod. Defaults to \"ClusterFirst\".\
            \ Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default'\
            \ or 'None'. DNS parameters given in DNSConfig will be merged with the\
            \ policy selected with DNSPolicy. To have DNS options set along with hostNetwork,\
            \ you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
          type: string
        domain:
          $ref: "#/components/schemas/v1VmDomainSpec"
        evictionStrategy:
          description: EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance
            should be migrated instead of shut-off in case of a node drain.
          type: string
        hostname:
          description: "Specifies the hostname of the vmi If not specified, the hostname\
            \ will be set to the name of the vmi, if dhcp or cloud-init is configured\
            \ properly."
          type: string
        livenessProbe:
          $ref: "#/components/schemas/v1VmProbe"
        networks:
          description: List of networks that can be attached to a vm's virtual interface.
          items:
            $ref: "#/components/schemas/v1VmNetwork"
          type: array
        nodeSelector:
          additionalProperties:
            type: string
          description: "NodeSelector is a selector which must be true for the vmi\
            \ to fit on a node. Selector which must match a node's labels for the\
            \ vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
          type: object
        priorityClassName:
          description: "If specified, indicates the pod's priority. If not specified,\
            \ the pod priority will be default or zero if there is no default."
          type: string
        readinessProbe:
          $ref: "#/components/schemas/v1VmProbe"
        schedulerName:
          description: "If specified, the VMI will be dispatched by specified scheduler.\
            \ If not specified, the VMI will be dispatched by default scheduler."
          type: string
        startStrategy:
          description: StartStrategy can be set to "Paused" if Virtual Machine should
            be started in paused state.
          type: string
        subdomain:
          description: "If specified, the fully qualified vmi hostname will be \"\
            <hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not\
            \ specified, the vmi will not have a domainname at all. The DNS entry\
            \ will resolve to the vmi, no matter if the vmi itself can pick up a hostname."
          type: string
        terminationGracePeriodSeconds:
          description: Grace period observed after signalling a VirtualMachineInstance
            to stop after which the VirtualMachineInstance is force terminated.
          format: int64
          type: integer
        tolerations:
          description: "If toleration is specified, obey all the toleration rules."
          items:
            $ref: "#/components/schemas/v1VmToleration"
          type: array
        topologySpreadConstraints:
          description: TopologySpreadConstraints describes how a group of VMIs will
            be spread across a given topology domains. K8s scheduler will schedule
            VMI pods in a way which abides by the constraints.
          items:
            $ref: "#/components/schemas/v1VmTopologySpreadConstraint"
          type: array
          x-kubernetes-patch-strategy: merge
          x-kubernetes-list-type: map
          x-kubernetes-list-map-keys:
          - topologyKey
          - whenUnsatisfiable
          x-kubernetes-patch-merge-key: topologyKey
        volumes:
          description: List of volumes that can be mounted by disks belonging to the
            vmi.
          items:
            $ref: "#/components/schemas/v1VmVolume"
          type: array
      required:
      - domain
      type: object
    v1VmVirtualMachineInstanceTemplateSpec:
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations:
            key: annotations
          generateName: generateName
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          managedFields:
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          - apiVersion: apiVersion
            fieldsV1:
              Raw:
              - Raw
              - Raw
            manager: manager
            subresource: subresource
            time: 2000-01-23T04:56:07.000+00:00
            operation: operation
            fieldsType: fieldsType
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        spec:
          dnsPolicy: dnsPolicy
          livenessProbe:
            failureThreshold: 7
            periodSeconds: 4
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            guestAgentPing: "{}"
            successThreshold: 5
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          terminationGracePeriodSeconds: 9
          dnsConfig:
            searches:
            - searches
            - searches
            nameservers:
            - nameservers
            - nameservers
            options:
            - name: name
              value: value
            - name: name
              value: value
          priorityClassName: priorityClassName
          topologySpreadConstraints:
          - whenUnsatisfiable: whenUnsatisfiable
            maxSkew: 8
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
          - whenUnsatisfiable: whenUnsatisfiable
            maxSkew: 8
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels:
                key: matchLabels
            topologyKey: topologyKey
          volumes:
          - downwardAPI:
              volumeLabel: volumeLabel
              fields:
              - mode: 9
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 9
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            cloudInitConfigDrive:
              networkDataSecretRef:
                name: name
              userData: userData
              networkData: networkData
              networkDataBase64: networkDataBase64
              secretRef:
                name: name
              userDataBase64: userDataBase64
            downwardMetrics: "{}"
            ephemeral:
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
            serviceAccount:
              serviceAccountName: serviceAccountName
            sysprep:
              configMap:
                name: name
              secret:
                name: name
            containerDisk:
              image: image
              imagePullPolicy: imagePullPolicy
              imagePullSecret: imagePullSecret
              path: path
            hostDisk:
              path: path
              shared: true
              type: type
              capacity: capacity
            secret:
              secretName: secretName
              volumeLabel: volumeLabel
              optional: true
            cloudInitNoCloud:
              networkDataSecretRef:
                name: name
              userData: userData
              networkData: networkData
              networkDataBase64: networkDataBase64
              secretRef:
                name: name
              userDataBase64: userDataBase64
            configMap:
              volumeLabel: volumeLabel
              name: name
              optional: true
            dataVolume:
              hotpluggable: true
              name: name
            name: name
            persistentVolumeClaim:
              claimName: claimName
              hotpluggable: true
              readOnly: true
            memoryDump:
              claimName: claimName
              hotpluggable: true
              readOnly: true
            emptyDisk:
              capacity: capacity
          - downwardAPI:
              volumeLabel: volumeLabel
              fields:
              - mode: 9
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 9
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            cloudInitConfigDrive:
              networkDataSecretRef:
                name: name
              userData: userData
              networkData: networkData
              networkDataBase64: networkDataBase64
              secretRef:
                name: name
              userDataBase64: userDataBase64
            downwardMetrics: "{}"
            ephemeral:
              persistentVolumeClaim:
                claimName: claimName
                hotpluggable: true
                readOnly: true
            serviceAccount:
              serviceAccountName: serviceAccountName
            sysprep:
              configMap:
                name: name
              secret:
                name: name
            containerDisk:
              image: image
              imagePullPolicy: imagePullPolicy
              imagePullSecret: imagePullSecret
              path: path
            hostDisk:
              path: path
              shared: true
              type: type
              capacity: capacity
            secret:
              secretName: secretName
              volumeLabel: volumeLabel
              optional: true
            cloudInitNoCloud:
              networkDataSecretRef:
                name: name
              userData: userData
              networkData: networkData
              networkDataBase64: networkDataBase64
              secretRef:
                name: name
              userDataBase64: userDataBase64
            configMap:
              volumeLabel: volumeLabel
              name: name
              optional: true
            dataVolume:
              hotpluggable: true
              name: name
            name: name
            persistentVolumeClaim:
              claimName: claimName
              hotpluggable: true
              readOnly: true
            memoryDump:
              claimName: claimName
              hotpluggable: true
              readOnly: true
            emptyDisk:
              capacity: capacity
          networks:
          - pod:
              vmNetworkCIDR: vmNetworkCIDR
              vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
            name: name
            multus:
              default: true
              networkName: networkName
          - pod:
              vmNetworkCIDR: vmNetworkCIDR
              vmIPv6NetworkCIDR: vmIPv6NetworkCIDR
            name: name
            multus:
              default: true
              networkName: networkName
          nodeSelector:
            key: nodeSelector
          hostname: hostname
          tolerations:
          - effect: effect
            tolerationSeconds: 6
            value: value
            key: key
            operator: operator
          - effect: effect
            tolerationSeconds: 6
            value: value
            key: key
            operator: operator
          accessCredentials:
          - sshPublicKey:
              propagationMethod:
                configDrive: "{}"
                qemuGuestAgent:
                  users:
                  - users
                  - users
              source:
                secret:
                  secretName: secretName
            userPassword:
              propagationMethod:
                qemuGuestAgent: "{}"
              source:
                secret:
                  secretName: secretName
          - sshPublicKey:
              propagationMethod:
                configDrive: "{}"
                qemuGuestAgent:
                  users:
                  - users
                  - users
              source:
                secret:
                  secretName: secretName
            userPassword:
              propagationMethod:
                qemuGuestAgent: "{}"
              source:
                secret:
                  secretName: secretName
          startStrategy: startStrategy
          domain:
            features:
              smm:
                enabled: true
              kvm:
                hidden: true
              apic:
                endOfInterrupt: true
                enabled: true
              acpi:
                enabled: true
              pvspinlock:
                enabled: true
              hyperv:
                vpindex:
                  enabled: true
                ipi:
                  enabled: true
                reenlightenment:
                  enabled: true
                runtime:
                  enabled: true
                vendorid:
                  vendorid: vendorid
                  enabled: true
                evmcs:
                  enabled: true
                synictimer:
                  direct:
                    enabled: true
                  enabled: true
                spinlocks:
                  spinlocks: 6
                  enabled: true
                tlbflush:
                  enabled: true
                synic:
                  enabled: true
                relaxed:
                  enabled: true
                vapic:
                  enabled: true
                reset:
                  enabled: true
                frequencies:
                  enabled: true
            ioThreadsPolicy: ioThreadsPolicy
            memory:
              hugepages:
                pageSize: pageSize
              guest: guest
            devices:
              autoattachPodInterface: true
              interfaces:
              - dhcpOptions:
                  ntpServers:
                  - ntpServers
                  - ntpServers
                  tftpServerName: tftpServerName
                  bootFileName: bootFileName
                  privateOptions:
                  - value: value
                    option: 1
                  - value: value
                    option: 1
                slirp: "{}"
                macvtap: "{}"
                ports:
                - protocol: protocol
                  port: 1
                  name: name
                - protocol: protocol
                  port: 1
                  name: name
                macAddress: macAddress
                masquerade: "{}"
                bootOrder: 1
                acpiIndex: 7
                name: name
                sriov: "{}"
                model: model
                pciAddress: pciAddress
                bridge: "{}"
                passt: "{}"
                tag: tag
              - dhcpOptions:
                  ntpServers:
                  - ntpServers
                  - ntpServers
                  tftpServerName: tftpServerName
                  bootFileName: bootFileName
                  privateOptions:
                  - value: value
                    option: 1
                  - value: value
                    option: 1
                slirp: "{}"
                macvtap: "{}"
                ports:
                - protocol: protocol
                  port: 1
                  name: name
                - protocol: protocol
                  port: 1
                  name: name
                macAddress: macAddress
                masquerade: "{}"
                bootOrder: 1
                acpiIndex: 7
                name: name
                sriov: "{}"
                model: model
                pciAddress: pciAddress
                bridge: "{}"
                passt: "{}"
                tag: tag
              disks:
              - shareable: true
                cache: cache
                dedicatedIOThread: true
                disk:
                  bus: bus
                  readonly: true
                  pciAddress: pciAddress
                lun:
                  bus: bus
                  readonly: true
                bootOrder: 4
                serial: serial
                io: io
                name: name
                tag: tag
                cdrom:
                  tray: tray
                  bus: bus
                  readonly: true
                blockSize:
                  custom:
                    physical: 2
                    logical: 3
                  matchVolume:
                    enabled: true
              - shareable: true
                cache: cache
                dedicatedIOThread: true
                disk:
                  bus: bus
                  readonly: true
                  pciAddress: pciAddress
                lun:
                  bus: bus
                  readonly: true
                bootOrder: 4
                serial: serial
                io: io
                name: name
                tag: tag
                cdrom:
                  tray: tray
                  bus: bus
                  readonly: true
                blockSize:
                  custom:
                    physical: 2
                    logical: 3
                  matchVolume:
                    enabled: true
              inputs:
              - bus: bus
                name: name
                type: type
              - bus: bus
                name: name
                type: type
              sound:
                name: name
                model: model
              autoattachInputDevice: true
              useVirtioTransitional: true
              rng: "{}"
              autoattachSerialConsole: true
              autoattachVSOCK: true
              filesystems:
              - name: name
                virtiofs: "{}"
              - name: name
                virtiofs: "{}"
              hostDevices:
              - name: name
                tag: tag
                deviceName: deviceName
              - name: name
                tag: tag
                deviceName: deviceName
              networkInterfaceMultiqueue: true
              autoattachMemBalloon: true
              tpm: "{}"
              clientPassthrough: "{}"
              watchdog:
                i6300esb:
                  action: action
                name: name
              blockMultiQueue: true
              gpus:
              - name: name
                tag: tag
                virtualGPUOptions:
                  display:
                    enabled: true
                    ramFB:
                      enabled: true
                deviceName: deviceName
              - name: name
                tag: tag
                virtualGPUOptions:
                  display:
                    enabled: true
                    ramFB:
                      enabled: true
                deviceName: deviceName
              disableHotplug: true
              autoattachGraphicsDevice: true
            machine:
              type: type
            cpu:
              features:
              - name: name
                policy: policy
              - name: name
                policy: policy
              realtime:
                mask: mask
              cores: 2
              dedicatedCpuPlacement: true
              numa:
                guestMappingPassthrough: "{}"
              threads: 9
              model: model
              sockets: 7
              isolateEmulatorThread: true
            resources:
              overcommitGuestOverhead: true
              requests: "{}"
              limits: "{}"
            chassis:
              serial: serial
              asset: asset
              sku: sku
              version: version
              manufacturer: manufacturer
            clock:
              timer:
                rtc:
                  tickPolicy: tickPolicy
                  present: true
                  track: track
                kvm:
                  present: true
                hpet:
                  tickPolicy: tickPolicy
                  present: true
                pit:
                  tickPolicy: tickPolicy
                  present: true
                hyperv:
                  present: true
              utc:
                offsetSeconds: 5
              timezone: timezone
            firmware:
              serial: serial
              bootloader:
                bios:
                  useSerial: true
                efi:
                  secureBoot: true
              uuid: uuid
              kernelBoot:
                container:
                  image: image
                  imagePullPolicy: imagePullPolicy
                  imagePullSecret: imagePullSecret
                  initrdPath: initrdPath
                  kernelPath: kernelPath
                kernelArgs: kernelArgs
            launchSecurity:
              sev: "{}"
          readinessProbe:
            failureThreshold: 7
            periodSeconds: 4
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            guestAgentPing: "{}"
            successThreshold: 5
            initialDelaySeconds: 1
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          subdomain: subdomain
          evictionStrategy: evictionStrategy
          schedulerName: schedulerName
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 1
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 1
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 5
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 5
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                namespaceSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels:
                    key: matchLabels
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 5
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  namespaceSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels:
                      key: matchLabels
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 5
      properties:
        metadata:
          $ref: "#/components/schemas/v1VmObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VmVirtualMachineInstanceSpec"
      type: object
    v1VmVirtualMachineMemoryDumpRequest:
      description: VirtualMachineMemoryDumpRequest represent the memory dump request
        phase and info
      example:
        phase: phase
        fileName: fileName
        claimName: claimName
        message: message
        endTimestamp: 2000-01-23T04:56:07.000+00:00
        remove: true
        startTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        claimName:
          description: ClaimName is the name of the pvc that will contain the memory
            dump
          type: string
        endTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        fileName:
          description: FileName represents the name of the output file
          type: string
        message:
          description: Message is a detailed message about failure of the memory dump
          type: string
        phase:
          description: Phase represents the memory dump phase
          type: string
        remove:
          description: Remove represents request of dissociating the memory dump pvc
          type: boolean
        startTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      required:
      - claimName
      - phase
      type: object
    v1VmVirtualMachineStartFailure:
      description: VirtualMachineStartFailure tracks VMIs which failed to transition
        successfully to running using the VM status
      example:
        consecutiveFailCount: 6
        retryAfterTimestamp: 2000-01-23T04:56:07.000+00:00
        lastFailedVMIUID: lastFailedVMIUID
      properties:
        consecutiveFailCount:
          format: int32
          type: integer
        lastFailedVMIUID:
          type: string
        retryAfterTimestamp:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1VmVirtualMachineStateChangeRequest:
      example:
        uid: uid
        data:
          key: data
        action: action
      properties:
        action:
          description: Indicates the type of action that is requested. e.g. Start
            or Stop
          type: string
        data:
          additionalProperties:
            type: string
          description: Provides additional data in order to perform the Action
          type: object
        uid:
          description: Indicates the UUID of an existing Virtual Machine Instance
            that this change request applies to -- if applicable
          type: string
      required:
      - action
      type: object
    v1VmVirtualMachineVolumeRequest:
      example:
        removeVolumeOptions:
          dryRun:
          - dryRun
          - dryRun
          name: name
        addVolumeOptions:
          disk:
            shareable: true
            cache: cache
            dedicatedIOThread: true
            disk:
              bus: bus
              readonly: true
              pciAddress: pciAddress
            lun:
              bus: bus
              readonly: true
            bootOrder: 4
            serial: serial
            io: io
            name: name
            tag: tag
            cdrom:
              tray: tray
              bus: bus
              readonly: true
            blockSize:
              custom:
                physical: 2
                logical: 3
              matchVolume:
                enabled: true
          dryRun:
          - dryRun
          - dryRun
          name: name
          volumeSource:
            dataVolume:
              hotpluggable: true
              name: name
            persistentVolumeClaim:
              claimName: claimName
              hotpluggable: true
              readOnly: true
      properties:
        addVolumeOptions:
          $ref: "#/components/schemas/v1VmAddVolumeOptions"
        removeVolumeOptions:
          $ref: "#/components/schemas/v1VmRemoveVolumeOptions"
      type: object
    v1VmVolume:
      description: Volume represents a named volume in a vmi.
      example:
        downwardAPI:
          volumeLabel: volumeLabel
          fields:
          - mode: 9
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 9
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        cloudInitConfigDrive:
          networkDataSecretRef:
            name: name
          userData: userData
          networkData: networkData
          networkDataBase64: networkDataBase64
          secretRef:
            name: name
          userDataBase64: userDataBase64
        downwardMetrics: "{}"
        ephemeral:
          persistentVolumeClaim:
            claimName: claimName
            hotpluggable: true
            readOnly: true
        serviceAccount:
          serviceAccountName: serviceAccountName
        sysprep:
          configMap:
            name: name
          secret:
            name: name
        containerDisk:
          image: image
          imagePullPolicy: imagePullPolicy
          imagePullSecret: imagePullSecret
          path: path
        hostDisk:
          path: path
          shared: true
          type: type
          capacity: capacity
        secret:
          secretName: secretName
          volumeLabel: volumeLabel
          optional: true
        cloudInitNoCloud:
          networkDataSecretRef:
            name: name
          userData: userData
          networkData: networkData
          networkDataBase64: networkDataBase64
          secretRef:
            name: name
          userDataBase64: userDataBase64
        configMap:
          volumeLabel: volumeLabel
          name: name
          optional: true
        dataVolume:
          hotpluggable: true
          name: name
        name: name
        persistentVolumeClaim:
          claimName: claimName
          hotpluggable: true
          readOnly: true
        memoryDump:
          claimName: claimName
          hotpluggable: true
          readOnly: true
        emptyDisk:
          capacity: capacity
      properties:
        cloudInitConfigDrive:
          $ref: "#/components/schemas/v1VmCloudInitConfigDriveSource"
        cloudInitNoCloud:
          $ref: "#/components/schemas/v1VmCloudInitNoCloudSource"
        configMap:
          $ref: "#/components/schemas/v1VmConfigMapVolumeSource"
        containerDisk:
          $ref: "#/components/schemas/v1VmContainerDiskSource"
        dataVolume:
          $ref: "#/components/schemas/v1VmCoreDataVolumeSource"
        downwardAPI:
          $ref: "#/components/schemas/v1VmDownwardApiVolumeSource"
        downwardMetrics:
          description: DownwardMetricsVolumeSource adds a very small disk to VMIs
            which contains a limited view of host and guest metrics. The disk content
            is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
          type: object
        emptyDisk:
          $ref: "#/components/schemas/v1VmEmptyDiskSource"
        ephemeral:
          $ref: "#/components/schemas/v1VmEphemeralVolumeSource"
        hostDisk:
          $ref: "#/components/schemas/v1VmHostDisk"
        memoryDump:
          $ref: "#/components/schemas/v1VmMemoryDumpVolumeSource"
        name:
          description: "Volume's name. Must be a DNS_LABEL and unique within the vmi.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        persistentVolumeClaim:
          $ref: "#/components/schemas/v1VmPersistentVolumeClaimVolumeSource"
        secret:
          $ref: "#/components/schemas/v1VmSecretVolumeSource"
        serviceAccount:
          $ref: "#/components/schemas/v1VmServiceAccountVolumeSource"
        sysprep:
          $ref: "#/components/schemas/v1VmSysprepSource"
      required:
      - name
      type: object
    v1VmVolumeSnapshotStatus:
      example:
        reason: reason
        name: name
        enabled: true
      properties:
        enabled:
          description: True if the volume supports snapshotting
          type: boolean
        name:
          description: Volume name
          type: string
        reason:
          description: "Empty if snapshotting is enabled, contains reason otherwise"
          type: string
      required:
      - enabled
      - name
      type: object
    v1VmWatchdog:
      description: Named watchdog device.
      example:
        i6300esb:
          action: action
        name: name
      properties:
        i6300esb:
          $ref: "#/components/schemas/v1VmI6300ESBWatchdog"
        name:
          description: Name of the watchdog.
          type: string
      required:
      - name
      type: object
    v1VmWeightedPodAffinityTerm:
      description: The weights of all of the matched WeightedPodAffinityTerm fields
        are added per-node to find the most preferred node(s)
      example:
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          namespaceSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels:
              key: matchLabels
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 5
      properties:
        podAffinityTerm:
          $ref: "#/components/schemas/v1VmPodAffinityTerm"
        weight:
          description: "weight associated with matching the corresponding podAffinityTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - podAffinityTerm
      - weight
      type: object
    v1VsphereAccount:
      description: VSphere account information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          password: password
          insecure: true
          vcenterServer: vcenterServer
          username: username
        status:
          tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
          tokenExpiry: 2000-01-23T04:56:07.000+00:00
          state: state
      properties:
        apiVersion:
          description: Cloud account api version
          type: string
        kind:
          description: Cloud account kind
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VsphereCloudAccount"
        status:
          $ref: "#/components/schemas/v1CloudAccountStatus"
      type: object
    v1VsphereAccounts:
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            password: password
            insecure: true
            vcenterServer: vcenterServer
            username: username
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            password: password
            insecure: true
            vcenterServer: vcenterServer
            username: username
          status:
            tokenGenerationTime: 2000-01-23T04:56:07.000+00:00
            tokenExpiry: 2000-01-23T04:56:07.000+00:00
            state: state
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1VsphereAccount"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1VsphereCloudAccount:
      example:
        password: password
        insecure: true
        vcenterServer: vcenterServer
        username: username
      properties:
        insecure:
          description: Insecure is a flag that controls whether or not to validate
            the vSphere server's certificate.
          type: boolean
          x-omitempty: false
        password:
          type: string
        username:
          type: string
        vcenterServer:
          description: VcenterServer is the address of the vSphere endpoint
          type: string
      required:
      - password
      - username
      - vcenterServer
      type: object
    v1VsphereCloudClusterConfigEntity:
      description: vSphere cloud cluster config entity
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1VsphereClusterConfigEntity"
      type: object
    v1VsphereCloudConfig:
      description: VsphereCloudConfig is the Schema for the vspherecloudconfigs API
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          edgeHostRef:
            uid: uid
            kind: kind
            name: name
          machinePoolConfig:
          - isControlPlane: true
            instanceType:
              diskGiB: 1
              numCPUs: 5
              memoryMiB: 5
            nodeRepaveInterval: 9
            additionalLabels:
              key: additionalLabels
            maxSize: 2
            placements:
            - cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
            - cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 3
            name: name
            minSize: 7
          - isControlPlane: true
            instanceType:
              diskGiB: 1
              numCPUs: 5
              memoryMiB: 5
            nodeRepaveInterval: 9
            additionalLabels:
              key: additionalLabels
            maxSize: 2
            placements:
            - cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
            - cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
            taints:
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            - timeAdded: 2000-01-23T04:56:07.000+00:00
              effect: NoSchedule
              value: value
              key: key
            useControlPlaneAsWorker: true
            labels:
            - labels
            - labels
            updateStrategy:
              type: RollingUpdateScaleOut
            additionalTags:
              key: additionalTags
            machinePoolProperties:
              archType: amd64
            size: 3
            name: name
            minSize: 7
          clusterConfig:
            controlPlaneEndpoint:
              host: host
              type: VIP
              ddnsSearchDomain: ddnsSearchDomain
            ntpServers:
            - ntpServers
            - ntpServers
            staticIp: true
            placement:
              cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
            sshKeys:
            - sshKeys
            - sshKeys
          cloudAccountRef:
            uid: uid
            kind: kind
            name: name
        status:
          uploadOvaS3: uploadOvaS3
          ansibleDigest: ansibleDigest
          lastVMExported: lastVMExported
          nodeImage:
            fullPath: fullPath
            state: state
          sourceImageId: sourceImageId
          lastOVACreated: lastOVACreated
          conditions:
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          - reason: reason
            lastTransitionTime: 2000-01-23T04:56:07.000+00:00
            message: message
            type: type
            lastProbeTime: 2000-01-23T04:56:07.000+00:00
            status: status
          roleDigest:
            key: roleDigest
          useCapiImage: true
          isAddonLayer: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VsphereCloudConfigSpec"
        status:
          $ref: "#/components/schemas/v1VsphereCloudConfigStatus"
      type: object
    v1VsphereCloudConfigSpec:
      description: VsphereCloudConfigSpec defines the desired state of VsphereCloudConfig
      example:
        edgeHostRef:
          uid: uid
          kind: kind
          name: name
        machinePoolConfig:
        - isControlPlane: true
          instanceType:
            diskGiB: 1
            numCPUs: 5
            memoryMiB: 5
          nodeRepaveInterval: 9
          additionalLabels:
            key: additionalLabels
          maxSize: 2
          placements:
          - cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
          - cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 3
          name: name
          minSize: 7
        - isControlPlane: true
          instanceType:
            diskGiB: 1
            numCPUs: 5
            memoryMiB: 5
          nodeRepaveInterval: 9
          additionalLabels:
            key: additionalLabels
          maxSize: 2
          placements:
          - cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
          - cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
          taints:
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          - timeAdded: 2000-01-23T04:56:07.000+00:00
            effect: NoSchedule
            value: value
            key: key
          useControlPlaneAsWorker: true
          labels:
          - labels
          - labels
          updateStrategy:
            type: RollingUpdateScaleOut
          additionalTags:
            key: additionalTags
          machinePoolProperties:
            archType: amd64
          size: 3
          name: name
          minSize: 7
        clusterConfig:
          controlPlaneEndpoint:
            host: host
            type: VIP
            ddnsSearchDomain: ddnsSearchDomain
          ntpServers:
          - ntpServers
          - ntpServers
          staticIp: true
          placement:
            cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
          sshKeys:
          - sshKeys
          - sshKeys
        cloudAccountRef:
          uid: uid
          kind: kind
          name: name
      properties:
        cloudAccountRef:
          $ref: "#/components/schemas/v1ObjectReference"
        clusterConfig:
          $ref: "#/components/schemas/v1VsphereClusterConfig"
        edgeHostRef:
          $ref: "#/components/schemas/v1ObjectReference"
        machinePoolConfig:
          items:
            $ref: "#/components/schemas/v1VsphereMachinePoolConfig"
          type: array
      required:
      - clusterConfig
      - machinePoolConfig
      type: object
    v1VsphereCloudConfigStatus:
      description: VsphereCloudConfigStatus defines the observed state of VsphereCloudConfig
      example:
        uploadOvaS3: uploadOvaS3
        ansibleDigest: ansibleDigest
        lastVMExported: lastVMExported
        nodeImage:
          fullPath: fullPath
          state: state
        sourceImageId: sourceImageId
        lastOVACreated: lastOVACreated
        conditions:
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        - reason: reason
          lastTransitionTime: 2000-01-23T04:56:07.000+00:00
          message: message
          type: type
          lastProbeTime: 2000-01-23T04:56:07.000+00:00
          status: status
        roleDigest:
          key: roleDigest
        useCapiImage: true
        isAddonLayer: true
      properties:
        ansibleDigest:
          type: string
        conditions:
          items:
            $ref: "#/components/schemas/v1ClusterCondition"
          type: array
        isAddonLayer:
          description: addon layers present in spc
          type: boolean
        lastOVACreated:
          type: string
        lastVMExported:
          type: string
        nodeImage:
          $ref: "#/components/schemas/v1VsphereImage"
        roleDigest:
          additionalProperties:
            type: string
          description: this map will be for ansible roles present in eack pack
          type: object
        sourceImageId:
          description: "sourceImageId, it can be from packref's annotations or from\
            \ pack.json"
          type: string
        uploadOvaS3:
          description: UploadOVAS3 will hold last image name which uploaded to S3
          type: string
        useCapiImage:
          description: "If no ansible roles found in Packs then Mold should tell Drive\
            \ to use capi image and not create custom image, because there is nothing\
            \ to add"
          type: boolean
      type: object
    v1VsphereCloudDatacenter:
      description: Vsphere datacenter
      example:
        folders:
        - folders
        - folders
        computeClusters:
        - resourcePools:
          - resourcePools
          - resourcePools
          name: name
          datastores:
          - datastores
          - datastores
          networks:
          - networks
          - networks
        - resourcePools:
          - resourcePools
          - resourcePools
          name: name
          datastores:
          - datastores
          - datastores
          networks:
          - networks
          - networks
        name: name
      properties:
        computeClusters:
          items:
            $ref: "#/components/schemas/v1VsphereComputeCluster"
          type: array
        folders:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    v1VsphereClusterConfig:
      example:
        controlPlaneEndpoint:
          host: host
          type: VIP
          ddnsSearchDomain: ddnsSearchDomain
        ntpServers:
        - ntpServers
        - ntpServers
        staticIp: true
        placement:
          cluster: cluster
          uid: uid
          folder: folder
          imageTemplateFolder: imageTemplateFolder
          datastore: datastore
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          network:
            parentPoolRef:
              uid: uid
              kind: kind
              name: name
            staticIp: true
            networkName: networkName
            ipPool:
              uid: uid
              prefix: 6
              pools:
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          resourcePool: resourcePool
        sshKeys:
        - sshKeys
        - sshKeys
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1ControlPlaneEndPoint"
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list.
          items:
            type: string
          type: array
        placement:
          $ref: "#/components/schemas/v1VspherePlacementConfig"
        sshKeys:
          description: SSHKeys specifies a list of ssh authorized keys for the 'spectro'
            user
          items:
            type: string
          type: array
        staticIp:
          description: "whether this cluster should use dhcp or static IP, if false,\
            \ use DHCP if this is set, then all machinepools should have staticIP\
            \ with provided IPPool adding this as an additional standalone flag without\
            \ relating to placement.Nework main reason is to enable more validation\
            \ for placement.Network.StaticIP which should come together with valid\
            \ Network.IPPool and Network.Name"
          type: boolean
      required:
      - placement
      type: object
    v1VsphereClusterConfigEntity:
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1ControlPlaneEndPoint"
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list.
          items:
            type: string
          type: array
        placement:
          $ref: "#/components/schemas/v1VspherePlacementConfigEntity"
        sshKeys:
          description: SSHKeys specifies a list of ssh authorized keys for the 'spectro'
            user
          items:
            type: string
          type: array
        staticIp:
          description: "whether this cluster should use dhcp or static IP, if false,\
            \ use DHCP if this is set, then all machinepools should have staticIP\
            \ with provided IPPool adding this as an additional standalone flag without\
            \ relating to placement.Nework main reason is to enable more validation\
            \ for placement.Network.StaticIP which should come together with valid\
            \ Network.IPPool and Network.Name"
          type: boolean
      required:
      - placement
      type: object
    v1VsphereComputeCluster:
      description: Vsphere compute cluster
      example:
        resourcePools:
        - resourcePools
        - resourcePools
        name: name
        datastores:
        - datastores
        - datastores
        networks:
        - networks
        - networks
      properties:
        datastores:
          items:
            type: string
          type: array
          uniqueItems: true
        name:
          type: string
        networks:
          items:
            type: string
          type: array
          uniqueItems: true
        resourcePools:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1VsphereComputeClusterResources:
      description: "Datacenter and its resources like datastore, resoucepool, folders"
      example:
        computecluster:
          resourcePools:
          - resourcePools
          - resourcePools
          name: name
          datastores:
          - datastores
          - datastores
          networks:
          - networks
          - networks
        datacenter: datacenter
      properties:
        computecluster:
          $ref: "#/components/schemas/v1VsphereComputeCluster"
        datacenter:
          description: Name of the datacenter
          type: string
      type: object
    v1VsphereDatacenter:
      description: List of Datacenter with computeclusters
      example:
        folders:
        - folders
        - folders
        computeclusters:
        - computeclusters
        - computeclusters
        datacenter: datacenter
      properties:
        computeclusters:
          description: List  of the VSphere compute clusters in datacenter
          items:
            type: string
          type: array
          uniqueItems: true
        datacenter:
          description: name of the datacenter of the VSphere
          type: string
        folders:
          description: List  of the VSphere folders in datacenter
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1VsphereDatacenters:
      description: List of Datacenters with computeclusters
      example:
        items:
        - folders:
          - folders
          - folders
          computeclusters:
          - computeclusters
          - computeclusters
          datacenter: datacenter
        - folders:
          - folders
          - folders
          computeclusters:
          - computeclusters
          - computeclusters
          datacenter: datacenter
      properties:
        items:
          description: List of associated datacenters
          items:
            $ref: "#/components/schemas/v1VsphereDatacenter"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1VsphereDnsMapping:
      description: VSphere DNS Mapping
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          privateGatewayUid: privateGatewayUid
          dnsName: dnsName
          datacenter: datacenter
          network: network
          networkUrl: networkUrl
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VsphereDnsMappingSpec"
      type: object
    v1VsphereDnsMappingSpec:
      description: VSphere DNS Mapping Spec
      example:
        privateGatewayUid: privateGatewayUid
        dnsName: dnsName
        datacenter: datacenter
        network: network
        networkUrl: networkUrl
      properties:
        datacenter:
          description: VSphere datacenter name
          type: string
        dnsName:
          description: VSphere DNS name
          type: string
        network:
          description: VSphere network name
          type: string
        networkUrl:
          description: VSphere network URL
          readOnly: true
          type: string
        privateGatewayUid:
          description: VSphere private gateway uid
          type: string
      required:
      - datacenter
      - dnsName
      - network
      - privateGatewayUid
      type: object
    v1VsphereDnsMappings:
      example:
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            privateGatewayUid: privateGatewayUid
            dnsName: dnsName
            datacenter: datacenter
            network: network
            networkUrl: networkUrl
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            privateGatewayUid: privateGatewayUid
            dnsName: dnsName
            datacenter: datacenter
            network: network
            networkUrl: networkUrl
      properties:
        items:
          description: List of vSphere DNS mapping
          items:
            $ref: "#/components/schemas/v1VsphereDnsMapping"
          type: array
          uniqueItems: true
      required:
      - items
      type: object
    v1VsphereEnv:
      description: Vsphere environment entity
      example:
        version: version
      properties:
        version:
          description: Version of vsphere environment
          type: string
      type: object
    v1VsphereImage:
      description: "A generated Image should always be a template which resides inside\
        \ vsphere Will not generate a OVA file out of the image OVA can be used as\
        \ a base input of the os pack, that's internal to the pack"
      example:
        fullPath: fullPath
        state: state
      properties:
        fullPath:
          description: "full path of the image template location it contains datacenter/folder/templatename\
            \ etc eg: /mydc/vm/template/spectro/workerpool-1-centos"
          type: string
        state:
          type: string
      type: object
    v1VsphereInstanceType:
      example:
        diskGiB: 1
        numCPUs: 5
        memoryMiB: 5
      properties:
        diskGiB:
          description: "DiskGiB is the size of a virtual machine's disk, in GiB. Defaults\
            \ to the analogue property value in the template from which this machine\
            \ is cloned."
          format: int32
          type: integer
        memoryMiB:
          description: "MemoryMiB is the size of a virtual machine's memory, in MiB.\
            \ Defaults to the analogue property value in the template from which this\
            \ machine is cloned."
          format: int64
          type: integer
        numCPUs:
          description: NumCPUs is the number of virtual processors in a virtual machine.
            Defaults to the analogue property value in the template from which this
            machine is cloned.
          format: int32
          type: integer
      required:
      - diskGiB
      - memoryMiB
      - numCPUs
      type: object
    v1VsphereMachine:
      description: vSphere cloud VM definition
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          images:
          - fullPath: fullPath
            state: state
          - fullPath: fullPath
            state: state
          ntpServers:
          - ntpServers
          - ntpServers
          instanceType:
            diskGiB: 1
            numCPUs: 5
            memoryMiB: 5
          nics:
          - macAddress: macAddress
            privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
          - macAddress: macAddress
            privateIPs:
            - privateIPs
            - privateIPs
            networkName: networkName
            index: 0
          vcenterServer: vcenterServer
          placement:
            cluster: cluster
            uid: uid
            folder: folder
            imageTemplateFolder: imageTemplateFolder
            datastore: datastore
            datacenter: datacenter
            storagePolicyName: storagePolicyName
            network:
              parentPoolRef:
                uid: uid
                kind: kind
                name: name
              staticIp: true
              networkName: networkName
              ipPool:
                uid: uid
                prefix: 6
                pools:
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                - subnet: subnet
                  prefix: 0
                  start: start
                  end: end
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
            resourcePool: resourcePool
        status:
          maintenanceStatus:
            action: action
            state: state
            message: message
          instanceState: Pending
          health:
            lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
            state: state
            conditions:
            - reason: reason
              message: message
              type: type
              status: status
            - reason: reason
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1VsphereMachineSpec"
        status:
          $ref: "#/components/schemas/v1CloudMachineStatus"
      type: object
    v1VsphereMachinePoolCloudConfigEntity:
      properties:
        instanceType:
          $ref: "#/components/schemas/v1VsphereInstanceType"
        placements:
          description: "Placements configuration Placements If defined, will replace\
            \ default values defined in VsphereClusterConfig Array means one MachinePool\
            \ can span across multiple vsphere compute cluster"
          items:
            $ref: "#/components/schemas/v1VspherePlacementConfigEntity"
          type: array
      type: object
    v1VsphereMachinePoolConfig:
      example:
        isControlPlane: true
        instanceType:
          diskGiB: 1
          numCPUs: 5
          memoryMiB: 5
        nodeRepaveInterval: 9
        additionalLabels:
          key: additionalLabels
        maxSize: 2
        placements:
        - cluster: cluster
          uid: uid
          folder: folder
          imageTemplateFolder: imageTemplateFolder
          datastore: datastore
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          network:
            parentPoolRef:
              uid: uid
              kind: kind
              name: name
            staticIp: true
            networkName: networkName
            ipPool:
              uid: uid
              prefix: 6
              pools:
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          resourcePool: resourcePool
        - cluster: cluster
          uid: uid
          folder: folder
          imageTemplateFolder: imageTemplateFolder
          datastore: datastore
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          network:
            parentPoolRef:
              uid: uid
              kind: kind
              name: name
            staticIp: true
            networkName: networkName
            ipPool:
              uid: uid
              prefix: 6
              pools:
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          resourcePool: resourcePool
        taints:
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        - timeAdded: 2000-01-23T04:56:07.000+00:00
          effect: NoSchedule
          value: value
          key: key
        useControlPlaneAsWorker: true
        labels:
        - labels
        - labels
        updateStrategy:
          type: RollingUpdateScaleOut
        additionalTags:
          key: additionalTags
        machinePoolProperties:
          archType: amd64
        size: 3
        name: name
        minSize: 7
      properties:
        additionalLabels:
          additionalProperties:
            type: string
          description: additionalLabels
          type: object
        additionalTags:
          additionalProperties:
            type: string
          description: "AdditionalTags is an optional set of tags to add to resources\
            \ managed by the provider, in addition to the ones added by default. For\
            \ eg., tags for EKS nodeGroup or EKS NodegroupIAMRole"
          type: object
        instanceType:
          $ref: "#/components/schemas/v1VsphereInstanceType"
        isControlPlane:
          description: whether this pool is for control plane
          type: boolean
          x-omitempty: false
        labels:
          description: "labels for this pool, example: control-plane/worker, gpu,\
            \ windows"
          items:
            type: string
          type: array
        machinePoolProperties:
          $ref: "#/components/schemas/v1MachinePoolProperties"
        maxSize:
          description: "max size of the pool, for scaling"
          format: int32
          type: integer
        minSize:
          description: "min size of the pool, for scaling"
          format: int32
          type: integer
        name:
          type: string
        nodeRepaveInterval:
          description: "Minimum number of seconds a node should be Ready, before the\
            \ next node is selected for repave. Applicable only for workerpools in\
            \ infrastructure cluster"
          format: int32
          type: integer
        placements:
          description: "Placements configuration Placements If defined, will replace\
            \ default values defined in VsphereClusterConfig Array means one MachinePool\
            \ can span across multiple vsphere compute cluster"
          items:
            $ref: "#/components/schemas/v1VspherePlacementConfig"
          type: array
        size:
          description: "size of the pool, number of machines"
          format: int32
          type: integer
        taints:
          description: control plane or worker taints
          items:
            $ref: "#/components/schemas/v1Taint"
          type: array
          uniqueItems: true
        updateStrategy:
          $ref: "#/components/schemas/v1UpdateStrategy"
        useControlPlaneAsWorker:
          description: "if IsControlPlane==true && useControlPlaneAsWorker==true,\
            \ then will remove control plane taint this will not be used for worker\
            \ pools"
          type: boolean
          x-omitempty: false
      required:
      - instanceType
      - isControlPlane
      type: object
    v1VsphereMachinePoolConfigEntity:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1VsphereMachinePoolCloudConfigEntity"
        poolConfig:
          $ref: "#/components/schemas/v1MachinePoolConfigEntity"
      required:
      - cloudConfig
      type: object
    v1VsphereMachineSpec:
      description: vSphere cloud VM definition spec
      example:
        images:
        - fullPath: fullPath
          state: state
        - fullPath: fullPath
          state: state
        ntpServers:
        - ntpServers
        - ntpServers
        instanceType:
          diskGiB: 1
          numCPUs: 5
          memoryMiB: 5
        nics:
        - macAddress: macAddress
          privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
        - macAddress: macAddress
          privateIPs:
          - privateIPs
          - privateIPs
          networkName: networkName
          index: 0
        vcenterServer: vcenterServer
        placement:
          cluster: cluster
          uid: uid
          folder: folder
          imageTemplateFolder: imageTemplateFolder
          datastore: datastore
          datacenter: datacenter
          storagePolicyName: storagePolicyName
          network:
            parentPoolRef:
              uid: uid
              kind: kind
              name: name
            staticIp: true
            networkName: networkName
            ipPool:
              uid: uid
              prefix: 6
              pools:
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              - subnet: subnet
                prefix: 0
                start: start
                end: end
                nameserver:
                  addresses:
                  - addresses
                  - addresses
                  search:
                  - search
                  - search
                gateway: gateway
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
          resourcePool: resourcePool
      properties:
        images:
          items:
            $ref: "#/components/schemas/v1VsphereImage"
          type: array
        instanceType:
          $ref: "#/components/schemas/v1VsphereInstanceType"
        nics:
          items:
            $ref: "#/components/schemas/v1VsphereNic"
          type: array
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list.
          items:
            type: string
          type: array
        placement:
          $ref: "#/components/schemas/v1VspherePlacementConfig"
        vcenterServer:
          description: VcenterServer is the address of the vSphere endpoint
          type: string
      required:
      - nics
      - placement
      - vcenterServer
      type: object
    v1VsphereMachines:
      description: vSphere machine list
      example:
        listmeta:
          offset: 1
          continue: continue
          count: 0
          limit: 6
        items:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            images:
            - fullPath: fullPath
              state: state
            - fullPath: fullPath
              state: state
            ntpServers:
            - ntpServers
            - ntpServers
            instanceType:
              diskGiB: 1
              numCPUs: 5
              memoryMiB: 5
            nics:
            - macAddress: macAddress
              privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            - macAddress: macAddress
              privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            vcenterServer: vcenterServer
            placement:
              cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            images:
            - fullPath: fullPath
              state: state
            - fullPath: fullPath
              state: state
            ntpServers:
            - ntpServers
            - ntpServers
            instanceType:
              diskGiB: 1
              numCPUs: 5
              memoryMiB: 5
            nics:
            - macAddress: macAddress
              privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            - macAddress: macAddress
              privateIPs:
              - privateIPs
              - privateIPs
              networkName: networkName
              index: 0
            vcenterServer: vcenterServer
            placement:
              cluster: cluster
              uid: uid
              folder: folder
              imageTemplateFolder: imageTemplateFolder
              datastore: datastore
              datacenter: datacenter
              storagePolicyName: storagePolicyName
              network:
                parentPoolRef:
                  uid: uid
                  kind: kind
                  name: name
                staticIp: true
                networkName: networkName
                ipPool:
                  uid: uid
                  prefix: 6
                  pools:
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  - subnet: subnet
                    prefix: 0
                    start: start
                    end: end
                    nameserver:
                      addresses:
                      - addresses
                      - addresses
                      search:
                      - search
                      - search
                    gateway: gateway
                  nameserver:
                    addresses:
                    - addresses
                    - addresses
                    search:
                    - search
                    - search
                  gateway: gateway
              resourcePool: resourcePool
          status:
            maintenanceStatus:
              action: action
              state: state
              message: message
            instanceState: Pending
            health:
              lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
              state: state
              conditions:
              - reason: reason
                message: message
                type: type
                status: status
              - reason: reason
                message: message
                type: type
                status: status
      properties:
        items:
          items:
            $ref: "#/components/schemas/v1VsphereMachine"
          type: array
          uniqueItems: true
        listmeta:
          $ref: "#/components/schemas/v1ListMetaData"
      required:
      - items
      type: object
    v1VsphereNetworkConfig:
      example:
        parentPoolRef:
          uid: uid
          kind: kind
          name: name
        staticIp: true
        networkName: networkName
        ipPool:
          uid: uid
          prefix: 6
          pools:
          - subnet: subnet
            prefix: 0
            start: start
            end: end
            nameserver:
              addresses:
              - addresses
              - addresses
              search:
              - search
              - search
            gateway: gateway
          - subnet: subnet
            prefix: 0
            start: start
            end: end
            nameserver:
              addresses:
              - addresses
              - addresses
              search:
              - search
              - search
            gateway: gateway
          nameserver:
            addresses:
            - addresses
            - addresses
            search:
            - search
            - search
          gateway: gateway
      properties:
        ipPool:
          $ref: "#/components/schemas/v1IPPool"
        networkName:
          description: NetworkName is the name of the network in which VMs are created/located.
          type: string
        parentPoolRef:
          $ref: "#/components/schemas/v1ObjectReference"
        staticIp:
          description: "support dhcp or static IP, if false, use DHCP"
          type: boolean
      required:
      - networkName
      type: object
    v1VsphereNetworkConfigEntity:
      properties:
        networkName:
          description: NetworkName is the name of the network in which VMs are created/located.
          type: string
        parentPoolUid:
          description: ParentPoolRef Uid to the ParentPool which allocates IPs for
            this IPPool
          type: string
        staticIp:
          description: "support dhcp or static IP, if false, use DHCP"
          type: boolean
      required:
      - networkName
      type: object
    v1VsphereNic:
      description: vSphere network interface
      example:
        macAddress: macAddress
        privateIPs:
        - privateIPs
        - privateIPs
        networkName: networkName
        index: 0
      properties:
        index:
          format: int8
          type: integer
        macAddress:
          type: string
        networkName:
          type: string
        privateIPs:
          items:
            type: string
          type: array
      required:
      - networkName
      type: object
    v1VsphereOverlordClusterConfigEntity:
      properties:
        controlPlaneEndpoint:
          $ref: "#/components/schemas/v1ControlPlaneEndPoint"
        ntpServers:
          description: NTPServers is a list of NTP servers to use instead of the machine
            image's default NTP server list.
          items:
            type: string
          type: array
        placements:
          description: "Placements configuration Placements If defined, will replace\
            \ default values defined in VsphereClusterConfig Array means one MachinePool\
            \ can span across multiple vsphere compute cluster"
          items:
            $ref: "#/components/schemas/v1VspherePlacementConfigEntity"
          type: array
        sshKeys:
          description: SSHKeys specifies a list of ssh authorized keys for the 'spectro'
            user
          items:
            type: string
          type: array
        staticIp:
          description: "whether this cluster should use dhcp or static IP, if false,\
            \ use DHCP if this is set, then all machinepools should have staticIP\
            \ with provided IPPool adding this as an additional standalone flag without\
            \ relating to placement.Nework main reason is to enable more validation\
            \ for placement.Network.StaticIP which should come together with valid\
            \ Network.IPPool and Network.Name"
          type: boolean
      type: object
    v1VspherePlacementConfig:
      description: "Both ClusterConfig and MachinePoolConfig will have PlacementConfig\
        \ MachinePoolconfig.Placements will overwrite values defined in ClusterConfig\
        \ Currently the convention is: Datacenter / Folder / ImageTemplateFolder /\
        \ Network should be defined at ClusterConfig Cluster / ResourcePool / Datastore\
        \ / Network is defined at MachinePool ClusterConfig Network should only indicate\
        \ use DHCP or not MachinePool Network should contain the actual network and\
        \ IPPool"
      example:
        cluster: cluster
        uid: uid
        folder: folder
        imageTemplateFolder: imageTemplateFolder
        datastore: datastore
        datacenter: datacenter
        storagePolicyName: storagePolicyName
        network:
          parentPoolRef:
            uid: uid
            kind: kind
            name: name
          staticIp: true
          networkName: networkName
          ipPool:
            uid: uid
            prefix: 6
            pools:
            - subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
            - subnet: subnet
              prefix: 0
              start: start
              end: end
              nameserver:
                addresses:
                - addresses
                - addresses
                search:
                - search
                - search
              gateway: gateway
            nameserver:
              addresses:
              - addresses
              - addresses
              search:
              - search
              - search
            gateway: gateway
        resourcePool: resourcePool
      properties:
        cluster:
          description: Cluster is the computecluster in vsphere
          type: string
        datacenter:
          description: Datacenter is the name or inventory path of the datacenter
            where this machine's VM is created/located.
          type: string
        datastore:
          description: Datastore is the datastore in which VMs are created/located.
          type: string
        folder:
          description: Folder is the folder in which VMs are created/located.
          type: string
        imageTemplateFolder:
          description: ImageTemplateFolder is the folder in which VMs templates are
            created/located. if empty will use default value spectro-templates
          type: string
        network:
          $ref: "#/components/schemas/v1VsphereNetworkConfig"
        resourcePool:
          description: ResourcePool is the resource pool within the above computecluster
            Cluster
          type: string
        storagePolicyName:
          description: StoragePolicyName of the storage policy to use with this Virtual
            Machine
          type: string
        uid:
          description: UID for this placement
          type: string
      type: object
    v1VspherePlacementConfigEntity:
      description: "Both ClusterConfig and MachinePoolConfig will have PlacementConfig\
        \ MachinePoolconfig.Placements will overwrite values defined in ClusterConfig\
        \ Currently the convention is: Datacenter / Folder / ImageTemplateFolder /\
        \ Network should be defined at ClusterConfig Cluster / ResourcePool / Datastore\
        \ / Network is defined at MachinePool ClusterConfig Network should only indicate\
        \ use DHCP or not MachinePool Network should contain the actual network and\
        \ IPPool"
      properties:
        cluster:
          description: Cluster is the computecluster in vsphere
          type: string
        datacenter:
          description: Datacenter is the name or inventory path of the datacenter
            where this machine's VM is created/located.
          type: string
        datastore:
          description: Datastore is the datastore in which VMs are created/located.
          type: string
        folder:
          description: Folder is the folder in which VMs are created/located.
          type: string
        imageTemplateFolder:
          description: ImageTemplateFolder is the folder in which VMs templates are
            created/located. if empty will use default value spectro-templates
          type: string
        network:
          $ref: "#/components/schemas/v1VsphereNetworkConfigEntity"
        resourcePool:
          description: ResourcePool is the resource pool within the above computecluster
            Cluster
          type: string
        storagePolicyName:
          description: StoragePolicyName of the storage policy to use with this Virtual
            Machine
          type: string
        uid:
          description: UID for this placement
          type: string
      type: object
    v1Workspace:
      description: Workspace information
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          clusterRbacs:
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              bindings:
              - role:
                  kind: Role
                  name: name
                subjects:
                - name: name
                  namespace: namespace
                  type: User
                - name: name
                  namespace: namespace
                  type: User
                namespace: namespace
                type: RoleBinding
              - role:
                  kind: Role
                  name: name
                subjects:
                - name: name
                  namespace: namespace
                  type: User
                - name: name
                  namespace: namespace
                  type: User
                namespace: namespace
                type: RoleBinding
            status:
              errors:
              - msg: msg
                name: name
                resourceType: resourceType
              - msg: msg
                name: name
                resourceType: resourceType
          - metadata:
              uid: uid
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              name: name
              annotations:
                key: annotations
              lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
              deletionTimestamp: 2000-01-23T04:56:07.000+00:00
              labels:
                key: labels
            spec:
              relatedObject:
                uid: uid
                kind: spectrocluster
                name: name
              bindings:
              - role:
                  kind: Role
                  name: name
                subjects:
                - name: name
                  namespace: namespace
                  type: User
                - name: name
                  namespace: namespace
                  type: User
                namespace: namespace
                type: RoleBinding
              - role:
                  kind: Role
                  name: name
                subjects:
                - name: name
                  namespace: namespace
                  type: User
                - name: name
                  namespace: namespace
                  type: User
                namespace: namespace
                type: RoleBinding
            status:
              errors:
              - msg: msg
                name: name
                resourceType: resourceType
              - msg: msg
                name: name
                resourceType: resourceType
          quota:
            resourceAllocation:
              cpuCores: -0.9199171809538988
              memoryMiB: -0.3972543816929597
          policies:
            backupPolicy:
              backupConfig:
                backupLocationName: backupLocationName
                includeClusterResourceMode: Always
                backupLocationUid: backupLocationUid
                schedule:
                  scheduledRunTime: scheduledRunTime
                backupPrefix: backupPrefix
                durationInHours: 0.8008281904610115
                locationType: locationType
                includeAllDisks: true
                backupName: backupName
                includeClusterResources: true
                namespaces:
                - namespaces
                - namespaces
              clusterUids:
              - clusterUids
              - clusterUids
              includeAllClusters: true
          clusterNamespaces:
          - namespaceResourceAllocation:
              clusterResourceAllocations:
              - resourceAllocation:
                  cpuCores: -0.9199171809538988
                  memoryMiB: -0.3972543816929597
                clusterUid: clusterUid
              - resourceAllocation:
                  cpuCores: -0.9199171809538988
                  memoryMiB: -0.3972543816929597
                clusterUid: clusterUid
              defaultResourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
            image:
              blackListedImages:
              - blackListedImages
              - blackListedImages
            isRegex: true
            name: name
          - namespaceResourceAllocation:
              clusterResourceAllocations:
              - resourceAllocation:
                  cpuCores: -0.9199171809538988
                  memoryMiB: -0.3972543816929597
                clusterUid: clusterUid
              - resourceAllocation:
                  cpuCores: -0.9199171809538988
                  memoryMiB: -0.3972543816929597
                clusterUid: clusterUid
              defaultResourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
            image:
              blackListedImages:
              - blackListedImages
              - blackListedImages
            isRegex: true
            name: name
          clusterRefs:
          - clusterUid: clusterUid
            clusterName: clusterName
          - clusterUid: clusterUid
            clusterName: clusterName
        status:
          errors:
          - msg: msg
            clusterUid: clusterUid
            name: name
            resourceType: resourceType
          - msg: msg
            clusterUid: clusterUid
            name: name
            resourceType: resourceType
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1WorkspaceSpec"
        status:
          $ref: "#/components/schemas/v1WorkspaceStatus"
      type: object
    v1WorkspaceBackup:
      description: Workspace backup
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          config:
            backupConfig:
              backupLocationName: backupLocationName
              includeClusterResourceMode: Always
              backupLocationUid: backupLocationUid
              schedule:
                scheduledRunTime: scheduledRunTime
              backupPrefix: backupPrefix
              durationInHours: 0.8008281904610115
              locationType: locationType
              includeAllDisks: true
              backupName: backupName
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
            clusterUids:
            - clusterUids
            - clusterUids
            includeAllClusters: true
          workspaceUid: workspaceUid
        status:
          workspaceBackupStatuses:
          - actor:
              uid: uid
              actorType: actorType
            requestUid: requestUid
            workspaceBackupConfig:
              requestTime: 2000-01-23T04:56:07.000+00:00
              clusterBackupRefs:
              - backupStatusMeta:
                  backupedNamespaces:
                  - backupedNamespaces
                  - backupedNamespaces
                  expiryDate: 2000-01-23T04:56:07.000+00:00
                  backupState:
                    msg: msg
                    state: state
                    backupTime: 2000-01-23T04:56:07.000+00:00
                    deleteState: deleteState
                  backupName: backupName
                clusterUid: clusterUid
                backupUid: backupUid
                clusterName: clusterName
              - backupStatusMeta:
                  backupedNamespaces:
                  - backupedNamespaces
                  - backupedNamespaces
                  expiryDate: 2000-01-23T04:56:07.000+00:00
                  backupState:
                    msg: msg
                    state: state
                    backupTime: 2000-01-23T04:56:07.000+00:00
                    deleteState: deleteState
                  backupName: backupName
                clusterUid: clusterUid
                backupUid: backupUid
                clusterName: clusterName
              backupState:
                state: state
                deleteState: deleteState
              backupTime: 2000-01-23T04:56:07.000+00:00
              backupName: backupName
              config:
                includeClusterResourceMode: Always
                durationInHours: 0.8008281904610115
                includeAllDisks: true
                backupName: backupName
                includeClusterResources: true
                namespaces:
                - namespaces
                - namespaces
          - actor:
              uid: uid
              actorType: actorType
            requestUid: requestUid
            workspaceBackupConfig:
              requestTime: 2000-01-23T04:56:07.000+00:00
              clusterBackupRefs:
              - backupStatusMeta:
                  backupedNamespaces:
                  - backupedNamespaces
                  - backupedNamespaces
                  expiryDate: 2000-01-23T04:56:07.000+00:00
                  backupState:
                    msg: msg
                    state: state
                    backupTime: 2000-01-23T04:56:07.000+00:00
                    deleteState: deleteState
                  backupName: backupName
                clusterUid: clusterUid
                backupUid: backupUid
                clusterName: clusterName
              - backupStatusMeta:
                  backupedNamespaces:
                  - backupedNamespaces
                  - backupedNamespaces
                  expiryDate: 2000-01-23T04:56:07.000+00:00
                  backupState:
                    msg: msg
                    state: state
                    backupTime: 2000-01-23T04:56:07.000+00:00
                    deleteState: deleteState
                  backupName: backupName
                clusterUid: clusterUid
                backupUid: backupUid
                clusterName: clusterName
              backupState:
                state: state
                deleteState: deleteState
              backupTime: 2000-01-23T04:56:07.000+00:00
              backupName: backupName
              config:
                includeClusterResourceMode: Always
                durationInHours: 0.8008281904610115
                includeAllDisks: true
                backupName: backupName
                includeClusterResources: true
                namespaces:
                - namespaces
                - namespaces
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1WorkspaceBackupSpec"
        status:
          $ref: "#/components/schemas/v1WorkspaceBackupStatus"
      type: object
    v1WorkspaceBackupClusterRef:
      description: Workspace backup cluster ref
      properties:
        backupName:
          type: string
        clusterUid:
          type: string
      type: object
    v1WorkspaceBackupConfig:
      description: Workspace backup config
      example:
        backupConfig:
          backupLocationName: backupLocationName
          includeClusterResourceMode: Always
          backupLocationUid: backupLocationUid
          schedule:
            scheduledRunTime: scheduledRunTime
          backupPrefix: backupPrefix
          durationInHours: 0.8008281904610115
          locationType: locationType
          includeAllDisks: true
          backupName: backupName
          includeClusterResources: true
          namespaces:
          - namespaces
          - namespaces
        clusterUids:
        - clusterUids
        - clusterUids
        includeAllClusters: true
      properties:
        backupConfig:
          $ref: "#/components/schemas/v1ClusterBackupConfig"
        clusterUids:
          items:
            type: string
          type: array
          uniqueItems: true
        includeAllClusters:
          type: boolean
      type: object
    v1WorkspaceBackupConfigEntity:
      description: Cluster backup config
      example:
        backupConfig:
          backupLocationName: backupLocationName
          includeClusterResourceMode: Always
          backupLocationUid: backupLocationUid
          schedule:
            scheduledRunTime: scheduledRunTime
          backupPrefix: backupPrefix
          durationInHours: 0.8008281904610115
          locationType: locationType
          includeAllDisks: true
          backupName: backupName
          includeClusterResources: true
          namespaces:
          - namespaces
          - namespaces
        clusterUids:
        - clusterUids
        - clusterUids
        includeAllClusters: true
      properties:
        backupConfig:
          $ref: "#/components/schemas/v1ClusterBackupConfig"
        clusterUids:
          items:
            type: string
          type: array
          uniqueItems: true
        includeAllClusters:
          type: boolean
      type: object
    v1WorkspaceBackupDeleteEntity:
      description: Cluster backup delete config
      properties:
        clusterConfigs:
          items:
            $ref: "#/components/schemas/v1WorkspaceBackupClusterRef"
          type: array
          uniqueItems: true
        requestUid:
          type: string
      type: object
    v1WorkspaceBackupSpec:
      description: Workspace backup spec
      example:
        config:
          backupConfig:
            backupLocationName: backupLocationName
            includeClusterResourceMode: Always
            backupLocationUid: backupLocationUid
            schedule:
              scheduledRunTime: scheduledRunTime
            backupPrefix: backupPrefix
            durationInHours: 0.8008281904610115
            locationType: locationType
            includeAllDisks: true
            backupName: backupName
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
          clusterUids:
          - clusterUids
          - clusterUids
          includeAllClusters: true
        workspaceUid: workspaceUid
      properties:
        config:
          $ref: "#/components/schemas/v1WorkspaceBackupConfig"
        workspaceUid:
          type: string
      type: object
    v1WorkspaceBackupState:
      description: Workspace backup state
      example:
        state: state
        deleteState: deleteState
      properties:
        deleteState:
          type: string
        state:
          type: string
      type: object
    v1WorkspaceBackupStatus:
      description: Workspace backup status
      example:
        workspaceBackupStatuses:
        - actor:
            uid: uid
            actorType: actorType
          requestUid: requestUid
          workspaceBackupConfig:
            requestTime: 2000-01-23T04:56:07.000+00:00
            clusterBackupRefs:
            - backupStatusMeta:
                backupedNamespaces:
                - backupedNamespaces
                - backupedNamespaces
                expiryDate: 2000-01-23T04:56:07.000+00:00
                backupState:
                  msg: msg
                  state: state
                  backupTime: 2000-01-23T04:56:07.000+00:00
                  deleteState: deleteState
                backupName: backupName
              clusterUid: clusterUid
              backupUid: backupUid
              clusterName: clusterName
            - backupStatusMeta:
                backupedNamespaces:
                - backupedNamespaces
                - backupedNamespaces
                expiryDate: 2000-01-23T04:56:07.000+00:00
                backupState:
                  msg: msg
                  state: state
                  backupTime: 2000-01-23T04:56:07.000+00:00
                  deleteState: deleteState
                backupName: backupName
              clusterUid: clusterUid
              backupUid: backupUid
              clusterName: clusterName
            backupState:
              state: state
              deleteState: deleteState
            backupTime: 2000-01-23T04:56:07.000+00:00
            backupName: backupName
            config:
              includeClusterResourceMode: Always
              durationInHours: 0.8008281904610115
              includeAllDisks: true
              backupName: backupName
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
        - actor:
            uid: uid
            actorType: actorType
          requestUid: requestUid
          workspaceBackupConfig:
            requestTime: 2000-01-23T04:56:07.000+00:00
            clusterBackupRefs:
            - backupStatusMeta:
                backupedNamespaces:
                - backupedNamespaces
                - backupedNamespaces
                expiryDate: 2000-01-23T04:56:07.000+00:00
                backupState:
                  msg: msg
                  state: state
                  backupTime: 2000-01-23T04:56:07.000+00:00
                  deleteState: deleteState
                backupName: backupName
              clusterUid: clusterUid
              backupUid: backupUid
              clusterName: clusterName
            - backupStatusMeta:
                backupedNamespaces:
                - backupedNamespaces
                - backupedNamespaces
                expiryDate: 2000-01-23T04:56:07.000+00:00
                backupState:
                  msg: msg
                  state: state
                  backupTime: 2000-01-23T04:56:07.000+00:00
                  deleteState: deleteState
                backupName: backupName
              clusterUid: clusterUid
              backupUid: backupUid
              clusterName: clusterName
            backupState:
              state: state
              deleteState: deleteState
            backupTime: 2000-01-23T04:56:07.000+00:00
            backupName: backupName
            config:
              includeClusterResourceMode: Always
              durationInHours: 0.8008281904610115
              includeAllDisks: true
              backupName: backupName
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
      properties:
        workspaceBackupStatuses:
          items:
            $ref: "#/components/schemas/v1WorkspaceBackupStatusMeta"
          type: array
      type: object
    v1WorkspaceBackupStatusConfig:
      description: Workspace backup status config
      example:
        includeClusterResourceMode: Always
        durationInHours: 0.8008281904610115
        includeAllDisks: true
        backupName: backupName
        includeClusterResources: true
        namespaces:
        - namespaces
        - namespaces
      properties:
        backupName:
          type: string
        durationInHours:
          format: int64
          type: number
        includeAllDisks:
          type: boolean
        includeClusterResourceMode:
          $ref: "#/components/schemas/v1IncludeClusterResourceMode"
        includeClusterResources:
          description: Deprecated. Use includeClusterResourceMode
          type: boolean
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1WorkspaceBackupStatusMeta:
      description: Workspace backup status meta
      example:
        actor:
          uid: uid
          actorType: actorType
        requestUid: requestUid
        workspaceBackupConfig:
          requestTime: 2000-01-23T04:56:07.000+00:00
          clusterBackupRefs:
          - backupStatusMeta:
              backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            clusterUid: clusterUid
            backupUid: backupUid
            clusterName: clusterName
          - backupStatusMeta:
              backupedNamespaces:
              - backupedNamespaces
              - backupedNamespaces
              expiryDate: 2000-01-23T04:56:07.000+00:00
              backupState:
                msg: msg
                state: state
                backupTime: 2000-01-23T04:56:07.000+00:00
                deleteState: deleteState
              backupName: backupName
            clusterUid: clusterUid
            backupUid: backupUid
            clusterName: clusterName
          backupState:
            state: state
            deleteState: deleteState
          backupTime: 2000-01-23T04:56:07.000+00:00
          backupName: backupName
          config:
            includeClusterResourceMode: Always
            durationInHours: 0.8008281904610115
            includeAllDisks: true
            backupName: backupName
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        requestUid:
          type: string
        workspaceBackupConfig:
          $ref: "#/components/schemas/v1WorkspaceClusterBackupConfig"
      type: object
    v1WorkspaceClusterBackupConfig:
      description: Workspace cluster backup config
      example:
        requestTime: 2000-01-23T04:56:07.000+00:00
        clusterBackupRefs:
        - backupStatusMeta:
            backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          clusterUid: clusterUid
          backupUid: backupUid
          clusterName: clusterName
        - backupStatusMeta:
            backupedNamespaces:
            - backupedNamespaces
            - backupedNamespaces
            expiryDate: 2000-01-23T04:56:07.000+00:00
            backupState:
              msg: msg
              state: state
              backupTime: 2000-01-23T04:56:07.000+00:00
              deleteState: deleteState
            backupName: backupName
          clusterUid: clusterUid
          backupUid: backupUid
          clusterName: clusterName
        backupState:
          state: state
          deleteState: deleteState
        backupTime: 2000-01-23T04:56:07.000+00:00
        backupName: backupName
        config:
          includeClusterResourceMode: Always
          durationInHours: 0.8008281904610115
          includeAllDisks: true
          backupName: backupName
          includeClusterResources: true
          namespaces:
          - namespaces
          - namespaces
      properties:
        backupName:
          type: string
        backupState:
          $ref: "#/components/schemas/v1WorkspaceBackupState"
        backupTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        clusterBackupRefs:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterBackupResponse"
          type: array
        config:
          $ref: "#/components/schemas/v1WorkspaceBackupStatusConfig"
        requestTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1WorkspaceClusterBackupResponse:
      description: Workspace cluster backup response
      example:
        backupStatusMeta:
          backupedNamespaces:
          - backupedNamespaces
          - backupedNamespaces
          expiryDate: 2000-01-23T04:56:07.000+00:00
          backupState:
            msg: msg
            state: state
            backupTime: 2000-01-23T04:56:07.000+00:00
            deleteState: deleteState
          backupName: backupName
        clusterUid: clusterUid
        backupUid: backupUid
        clusterName: clusterName
      properties:
        backupStatusMeta:
          $ref: "#/components/schemas/v1BackupStatusMeta"
        backupUid:
          type: string
        clusterName:
          type: string
        clusterUid:
          type: string
      type: object
    v1WorkspaceClusterNamespace:
      description: Workspace cluster namespace
      example:
        namespaceResourceAllocation:
          clusterResourceAllocations:
          - resourceAllocation:
              cpuCores: -0.9199171809538988
              memoryMiB: -0.3972543816929597
            clusterUid: clusterUid
          - resourceAllocation:
              cpuCores: -0.9199171809538988
              memoryMiB: -0.3972543816929597
            clusterUid: clusterUid
          defaultResourceAllocation:
            cpuCores: -0.9199171809538988
            memoryMiB: -0.3972543816929597
        image:
          blackListedImages:
          - blackListedImages
          - blackListedImages
        isRegex: true
        name: name
      properties:
        image:
          $ref: "#/components/schemas/v1WorkspaceNamespaceImage"
        isRegex:
          type: boolean
          x-omitempty: false
        name:
          type: string
        namespaceResourceAllocation:
          $ref: "#/components/schemas/v1WorkspaceNamespaceResourceAllocation"
      type: object
    v1WorkspaceClusterNamespacesEntity:
      description: Workspace cluster namespaces update entity
      properties:
        clusterNamespaces:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterNamespace"
          type: array
          uniqueItems: true
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterRef"
          type: array
          uniqueItems: true
        quota:
          $ref: "#/components/schemas/v1WorkspaceQuota"
      type: object
    v1WorkspaceClusterRef:
      description: Workspace cluster reference
      example:
        clusterUid: clusterUid
        clusterName: clusterName
      properties:
        clusterName:
          type: string
        clusterUid:
          type: string
      type: object
    v1WorkspaceClusterRestoreConfig:
      description: Workspace cluster restore config
      example:
        restoreTime: 2000-01-23T04:56:07.000+00:00
        restoreState:
          state: state
          deleteState: deleteState
        clusterRestoreRefs:
        - clusterUid: clusterUid
          clusterName: clusterName
          restoreStatusMeta:
            msg: msg
            restoreTime: 2000-01-23T04:56:07.000+00:00
            state: state
          backupName: backupName
          restoreUid: restoreUid
        - clusterUid: clusterUid
          clusterName: clusterName
          restoreStatusMeta:
            msg: msg
            restoreTime: 2000-01-23T04:56:07.000+00:00
            state: state
          backupName: backupName
          restoreUid: restoreUid
        backupName: backupName
      properties:
        backupName:
          type: string
        clusterRestoreRefs:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterRestoreResponse"
          type: array
        restoreState:
          $ref: "#/components/schemas/v1WorkspaceRestoreState"
        restoreTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1WorkspaceClusterRestoreResponse:
      description: Workspace cluster restore response
      example:
        clusterUid: clusterUid
        clusterName: clusterName
        restoreStatusMeta:
          msg: msg
          restoreTime: 2000-01-23T04:56:07.000+00:00
          state: state
        backupName: backupName
        restoreUid: restoreUid
      properties:
        backupName:
          type: string
        clusterName:
          type: string
        clusterUid:
          type: string
        restoreStatusMeta:
          $ref: "#/components/schemas/v1WorkspaceClusterRestoreState"
        restoreUid:
          type: string
      type: object
    v1WorkspaceClusterRestoreState:
      description: Workspace cluster restore state
      example:
        msg: msg
        restoreTime: 2000-01-23T04:56:07.000+00:00
        state: state
      properties:
        msg:
          type: string
        restoreTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          type: string
      type: object
    v1WorkspaceClusterWorkloadCronJobs:
      description: Workspace cluster workload cronjobs summary
      example:
        cronjobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            schedule: schedule
          status:
            lastScheduleTime: 2000-01-23T04:56:07.000+00:00
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
      properties:
        cronjobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadCronJob"
          type: array
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1WorkspaceClusterWorkloadDaemonSets:
      description: Workspace cluster workload daemonsets summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        daemonSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            ready: 5
            available: 0
            currentScheduled: 6
            misScheduled: 5
            updatedScheduled: 2
            desiredScheduled: 1
      properties:
        daemonSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDaemonSet"
          type: array
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1WorkspaceClusterWorkloadDeployments:
      description: Workspace cluster workload deployments summary
      example:
        deployments:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
      properties:
        deployments:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadDeployment"
          type: array
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1WorkspaceClusterWorkloadJobs:
      description: Workspace cluster workload jobs summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        jobs:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            completionTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            conditions:
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            - reason: reason
              lastTransitionTime: 2000-01-23T04:56:07.000+00:00
              message: message
              type: type
              lastUpdateTime: 2000-01-23T04:56:07.000+00:00
              status: status
            succeeded: 4
      properties:
        jobs:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadJob"
          type: array
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1WorkspaceClusterWorkloadNamespaces:
      description: Workspace cluster workload namespaces summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        namespaces:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            phase: phase
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            phase: phase
      properties:
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
        namespaces:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadNamespace"
          type: array
      type: object
    v1WorkspaceClusterWorkloadPods:
      description: Workspace cluster workload pods summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        pods:
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
        - metadata:
            machineUid: machineUid
            nodename: nodename
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            associatedRefs:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            volumes:
            - name: name
            - name: name
            containers:
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
            - image: image
              name: name
              resources:
                requests:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
                limits:
                  memory: 1
                  memoryUnit: memoryUnit
                  cpu: 7
                  cpuUnit: cpuUnit
          status:
            phase: phase
            podIp: podIp
            containers:
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            - image: image
              restartCount: 1
              ready: true
              name: name
              started: true
              state:
                reason: reason
                exitCode: 1
                startedAt: 2000-01-23T04:56:07.000+00:00
                state: state
                finishedAt: 2000-01-23T04:56:07.000+00:00
            qosClass: qosClass
      properties:
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
        pods:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadPod"
          type: array
      type: object
    v1WorkspaceClusterWorkloadRoleBindings:
      description: Workspace cluster workload rbac bindings summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        bindings:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          spec:
            role:
              kind: Role
              name: name
            subjects:
            - name: name
              namespace: namespace
              type: User
            - name: name
              namespace: namespace
              type: User
            namespace: namespace
            type: RoleBinding
      properties:
        bindings:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadRoleBinding"
          type: array
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
      type: object
    v1WorkspaceClusterWorkloadStatefulSets:
      description: Workspace cluster workload statefulsets summary
      example:
        metadata:
          uid: uid
          kind: spectrocluster
          name: name
        statefulSets:
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
        - metadata:
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            namespace: namespace
            entity:
              uid: uid
              kind: kind
              name: name
            labels:
              key: labels
          status:
            replicas:
              total: 3
              ready: 9
              available: 7
              updated: 2
      properties:
        metadata:
          $ref: "#/components/schemas/v1RelatedObject"
        statefulSets:
          items:
            $ref: "#/components/schemas/v1ClusterWorkloadStatefulSet"
          type: array
      type: object
    v1WorkspaceClustersWorkloadCronJobs:
      description: Workspace clusters workload cronjobs summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - cronjobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          metadata:
            uid: uid
            kind: spectrocluster
            name: name
        - cronjobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              schedule: schedule
            status:
              lastScheduleTime: 2000-01-23T04:56:07.000+00:00
          metadata:
            uid: uid
            kind: spectrocluster
            name: name
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadCronJobs"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadDaemonSets:
      description: Workspace clusters workload statefulsets summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          daemonSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          daemonSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              ready: 5
              available: 0
              currentScheduled: 6
              misScheduled: 5
              updatedScheduled: 2
              desiredScheduled: 1
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadDaemonSets"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadDeployments:
      description: Workspace clusters workload deployments summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - deployments:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          metadata:
            uid: uid
            kind: spectrocluster
            name: name
        - deployments:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          metadata:
            uid: uid
            kind: spectrocluster
            name: name
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadDeployments"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadJobs:
      description: Workspace clusters workload jobs summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          jobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          jobs:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              completionTime: 2000-01-23T04:56:07.000+00:00
              startTime: 2000-01-23T04:56:07.000+00:00
              conditions:
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              - reason: reason
                lastTransitionTime: 2000-01-23T04:56:07.000+00:00
                message: message
                type: type
                lastUpdateTime: 2000-01-23T04:56:07.000+00:00
                status: status
              succeeded: 4
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadJobs"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadNamespaces:
      description: Workspace clusters workload namespaces summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          namespaces:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              phase: phase
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              phase: phase
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          namespaces:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              phase: phase
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              phase: phase
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadNamespaces"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadPods:
      description: Workspace clusters workload pods summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          pods:
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          pods:
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
          - metadata:
              machineUid: machineUid
              nodename: nodename
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              associatedRefs:
              - uid: uid
                kind: kind
                name: name
              - uid: uid
                kind: kind
                name: name
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              volumes:
              - name: name
              - name: name
              containers:
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
              - image: image
                name: name
                resources:
                  requests:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
                  limits:
                    memory: 1
                    memoryUnit: memoryUnit
                    cpu: 7
                    cpuUnit: cpuUnit
            status:
              phase: phase
              podIp: podIp
              containers:
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              - image: image
                restartCount: 1
                ready: true
                name: name
                started: true
                state:
                  reason: reason
                  exitCode: 1
                  startedAt: 2000-01-23T04:56:07.000+00:00
                  state: state
                  finishedAt: 2000-01-23T04:56:07.000+00:00
              qosClass: qosClass
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadPods"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadRoleBindings:
      description: Workspace clusters workload rbac bindings summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          bindings:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          bindings:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            spec:
              role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadRoleBindings"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceClustersWorkloadStatefulSets:
      description: Workspace clusters workload statefulsets summary
      example:
        metadata:
          name: name
          annotations:
            key: annotations
          labels:
            key: labels
        clusters:
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          statefulSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
        - metadata:
            uid: uid
            kind: spectrocluster
            name: name
          statefulSets:
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
          - metadata:
              creationTimestamp: 2000-01-23T04:56:07.000+00:00
              namespace: namespace
              entity:
                uid: uid
                kind: kind
                name: name
              labels:
                key: labels
            status:
              replicas:
                total: 3
                ready: 9
                available: 7
                updated: 2
      properties:
        clusters:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterWorkloadStatefulSets"
          type: array
        metadata:
          $ref: "#/components/schemas/v1ObjectMetaInputEntity"
      type: object
    v1WorkspaceEntity:
      description: Workspace information
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1WorkspaceSpec"
      type: object
    v1WorkspaceError:
      description: Workspace error
      example:
        msg: msg
        clusterUid: clusterUid
        name: name
        resourceType: resourceType
      properties:
        clusterUid:
          type: string
        msg:
          type: string
        name:
          type: string
        resourceType:
          type: string
      type: object
    v1WorkspaceNamespaceImage:
      description: Workspace namespace image information
      example:
        blackListedImages:
        - blackListedImages
        - blackListedImages
      properties:
        blackListedImages:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1WorkspaceNamespaceResourceAllocation:
      description: Workspace namespace resource allocation
      example:
        clusterResourceAllocations:
        - resourceAllocation:
            cpuCores: -0.9199171809538988
            memoryMiB: -0.3972543816929597
          clusterUid: clusterUid
        - resourceAllocation:
            cpuCores: -0.9199171809538988
            memoryMiB: -0.3972543816929597
          clusterUid: clusterUid
        defaultResourceAllocation:
          cpuCores: -0.9199171809538988
          memoryMiB: -0.3972543816929597
      properties:
        clusterResourceAllocations:
          items:
            $ref: "#/components/schemas/v1ClusterResourceAllocation"
          type: array
          uniqueItems: true
        defaultResourceAllocation:
          $ref: "#/components/schemas/v1WorkspaceResourceAllocation"
      type: object
    v1WorkspacePolicies:
      description: Workspace policies
      example:
        backupPolicy:
          backupConfig:
            backupLocationName: backupLocationName
            includeClusterResourceMode: Always
            backupLocationUid: backupLocationUid
            schedule:
              scheduledRunTime: scheduledRunTime
            backupPrefix: backupPrefix
            durationInHours: 0.8008281904610115
            locationType: locationType
            includeAllDisks: true
            backupName: backupName
            includeClusterResources: true
            namespaces:
            - namespaces
            - namespaces
          clusterUids:
          - clusterUids
          - clusterUids
          includeAllClusters: true
      properties:
        backupPolicy:
          $ref: "#/components/schemas/v1WorkspaceBackupConfigEntity"
      type: object
    v1WorkspaceQuota:
      description: Workspace resource quota
      example:
        resourceAllocation:
          cpuCores: -0.9199171809538988
          memoryMiB: -0.3972543816929597
      properties:
        resourceAllocation:
          $ref: "#/components/schemas/v1WorkspaceResourceAllocation"
      type: object
    v1WorkspaceResourceAllocation:
      description: Workspace resource allocation
      example:
        cpuCores: -0.9199171809538988
        memoryMiB: -0.3972543816929597
      properties:
        cpuCores:
          minimum: -1
          type: number
          x-omitempty: false
        memoryMiB:
          minimum: -1
          type: number
          x-omitempty: false
      type: object
    v1WorkspaceResourceAllocationsEntity:
      description: Workspace resource allocation update entity
      properties:
        clusterNamespaces:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterNamespace"
          type: array
          uniqueItems: true
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterRef"
          type: array
          uniqueItems: true
        quota:
          $ref: "#/components/schemas/v1WorkspaceQuota"
      type: object
    v1WorkspaceRestore:
      description: Workspace restore
      example:
        metadata:
          uid: uid
          creationTimestamp: 2000-01-23T04:56:07.000+00:00
          name: name
          annotations:
            key: annotations
          lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          labels:
            key: labels
        spec:
          workspaceUid: workspaceUid
        status:
          workspaceRestoreStatuses:
          - actor:
              uid: uid
              actorType: actorType
            workspaceRestoreConfig:
              restoreTime: 2000-01-23T04:56:07.000+00:00
              restoreState:
                state: state
                deleteState: deleteState
              clusterRestoreRefs:
              - clusterUid: clusterUid
                clusterName: clusterName
                restoreStatusMeta:
                  msg: msg
                  restoreTime: 2000-01-23T04:56:07.000+00:00
                  state: state
                backupName: backupName
                restoreUid: restoreUid
              - clusterUid: clusterUid
                clusterName: clusterName
                restoreStatusMeta:
                  msg: msg
                  restoreTime: 2000-01-23T04:56:07.000+00:00
                  state: state
                backupName: backupName
                restoreUid: restoreUid
              backupName: backupName
            requestUid: requestUid
          - actor:
              uid: uid
              actorType: actorType
            workspaceRestoreConfig:
              restoreTime: 2000-01-23T04:56:07.000+00:00
              restoreState:
                state: state
                deleteState: deleteState
              clusterRestoreRefs:
              - clusterUid: clusterUid
                clusterName: clusterName
                restoreStatusMeta:
                  msg: msg
                  restoreTime: 2000-01-23T04:56:07.000+00:00
                  state: state
                backupName: backupName
                restoreUid: restoreUid
              - clusterUid: clusterUid
                clusterName: clusterName
                restoreStatusMeta:
                  msg: msg
                  restoreTime: 2000-01-23T04:56:07.000+00:00
                  state: state
                backupName: backupName
                restoreUid: restoreUid
              backupName: backupName
            requestUid: requestUid
      properties:
        metadata:
          $ref: "#/components/schemas/v1ObjectMeta"
        spec:
          $ref: "#/components/schemas/v1WorkspaceRestoreSpec"
        status:
          $ref: "#/components/schemas/v1WorkspaceRestoreStatus"
      type: object
    v1WorkspaceRestoreConfig:
      description: Workspace cluster restore config
      properties:
        backupName:
          type: string
        includeClusterResourceMode:
          $ref: "#/components/schemas/v1IncludeClusterResourceMode"
        includeClusterResources:
          description: Deprecated. Use includeClusterResourceMode
          type: boolean
        includeNamespaces:
          items:
            type: string
          type: array
          uniqueItems: true
        preserveNodePorts:
          type: boolean
        restorePVs:
          type: boolean
        sourceClusterUid:
          type: string
      required:
      - backupName
      - sourceClusterUid
      type: object
    v1WorkspaceRestoreConfigEntity:
      description: Cluster restore config
      properties:
        backupRequestUid:
          type: string
        restoreConfigs:
          items:
            $ref: "#/components/schemas/v1WorkspaceRestoreConfig"
          type: array
          uniqueItems: true
      required:
      - backupRequestUid
      type: object
    v1WorkspaceRestoreSpec:
      description: Workspace restore spec
      example:
        workspaceUid: workspaceUid
      properties:
        workspaceUid:
          type: string
      type: object
    v1WorkspaceRestoreState:
      description: Workspace restore state
      example:
        state: state
        deleteState: deleteState
      properties:
        deleteState:
          type: string
        state:
          type: string
      type: object
    v1WorkspaceRestoreStatus:
      description: Workspace restore status
      example:
        workspaceRestoreStatuses:
        - actor:
            uid: uid
            actorType: actorType
          workspaceRestoreConfig:
            restoreTime: 2000-01-23T04:56:07.000+00:00
            restoreState:
              state: state
              deleteState: deleteState
            clusterRestoreRefs:
            - clusterUid: clusterUid
              clusterName: clusterName
              restoreStatusMeta:
                msg: msg
                restoreTime: 2000-01-23T04:56:07.000+00:00
                state: state
              backupName: backupName
              restoreUid: restoreUid
            - clusterUid: clusterUid
              clusterName: clusterName
              restoreStatusMeta:
                msg: msg
                restoreTime: 2000-01-23T04:56:07.000+00:00
                state: state
              backupName: backupName
              restoreUid: restoreUid
            backupName: backupName
          requestUid: requestUid
        - actor:
            uid: uid
            actorType: actorType
          workspaceRestoreConfig:
            restoreTime: 2000-01-23T04:56:07.000+00:00
            restoreState:
              state: state
              deleteState: deleteState
            clusterRestoreRefs:
            - clusterUid: clusterUid
              clusterName: clusterName
              restoreStatusMeta:
                msg: msg
                restoreTime: 2000-01-23T04:56:07.000+00:00
                state: state
              backupName: backupName
              restoreUid: restoreUid
            - clusterUid: clusterUid
              clusterName: clusterName
              restoreStatusMeta:
                msg: msg
                restoreTime: 2000-01-23T04:56:07.000+00:00
                state: state
              backupName: backupName
              restoreUid: restoreUid
            backupName: backupName
          requestUid: requestUid
      properties:
        workspaceRestoreStatuses:
          items:
            $ref: "#/components/schemas/v1WorkspaceRestoreStatusMeta"
          type: array
      type: object
    v1WorkspaceRestoreStatusMeta:
      description: Workspace restore status meta
      example:
        actor:
          uid: uid
          actorType: actorType
        workspaceRestoreConfig:
          restoreTime: 2000-01-23T04:56:07.000+00:00
          restoreState:
            state: state
            deleteState: deleteState
          clusterRestoreRefs:
          - clusterUid: clusterUid
            clusterName: clusterName
            restoreStatusMeta:
              msg: msg
              restoreTime: 2000-01-23T04:56:07.000+00:00
              state: state
            backupName: backupName
            restoreUid: restoreUid
          - clusterUid: clusterUid
            clusterName: clusterName
            restoreStatusMeta:
              msg: msg
              restoreTime: 2000-01-23T04:56:07.000+00:00
              state: state
            backupName: backupName
            restoreUid: restoreUid
          backupName: backupName
        requestUid: requestUid
      properties:
        actor:
          $ref: "#/components/schemas/v1ClusterFeatureActor"
        requestUid:
          type: string
        workspaceRestoreConfig:
          $ref: "#/components/schemas/v1WorkspaceClusterRestoreConfig"
      type: object
    v1WorkspaceRolesPatch:
      properties:
        roles:
          items:
            type: string
          type: array
        uid:
          type: string
      type: object
    v1WorkspaceRolesUidSummary:
      example:
        uid: uid
        name: name
      properties:
        name:
          type: string
        uid:
          type: string
      type: object
    v1WorkspaceScopeRoles:
      description: List all workspaces with the roles assigned to the users
      example:
        projects:
        - uid: uid
          name: name
          workspaces:
          - uid: uid
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            name: name
            inheritedRoles:
            - uid: uid
              name: name
            - uid: uid
              name: name
          - uid: uid
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            name: name
            inheritedRoles:
            - uid: uid
              name: name
            - uid: uid
              name: name
        - uid: uid
          name: name
          workspaces:
          - uid: uid
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            name: name
            inheritedRoles:
            - uid: uid
              name: name
            - uid: uid
              name: name
          - uid: uid
            roles:
            - uid: uid
              name: name
            - uid: uid
              name: name
            name: name
            inheritedRoles:
            - uid: uid
              name: name
            - uid: uid
              name: name
      properties:
        projects:
          items:
            $ref: "#/components/schemas/v1ProjectsWorkspaces"
          type: array
          uniqueItems: true
      type: object
    v1WorkspaceSpec:
      description: Workspace specifications
      example:
        clusterRbacs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            bindings:
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            bindings:
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
            - role:
                kind: Role
                name: name
              subjects:
              - name: name
                namespace: namespace
                type: User
              - name: name
                namespace: namespace
                type: User
              namespace: namespace
              type: RoleBinding
          status:
            errors:
            - msg: msg
              name: name
              resourceType: resourceType
            - msg: msg
              name: name
              resourceType: resourceType
        quota:
          resourceAllocation:
            cpuCores: -0.9199171809538988
            memoryMiB: -0.3972543816929597
        policies:
          backupPolicy:
            backupConfig:
              backupLocationName: backupLocationName
              includeClusterResourceMode: Always
              backupLocationUid: backupLocationUid
              schedule:
                scheduledRunTime: scheduledRunTime
              backupPrefix: backupPrefix
              durationInHours: 0.8008281904610115
              locationType: locationType
              includeAllDisks: true
              backupName: backupName
              includeClusterResources: true
              namespaces:
              - namespaces
              - namespaces
            clusterUids:
            - clusterUids
            - clusterUids
            includeAllClusters: true
        clusterNamespaces:
        - namespaceResourceAllocation:
            clusterResourceAllocations:
            - resourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
              clusterUid: clusterUid
            - resourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
              clusterUid: clusterUid
            defaultResourceAllocation:
              cpuCores: -0.9199171809538988
              memoryMiB: -0.3972543816929597
          image:
            blackListedImages:
            - blackListedImages
            - blackListedImages
          isRegex: true
          name: name
        - namespaceResourceAllocation:
            clusterResourceAllocations:
            - resourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
              clusterUid: clusterUid
            - resourceAllocation:
                cpuCores: -0.9199171809538988
                memoryMiB: -0.3972543816929597
              clusterUid: clusterUid
            defaultResourceAllocation:
              cpuCores: -0.9199171809538988
              memoryMiB: -0.3972543816929597
          image:
            blackListedImages:
            - blackListedImages
            - blackListedImages
          isRegex: true
          name: name
        clusterRefs:
        - clusterUid: clusterUid
          clusterName: clusterName
        - clusterUid: clusterUid
          clusterName: clusterName
      properties:
        clusterNamespaces:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterNamespace"
          type: array
          uniqueItems: true
        clusterRbacs:
          items:
            $ref: "#/components/schemas/v1ClusterRbac"
          type: array
          uniqueItems: true
        clusterRefs:
          items:
            $ref: "#/components/schemas/v1WorkspaceClusterRef"
          type: array
          uniqueItems: true
        policies:
          $ref: "#/components/schemas/v1WorkspacePolicies"
        quota:
          $ref: "#/components/schemas/v1WorkspaceQuota"
      type: object
    v1WorkspaceStatus:
      description: Workspace status
      example:
        errors:
        - msg: msg
          clusterUid: clusterUid
          name: name
          resourceType: resourceType
        - msg: msg
          clusterUid: clusterUid
          name: name
          resourceType: resourceType
      properties:
        errors:
          items:
            $ref: "#/components/schemas/v1WorkspaceError"
          type: array
          uniqueItems: true
      type: object
    v1WorkspaceWorkloadsFilter:
      description: Workspace workloads filter
      properties:
        clusters:
          items:
            type: string
          type: array
          uniqueItems: true
        namespaces:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    v1WorkspaceWorkloadsSpec:
      description: Workspace workloads spec
      properties:
        filter:
          $ref: "#/components/schemas/v1WorkspaceWorkloadsFilter"
      type: object
    v1WorkspacesRoles:
      description: Workspace users and their roles
      example:
        uid: uid
        roles:
        - uid: uid
          name: name
        - uid: uid
          name: name
        name: name
        inheritedRoles:
        - uid: uid
          name: name
        - uid: uid
          name: name
      properties:
        inheritedRoles:
          items:
            $ref: "#/components/schemas/v1WorkspaceRolesUidSummary"
          type: array
        name:
          type: string
        roles:
          items:
            $ref: "#/components/schemas/v1WorkspaceRolesUidSummary"
          type: array
        uid:
          type: string
      type: object
    v1WorkspacesRolesPatch:
      properties:
        workspaces:
          items:
            $ref: "#/components/schemas/v1WorkspaceRolesPatch"
          type: array
      type: object
    v1YearlyUsage:
      description: Yearly usage object
      properties:
        billingPeriod:
          $ref: "#/components/schemas/v1InvoiceBillingPeriod"
        monthlyUsages:
          description: List of monthly usages
          items:
            $ref: "#/components/schemas/v1MonthlyUsage"
          type: array
          uniqueItems: true
        productUsages:
          $ref: "#/components/schemas/v1ProductUsage"
      type: object
    v1ZoneEntity:
      description: Azure availability zone entity
      example:
        id: id
      properties:
        id:
          description: Azure availability zone id
          type: string
      type: object
    v1k8CertificateAuthority:
      description: K8 Certificate Authority
      properties:
        certificates:
          items:
            $ref: "#/components/schemas/v1Certificate"
          type: array
        expiry:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        name:
          type: string
      type: object
    V1SamlCallback_request:
      properties:
        SAMLResponse:
          description: Describe the SAML compliant response sent by IDP which will
            be validated by Palette
          type: string
        RelayState:
          description: Describes a state to validate and associate request and response
          type: string
      type: object
    V1SamlLogout_request:
      properties:
        SAMLResponse:
          description: Describe the SAML compliant response sent by IDP which will
            be validated by Palette to perform logout.
          type: string
      type: object
    v1PasswordActivate_request:
      properties:
        password:
          description: Describes the new password for the user
          format: password
          type: string
      required:
      - password
      type: object
    v1PasswordResetRequest_request:
      properties:
        emailId:
          description: Describes email if for which password reset email has to be
            sent
          type: string
      required:
      - emailId
      type: object
    V1CustomCloudTypeBootstrapUpdate_request:
      properties:
        fileName:
          format: binary
          type: string
      type: object
    v1ClusterProfilesImportFile_request:
      properties:
        importFile:
          description: Cluster profile import file
          format: binary
          type: string
      type: object
    v1OverlordsUidMaasAccountValidate_request:
      properties:
        account:
          $ref: "#/components/schemas/v1MaasCloudAccount"
      type: object
    v1OverlordsUidOpenStackAccountValidate_request:
      properties:
        account:
          $ref: "#/components/schemas/v1OpenStackCloudAccount"
      type: object
    v1OverlordsUidVsphereAccountValidate_request:
      properties:
        account:
          $ref: "#/components/schemas/v1VsphereCloudAccount"
      type: object
    v1ClusterFeatureLogFetcherLogUpdate_request:
      properties:
        fileName:
          description: Log file by agent
          format: binary
          type: string
      type: object
    V1UsersPasswordChange_request:
      properties:
        currentPassword:
          type: string
        emailId:
          type: string
        newPassword:
          type: string
      required:
      - currentPassword
      - emailId
      - newPassword
      type: object
    v1UsersEmailPasswordReset_request:
      properties:
        emailId:
          type: string
      required:
      - emailId
      type: object
    v1UsersUidPasswordChange_request:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
      - newPassword
      type: object
    v1ActivationsSystemResponse_status:
      properties:
        expiresAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          enum:
          - Active
          - Pending
          - Inactive
          type: string
      required:
      - state
      type: object
    v1AppDeploymentSummary_spec:
      description: Application deployment spec summary
      example:
        profile:
          template:
            appTiers:
            - uid: uid
              name: name
              source:
                uid: uid
                addonSubType: addonSubType
                addonType: addonType
                name: name
                type: type
                logoUrl: logoUrl
              type: type
              version: version
            - uid: uid
              name: name
              source:
                uid: uid
                addonSubType: addonSubType
                addonType: addonType
                name: name
                type: type
                logoUrl: logoUrl
              type: type
              version: version
          metadata:
            uid: uid
            name: name
            version: version
        config:
          target:
            clusterRef:
              uid: uid
              name: name
              deploymentClusterType: virtual
      properties:
        config:
          $ref: "#/components/schemas/v1AppDeploymentConfigSummary"
        profile:
          $ref: "#/components/schemas/v1AppDeploymentProfileSummary"
      type: object
    v1AppProfile_spec:
      example:
        parentUid: parentUid
        template:
          appTiers:
          - uid: uid
            name: name
            type: manifest
            version: version
          - uid: uid
            name: name
            type: manifest
            version: version
          registryRefs:
          - uid: uid
            kind: kind
            name: name
          - uid: uid
            kind: kind
            name: name
        versions:
        - uid: uid
          version: version
        - uid: uid
          version: version
        version: version
      properties:
        parentUid:
          description: Application profile parent profile uid
          type: string
        template:
          $ref: "#/components/schemas/v1AppProfileTemplate"
        version:
          description: Application profile version
          type: string
        versions:
          description: Application profile versions list
          items:
            $ref: "#/components/schemas/v1AppProfileVersion"
          type: array
      type: object
    v1AppProfile_status:
      description: Application profile status
      example:
        inUseApps:
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
        - uid: uid
          projectUid: projectUid
          kind: kind
          tenantUid: tenantUid
          name: name
      properties:
        inUseApps:
          description: Application profile apps array
          items:
            $ref: "#/components/schemas/v1ObjectResReference"
          type: array
      type: object
    v1AppProfileEntity_spec:
      description: Application profile spec
      properties:
        template:
          $ref: "#/components/schemas/v1AppProfileTemplateEntity"
        version:
          description: Application profile version
          type: string
      type: object
    v1AppProfileMetadata_spec:
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    v1AppProfileSummary_spec:
      description: Application profile spec summary
      example:
        parentUid: parentUid
        template:
          appTiers:
          - uid: uid
            name: name
            source:
              uid: uid
              addonSubType: addonSubType
              addonType: addonType
              name: name
              type: type
              logoUrl: logoUrl
            type: type
            version: version
          - uid: uid
            name: name
            source:
              uid: uid
              addonSubType: addonSubType
              addonType: addonType
              name: name
              type: type
              logoUrl: logoUrl
            type: type
            version: version
        versions:
        - uid: uid
          version: version
        - uid: uid
          version: version
        version: version
      properties:
        parentUid:
          type: string
        template:
          $ref: "#/components/schemas/v1AppProfileTemplateSummary"
        version:
          type: string
        versions:
          description: Application profile's list of all the versions
          items:
            $ref: "#/components/schemas/v1AppProfileVersion"
          type: array
      type: object
    v1AuthMfaLoginFinishRequest_response:
      properties:
        authenticatorData:
          format: url-encoded-base64
          type: string
        clientDataJSON:
          format: url-encoded-base64
          type: string
        signature:
          format: url-encoded-base64
          type: string
        userHandle:
          format: url-encoded-base64
          type: string
      type: object
    v1Channel_http:
      example:
        headers: "{}"
        method: method
        body: body
        url: url
      properties:
        body:
          type: string
        headers:
          type: object
        method:
          type: string
        url:
          type: string
      type: object
    v1CloudAccountSummary_specSummary:
      description: Cloud account spec summary
      example:
        accountId: accountId
      properties:
        accountId:
          type: string
      type: object
    v1ClusterProfileEntity_spec:
      properties:
        template:
          $ref: "#/components/schemas/v1ClusterProfileTemplateDraft"
        variables:
          description: List of unique variable fields defined for a cluster profile
            with schema constraints
          items:
            $ref: "#/components/schemas/v1Variable"
          type: array
          uniqueItems: true
        version:
          description: Cluster profile version
          type: string
      type: object
    v1ClusterProfileMetadata_spec:
      example:
        cloudType: cloudType
        version: version
      properties:
        cloudType:
          type: string
        version:
          type: string
      type: object
    v1ClusterProfilePacksManifests_spec:
      example:
        packs:
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            eol: eol
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              name: name
              content: content
            - uid: uid
              name: name
              content: content
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
        - metadata:
            uid: uid
            creationTimestamp: 2000-01-23T04:56:07.000+00:00
            name: name
            annotations:
              key: annotations
            lastModifiedTimestamp: 2000-01-23T04:56:07.000+00:00
            deletionTimestamp: 2000-01-23T04:56:07.000+00:00
            labels:
              key: labels
          spec:
            schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            eol: eol
            displayName: displayName
            values: values
            addonType: addonType
            annotations:
              key: annotations
            type: spectro
            version: version
            layer: kernel
            logoUrl: logoUrl
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            digest: digest
            manifests:
            - uid: uid
              name: name
              content: content
            - uid: uid
              name: name
              content: content
            name: name
            cloudTypes:
            - cloudTypes
            - cloudTypes
            group: group
          status: "{}"
      properties:
        packs:
          description: Cluster profile packs array
          items:
            $ref: "#/components/schemas/v1ClusterProfilePackManifests"
          type: array
          uniqueItems: true
      type: object
    v1ClusterProfileSummary_specSummary:
      description: Cluster profile spec summary
      example:
        versions:
        - uid: uid
          version: version
        - uid: uid
          version: version
        draft:
          cloudType: cloudType
          type: type
          packs:
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
        published:
          cloudType: cloudType
          type: type
          packs:
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
          - packUid: packUid
            displayName: displayName
            addonType: addonType
            name: name
            annotations:
              key: annotations
            tag: tag
            type: type
            version: version
            layer: kernel
            logoUrl: logoUrl
        version: version
      properties:
        draft:
          $ref: "#/components/schemas/v1ClusterProfileTemplateSummary"
        published:
          $ref: "#/components/schemas/v1ClusterProfileTemplateSummary"
        version:
          description: Cluster profile's latest version
          type: string
        versions:
          description: Cluster profile's list of all the versions
          items:
            $ref: "#/components/schemas/v1ClusterProfileVersion"
          type: array
      type: object
    v1ClusterProfileUpdateEntity_spec:
      description: Cluster profile update spec
      properties:
        template:
          $ref: "#/components/schemas/v1ClusterProfileTemplateUpdate"
        version:
          description: Cluster profile version
          type: string
      type: object
    v1EdgeNativeClusterPairSpcEntity_spec:
      properties:
        pairingUid:
          description: Pairing uid request
          type: string
        profiles:
          description: ClusterProfileTemplate is a copy of the draft version or latest
            published version of the clusterprofileSpec.clusterprofileTemplate
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - pairingUid
      - profiles
      type: object
    v1GrpcEndpoint_tls:
      description: Describes the Grpc tls config which client will use to make a request
        to the grpc server
      properties:
        caCert:
          type: string
        enabled:
          type: boolean
        insecureSkipVerify:
          type: boolean
      type: object
    v1IpPoolEntity_spec:
      example:
        priavetGatewayUid: priavetGatewayUid
        restrictToSingleCluster: true
        pool:
          subnet: subnet
          prefix: 0
          start: start
          end: end
          nameserver:
            addresses:
            - addresses
            - addresses
            search:
            - search
            - search
          gateway: gateway
      properties:
        pool:
          $ref: "#/components/schemas/v1Pool"
        priavetGatewayUid:
          type: string
        restrictToSingleCluster:
          description: "if true, restricts this IP pool to be used by single cluster\
            \ at any time"
          type: boolean
          x-omitempty: false
      type: object
    v1IpPoolInputEntity_spec:
      properties:
        pool:
          $ref: "#/components/schemas/v1Pool"
        restrictToSingleCluster:
          description: "if true, restricts this IP pool to be used by single cluster\
            \ at any time"
          type: boolean
      required:
      - pool
      type: object
    v1Lock_spec:
      properties:
        expireAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        key:
          type: string
          x-omitempty: false
      type: object
    v1MfaCredentialCreationRequest_response:
      properties:
        attestationObject:
          format: url-encoded-base64
          type: string
        clientDataJSON:
          format: url-encoded-base64
          type: string
        transports:
          items:
            type: string
          type: array
      type: object
    v1MgmtAppContainersState_running:
      properties:
        startedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1MgmtAppContainersState_terminated:
      properties:
        exitCode:
          type: integer
        finishedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        reason:
          type: string
        signal:
          type: integer
        startedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1MgmtAppContainersState_waiting:
      properties:
        reason:
          type: string
      type: object
    v1MgmtAppUpgrade_spec:
      properties:
        currentVersion:
          type: string
          x-omitempty: false
        previousVersion:
          type: string
          x-omitempty: false
        toBeUpgradedVersion:
          type: string
          x-omitempty: false
      type: object
    v1MgmtAppUpgrade_status_states:
      properties:
        imageUpdate:
          $ref: "#/components/schemas/v1MgmtUpgradeState"
        spectroClusterUpdate:
          $ref: "#/components/schemas/v1MgmtUpgradeState"
        spectroServiceResume:
          $ref: "#/components/schemas/v1MgmtUpgradeState"
        spectroVersionConfigMapUpdate:
          $ref: "#/components/schemas/v1MgmtUpgradeState"
        spectroVersionServiceSuspend:
          $ref: "#/components/schemas/v1MgmtUpgradeState"
      type: object
    v1MgmtAppUpgrade_status:
      properties:
        action:
          type: string
          x-omitempty: false
        states:
          $ref: "#/components/schemas/v1MgmtAppUpgrade_status_states"
        upgradeStatus:
          type: string
          x-omitempty: false
        versionHistory:
          items:
            type: string
          type: array
          x-omitempty: false
      type: object
    v1MgmtAppVersion_version:
      properties:
        appEnv:
          type: string
        cloudType:
          type: string
        installedVersion:
          type: string
        latestVersion:
          type: string
      type: object
    v1MgmtErrSpec_userCtx:
      properties:
        projectUid:
          type: string
        serviceResUid:
          type: string
        tenantUid:
          type: string
        userUid:
          type: string
      type: object
    v1OidcLogins_tenantLogin:
      properties:
        authType:
          type: string
        redirectUrl:
          type: string
      type: object
    v1ProjectRolesPatch_projects_inner:
      properties:
        projectUid:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    v1SchedulerJob_spec:
      properties:
        cycles:
          type: integer
          x-omitempty: false
        interval:
          type: integer
          x-omitempty: false
      type: object
    v1SchedulerJob_status:
      properties:
        cycleNumber:
          type: integer
          x-omitempty: false
        error:
          type: string
          x-omitempty: false
        forceNextRun:
          type: boolean
          x-omitempty: false
        isActive:
          type: boolean
          x-omitempty: false
        isDisabled:
          type: boolean
          x-omitempty: false
        isLocked:
          type: boolean
          x-omitempty: false
        lastRunTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        lastSuccessfulRunTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        nextRunTime:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
      type: object
    v1SpectroAwsClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1AwsClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        clusterType:
          $ref: "#/components/schemas/v1ClusterType"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1AwsMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroAwsClusterImportEntity_spec:
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1ImportClusterConfig"
      type: object
    v1SpectroAzureClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1AzureClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1AzureMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroClusterAssetEntity_spec:
      example:
        frpKubeconfig: frpKubeconfig
        manifest: manifest
        kubeconfigclient: kubeconfigclient
        kubeconfig: kubeconfig
        tokenkubeconfig: tokenkubeconfig
      properties:
        frpKubeconfig:
          type: string
        kubeconfig:
          type: string
        kubeconfigclient:
          type: string
        manifest:
          type: string
        tokenkubeconfig:
          type: string
      type: object
    v1SpectroClusterHybridPoolsMetadata_spec:
      example:
        cloudType: cloudType
        hybridPools:
        - uid: uid
          clusterUid: clusterUid
          cloudType: cloudType
          name: name
          cloudConfigUid: cloudConfigUid
          status:
            health:
              isHeartBeatFailed: true
              state: state
            state: state
        - uid: uid
          clusterUid: clusterUid
          cloudType: cloudType
          name: name
          cloudConfigUid: cloudConfigUid
          status:
            health:
              isHeartBeatFailed: true
              state: state
            state: state
      properties:
        cloudType:
          description: Cluster's cloud type
          type: string
        hybridPools:
          items:
            $ref: "#/components/schemas/v1HybridMachinePool"
          type: array
      type: object
    v1SpectroClusterMetaSummary_specSummary:
      description: Spectro cluster meta summary
      example:
        clusterType: clusterType
        importMode: importMode
        cloudType: cloudType
        cloudRegion: cloudRegion
        archType:
        - amd64
        - amd64
        cloudAccountUid: cloudAccountUid
        projectMeta:
          uid: uid
          name: name
        location:
          regionCode: regionCode
          countryCode: countryCode
          regionName: regionName
          coordinates:
          - 5.637376656633329
          - 5.637376656633329
          countryName: countryName
        tags:
        - tags
        - tags
      properties:
        archType:
          description: Architecture type of the cluster
          items:
            default: amd64
            enum:
            - arm64
            - amd64
            type: string
          type: array
        cloudAccountUid:
          type: string
        cloudRegion:
          type: string
        cloudType:
          type: string
        clusterType:
          type: string
        importMode:
          type: string
        location:
          $ref: "#/components/schemas/v1ClusterMetaSpecLocation"
        projectMeta:
          $ref: "#/components/schemas/v1ProjectMeta"
        tags:
          items:
            type: string
          type: array
      type: object
    v1SpectroClusterMetaSummary_status:
      description: Spectro cluster meta status summary
      example:
        cost:
          total: 0.8008281904610115
        fips:
          mode: none
        health:
          isHeartBeatFailed: true
          state: state
        state: state
        updates:
          isUpdatesPending: true
      properties:
        cost:
          $ref: "#/components/schemas/v1ClusterMetaStatusCost"
        fips:
          $ref: "#/components/schemas/v1ClusterFips"
        health:
          $ref: "#/components/schemas/v1ClusterMetaStatusHealth"
        state:
          type: string
        updates:
          $ref: "#/components/schemas/v1ClusterMetaStatusUpdates"
      type: object
    v1SpectroClusterSummary_specSummary:
      description: Spectro cluster spec summary
      example:
        cloudConfig:
          uid: uid
          hybridMachinePools:
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          cloudType: cloudType
          machinePools:
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
        clusterProfileTemplates:
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        clusterProfileTemplate:
          uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        clusterConfig:
          hostClusterConfig:
            clusterGroup:
              uid: uid
              kind: kind
              name: name
        projectMeta:
          uid: uid
          name: name
        cloudAccountMeta:
          uid: uid
          name: name
        archTypes:
        - amd64
        - amd64
      properties:
        archTypes:
          description: Architecture type of the cluster
          items:
            $ref: "#/components/schemas/v1ArchType"
          type: array
        cloudAccountMeta:
          $ref: "#/components/schemas/v1CloudAccountMeta"
        cloudConfig:
          $ref: "#/components/schemas/v1CloudConfigMeta"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigResponse"
        clusterProfileTemplate:
          $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
        clusterProfileTemplates:
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
          type: array
        projectMeta:
          $ref: "#/components/schemas/v1ProjectMeta"
      type: object
    v1SpectroClusterSummary_status:
      description: Spectro cluster status summary
      example:
        virtual:
          clusterGroup:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          lifecycleStatus:
            msg: msg
            status: Pausing
          appDeployments:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          hostCluster:
            uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          virtualClusters:
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          - uid: uid
            projectUid: projectUid
            kind: kind
            tenantUid: tenantUid
            name: name
          state: state
        cost:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        clusterImport:
          isBrownfield: true
          importLink: importLink
          state: state
        fips:
          mode: none
        health:
          lastHeartBeatTimestamp: 2000-01-23T04:56:07.000+00:00
          agentVersion: agentVersion
          state: state
          conditions:
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
          - relatedObject:
              uid: uid
              kind: spectrocluster
              name: name
            message: message
            type: type
        location:
          regionCode: regionCode
          countryCode: countryCode
          regionName: regionName
          coordinates:
          - 5.637376656633329
          - 5.637376656633329
          countryName: countryName
        metrics:
          memory:
            request: 7.061401241503109
            total: 9.301444243932576
            unit: unit
            usage: 3.616076749251911
            limit: 2.3021358869347655
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
          cpu:
            request: 7.061401241503109
            total: 9.301444243932576
            unit: unit
            usage: 3.616076749251911
            limit: 2.3021358869347655
            lastUpdatedTime: 2000-01-23T04:56:07.000+00:00
        state: state
        hourlyRate:
          cloud:
            compute: 0.8008281904610115
            total: 1.4658129805029452
            storage: 6.027456183070403
          total: 5.962133916683182
        notifications:
          isAvailable: true
        repave:
          state: Pending
      properties:
        clusterImport:
          $ref: "#/components/schemas/v1ClusterImport"
        cost:
          $ref: "#/components/schemas/v1ResourceCost"
        fips:
          $ref: "#/components/schemas/v1ClusterFips"
        health:
          $ref: "#/components/schemas/v1SpectroClusterHealthStatus"
        hourlyRate:
          $ref: "#/components/schemas/v1ResourceCost"
        location:
          $ref: "#/components/schemas/v1ClusterMetaSpecLocation"
        metrics:
          $ref: "#/components/schemas/v1SpectroClusterMetrics"
        notifications:
          $ref: "#/components/schemas/v1ClusterNotificationStatus"
        repave:
          $ref: "#/components/schemas/v1ClusterRepaveStatus"
        state:
          type: string
        virtual:
          $ref: "#/components/schemas/v1Virtual"
      type: object
    v1SpectroClusterUidSummary_spec:
      description: Spectro cluster spec summary
      example:
        cloudConfig:
          uid: uid
          hybridMachinePools:
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          cloudType: cloudType
          machinePools:
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
          - isControlPlane: true
            size: 1
            cloudType: cloudType
            healthy: 0
            infraProfileTemplate:
              uid: uid
              cloudType: cloudType
              scope: scope
              name: name
              type: type
              packs:
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              - schema:
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                - listOptions:
                  - listOptions
                  - listOptions
                  regex: regex
                  readonly: true
                  hints:
                  - hints
                  - hints
                  format: format
                  name: name
                  type: type
                  required: true
                registryUid: registryUid
                server: server
                values: values
                annotations:
                  key: annotations
                isInvalid: true
                params:
                  key: params
                type: spectro
                version: version
                layer: kernel
                packUid: packUid
                presets:
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                - add: add
                  displayName: displayName
                  name: name
                  remove:
                  - remove
                  - remove
                  group: group
                inValidReason: inValidReason
                digest: digest
                manifests:
                - uid: uid
                  kind: kind
                  name: name
                - uid: uid
                  kind: kind
                  name: name
                name: name
                logo: logo
                tag: tag
              version: 0
            maintenanceMode: 6
            labels:
            - labels
            - labels
        clusterProfileTemplates:
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        - uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        clusterProfileTemplate:
          uid: uid
          cloudType: cloudType
          scope: scope
          name: name
          type: type
          packs:
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          - schema:
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            - listOptions:
              - listOptions
              - listOptions
              regex: regex
              readonly: true
              hints:
              - hints
              - hints
              format: format
              name: name
              type: type
              required: true
            registryUid: registryUid
            server: server
            values: values
            annotations:
              key: annotations
            isInvalid: true
            params:
              key: params
            type: spectro
            version: version
            layer: kernel
            packUid: packUid
            presets:
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            - add: add
              displayName: displayName
              name: name
              remove:
              - remove
              - remove
              group: group
            inValidReason: inValidReason
            digest: digest
            manifests:
            - uid: uid
              kind: kind
              name: name
            - uid: uid
              kind: kind
              name: name
            name: name
            logo: logo
            tag: tag
          version: 0
        archTypes:
        - amd64
        - amd64
        cloudaccount:
          uid: uid
          name: name
      properties:
        archTypes:
          description: Architecture types of the cluster
          items:
            $ref: "#/components/schemas/v1ArchType"
          type: array
        cloudConfig:
          $ref: "#/components/schemas/v1CloudConfigMeta"
        cloudaccount:
          $ref: "#/components/schemas/v1CloudAccountMeta"
        clusterProfileTemplate:
          $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
        clusterProfileTemplates:
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplateMeta"
          type: array
      type: object
    v1SpectroCustomClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1CustomClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1CustomClusterConfigEntity"
        clusterType:
          $ref: "#/components/schemas/v1ClusterType"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1CustomMachinePoolConfigEntity"
          type: array
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroEdgeNativeClusterEntity_spec:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      type: object
    v1SpectroEdgeNativeClusterPair_spec:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfigPairEntity"
        clusterMeta:
          $ref: "#/components/schemas/v1SpectroClusterPairMeta"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
          type: array
        profiles:
          description: ClusterProfileTemplate is a copy of the draft version or latest
            published version of the clusterprofileSpec.clusterprofileTemplate
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
        stylusAgentVersion:
          description: Stylus Agent Version
          type: string
      required:
      - machinepoolconfig
      - profiles
      - stylusAgentVersion
      type: object
    v1SpectroEdgeNativeClusterPairEntity_spec:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1EdgeNativeClusterConfigPairEntity"
        clusterMeta:
          $ref: "#/components/schemas/v1SpectroClusterPairMeta"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EdgeNativeMachinePoolConfigEntity"
          type: array
        profiles:
          description: ClusterProfileTemplate is a copy of the draft version or latest
            published version of the clusterprofileSpec.clusterprofileTemplate
          items:
            $ref: "#/components/schemas/v1ClusterProfileTemplate"
          type: array
        registrationToken:
          description: Registration token to pair the cluster
          type: string
        stylusAgentVersion:
          description: Stylus Agent Version
          type: string
      required:
      - machinepoolconfig
      - profiles
      - registrationToken
      - stylusAgentVersion
      type: object
    v1SpectroEksClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1EksClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        fargateProfiles:
          items:
            $ref: "#/components/schemas/v1FargateProfile"
          type: array
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1EksMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroGcpClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1GcpClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1GcpMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroGenericClusterImportEntity_spec:
      properties:
        clusterConfig:
          $ref: "#/components/schemas/v1ImportClusterConfig"
        edgeConfig:
          $ref: "#/components/schemas/v1ImportEdgeHostConfig"
      type: object
    v1SpectroInstallerEntity_spec:
      properties:
        cloudAccountUid:
          type: string
        privateGatewayUid:
          type: string
        spectroClusterUid:
          type: string
      type: object
    v1SpectroMaasClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1MaasClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1MaasMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroOpenStackClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1OpenStackClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1OpenStackMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudAccountUid
      - cloudConfig
      type: object
    v1SpectroVirtualClusterEntity_spec:
      properties:
        cloudConfig:
          $ref: "#/components/schemas/v1VirtualClusterConfig"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1VirtualMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - clusterConfig
      type: object
    v1SpectroVsphereClusterEntity_spec:
      properties:
        cloudAccountUid:
          description: Cloud account uid to be used for cluster provisioning
          type: string
        cloudConfig:
          $ref: "#/components/schemas/v1VsphereClusterConfigEntity"
        clusterConfig:
          $ref: "#/components/schemas/v1ClusterConfigEntity"
        edgeHostUid:
          description: Appliance (Edge Host) uid for Edge env
          type: string
        machinepoolconfig:
          items:
            $ref: "#/components/schemas/v1VsphereMachinePoolConfigEntity"
          type: array
        policies:
          $ref: "#/components/schemas/v1SpectroClusterPolicies"
        profiles:
          items:
            $ref: "#/components/schemas/v1SpectroClusterProfileEntity"
          type: array
      required:
      - cloudConfig
      type: object
    v1SystemActivationResponse_spec:
      properties:
        activationKeyUid:
          type: string
        planUid:
          type: string
        systemUid:
          type: string
      required:
      - activationKeyUid
      - planUid
      - systemUid
      type: object
    v1SystemActivationResponse_status:
      properties:
        lastActivatedAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        state:
          enum:
          - Pending
          - Active
          - Inactive
          type: string
      required:
      - state
      type: object
    v1SystemSysplan_spec:
      properties:
        expiresAt:
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          format: date-time
          type: string
        type:
          enum:
          - Trial
          - Unlimited
          type: string
      required:
      - type
      type: object
    v1TunnelEndpoint_tls:
      description: Describes the Tunnel tls config which client will use to make a
        request to the tunnel server
      properties:
        caCert:
          type: string
        enabled:
          type: boolean
        insecureSkipVerify:
          type: boolean
      type: object
    v1VMCluster_metadata:
      example:
        uid: uid
        projectUid: projectUid
        name: name
      properties:
        name:
          type: string
        projectUid:
          type: string
        uid:
          type: string
      type: object
    v1VMCluster_spec:
      description: Spectro cluster spec
      example:
        cloudType: cloudType
      properties:
        cloudType:
          type: string
      type: object
    v1VMCluster_status:
      description: Spectro cluster status
      example:
        clusterState: clusterState
      properties:
        clusterState:
          type: string
      type: object
  securitySchemes:
    ApiKey:
      description: API key authorization where API key can be generated from Palette
        console under Profile > My API Keys
      in: header
      name: ApiKey
      type: apiKey
    Authorization:
      description: JWT token authorization obtained using /v1/auth/authenticate api
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
