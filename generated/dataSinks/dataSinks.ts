/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { V1DataSinkCloudWatchConfig } from ".././schemas";

/**
 * Sync data to cloud watch
 * @summary sync data to cloud watch
 */
export type v1DataSinksCloudWatchSinkResponse204 = {
  data: void;
  status: 204;
};

export type v1DataSinksCloudWatchSinkResponseComposite =
  v1DataSinksCloudWatchSinkResponse204;

export type v1DataSinksCloudWatchSinkResponse =
  v1DataSinksCloudWatchSinkResponseComposite & {
    headers: Headers;
  };

export const getV1DataSinksCloudWatchSinkUrl = () => {
  return `https://api.spectrocloud.com/v1/datasinks/cloudwatch`;
};

export const v1DataSinksCloudWatchSink = async (
  v1DataSinkCloudWatchConfig: V1DataSinkCloudWatchConfig,
  options?: RequestInit,
): Promise<v1DataSinksCloudWatchSinkResponse> => {
  const res = await fetch(getV1DataSinksCloudWatchSinkUrl(), {
    ...options,
    method: "POST",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(v1DataSinkCloudWatchConfig),
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: v1DataSinksCloudWatchSinkResponse["data"] = body
    ? JSON.parse(body)
    : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as v1DataSinksCloudWatchSinkResponse;
};
