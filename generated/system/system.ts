/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type {
  PasswordsBlockListBody,
  SystemReverseProxy,
  Updated,
} from ".././schemas";

/**
 * @summary get the system config reverse proxy
 */
export type SystemConfigReverseProxyGetResponse200 = {
  data: SystemReverseProxy;
  status: 200;
};

export type SystemConfigReverseProxyGetResponseComposite =
  SystemConfigReverseProxyGetResponse200;

export type SystemConfigReverseProxyGetResponse =
  SystemConfigReverseProxyGetResponseComposite & {
    headers: Headers;
  };

export const getV1SystemConfigReverseProxyGetUrl = () => {
  return `https://api.spectrocloud.com/v1/system/config/reverseproxy`;
};

export const SystemConfigReverseProxyGet = async (
  options?: RequestInit,
): Promise<SystemConfigReverseProxyGetResponse> => {
  const res = await fetch(getV1SystemConfigReverseProxyGetUrl(), {
    ...options,
    method: "GET",
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: SystemConfigReverseProxyGetResponse["data"] = body
    ? JSON.parse(body)
    : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as SystemConfigReverseProxyGetResponse;
};

/**
 * @summary updates the system config reverse proxy
 */
export type SystemConfigReverseProxyUpdateResponse204 = {
  data: Updated;
  status: 204;
};

export type SystemConfigReverseProxyUpdateResponseComposite =
  SystemConfigReverseProxyUpdateResponse204;

export type SystemConfigReverseProxyUpdateResponse =
  SystemConfigReverseProxyUpdateResponseComposite & {
    headers: Headers;
  };

export const getV1SystemConfigReverseProxyUpdateUrl = () => {
  return `https://api.spectrocloud.com/v1/system/config/reverseproxy`;
};

export const SystemConfigReverseProxyUpdate = async (
  SystemReverseProxy: SystemReverseProxy,
  options?: RequestInit,
): Promise<SystemConfigReverseProxyUpdateResponse> => {
  const res = await fetch(getV1SystemConfigReverseProxyUpdateUrl(), {
    ...options,
    method: "PUT",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(SystemReverseProxy),
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: SystemConfigReverseProxyUpdateResponse["data"] = body
    ? JSON.parse(body)
    : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as SystemConfigReverseProxyUpdateResponse;
};

/**
 * @summary Delete a list of block listed passwords
 */
export type PasswordsBlockListDeleteResponse204 = {
  data: void;
  status: 204;
};

export type PasswordsBlockListDeleteResponseComposite =
  PasswordsBlockListDeleteResponse204;

export type PasswordsBlockListDeleteResponse =
  PasswordsBlockListDeleteResponseComposite & {
    headers: Headers;
  };

export const getV1PasswordsBlockListDeleteUrl = () => {
  return `https://api.spectrocloud.com/v1/system/passwords/blocklist`;
};

export const PasswordsBlockListDelete = async (
  PasswordsBlockListBody: PasswordsBlockListBody,
  options?: RequestInit,
): Promise<PasswordsBlockListDeleteResponse> => {
  const res = await fetch(getV1PasswordsBlockListDeleteUrl(), {
    ...options,
    method: "DELETE",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(PasswordsBlockListBody),
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: PasswordsBlockListDeleteResponse["data"] = body
    ? JSON.parse(body)
    : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as PasswordsBlockListDeleteResponse;
};

/**
 * @summary List of block listed passwords
 */
export type PasswordsBlockListUpdateResponse204 = {
  data: Updated;
  status: 204;
};

export type PasswordsBlockListUpdateResponseComposite =
  PasswordsBlockListUpdateResponse204;

export type PasswordsBlockListUpdateResponse =
  PasswordsBlockListUpdateResponseComposite & {
    headers: Headers;
  };

export const getV1PasswordsBlockListUpdateUrl = () => {
  return `https://api.spectrocloud.com/v1/system/passwords/blocklist`;
};

export const PasswordsBlockListUpdate = async (
  PasswordsBlockListBody: PasswordsBlockListBody,
  options?: RequestInit,
): Promise<PasswordsBlockListUpdateResponse> => {
  const res = await fetch(getV1PasswordsBlockListUpdateUrl(), {
    ...options,
    method: "PATCH",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(PasswordsBlockListBody),
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: PasswordsBlockListUpdateResponse["data"] = body
    ? JSON.parse(body)
    : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as PasswordsBlockListUpdateResponse;
};
