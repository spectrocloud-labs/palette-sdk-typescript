/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { VmCloudInitConfigDriveSource } from "./VmCloudInitConfigDriveSource";
import type { VmCloudInitNoCloudSource } from "./VmCloudInitNoCloudSource";
import type { VmConfigMapVolumeSource } from "./VmConfigMapVolumeSource";
import type { VmContainerDiskSource } from "./VmContainerDiskSource";
import type { VmCoreDataVolumeSource } from "./VmCoreDataVolumeSource";
import type { VmDownwardApiVolumeSource } from "./VmDownwardApiVolumeSource";
import type { VmDownwardMetricsVolumeSource } from "./VmDownwardMetricsVolumeSource";
import type { VmEmptyDiskSource } from "./VmEmptyDiskSource";
import type { VmEphemeralVolumeSource } from "./VmEphemeralVolumeSource";
import type { VmHostDisk } from "./VmHostDisk";
import type { VmMemoryDumpVolumeSource } from "./VmMemoryDumpVolumeSource";
import type { VmPersistentVolumeClaimVolumeSource } from "./VmPersistentVolumeClaimVolumeSource";
import type { VmSecretVolumeSource } from "./VmSecretVolumeSource";
import type { VmServiceAccountVolumeSource } from "./VmServiceAccountVolumeSource";
import type { VmSysprepSource } from "./VmSysprepSource";

/**
 * Volume represents a named volume in a vmi.
 */
export interface VmVolume {
  cloudInitConfigDrive?: VmCloudInitConfigDriveSource;
  cloudInitNoCloud?: VmCloudInitNoCloudSource;
  configMap?: VmConfigMapVolumeSource;
  containerDisk?: VmContainerDiskSource;
  dataVolume?: VmCoreDataVolumeSource;
  downwardAPI?: VmDownwardApiVolumeSource;
  downwardMetrics?: VmDownwardMetricsVolumeSource;
  emptyDisk?: VmEmptyDiskSource;
  ephemeral?: VmEphemeralVolumeSource;
  hostDisk?: VmHostDisk;
  memoryDump?: VmMemoryDumpVolumeSource;
  /** Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names */
  name: string;
  persistentVolumeClaim?: VmPersistentVolumeClaimVolumeSource;
  secret?: VmSecretVolumeSource;
  serviceAccount?: VmServiceAccountVolumeSource;
  sysprep?: VmSysprepSource;
}
