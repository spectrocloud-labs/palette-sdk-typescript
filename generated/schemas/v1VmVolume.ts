/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { V1VmCloudInitConfigDriveSource } from './v1VmCloudInitConfigDriveSource';
import type { V1VmCloudInitNoCloudSource } from './v1VmCloudInitNoCloudSource';
import type { V1VmConfigMapVolumeSource } from './v1VmConfigMapVolumeSource';
import type { V1VmContainerDiskSource } from './v1VmContainerDiskSource';
import type { V1VmCoreDataVolumeSource } from './v1VmCoreDataVolumeSource';
import type { V1VmDownwardApiVolumeSource } from './v1VmDownwardApiVolumeSource';
import type { V1VmVolumeDownwardMetrics } from './v1VmVolumeDownwardMetrics';
import type { V1VmEmptyDiskSource } from './v1VmEmptyDiskSource';
import type { V1VmEphemeralVolumeSource } from './v1VmEphemeralVolumeSource';
import type { V1VmHostDisk } from './v1VmHostDisk';
import type { V1VmMemoryDumpVolumeSource } from './v1VmMemoryDumpVolumeSource';
import type { V1VmPersistentVolumeClaimVolumeSource } from './v1VmPersistentVolumeClaimVolumeSource';
import type { V1VmSecretVolumeSource } from './v1VmSecretVolumeSource';
import type { V1VmServiceAccountVolumeSource } from './v1VmServiceAccountVolumeSource';
import type { V1VmSysprepSource } from './v1VmSysprepSource';

/**
 * Volume represents a named volume in a vmi.
 */
export interface V1VmVolume {
  cloudInitConfigDrive?: V1VmCloudInitConfigDriveSource;
  cloudInitNoCloud?: V1VmCloudInitNoCloudSource;
  configMap?: V1VmConfigMapVolumeSource;
  containerDisk?: V1VmContainerDiskSource;
  dataVolume?: V1VmCoreDataVolumeSource;
  downwardAPI?: V1VmDownwardApiVolumeSource;
  /** DownwardMetricsVolumeSource adds a very small disk to VMIs which contains a limited view of host and guest metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics. */
  downwardMetrics?: V1VmVolumeDownwardMetrics;
  emptyDisk?: V1VmEmptyDiskSource;
  ephemeral?: V1VmEphemeralVolumeSource;
  hostDisk?: V1VmHostDisk;
  memoryDump?: V1VmMemoryDumpVolumeSource;
  /** Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names */
  name: string;
  persistentVolumeClaim?: V1VmPersistentVolumeClaimVolumeSource;
  secret?: V1VmSecretVolumeSource;
  serviceAccount?: V1VmServiceAccountVolumeSource;
  sysprep?: V1VmSysprepSource;
}
