/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { V1VmVirtualMachineCondition } from './v1VmVirtualMachineCondition';
import type { V1VmVirtualMachineMemoryDumpRequest } from './v1VmVirtualMachineMemoryDumpRequest';
import type { V1VmVirtualMachineStartFailure } from './v1VmVirtualMachineStartFailure';
import type { V1VmVirtualMachineStateChangeRequest } from './v1VmVirtualMachineStateChangeRequest';
import type { V1VmVirtualMachineVolumeRequest } from './v1VmVirtualMachineVolumeRequest';
import type { V1VmVolumeSnapshotStatus } from './v1VmVolumeSnapshotStatus';

/**
 * VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing
 * @nullable
 */
export type V1ClusterVirtualMachineStatus = {
  /** Hold the state information of the VirtualMachine and its VirtualMachineInstance */
  conditions?: V1VmVirtualMachineCondition[];
  /** Created indicates if the virtual machine is created in the cluster */
  created?: boolean;
  memoryDumpRequest?: V1VmVirtualMachineMemoryDumpRequest;
  /** PrintableStatus is a human readable, high-level representation of the status of the virtual machine */
  printableStatus?: string;
  /** Ready indicates if the virtual machine is running and ready */
  ready?: boolean;
  /** RestoreInProgress is the name of the VirtualMachineRestore currently executing */
  restoreInProgress?: string;
  /** SnapshotInProgress is the name of the VirtualMachineSnapshot currently executing */
  snapshotInProgress?: string;
  startFailure?: V1VmVirtualMachineStartFailure;
  /** StateChangeRequests indicates a list of actions that should be taken on a VMI e.g. stop a specific VMI then start a new one. */
  stateChangeRequests?: V1VmVirtualMachineStateChangeRequest[];
  /** VolumeRequests indicates a list of volumes add or remove from the VMI template and hotplug on an active running VMI. */
  volumeRequests?: V1VmVirtualMachineVolumeRequest[];
  /** VolumeSnapshotStatuses indicates a list of statuses whether snapshotting is supported by each volume. */
  volumeSnapshotStatuses?: V1VmVolumeSnapshotStatus[];
} | null;
