/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { V1VmCpuFeature } from './v1VmCpuFeature';
import type { V1VmNUMA } from './v1VmNUMA';
import type { V1VmRealtime } from './v1VmRealtime';

/**
 * CPU allows specifying the CPU topology.
 */
export interface V1VmCpu {
  /** Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1. */
  cores?: number;
  /** DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it. */
  dedicatedCpuPlacement?: boolean;
  /** Features specifies the CPU features list inside the VMI. */
  features?: V1VmCpuFeature[];
  /** IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it. */
  isolateEmulatorThread?: boolean;
  /** Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like "host-passthrough" to get the same CPU as the node and "host-model" to get CPU closest to the node one. Defaults to host-model. */
  model?: string;
  numa?: V1VmNUMA;
  realtime?: V1VmRealtime;
  /** Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1. */
  sockets?: number;
  /** Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1. */
  threads?: number;
}
