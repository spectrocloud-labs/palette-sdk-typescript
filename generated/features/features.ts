/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { FeatureUpdate, Features } from ".././schemas";

/**
 * @summary Retrieves the list of features
 */
export type featuresListResponse200 = {
  data: Features;
  status: 200;
};

export type featuresListResponseComposite = featuresListResponse200;

export type featuresListResponse = featuresListResponseComposite & {
  headers: Headers;
};

export const getFeaturesListUrl = () => {
  return `https://api.spectrocloud.com/v1/features`;
};

export const featuresList = async (
  options?: RequestInit,
): Promise<featuresListResponse> => {
  const res = await fetch(getFeaturesListUrl(), {
    ...options,
    method: "GET",
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: featuresListResponse["data"] = body ? JSON.parse(body) : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as featuresListResponse;
};

/**
 * @summary Update a feature
 */
export type featuresUpdateResponse204 = {
  data: void;
  status: 204;
};

export type featuresUpdateResponseComposite = featuresUpdateResponse204;

export type featuresUpdateResponse = featuresUpdateResponseComposite & {
  headers: Headers;
};

export const getFeaturesUpdateUrl = (uid: string) => {
  return `https://api.spectrocloud.com/v1/features/${uid}`;
};

export const featuresUpdate = async (
  uid: string,
  featureUpdate: FeatureUpdate,
  options?: RequestInit,
): Promise<featuresUpdateResponse> => {
  const res = await fetch(getFeaturesUpdateUrl(uid), {
    ...options,
    method: "PUT",
    headers: { "Content-Type": "application/json", ...options?.headers },
    body: JSON.stringify(featureUpdate),
  });

  const body = [204, 205, 304].includes(res.status) ? null : await res.text();
  const data: featuresUpdateResponse["data"] = body ? JSON.parse(body) : {};

  return {
    data,
    status: res.status,
    headers: res.headers,
  } as featuresUpdateResponse;
};
