/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { Permissions, PermissionsListParams } from ".././schemas";

import { customInstance } from ".././httpClient/customClient";

/**
 * @summary Retrieves a list of permissions
 */
export type permissionsListResponse200 = {
  data: Permissions;
  status: 200;
};

export type permissionsListResponseComposite = permissionsListResponse200;

export type permissionsListResponse = permissionsListResponseComposite & {
  headers: Headers;
};

export const getPermissionsListUrl = (params?: PermissionsListParams) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? "null" : value.toString());
    }
  });

  const stringifiedParams = normalizedParams.toString();

  return stringifiedParams.length > 0
    ? `https://api.spectrocloud.com/v1/permissions?${stringifiedParams}`
    : `https://api.spectrocloud.com/v1/permissions`;
};

export const permissionsList = async (
  params?: PermissionsListParams,
  options?: RequestInit,
): Promise<permissionsListResponse> => {
  return customInstance<permissionsListResponse>(
    getPermissionsListUrl(params),
    {
      ...options,
      method: "GET",
    },
  );
};
