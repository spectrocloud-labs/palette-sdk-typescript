/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type { PackRefAnnotations } from './packRefAnnotations';
import type { PackRefLayer } from './packRefLayer';
import type { ObjectReference } from './objectReference';
import type { PackRefParams } from './packRefParams';
import type { PackPreset } from './packPreset';
import type { PackSchema } from './packSchema';
import type { PackRefType } from './packRefType';

/**
 * PackRef server/name:tag to point to a pack PackRef is used when construct a ClusterProfile PackSpec is used for UI to render the parameters form ClusterProfile will not know inner details of a pack ClusterProfile only contain pack name:tag, and the param values user entered for it
 */
export type PackRef = {
  /** Annotations is used to allow packref to add more arbitrary information one example is to add git reference for values.yaml */
  annotations?: PackRefAnnotations;
  /** digest is used to specify the version should be installed by palette when pack upgrade available, change this digest to trigger upgrade */
  digest?: string;
  inValidReason?: string;
  /** pack is invalid when the associated tag is deleted from the registry */
  isInvalid?: boolean;
  layer: PackRefLayer;
  /** path to the pack logo */
  logo?: string;
  manifests?: ObjectReference[];
  /** pack name */
  name: string;
  /** PackUID is Hubble packUID, not palette Pack.UID It is used by Hubble only. */
  packUid?: string;
  /** params passed as env variables to be consumed at installation time */
  params?: PackRefParams;
  presets?: PackPreset[];
  /** pack registry uid */
  registryUid?: string;
  schema?: PackSchema[];
  /** pack registry server or helm repo */
  server?: string;
  /** pack tag */
  tag?: string;
  /** type of the pack */
  type?: PackRefType;
  /** values represents the values.yaml used as input parameters either Params OR Values should be used, not both If both applied at the same time, will only use Values */
  values?: string;
  /** pack version */
  version?: string;
};
