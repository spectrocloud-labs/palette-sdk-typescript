/**
 * Copyright (c) Spectro Cloud
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Palette APIs - 4.6
 * OpenAPI spec version: v1
 */
import type {
  Audit,
  AuditMsgUpdate,
  AuditSysMsg,
  Audits,
  AuditsListParams,
} from ".././schemas";

import { customInstance } from ".././httpClient/customClient";

/**
 * @summary Retrieves the list of audit logs
 */
export type auditsListResponse200 = {
  data: Audits;
  status: 200;
};

export type auditsListResponseComposite = auditsListResponse200;

export type auditsListResponse = auditsListResponseComposite & {
  headers: Headers;
};

export const getAuditsListUrl = (params?: AuditsListParams) => {
  const normalizedParams = new URLSearchParams();

  Object.entries(params || {}).forEach(([key, value]) => {
    if (value !== undefined) {
      normalizedParams.append(key, value === null ? "null" : value.toString());
    }
  });

  const stringifiedParams = normalizedParams.toString();

  return stringifiedParams.length > 0
    ? `https://api.spectrocloud.com/v1/audits?${stringifiedParams}`
    : `https://api.spectrocloud.com/v1/audits`;
};

export const auditsList = async (
  params?: AuditsListParams,
  options?: RequestInit,
): Promise<auditsListResponse> => {
  return customInstance<auditsListResponse>(getAuditsListUrl(params), {
    ...options,
    method: "GET",
  });
};

/**
 * @summary Returns the specified audit log
 */
export type auditsUidGetResponse200 = {
  data: Audit;
  status: 200;
};

export type auditsUidGetResponseComposite = auditsUidGetResponse200;

export type auditsUidGetResponse = auditsUidGetResponseComposite & {
  headers: Headers;
};

export const getAuditsUidGetUrl = (uid: string) => {
  return `https://api.spectrocloud.com/v1/audits/${uid}`;
};

export const auditsUidGet = async (
  uid: string,
  options?: RequestInit,
): Promise<auditsUidGetResponse> => {
  return customInstance<auditsUidGetResponse>(getAuditsUidGetUrl(uid), {
    ...options,
    method: "GET",
  });
};

/**
 * @summary Returns the specified system audit message
 */
export type auditsUidGetSysMsgResponse200 = {
  data: AuditSysMsg;
  status: 200;
};

export type auditsUidGetSysMsgResponseComposite = auditsUidGetSysMsgResponse200;

export type auditsUidGetSysMsgResponse = auditsUidGetSysMsgResponseComposite & {
  headers: Headers;
};

export const getAuditsUidGetSysMsgUrl = (uid: string) => {
  return `https://api.spectrocloud.com/v1/audits/${uid}/sysMsg`;
};

export const auditsUidGetSysMsg = async (
  uid: string,
  options?: RequestInit,
): Promise<auditsUidGetSysMsgResponse> => {
  return customInstance<auditsUidGetSysMsgResponse>(
    getAuditsUidGetSysMsgUrl(uid),
    {
      ...options,
      method: "GET",
    },
  );
};

/**
 * @summary Updates the specified user message for the specified audit
 */
export type auditsUidMsgUpdateResponse204 = {
  data: void;
  status: 204;
};

export type auditsUidMsgUpdateResponseComposite = auditsUidMsgUpdateResponse204;

export type auditsUidMsgUpdateResponse = auditsUidMsgUpdateResponseComposite & {
  headers: Headers;
};

export const getAuditsUidMsgUpdateUrl = (uid: string) => {
  return `https://api.spectrocloud.com/v1/audits/${uid}/userMsg`;
};

export const auditsUidMsgUpdate = async (
  uid: string,
  auditMsgUpdate: AuditMsgUpdate,
  options?: RequestInit,
): Promise<auditsUidMsgUpdateResponse> => {
  return customInstance<auditsUidMsgUpdateResponse>(
    getAuditsUidMsgUpdateUrl(uid),
    {
      ...options,
      method: "PATCH",
      headers: { "Content-Type": "application/json", ...options?.headers },
      body: JSON.stringify(auditMsgUpdate),
    },
  );
};
